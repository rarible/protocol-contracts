{
  "contractName": "ERC721Base",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "newBaseURI",
          "type": "string"
        }
      ],
      "name": "BaseUriChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "value",
              "type": "uint96"
            }
          ],
          "indexed": false,
          "internalType": "struct LibPart.Part[]",
          "name": "creators",
          "type": "tuple[]"
        }
      ],
      "name": "Creators",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "hasApproval",
          "type": "bool"
        }
      ],
      "name": "DefaultApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "value",
              "type": "uint96"
            }
          ],
          "indexed": false,
          "internalType": "struct LibPart.Part[]",
          "name": "royalties",
          "type": "tuple[]"
        }
      ],
      "name": "RoyaltiesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getCreators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "value",
              "type": "uint96"
            }
          ],
          "internalType": "struct LibPart.Part[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getRaribleV2Royalties",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "value",
              "type": "uint96"
            }
          ],
          "internalType": "struct LibPart.Part[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "value",
                  "type": "uint96"
                }
              ],
              "internalType": "struct LibPart.Part[]",
              "name": "creators",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "value",
                  "type": "uint96"
                }
              ],
              "internalType": "struct LibPart.Part[]",
              "name": "royalties",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes[]",
              "name": "signatures",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct LibERC721LazyMint.Mint721Data",
          "name": "data",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mintAndTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "value",
                  "type": "uint96"
                }
              ],
              "internalType": "struct LibPart.Part[]",
              "name": "creators",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "value",
                  "type": "uint96"
                }
              ],
              "internalType": "struct LibPart.Part[]",
              "name": "royalties",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes[]",
              "name": "signatures",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct LibERC721LazyMint.Mint721Data",
          "name": "data",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferFromOrMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "updateAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"BaseUriChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"indexed\":false,\"internalType\":\"struct LibPart.Part[]\",\"name\":\"creators\",\"type\":\"tuple[]\"}],\"name\":\"Creators\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasApproval\",\"type\":\"bool\"}],\"name\":\"DefaultApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"indexed\":false,\"internalType\":\"struct LibPart.Part[]\",\"name\":\"royalties\",\"type\":\"tuple[]\"}],\"name\":\"RoyaltiesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getCreators\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"internalType\":\"struct LibPart.Part[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getRaribleV2Royalties\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"internalType\":\"struct LibPart.Part[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"internalType\":\"struct LibPart.Part[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"internalType\":\"struct LibPart.Part[]\",\"name\":\"royalties\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"internalType\":\"struct LibERC721LazyMint.Mint721Data\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintAndTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"internalType\":\"struct LibPart.Part[]\",\"name\":\"creators\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"internalType\":\"struct LibPart.Part[]\",\"name\":\"royalties\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"internalType\":\"struct LibERC721LazyMint.Mint721Data\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferFromOrMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"updateAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/erc-721/ERC721Base.sol\":\"ERC721Base\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x016298e66a5810253c6c905e61966bb31c8775c3f3517bf946ff56ee31d6c005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1723de5ae414f210db039b19e6487c19c2d643483c9be7c445cf481a80c199d2\",\"dweb:/ipfs/QmcBLbmPdZsNngYhA1KDadNUqQZoGACytFWuUH74RC4AXC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0xf1870306db8391db9cf14b41be0da76857a88df0e5c623d2b2338fb30a3bd5ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://466149e3f8e96b81781b18dbb7b00a20d7172ddee599ef9d51b64c7e78ddfb1d\",\"dweb:/ipfs/QmTvLPy7ZF2Vm7JLSrknWm1Z2fyVaNhoXY2RFcRkmSKFAe\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xe8c62ca00ed2d0a4d9b7e3c4bf7d62c821618b2cdb3c844da91a1193986851bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a459d8907c5fe73d70b4c522e48127b13b9aaa29a223670e928a2a5e5e4c8f8\",\"dweb:/ipfs/QmcwBnMVrajEBgj2i1saNXnQ6ytHQdnpQF978E86EuhvtX\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xcaa8b7861115ea691c77ddbeac140a444e0edcd1d9812a43942c0f6b42b36a49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ba2a8d7cd7bdbd42a5c525103da0cd2d190a3f702b7e796bada67f6c613622e\",\"dweb:/ipfs/QmfZSHW9FxVdWwRAQ171dkhumCPEGfAFMXHPeipPc4M2ag\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol\":{\"keccak256\":\"0x41d862e30df7fd3d3bb6c1e116ce8044a86fb1bc33102f7cb47e44a2f567f316\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e90c3352a33b500ac20a856ba20541413a848e0df183f57edf950f7fcc51c\",\"dweb:/ipfs/QmeB1TPdL1TrVbSnsu9Zj75uvoh8TpqduM8zu6U6qyXkNB\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x8defa7c9cc7cc4eb529daff535eff833f76a4cb424f85a08524eeea15e071a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e92f4e7c88616c7cf2aa219f57479b26675746b2607a77977d7726078874aa0e\",\"dweb:/ipfs/QmWGzKc4EdH2k1H7bknvxvJ7aA7zvfFBSExzqGFMWNiRVj\"]},\"@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol\":{\"keccak256\":\"0x295df0eee0530f32021bc6507ae917c450ff3e11dbc44da885129bba2d7b67de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8c0ff2adf14015086a06e4a808512d3551480ad714e6bc725cbce9c870267a\",\"dweb:/ipfs/QmTjZh63h3wJ3wnMHqokEdQg15iWzRVXuHVSRrQe1CrUh2\"]},\"@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol\":{\"keccak256\":\"0xdebbe576c1aacd9b1339d03f010aa8142018378981a75ee53ecea2c0decd7fa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ecb01309fee1e3cecb0880a3fceb2a8eaa29b731640899a5ac916e5651e2da\",\"dweb:/ipfs/QmcV1NaMTNkcim8QX7PVd7ggmwUac4cjh6QSZdrusTyDxH\"]},\"@rarible/lib-part/contracts/LibPart.sol\":{\"keccak256\":\"0xc5168eaea9aea005f6679da025837bd2c3c90b930e9896921d0f31784dd4ef2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://233f373f8fed0ee9febafb03226a9c58d521f16d0336de5e4d5d45a634bd6c16\",\"dweb:/ipfs/QmTpQjFXkqWAtz4TWuRw5qv1YgSuuW8DDkk198PmD5x5XF\"]},\"@rarible/lib-signature/contracts/ERC1271.sol\":{\"keccak256\":\"0x536d40caa32e7f7a3360caa34cf305b5f47400d9bb70d11efec5cdb8901e8a03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841b691875a3f3eafea97de35b35c695f64523243988348643ee855abd4283fc\",\"dweb:/ipfs/Qmcv8mwAYv27fkxukqTUTmEEQiNvo3WuFS1c4q1aZiCnbH\"]},\"@rarible/lib-signature/contracts/LibSignature.sol\":{\"keccak256\":\"0xd58ac6aa9e85d37eb0669a7feafdc23ff611508f08df29889226aeecc563f946\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc5dc73ef229a807b901f373f511b5af0b33ba85edb1b82180c132b8a242c226\",\"dweb:/ipfs/QmZ5vUzYADuo6taMrwmD1q684sgBK81A4Q7wUfCumsQCoR\"]},\"@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol\":{\"keccak256\":\"0xff0e7342b895d04363eec10a2cc089257a9ac428cc341da7014ab2f025b2e0b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26081db82a84c0b8bd41d1e68eec51f3a7779903120ca53f7492a5872d105fc4\",\"dweb:/ipfs/QmZZG3NLtTfocmbGf7wXyQVq8n7NpfLCjmZ8YPhYR2HFgh\"]},\"@rarible/royalties/contracts/IERC2981.sol\":{\"keccak256\":\"0x0f3c6237e7b81267f9bf392af9f4bb45ed40dd55b374c94360d0d4e3efc110ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fa46e3f8a717957f9490e65d846721962d6fcc72fe0d62db1fe623e27767a26\",\"dweb:/ipfs/QmSG6pWKbHv9qu3ucQZNWmsv2z5WyveaG1xf35qzdkEY86\"]},\"@rarible/royalties/contracts/LibRoyalties2981.sol\":{\"keccak256\":\"0x72d834af774534f0ddc433d2a2062f7e2bd966b2a8946ab3b6bdb7a8f0821e86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f73c744d5bedf583fe16639cadeeda128ae484e78fd5f090cd541cf4c1a1efa\",\"dweb:/ipfs/QmQTrLnVzmqoA6Up29EVYLr5RRFfeiG7pG8nWaR2TnqoJ7\"]},\"@rarible/royalties/contracts/LibRoyaltiesV2.sol\":{\"keccak256\":\"0x5589abac9802c8e1763e11a7fcc6969299dc0dc6bc3abf4c05d086e9bdc174eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f408823a5ed976f27576e47dec5b6621fc2f44650e6ad7e2491474e380bdbf3\",\"dweb:/ipfs/QmRTWcJ4AwXZ6djtoex7EG4gjGqxEupx62PbnweqqLVZZB\"]},\"@rarible/royalties/contracts/RoyaltiesV2.sol\":{\"keccak256\":\"0x173a1c91b2b484b9e2ffe46ef9a24bfac625dcc0b1a2ef80897bfe75064a37d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6227990b303c1f7b7d7254949188f855f307940ad66c4763ee28a8ae472633c9\",\"dweb:/ipfs/Qmbg66xEWCyzDXEUTHU8sStUW3zNAoQuhwb552SE63KKYG\"]},\"@rarible/royalties/contracts/impl/AbstractRoyalties.sol\":{\"keccak256\":\"0x7cad554c9940a34008d9b59bdc868cee3af239a36a81e0aa249a49b30dca5919\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4afea618a4ca84983d23a3c689cabb97948c05c53597a863910fa1c05f8c61db\",\"dweb:/ipfs/QmTT934b85pzms1V7cszu5HJSTjJ26ipgUdMdLfrjZkct8\"]},\"@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol\":{\"keccak256\":\"0xfa25392152859bda6c4aca971705d5d2d51a4f499507bc840bafc8305d38c1f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c222bea3855c0b8bc135a5ff9d911d836cdab70baa9b9cbca3dca10d63efa13\",\"dweb:/ipfs/QmXnZumDgJQZCy33ZGDr7823bgofVRawkLLBydThFtW4rm\"]},\"project:/contracts/HasContractURI.sol\":{\"keccak256\":\"0x0095d9e19d88405e8f734ab102fadf36ea44c7b0a906af0e045301d8c1fe7fb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b4f87381dcabfecbe18b33c7b701d934104ca1c79d9b0d9485a7bcb66af7c50\",\"dweb:/ipfs/Qmcade8VrEXeESowwV3W5wHHcLDPH5irAkrxuaUW4iziPU\"]},\"project:/contracts/LibURI.sol\":{\"keccak256\":\"0xbabceec032b4dad65542d7bd4a782d1f89317ffdc587721bc10723a333600132\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922f333f2c6d6a1256a456cf9d52ddd00d2e550f91dab2d121d7da7a33751418\",\"dweb:/ipfs/QmTM1vRYDqX48fjTo4eYnDbEwKjS8yvtSoUkuVX1NfBUz4\"]},\"project:/contracts/Mint721Validator.sol\":{\"keccak256\":\"0x804d8131c59c8cb185ce02a25983ca9a4f44376677efad2331b7af907de466a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bc3e6c5269844ecce19aef925155fc8f8299720072f6847d777b2214d750cc\",\"dweb:/ipfs/QmfM2S696FxjJSzaipmYkhPyz4XPNZjb17h38cBaGuwZHg\"]},\"project:/contracts/erc-1271/ERC1271Validator.sol\":{\"keccak256\":\"0x52513f76b7f895a7aaf2892b07678212357d711b4c0f0e3478c6669ed224cf08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41dd19dd8b55523ea0d1ed094248742e17ca05bed04d46b9ef2c994d3f4586e8\",\"dweb:/ipfs/QmXuwGngcMEjUahmZfJk92cRPMierx2UZaA3w4t7trgQys\"]},\"project:/contracts/erc-721/ERC721Base.sol\":{\"keccak256\":\"0x1df0a024f20312c607c619d252ea8f45ea23e33a03689b0b06b2a79d4b07aa45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3af66fb6c832fbb4838c1f7da8e15dc509484f0a1b5305eb3c7a8acc0bc87201\",\"dweb:/ipfs/QmZtj8DuLLSKmoAmCANQVXPzsPHamDi51aYE1kAYdSTvK9\"]},\"project:/contracts/erc-721/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x036727983792d25d0157370292d276d96a663641824650b1d21ad597853f1934\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cd9610df5aaea61647b8afbb326c578a49409e28ce130fea0e39895d23d1404\",\"dweb:/ipfs/QmQkwvhxMEYBaztmrAGMZ6MtyJE51QfAnavuwNHwhCKD3h\"]},\"project:/contracts/erc-721/ERC721DefaultApproval.sol\":{\"keccak256\":\"0x6b4235d6db469cde96614153d613f05af4e5aa3a8fbc4162902f8dfb87df51de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d6fb3525eb11d406e105142448341965467584776c16647b74542f665c966a1\",\"dweb:/ipfs/QmZPCr69NSiRK4WWY3kMakjvn74HNWyLCdWq56k2rxA27P\"]},\"project:/contracts/erc-721/ERC721Lazy.sol\":{\"keccak256\":\"0xbb2551d5d5842d3ce272143a6a86acf3659cf782a8d9e465dc2db94d7677fd4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f83f511a90d667d61f84ebdca93634227139b7c1816ce9afaf0f67c07984cca\",\"dweb:/ipfs/QmfC2RZg5tUtJDBf2FEJ6F8nSdWhuSahrjoPTuvBcJG92f\"]},\"project:/contracts/erc-721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x1315807bbe8d4c1318ff6faf23ca5f9d7f4e347802cdc7570fb26caad87d8d97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://990f28251e47db1e6652a576540ca93200bd9399495fed3d65edae85408450e8\",\"dweb:/ipfs/QmbdzCcPg2HLtXroSh2bRqFgPC1kyV5LYZNkKaSFmTqhPg\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\npragma abicoder v2;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"./ERC721BurnableUpgradeable.sol\";\r\nimport \"./ERC721DefaultApproval.sol\";\r\nimport \"./ERC721Lazy.sol\";\r\nimport \"../HasContractURI.sol\";\r\n\r\nabstract contract ERC721Base is OwnableUpgradeable, ERC721DefaultApproval, ERC721BurnableUpgradeable, ERC721Lazy, HasContractURI {\r\n\r\n    event BaseUriChanged(string newBaseURI);\r\n\r\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal virtual override(ERC721Upgradeable, ERC721DefaultApproval) view returns (bool) {\r\n        return ERC721DefaultApproval._isApprovedOrOwner(spender, tokenId);\r\n    }\r\n\r\n    function isApprovedForAll(address owner, address operator) public view virtual override(ERC721DefaultApproval, ERC721Upgradeable, IERC721Upgradeable) returns (bool) {\r\n        return ERC721DefaultApproval.isApprovedForAll(owner, operator);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Lazy, ERC721Upgradeable, HasContractURI) returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    function _mint(address to, uint256 tokenId) internal override(ERC721Lazy, ERC721Upgradeable) {\r\n        super._mint(to, tokenId);\r\n    }\r\n\r\n    function setBaseURI(string memory newBaseURI) external onlyOwner {\r\n        super._setBaseURI(newBaseURI);\r\n\r\n        emit BaseUriChanged(newBaseURI);\r\n    }\r\n\r\n    uint256[50] private __gap;\r\n}\r\n",
  "sourcePath": "D:\\work\\vizualize\\code\\rarible\\protocol-contracts\\tokens\\contracts\\erc-721\\ERC721Base.sol",
  "ast": {
    "absolutePath": "project:/contracts/erc-721/ERC721Base.sol",
    "exportedSymbols": {
      "AbstractRoyalties": [
        6510
      ],
      "AddressUpgradeable": [
        949
      ],
      "ContextUpgradeable": [
        991
      ],
      "ECDSAUpgradeable": [
        1624
      ],
      "EIP712Upgradeable": [
        1774
      ],
      "ERC1271": [
        5650
      ],
      "ERC1271Validator": [
        10770
      ],
      "ERC165Upgradeable": [
        1818
      ],
      "ERC721Base": [
        13149
      ],
      "ERC721BurnableUpgradeable": [
        13238
      ],
      "ERC721DefaultApproval": [
        13319
      ],
      "ERC721Lazy": [
        13812
      ],
      "ERC721Upgradeable": [
        14956
      ],
      "EnumerableMapUpgradeable": [
        3264
      ],
      "EnumerableSetUpgradeable": [
        3863
      ],
      "HasContractURI": [
        6695
      ],
      "IERC165Upgradeable": [
        1830
      ],
      "IERC2981": [
        6247
      ],
      "IERC721EnumerableUpgradeable": [
        679
      ],
      "IERC721LazyMint": [
        5431
      ],
      "IERC721MetadataUpgradeable": [
        706
      ],
      "IERC721ReceiverUpgradeable": [
        532
      ],
      "IERC721Upgradeable": [
        648
      ],
      "Initializable": [
        282
      ],
      "LibERC721LazyMint": [
        5582
      ],
      "LibPart": [
        5615
      ],
      "LibRoyalties2981": [
        6329
      ],
      "LibRoyaltiesV2": [
        6335
      ],
      "LibSignature": [
        5802
      ],
      "LibURI": [
        6782
      ],
      "Mint721Validator": [
        6853
      ],
      "OwnableUpgradeable": [
        131
      ],
      "RoyaltiesV2": [
        6357
      ],
      "RoyaltiesV2Impl": [
        6639
      ],
      "RoyaltiesV2Upgradeable": [
        6230
      ],
      "SafeMathUpgradeable": [
        2142
      ],
      "StringsUpgradeable": [
        1217
      ]
    },
    "id": 13150,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13032,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:78"
      },
      {
        "id": 13033,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "60:19:78"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 13034,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13150,
        "sourceUnit": 132,
        "src": "83:75:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/erc-721/ERC721BurnableUpgradeable.sol",
        "file": "./ERC721BurnableUpgradeable.sol",
        "id": 13035,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13150,
        "sourceUnit": 13239,
        "src": "160:41:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/erc-721/ERC721DefaultApproval.sol",
        "file": "./ERC721DefaultApproval.sol",
        "id": 13036,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13150,
        "sourceUnit": 13320,
        "src": "203:37:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/erc-721/ERC721Lazy.sol",
        "file": "./ERC721Lazy.sol",
        "id": 13037,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13150,
        "sourceUnit": 13813,
        "src": "242:26:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/HasContractURI.sol",
        "file": "../HasContractURI.sol",
        "id": 13038,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13150,
        "sourceUnit": 6696,
        "src": "270:31:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 13039,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 131,
              "src": "337:18:78"
            },
            "id": 13040,
            "nodeType": "InheritanceSpecifier",
            "src": "337:18:78"
          },
          {
            "baseName": {
              "id": 13041,
              "name": "ERC721DefaultApproval",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13319,
              "src": "357:21:78"
            },
            "id": 13042,
            "nodeType": "InheritanceSpecifier",
            "src": "357:21:78"
          },
          {
            "baseName": {
              "id": 13043,
              "name": "ERC721BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13238,
              "src": "380:25:78"
            },
            "id": 13044,
            "nodeType": "InheritanceSpecifier",
            "src": "380:25:78"
          },
          {
            "baseName": {
              "id": 13045,
              "name": "ERC721Lazy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13812,
              "src": "407:10:78"
            },
            "id": 13046,
            "nodeType": "InheritanceSpecifier",
            "src": "407:10:78"
          },
          {
            "baseName": {
              "id": 13047,
              "name": "HasContractURI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6695,
              "src": "419:14:78"
            },
            "id": 13048,
            "nodeType": "InheritanceSpecifier",
            "src": "419:14:78"
          }
        ],
        "canonicalName": "ERC721Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13149,
        "linearizedBaseContracts": [
          13149,
          6695,
          13812,
          6639,
          6247,
          6230,
          6357,
          6510,
          6853,
          10770,
          1774,
          13238,
          13319,
          14956,
          679,
          706,
          5431,
          648,
          1818,
          1830,
          131,
          991,
          282
        ],
        "name": "ERC721Base",
        "nameLocation": "323:10:78",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "87cdeaffd8e70903d6ce7cc983fac3b09ca79e83818124c98e47a1d70f8027d6",
            "id": 13052,
            "name": "BaseUriChanged",
            "nameLocation": "449:14:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13050,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newBaseURI",
                  "nameLocation": "471:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 13052,
                  "src": "464:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13049,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:19:78"
            },
            "src": "443:40:78"
          },
          {
            "baseFunctions": [
              13293,
              14546
            ],
            "body": {
              "id": 13070,
              "nodeType": "Block",
              "src": "641:84:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13066,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13054,
                        "src": "700:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13067,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13056,
                        "src": "709:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13064,
                        "name": "ERC721DefaultApproval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13319,
                        "src": "659:21:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721DefaultApproval_$13319_$",
                          "typeString": "type(contract ERC721DefaultApproval)"
                        }
                      },
                      "id": 13065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_isApprovedOrOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13293,
                      "src": "659:40:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) view returns (bool)"
                      }
                    },
                    "id": 13068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:58:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13063,
                  "id": 13069,
                  "nodeType": "Return",
                  "src": "652:65:78"
                }
              ]
            },
            "id": 13071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "500:18:78",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13060,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13058,
                  "name": "ERC721Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14956,
                  "src": "579:17:78"
                },
                {
                  "id": 13059,
                  "name": "ERC721DefaultApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13319,
                  "src": "598:21:78"
                }
              ],
              "src": "570:50:78"
            },
            "parameters": {
              "id": 13057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13054,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "527:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 13071,
                  "src": "519:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13056,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "544:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 13071,
                  "src": "536:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "518:34:78"
            },
            "returnParameters": {
              "id": 13063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13062,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13071,
                  "src": "635:4:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13061,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "634:6:78"
            },
            "scope": 13149,
            "src": "491:234:78",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              647,
              13314,
              14385
            ],
            "body": {
              "id": 13090,
              "nodeType": "Block",
              "src": "898:81:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13086,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13073,
                        "src": "955:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13087,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13075,
                        "src": "962:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13084,
                        "name": "ERC721DefaultApproval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13319,
                        "src": "916:21:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721DefaultApproval_$13319_$",
                          "typeString": "type(contract ERC721DefaultApproval)"
                        }
                      },
                      "id": 13085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13314,
                      "src": "916:38:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 13088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:55:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13083,
                  "id": 13089,
                  "nodeType": "Return",
                  "src": "909:62:78"
                }
              ]
            },
            "functionSelector": "e985e9c5",
            "id": 13091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "742:16:78",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13080,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13077,
                  "name": "ERC721DefaultApproval",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13319,
                  "src": "821:21:78"
                },
                {
                  "id": 13078,
                  "name": "ERC721Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14956,
                  "src": "844:17:78"
                },
                {
                  "id": 13079,
                  "name": "IERC721Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 648,
                  "src": "863:18:78"
                }
              ],
              "src": "812:70:78"
            },
            "parameters": {
              "id": 13076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13073,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "767:5:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 13091,
                  "src": "759:13:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13075,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "782:8:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 13091,
                  "src": "774:16:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "758:33:78"
            },
            "returnParameters": {
              "id": 13083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13091,
                  "src": "892:4:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13081,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:6:78"
            },
            "scope": 13149,
            "src": "733:246:78",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6679,
              13415,
              14082
            ],
            "body": {
              "id": 13107,
              "nodeType": "Block",
              "src": "1125:62:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13104,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13093,
                        "src": "1167:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 13102,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1143:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$13149_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 13103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6679,
                      "src": "1143:23:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 13105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:36:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13101,
                  "id": 13106,
                  "nodeType": "Return",
                  "src": "1136:43:78"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 13108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "996:17:78",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13098,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13095,
                  "name": "ERC721Lazy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13812,
                  "src": "1063:10:78"
                },
                {
                  "id": 13096,
                  "name": "ERC721Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14956,
                  "src": "1075:17:78"
                },
                {
                  "id": 13097,
                  "name": "HasContractURI",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6695,
                  "src": "1094:14:78"
                }
              ],
              "src": "1054:55:78"
            },
            "parameters": {
              "id": 13094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13093,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1021:11:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 13108,
                  "src": "1014:18:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 13092,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:20:78"
            },
            "returnParameters": {
              "id": 13101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13108,
                  "src": "1119:4:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:4:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1118:6:78"
            },
            "scope": 13149,
            "src": "987:200:78",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13677,
              14657
            ],
            "body": {
              "id": 13125,
              "nodeType": "Block",
              "src": "1288:43:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13121,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13110,
                        "src": "1311:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13122,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13112,
                        "src": "1315:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13118,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1299:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$13149_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 13120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13677,
                      "src": "1299:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1299:24:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13124,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:24:78"
                }
              ]
            },
            "id": 13126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "1204:5:78",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13116,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 13114,
                  "name": "ERC721Lazy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13812,
                  "src": "1257:10:78"
                },
                {
                  "id": 13115,
                  "name": "ERC721Upgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14956,
                  "src": "1269:17:78"
                }
              ],
              "src": "1248:39:78"
            },
            "parameters": {
              "id": 13113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13110,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1218:2:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 13126,
                  "src": "1210:10:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13112,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1230:7:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 13126,
                  "src": "1222:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1209:29:78"
            },
            "returnParameters": {
              "id": 13117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:0:78"
            },
            "scope": 13149,
            "src": "1195:136:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13143,
              "nodeType": "Block",
              "src": "1404:92:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13136,
                        "name": "newBaseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13128,
                        "src": "1433:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 13133,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1415:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Base_$13149_$",
                          "typeString": "type(contract super ERC721Base)"
                        }
                      },
                      "id": 13135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setBaseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14859,
                      "src": "1415:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 13137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:29:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13138,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:29:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 13140,
                        "name": "newBaseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13128,
                        "src": "1477:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 13139,
                      "name": "BaseUriChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13052,
                      "src": "1462:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 13141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1462:26:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13142,
                  "nodeType": "EmitStatement",
                  "src": "1457:31:78"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 13144,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13131,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13130,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45,
                  "src": "1394:9:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "1394:9:78"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "1348:10:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13128,
                  "mutability": "mutable",
                  "name": "newBaseURI",
                  "nameLocation": "1373:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 13144,
                  "src": "1359:24:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13127,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1358:26:78"
            },
            "returnParameters": {
              "id": 13132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:78"
            },
            "scope": 13149,
            "src": "1339:157:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 13148,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1524:5:78",
            "nodeType": "VariableDeclaration",
            "scope": 13149,
            "src": "1504:25:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 13145,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1504:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 13147,
              "length": {
                "hexValue": "3530",
                "id": 13146,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1512:2:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1504:11:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 13150,
        "src": "305:1228:78",
        "usedErrors": []
      }
    ],
    "src": "35:1500:78"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-18T14:43:50.521Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}