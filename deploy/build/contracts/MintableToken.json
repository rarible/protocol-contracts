{
  "contractName": "MintableToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "contractURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenURIPrefix",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "bps",
          "type": "uint256[]"
        }
      ],
      "name": "SecondarySaleFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fees",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getFeeBps",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getFeeRecipients",
      "outputs": [
        {
          "internalType": "address payable[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenURIPrefix",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC721Base.Fee[]",
          "name": "_fees",
          "type": "tuple[]"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenURIPrefix",
          "type": "string"
        }
      ],
      "name": "setTokenURIPrefix",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "contractURI",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"bps\",\"type\":\"uint256[]\"}],\"name\":\"SecondarySaleFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeBps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getFeeRecipients\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Base.Fee[]\",\"name\":\"_fees\",\"type\":\"tuple[]\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURIPrefix\",\"type\":\"string\"}],\"name\":\"setTokenURIPrefix\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenURIPrefix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"anyone can mint token.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MintableToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/sergey/Projects/rarible/contracts/tokens/contracts/MintableToken.sol\":\"MintableToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/sergey/Projects/rarible/contracts/tokens/contracts/ERC721Base.sol\":{\"keccak256\":\"0x217c687f65745aff8a0c88149882efc0ddf0f1c4917c8ca1af643aa81a44c4e8\",\"urls\":[\"bzz-raw://63344ac212f1d4b0819c11d31d27c9e9fcb392adbad19d320c8808c6554db545\",\"dweb:/ipfs/QmbMZw3jy6CRehSQ7bwvwzyYdh7Js1awMj5Zwc2gYkNCoe\"]},\"/home/sergey/Projects/rarible/contracts/tokens/contracts/HasContractURI.sol\":{\"keccak256\":\"0xae5dcb17b411a300481597c52f4d57902c86f5bfa9d308f304c68d1e345b6b4e\",\"urls\":[\"bzz-raw://e5db4262640883444bf4a6e7be9b8a9b5fe1006f195fa58cecd1a612f7a12638\",\"dweb:/ipfs/QmSt3UB9k8TZB3fupabhWWPSUTNQ7De8gJAMsRco3XoBrd\"]},\"/home/sergey/Projects/rarible/contracts/tokens/contracts/HasSecondarySaleFees.sol\":{\"keccak256\":\"0x98b7cff5b500204e4f444757cfaef04ad57ae2a34bcd76b2440050453788d258\",\"urls\":[\"bzz-raw://61577cac44572ab104745aeb4782e2447dac53190442c93db5ac42f6324f0354\",\"dweb:/ipfs/QmcneGzoKG36H3ABJkHYnu2Soa8uxRDjaan8n74GGGM6ib\"]},\"/home/sergey/Projects/rarible/contracts/tokens/contracts/HasTokenURI.sol\":{\"keccak256\":\"0xdda6686926b4d61dcccb3757f9b59d361a6e2f49010efcdfc05c628e41a903ce\",\"urls\":[\"bzz-raw://ad43395d782d5ac58afafc865e83bd27c70e3ab2686b7893c4761ebe660cf3fc\",\"dweb:/ipfs/Qmc8KU48xpFAtTqfR6N43yJK5gbyFvHCvNCVCPjRb86u2F\"]},\"/home/sergey/Projects/rarible/contracts/tokens/contracts/MintableToken.sol\":{\"keccak256\":\"0xda797fce33f6f0f566cc1b12b08378bac0e02552a1d45e29c9d92bd8d3e7394b\",\"urls\":[\"bzz-raw://b2ef7eb9fcdc172ff57c76663d2a0c35c5e0bfd6942af496a14b6689460ba1e7\",\"dweb:/ipfs/QmaU3BC7JVfaxS7Ezzok15swp3vWvgHPrNepCyDvzb8Viu\"]},\"/home/sergey/Projects/rarible/contracts/tokens/contracts/utils/StringLibrary.sol\":{\"keccak256\":\"0x74d3bfc886a4ea9679554be7c92c113f654c6a8b8c56eb687640dc69f888a838\",\"urls\":[\"bzz-raw://24dff6e0c1f3aff5191abf7740e8ef5538ff4f6f65f93e116df0729b486f299e\",\"dweb:/ipfs/QmVNjDVZHWfhYutN3CUV6Bhjq4wXdTp3wzbwkuevv15D33\"]},\"/home/sergey/Projects/rarible/contracts/tokens/contracts/utils/UintLibrary.sol\":{\"keccak256\":\"0x01b909fb8c0f47721b4c271abee6eca3afb0fd5425cc7ffa47f015014bfa24fe\",\"urls\":[\"bzz-raw://8926ce74a8008379458ca11c9d1c335f8c297940dba95abcd9745e99476866c5\",\"dweb:/ipfs/QmVYtY1dxUMjfyfvxQYoa7mTq5NC3cbJHnwF4eVRzh9Qsj\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1a1c02bc2487c763ad240f6b6440ec9dcb84870879aea3ed2a6b9cd300b637c7\",\"urls\":[\"bzz-raw://e6351696020fecf1c1b09437a2961cbdc3e1579238a9573b8577b58af463eeb6\",\"dweb:/ipfs/QmTg7UxUcuENko38JL2Pb2aqXkWgqW1xPDbJwmfo3RVrrV\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0xa9a5f3d09b6258e143a6f697b640b4d05e602ee4b6ea9b92e504c02f3e7d927a\",\"urls\":[\"bzz-raw://0055925bef49cb5ac496fdfb40dbd6d411e1c9ba7196542869ac90d9d6b979c6\",\"dweb:/ipfs/QmaYWc8vErzMW387m3xYAErqeBcanXTvSny8PTjgqiB8hj\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzz-raw://6f1b545ec9e1f0284e86ddd4ffff353e1ab5e026bbbfaa2a5d2d791c39d7afd7\",\"dweb:/ipfs/Qmf9rVfj6LreiE7NHkkT1S7eLbSQDDY1gKd9XWERx2AN7W\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzz-raw://e23af54444d2dbfae58895339eb7b189e1ba5d0b7abde63716e7ef7da23b2fde\",\"dweb:/ipfs/QmZva7dE1SMd1yyizzc6ivSoBXXwpNveLV7iFNATNpq68Y\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzz-raw://a8024c00e34efaf328f9592e76823c79f25fa0f6006bdf4a1e7fea204afd4773\",\"dweb:/ipfs/QmZns9jTr7843njq3J2iL2LLoWXK5mdzN1bDGd9GL3ahhD\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200355f3803806200355f833981016040819052620000349162000431565b84848383808260006200004f6001600160e01b03620001d216565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350916000805160206200353f833981519152908290a350620000a36301ffc9a760e01b6001600160e01b03620001d716565b620000be632dde656160e21b6001600160e01b03620001d716565b620000d96380ac58cd60e01b6001600160e01b03620001d716565b8051620000ee90600690602084019062000320565b506200010a63e8a3d48560e01b6001600160e01b03620001d716565b5080516200012090600790602084019062000320565b506200013e905063780e9d6360e01b6001600160e01b03620001d716565b83516200015390600d90602087019062000320565b5082516200016990600e90602086019062000320565b5062000185635b5e139f60e01b6001600160e01b03620001d716565b50505050620001b36040516200019b90620005ff565b6040519081900390206001600160e01b03620001d716565b620001c7836001600160e01b036200023516565b5050505050620006fb565b335b90565b6001600160e01b031980821614156200020d5760405162461bcd60e51b815260040162000204906200061e565b60405180910390fd5b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b620002486001600160e01b036200027e16565b620002675760405162461bcd60e51b8152600401620002049062000630565b6200027b816001600160e01b03620002ad16565b50565b600080546001600160a01b03166200029e6001600160e01b03620001d216565b6001600160a01b031614905090565b6001600160a01b038116620002d65760405162461bcd60e51b815260040162000204906200060c565b600080546040516001600160a01b03808516939216916000805160206200353f83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036357805160ff191683800117855562000393565b8280016001018555821562000393579182015b828111156200039357825182559160200191906001019062000376565b50620003a1929150620003a5565b5090565b620001d491905b80821115620003a15760008155600101620003ac565b8051620003cf81620006e4565b92915050565b600082601f830112620003e757600080fd5b8151620003fe620003f88262000669565b62000642565b915080825260208301602083018583830111156200041b57600080fd5b62000428838284620006b1565b50505092915050565b600080600080600060a086880312156200044a57600080fd5b85516001600160401b038111156200046157600080fd5b6200046f88828901620003d5565b95505060208601516001600160401b038111156200048c57600080fd5b6200049a88828901620003d5565b9450506040620004ad88828901620003c2565b93505060608601516001600160401b03811115620004ca57600080fd5b620004d888828901620003d5565b92505060808601516001600160401b03811115620004f557600080fd5b6200050388828901620003d5565b9150509295509295909350565b60006200051f60268362000691565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600062000569601c8362000691565b7f4552433136353a20696e76616c696420696e7465726661636520696400000000815260200192915050565b6000620005a460208362000691565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b6000620005df6011836200069a565b704d494e545f574954485f4144445245535360781b815260110192915050565b6000620003cf82620005d0565b60208082528101620003cf8162000510565b60208082528101620003cf816200055a565b60208082528101620003cf8162000595565b6040518181016001600160401b03811182821017156200066157600080fd5b604052919050565b60006001600160401b038211156200068057600080fd5b506020601f91909101601f19160190565b90815260200190565b919050565b60006001600160a01b038216620003cf565b60005b83811015620006ce578181015183820152602001620006b4565b83811115620006de576000848401525b50505050565b620006ef816200069f565b81146200027b57600080fd5b612e34806200070b6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063a22cb465116100a2578063c87b56dd11610071578063c87b56dd146103c9578063e8a3d485146103dc578063e985e9c5146103e4578063f2fde38b146103f7576101cf565b8063a22cb4651461037b578063b88d4fde1461038e578063b9c4d9fb146103a1578063c0ac9983146103c1576101cf565b80638f32d59b116100de5780638f32d59b14610345578063938e3d7b1461034d57806395d89b411461036057806399e0dd7c14610368576101cf565b806370a0823114610322578063715018a6146103355780638da5cb5b1461033d576101cf565b80632f745c59116101715780634f6ccce71161014b5780634f6ccce7146102c85780636308f1cd146102db5780636352211e146102fc578063672a94001461030f576101cf565b80632f745c591461028f57806342842e0e146102a257806342966c68146102b5576101cf565b8063095ea7b3116101ad578063095ea7b3146102325780630ebd4c7f1461024757806318160ddd1461026757806323b872dd1461027c576101cf565b806301ffc9a7146101d457806306fdde03146101fd578063081812fc14610212575b600080fd5b6101e76101e2366004611fda565b61040a565b6040516101f49190612a7f565b60405180910390f35b610205610429565b6040516101f49190612acb565b61022561022036600461204b565b6104b7565b6040516101f491906129f0565b610245610240366004611faa565b610503565b005b61025a61025536600461204b565b6105e8565b6040516101f49190612a6e565b61026f6106db565b6040516101f49190612c5c565b61024561028a366004611eb4565b6106e2565b61026f61029d366004611faa565b61071f565b6102456102b0366004611eb4565b610780565b6102456102c336600461204b565b61079b565b61026f6102d636600461204b565b6107ce565b6102ee6102e9366004612069565b610815565b6040516101f4929190612a42565b61022561030a36600461204b565b610858565b61024561031d366004612088565b61088d565b61026f610330366004611e5c565b610958565b6102456109a1565b610225610a0f565b6101e7610a1e565b61024561035b366004612016565b610a42565b610205610a6f565b610245610376366004612016565b610aca565b610245610389366004611f7a565b610af7565b61024561039c366004611f01565b610bc5565b6103b46103af36600461204b565b610c04565b6040516101f49190612a5d565b610205610cfc565b6102056103d736600461204b565b610d57565b610205610d87565b6101e76103f2366004611e7a565b610de2565b610245610405366004611e5c565b610e10565b6001600160e01b03191660009081526001602052604090205460ff1690565b600d805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b820191906000526020600020905b81548152906001019060200180831161049257829003601f168201915b505050505081565b60006104c282610e3d565b6104e75760405162461bcd60e51b81526004016104de90612bac565b60405180910390fd5b506000908152600360205260409020546001600160a01b031690565b600061050e82610858565b9050806001600160a01b0316836001600160a01b031614156105425760405162461bcd60e51b81526004016104de90612bfc565b806001600160a01b0316610554610e5a565b6001600160a01b031614806105705750610570816103f2610e5a565b61058c5760405162461bcd60e51b81526004016104de90612b6c565b60008281526003602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600f602090815260408083208054825181850281018501909352808352606094859484015b8282101561065a576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610612565b5050505090506060815160405190808252806020026020018201604052801561068d578160200160208202803883390190505b50905060005b82518110156106d3578281815181106106a857fe5b6020026020010151602001518282815181106106c057fe5b6020908102919091010152600101610693565b509392505050565b600b545b90565b6106f36106ed610e5a565b82610e5e565b61070f5760405162461bcd60e51b81526004016104de90612c0c565b61071a838383610ee3565b505050565b600061072a83610958565b82106107485760405162461bcd60e51b81526004016104de90612aec565b6001600160a01b038316600090815260096020526040902080548390811061076c57fe5b906000526020600020015490505b92915050565b61071a83838360405180602001604052806000815250610bc5565b6107a66106ed610e5a565b6107c25760405162461bcd60e51b81526004016104de90612c4c565b6107cb81610f02565b50565b60006107d86106db565b82106107f65760405162461bcd60e51b81526004016104de90612c1c565b600b828154811061080357fe5b90600052602060002001549050919050565b600f602052816000526040600020818154811061082e57fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b6000818152600260205260408120546001600160a01b03168061077a5760405162461bcd60e51b81526004016104de90612b8c565b600130876040516020016108a29291906129ca565b60405160208183030381529060405280519060200120868686604051600081526020016040526040516108d89493929190612a8d565b6020604051602081039080840390855afa1580156108fa573d6000803e3d6000fd5b505050602060405103516001600160a01b0316610915610a0f565b6001600160a01b03161461093b5760405162461bcd60e51b81526004016104de90612b5c565b610946338784610f14565b6109508682611139565b505050505050565b60006001600160a01b0382166109805760405162461bcd60e51b81526004016104de90612b7c565b6001600160a01b038216600090815260046020526040902061077a9061116c565b6109a9610a1e565b6109c55760405162461bcd60e51b81526004016104de90612bcc565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b0316610a33610e5a565b6001600160a01b031614905090565b610a4a610a1e565b610a665760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611170565b600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b610ad2610a1e565b610aee5760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611183565b610aff610e5a565b6001600160a01b0316826001600160a01b03161415610b305760405162461bcd60e51b81526004016104de90612b3c565b8060056000610b3d610e5a565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610b81610e5a565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bb99190612a7f565b60405180910390a35050565b610bd6610bd0610e5a565b83610e5e565b610bf25760405162461bcd60e51b81526004016104de90612c0c565b610bfe84848484611196565b50505050565b6000818152600f602090815260408083208054825181850281018501909352808352606094859484015b82821015610c76576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610c2e565b50505050905060608151604051908082528060200260200182016040528015610ca9578160200160208202803883390190505b50905060005b82518110156106d357828181518110610cc457fe5b602002602001015160000151828281518110610cdc57fe5b6001600160a01b0390921660209283029190910190910152600101610caf565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b6060610d6282610e3d565b610d7e5760405162461bcd60e51b81526004016104de90612bec565b61077a826111c9565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610e18610a1e565b610e345760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611304565b6000908152600260205260409020546001600160a01b0316151590565b3390565b6000610e6982610e3d565b610e855760405162461bcd60e51b81526004016104de90612b4c565b6000610e9083610858565b9050806001600160a01b0316846001600160a01b03161480610ecb5750836001600160a01b0316610ec0846104b7565b6001600160a01b0316145b80610edb5750610edb8185610de2565b949350505050565b610eee838383611385565b610ef8838261148b565b61071a8282611579565b6107cb610f0e82610858565b826115b7565b610f1e83836115ca565b60608151604051908082528060200260200182016040528015610f4b578160200160208202803883390190505b50905060608251604051908082528060200260200182016040528015610f7b578160200160208202803883390190505b50905060005b83518110156110ee5760006001600160a01b0316848281518110610fa157fe5b6020026020010151600001516001600160a01b03161415610fd45760405162461bcd60e51b81526004016104de90612c3c565b838181518110610fe057fe5b6020026020010151602001516000141561100c5760405162461bcd60e51b81526004016104de90612adc565b6000858152600f60205260409020845185908390811061102857fe5b602090810291909101810151825460018082018555600094855293839020825160029092020180546001600160a01b0319166001600160a01b03909216919091178155910151910155835184908290811061107f57fe5b60200260200101516000015183828151811061109757fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508381815181106110c357fe5b6020026020010151602001518282815181106110db57fe5b6020908102919091010152600101610f81565b50825115611132577f99aba1d63749cfd5ad1afda7c4663840924d54eb5f005bbbeadedc6ec13674b284838360405161112993929190612c6a565b60405180910390a15b5050505050565b61114282610e3d565b61115e5760405162461bcd60e51b81526004016104de90612bbc565b61116882826115e7565b5050565b5490565b8051611168906006906020840190611c07565b8051611168906007906020840190611c07565b6111a1848484610ee3565b6111ad84848484611606565b610bfe5760405162461bcd60e51b81526004016104de90612afc565b6000818152600860209081526040918290208054835160026001831615610100026000190190921691909104601f810184900484028201840190945283815260609361077a939192918301828280156112635780601f1061123857610100808354040283529160200191611263565b820191906000526020600020905b81548152906001019060200180831161124657829003601f168201915b505060078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152955091935091508301828280156112f15780601f106112c6576101008083540402835291602001916112f1565b820191906000526020600020905b8154815290600101906020018083116112d457829003601f168201915b505050505061174090919063ffffffff16565b6001600160a01b03811661132a5760405162461bcd60e51b81526004016104de90612b0c565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031661139882610858565b6001600160a01b0316146113be5760405162461bcd60e51b81526004016104de90612bdc565b6001600160a01b0382166113e45760405162461bcd60e51b81526004016104de90612b2c565b6113ed81611835565b6001600160a01b038316600090815260046020526040902061140e90611870565b6001600160a01b038216600090815260046020526040902061142f90611887565b60008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152600960205260408120546114b590600163ffffffff61189016565b6000838152600a6020526040902054909150808214611550576001600160a01b03841660009081526009602052604081208054849081106114f257fe5b906000526020600020015490508060096000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061153057fe5b6000918252602080832090910192909255918252600a9052604090208190555b6001600160a01b0384166000908152600960205260409020805490611132906000198301611c85565b6001600160a01b0390911660009081526009602081815260408084208054868652600a84529185208290559282526001810183559183529091200155565b6115c182826118d9565b61116881611905565b6115d48282611943565b6115de8282611579565b61116881611a0a565b6000828152600860209081526040909120825161071a92840190611c07565b600061161a846001600160a01b0316611a4e565b61162657506001610edb565b600060606001600160a01b038616630a85bd0160e11b611644610e5a565b89888860405160240161165a94939291906129fe565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161169891906129be565b6000604051808303816000865af19150503d80600081146116d5576040519150601f19603f3d011682016040523d82523d6000602084013e6116da565b606091505b50915091508161170c578051156116f45780518082602001fd5b60405162461bcd60e51b81526004016104de90612afc565b6000818060200190516117229190810190611ff8565b6001600160e01b031916630a85bd0160e11b149350610edb92505050565b6060808390506060839050606081518351016040519080825280601f01601f19166020018201604052801561177c576020820181803883390190505b5090506000805b84518110156117d45784818151811061179857fe5b602001015160f81c60f81b8383806001019450815181106117b557fe5b60200101906001600160f81b031916908160001a905350600101611783565b5060005b8351811015611829578381815181106117ed57fe5b602001015160f81c60f81b83838060010194508151811061180a57fe5b60200101906001600160f81b031916908160001a9053506001016117d8565b50909695505050505050565b6000818152600360205260409020546001600160a01b0316156107cb57600090815260036020526040902080546001600160a01b0319169055565b805461188390600163ffffffff61189016565b9055565b80546001019055565b60006118d283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a87565b9392505050565b6118e38282611ab3565b6118ed828261148b565b6000818152600a602052604081205561116881611b6b565b60008181526008602052604090205460026000196101006001841615020190911604156107cb5760008181526008602052604081206107cb91611ca9565b6001600160a01b0382166119695760405162461bcd60e51b81526004016104de90612b9c565b61197281610e3d565b1561198f5760405162461bcd60e51b81526004016104de90612b1c565b600081815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600490915290206119ce90611887565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600b80546000838152600c60205260408120829055600182018355919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610edb575050151592915050565b60008184841115611aab5760405162461bcd60e51b81526004016104de9190612acb565b505050900390565b816001600160a01b0316611ac682610858565b6001600160a01b031614611aec5760405162461bcd60e51b81526004016104de90612c2c565b611af581611835565b6001600160a01b0382166000908152600460205260409020611b1690611870565b60008181526002602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600b54600090611b8290600163ffffffff61189016565b6000838152600c6020526040812054600b8054939450909284908110611ba457fe5b9060005260206000200154905080600b8381548110611bbf57fe5b6000918252602080832090910192909255828152600c90915260409020829055600b805490611bf2906000198301611c85565b505050600091825250600c6020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c4857805160ff1916838001178555611c75565b82800160010185558215611c75579182015b82811115611c75578251825591602001919060010190611c5a565b50611c81929150611ce9565b5090565b81548183558181111561071a5760008381526020902061071a918101908301611ce9565b50805460018160011615610100020316600290046000825580601f10611ccf57506107cb565b601f0160209004906000526020600020908101906107cb91905b6106df91905b80821115611c815760008155600101611cef565b803561077a81612db9565b600082601f830112611d1f57600080fd5b8135611d32611d2d82612cc5565b612c9e565b91508181835260208401935060208101905083856040840282011115611d5757600080fd5b60005b83811015611d855781611d6d8882611e0a565b84525060209092019160409190910190600101611d5a565b5050505092915050565b803561077a81612dcd565b803561077a81612dd6565b803561077a81612ddf565b805161077a81612ddf565b600082601f830112611dcc57600080fd5b8135611dda611d2d82612ce6565b91508082526020830160208301858383011115611df657600080fd5b611e01838284612d60565b50505092915050565b600060408284031215611e1c57600080fd5b611e266040612c9e565b90506000611e348484611d03565b8252506020611e4584848301611d9a565b60208301525092915050565b803561077a81612de8565b600060208284031215611e6e57600080fd5b6000610edb8484611d03565b60008060408385031215611e8d57600080fd5b6000611e998585611d03565b9250506020611eaa85828601611d03565b9150509250929050565b600080600060608486031215611ec957600080fd5b6000611ed58686611d03565b9350506020611ee686828701611d03565b9250506040611ef786828701611d9a565b9150509250925092565b60008060008060808587031215611f1757600080fd5b6000611f238787611d03565b9450506020611f3487828801611d03565b9350506040611f4587828801611d9a565b925050606085013567ffffffffffffffff811115611f6257600080fd5b611f6e87828801611dbb565b91505092959194509250565b60008060408385031215611f8d57600080fd5b6000611f998585611d03565b9250506020611eaa85828601611d8f565b60008060408385031215611fbd57600080fd5b6000611fc98585611d03565b9250506020611eaa85828601611d9a565b600060208284031215611fec57600080fd5b6000610edb8484611da5565b60006020828403121561200a57600080fd5b6000610edb8484611db0565b60006020828403121561202857600080fd5b813567ffffffffffffffff81111561203f57600080fd5b610edb84828501611dbb565b60006020828403121561205d57600080fd5b6000610edb8484611d9a565b6000806040838503121561207c57600080fd5b6000611fc98585611d9a565b60008060008060008060c087890312156120a157600080fd5b60006120ad8989611d9a565b96505060206120be89828a01611e51565b95505060406120cf89828a01611d9a565b94505060606120e089828a01611d9a565b935050608087013567ffffffffffffffff8111156120fd57600080fd5b61210989828a01611d0e565b92505060a087013567ffffffffffffffff81111561212657600080fd5b61213289828a01611dbb565b9150509295509295509295565b600061214b838361215f565b505060200190565b600061214b838361226c565b61216881612d26565b82525050565b600061217982612d14565b6121838185612d18565b935061218e83612d0e565b8060005b838110156121bc5781516121a6888261213f565b97506121b183612d0e565b925050600101612192565b509495945050505050565b60006121d282612d14565b6121dc8185612d18565b93506121e783612d0e565b8060005b838110156121bc5781516121ff888261213f565b975061220a83612d0e565b9250506001016121eb565b600061222082612d14565b61222a8185612d18565b935061223583612d0e565b8060005b838110156121bc57815161224d8882612153565b975061225883612d0e565b925050600101612239565b61216881612d31565b612168816106df565b600061228082612d14565b61228a8185612d18565b935061229a818560208601612d6c565b6122a381612da9565b9093019392505050565b60006122b882612d14565b6122c28185612d21565b93506122d2818560208601612d6c565b9290920192915050565b6121686122e882612d55565b612d98565b60006122fa601c83612d18565b7f4665652076616c75652073686f756c6420626520706f73697469766500000000815260200192915050565b6000612333602b83612d18565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7581526a74206f6620626f756e647360a81b602082015260400192915050565b6000612380603283612d18565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b602082015260400192915050565b60006123d4602683612d18565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600061241c601c83612d18565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000815260200192915050565b6000612455602483612d18565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b602082015260400192915050565b600061249b601983612d18565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000815260200192915050565b60006124d4602c83612d18565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000612522601983612d18565b7f6f776e65722073686f756c64207369676e20746f6b656e496400000000000000815260200192915050565b600061255b603883612d18565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015260400192915050565b60006125ba602a83612d18565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a65815269726f206164647265737360b01b602082015260400192915050565b6000612606602983612d18565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481526832b73a103a37b5b2b760b91b602082015260400192915050565b6000612651602083612d18565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373815260200192915050565b600061268a602c83612d18565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b60006126d8602c83612d18565b7f4552433732314d657461646174613a2055524920736574206f66206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000612726602083612d18565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b600061275f602983612d18565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b602082015260400192915050565b60006127aa602f83612d18565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f81526e3732bc34b9ba32b73a103a37b5b2b760891b602082015260400192915050565b60006127fb602183612d18565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e658152603960f91b602082015260400192915050565b600061283e603183612d18565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b602082015260400192915050565b6000612891602c83612d18565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f81526b7574206f6620626f756e647360a01b602082015260400192915050565b60006128df602583612d18565b7f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f8152643a1037bbb760d91b602082015260400192915050565b6000612926601b83612d18565b7f526563697069656e742073686f756c642062652070726573656e740000000000815260200192915050565b600061295f603083612d18565b7f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7781526f1b995c881b9bdc88185c1c1c9bdd995960821b602082015260400192915050565b6121686129b0826106df565b6106df565b61216881612d4f565b60006118d282846122ad565b60006129d682856122dc565b6014820191506129e682846129a4565b5060200192915050565b6020810161077a828461215f565b60808101612a0c828761215f565b612a19602083018661215f565b612a26604083018561226c565b8181036060830152612a388184612275565b9695505050505050565b60408101612a50828561215f565b6118d2602083018461226c565b602080825281016118d281846121c7565b602080825281016118d28184612215565b6020810161077a8284612263565b60808101612a9b828761226c565b612aa860208301866129b5565b612ab5604083018561226c565b612ac2606083018461226c565b95945050505050565b602080825281016118d28184612275565b6020808252810161077a816122ed565b6020808252810161077a81612326565b6020808252810161077a81612373565b6020808252810161077a816123c7565b6020808252810161077a8161240f565b6020808252810161077a81612448565b6020808252810161077a8161248e565b6020808252810161077a816124c7565b6020808252810161077a81612515565b6020808252810161077a8161254e565b6020808252810161077a816125ad565b6020808252810161077a816125f9565b6020808252810161077a81612644565b6020808252810161077a8161267d565b6020808252810161077a816126cb565b6020808252810161077a81612719565b6020808252810161077a81612752565b6020808252810161077a8161279d565b6020808252810161077a816127ee565b6020808252810161077a81612831565b6020808252810161077a81612884565b6020808252810161077a816128d2565b6020808252810161077a81612919565b6020808252810161077a81612952565b6020810161077a828461226c565b60608101612c78828661226c565b8181036020830152612c8a818561216e565b90508181036040830152612ac28184612215565b60405181810167ffffffffffffffff81118282101715612cbd57600080fd5b604052919050565b600067ffffffffffffffff821115612cdc57600080fd5b5060209081020190565b600067ffffffffffffffff821115612cfd57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b600061077a82612d43565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60ff1690565b600061077a82612d26565b82818337506000910152565b60005b83811015612d87578181015183820152602001612d6f565b83811115610bfe5750506000910152565b600061077a82600061077a82612db3565b601f01601f191690565b60601b90565b612dc281612d26565b81146107cb57600080fd5b612dc281612d31565b612dc2816106df565b612dc281612d36565b612dc281612d4f56fea365627a7a723158207b86529ee5285f2fd349b9bd26121704afed6414c32b9f9344963e1850afb1ce6c6578706572696d656e74616cf564736f6c634300051100408be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063a22cb465116100a2578063c87b56dd11610071578063c87b56dd146103c9578063e8a3d485146103dc578063e985e9c5146103e4578063f2fde38b146103f7576101cf565b8063a22cb4651461037b578063b88d4fde1461038e578063b9c4d9fb146103a1578063c0ac9983146103c1576101cf565b80638f32d59b116100de5780638f32d59b14610345578063938e3d7b1461034d57806395d89b411461036057806399e0dd7c14610368576101cf565b806370a0823114610322578063715018a6146103355780638da5cb5b1461033d576101cf565b80632f745c59116101715780634f6ccce71161014b5780634f6ccce7146102c85780636308f1cd146102db5780636352211e146102fc578063672a94001461030f576101cf565b80632f745c591461028f57806342842e0e146102a257806342966c68146102b5576101cf565b8063095ea7b3116101ad578063095ea7b3146102325780630ebd4c7f1461024757806318160ddd1461026757806323b872dd1461027c576101cf565b806301ffc9a7146101d457806306fdde03146101fd578063081812fc14610212575b600080fd5b6101e76101e2366004611fda565b61040a565b6040516101f49190612a7f565b60405180910390f35b610205610429565b6040516101f49190612acb565b61022561022036600461204b565b6104b7565b6040516101f491906129f0565b610245610240366004611faa565b610503565b005b61025a61025536600461204b565b6105e8565b6040516101f49190612a6e565b61026f6106db565b6040516101f49190612c5c565b61024561028a366004611eb4565b6106e2565b61026f61029d366004611faa565b61071f565b6102456102b0366004611eb4565b610780565b6102456102c336600461204b565b61079b565b61026f6102d636600461204b565b6107ce565b6102ee6102e9366004612069565b610815565b6040516101f4929190612a42565b61022561030a36600461204b565b610858565b61024561031d366004612088565b61088d565b61026f610330366004611e5c565b610958565b6102456109a1565b610225610a0f565b6101e7610a1e565b61024561035b366004612016565b610a42565b610205610a6f565b610245610376366004612016565b610aca565b610245610389366004611f7a565b610af7565b61024561039c366004611f01565b610bc5565b6103b46103af36600461204b565b610c04565b6040516101f49190612a5d565b610205610cfc565b6102056103d736600461204b565b610d57565b610205610d87565b6101e76103f2366004611e7a565b610de2565b610245610405366004611e5c565b610e10565b6001600160e01b03191660009081526001602052604090205460ff1690565b600d805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b820191906000526020600020905b81548152906001019060200180831161049257829003601f168201915b505050505081565b60006104c282610e3d565b6104e75760405162461bcd60e51b81526004016104de90612bac565b60405180910390fd5b506000908152600360205260409020546001600160a01b031690565b600061050e82610858565b9050806001600160a01b0316836001600160a01b031614156105425760405162461bcd60e51b81526004016104de90612bfc565b806001600160a01b0316610554610e5a565b6001600160a01b031614806105705750610570816103f2610e5a565b61058c5760405162461bcd60e51b81526004016104de90612b6c565b60008281526003602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600f602090815260408083208054825181850281018501909352808352606094859484015b8282101561065a576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610612565b5050505090506060815160405190808252806020026020018201604052801561068d578160200160208202803883390190505b50905060005b82518110156106d3578281815181106106a857fe5b6020026020010151602001518282815181106106c057fe5b6020908102919091010152600101610693565b509392505050565b600b545b90565b6106f36106ed610e5a565b82610e5e565b61070f5760405162461bcd60e51b81526004016104de90612c0c565b61071a838383610ee3565b505050565b600061072a83610958565b82106107485760405162461bcd60e51b81526004016104de90612aec565b6001600160a01b038316600090815260096020526040902080548390811061076c57fe5b906000526020600020015490505b92915050565b61071a83838360405180602001604052806000815250610bc5565b6107a66106ed610e5a565b6107c25760405162461bcd60e51b81526004016104de90612c4c565b6107cb81610f02565b50565b60006107d86106db565b82106107f65760405162461bcd60e51b81526004016104de90612c1c565b600b828154811061080357fe5b90600052602060002001549050919050565b600f602052816000526040600020818154811061082e57fe5b6000918252602090912060029091020180546001909101546001600160a01b039091169250905082565b6000818152600260205260408120546001600160a01b03168061077a5760405162461bcd60e51b81526004016104de90612b8c565b600130876040516020016108a29291906129ca565b60405160208183030381529060405280519060200120868686604051600081526020016040526040516108d89493929190612a8d565b6020604051602081039080840390855afa1580156108fa573d6000803e3d6000fd5b505050602060405103516001600160a01b0316610915610a0f565b6001600160a01b03161461093b5760405162461bcd60e51b81526004016104de90612b5c565b610946338784610f14565b6109508682611139565b505050505050565b60006001600160a01b0382166109805760405162461bcd60e51b81526004016104de90612b7c565b6001600160a01b038216600090815260046020526040902061077a9061116c565b6109a9610a1e565b6109c55760405162461bcd60e51b81526004016104de90612bcc565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b0316610a33610e5a565b6001600160a01b031614905090565b610a4a610a1e565b610a665760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611170565b600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b610ad2610a1e565b610aee5760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611183565b610aff610e5a565b6001600160a01b0316826001600160a01b03161415610b305760405162461bcd60e51b81526004016104de90612b3c565b8060056000610b3d610e5a565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610b81610e5a565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610bb99190612a7f565b60405180910390a35050565b610bd6610bd0610e5a565b83610e5e565b610bf25760405162461bcd60e51b81526004016104de90612c0c565b610bfe84848484611196565b50505050565b6000818152600f602090815260408083208054825181850281018501909352808352606094859484015b82821015610c76576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610c2e565b50505050905060608151604051908082528060200260200182016040528015610ca9578160200160208202803883390190505b50905060005b82518110156106d357828181518110610cc457fe5b602002602001015160000151828281518110610cdc57fe5b6001600160a01b0390921660209283029190910190910152600101610caf565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b6060610d6282610e3d565b610d7e5760405162461bcd60e51b81526004016104de90612bec565b61077a826111c9565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104af5780601f10610484576101008083540402835291602001916104af565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610e18610a1e565b610e345760405162461bcd60e51b81526004016104de90612bcc565b6107cb81611304565b6000908152600260205260409020546001600160a01b0316151590565b3390565b6000610e6982610e3d565b610e855760405162461bcd60e51b81526004016104de90612b4c565b6000610e9083610858565b9050806001600160a01b0316846001600160a01b03161480610ecb5750836001600160a01b0316610ec0846104b7565b6001600160a01b0316145b80610edb5750610edb8185610de2565b949350505050565b610eee838383611385565b610ef8838261148b565b61071a8282611579565b6107cb610f0e82610858565b826115b7565b610f1e83836115ca565b60608151604051908082528060200260200182016040528015610f4b578160200160208202803883390190505b50905060608251604051908082528060200260200182016040528015610f7b578160200160208202803883390190505b50905060005b83518110156110ee5760006001600160a01b0316848281518110610fa157fe5b6020026020010151600001516001600160a01b03161415610fd45760405162461bcd60e51b81526004016104de90612c3c565b838181518110610fe057fe5b6020026020010151602001516000141561100c5760405162461bcd60e51b81526004016104de90612adc565b6000858152600f60205260409020845185908390811061102857fe5b602090810291909101810151825460018082018555600094855293839020825160029092020180546001600160a01b0319166001600160a01b03909216919091178155910151910155835184908290811061107f57fe5b60200260200101516000015183828151811061109757fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508381815181106110c357fe5b6020026020010151602001518282815181106110db57fe5b6020908102919091010152600101610f81565b50825115611132577f99aba1d63749cfd5ad1afda7c4663840924d54eb5f005bbbeadedc6ec13674b284838360405161112993929190612c6a565b60405180910390a15b5050505050565b61114282610e3d565b61115e5760405162461bcd60e51b81526004016104de90612bbc565b61116882826115e7565b5050565b5490565b8051611168906006906020840190611c07565b8051611168906007906020840190611c07565b6111a1848484610ee3565b6111ad84848484611606565b610bfe5760405162461bcd60e51b81526004016104de90612afc565b6000818152600860209081526040918290208054835160026001831615610100026000190190921691909104601f810184900484028201840190945283815260609361077a939192918301828280156112635780601f1061123857610100808354040283529160200191611263565b820191906000526020600020905b81548152906001019060200180831161124657829003601f168201915b505060078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152955091935091508301828280156112f15780601f106112c6576101008083540402835291602001916112f1565b820191906000526020600020905b8154815290600101906020018083116112d457829003601f168201915b505050505061174090919063ffffffff16565b6001600160a01b03811661132a5760405162461bcd60e51b81526004016104de90612b0c565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031661139882610858565b6001600160a01b0316146113be5760405162461bcd60e51b81526004016104de90612bdc565b6001600160a01b0382166113e45760405162461bcd60e51b81526004016104de90612b2c565b6113ed81611835565b6001600160a01b038316600090815260046020526040902061140e90611870565b6001600160a01b038216600090815260046020526040902061142f90611887565b60008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152600960205260408120546114b590600163ffffffff61189016565b6000838152600a6020526040902054909150808214611550576001600160a01b03841660009081526009602052604081208054849081106114f257fe5b906000526020600020015490508060096000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061153057fe5b6000918252602080832090910192909255918252600a9052604090208190555b6001600160a01b0384166000908152600960205260409020805490611132906000198301611c85565b6001600160a01b0390911660009081526009602081815260408084208054868652600a84529185208290559282526001810183559183529091200155565b6115c182826118d9565b61116881611905565b6115d48282611943565b6115de8282611579565b61116881611a0a565b6000828152600860209081526040909120825161071a92840190611c07565b600061161a846001600160a01b0316611a4e565b61162657506001610edb565b600060606001600160a01b038616630a85bd0160e11b611644610e5a565b89888860405160240161165a94939291906129fe565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161169891906129be565b6000604051808303816000865af19150503d80600081146116d5576040519150601f19603f3d011682016040523d82523d6000602084013e6116da565b606091505b50915091508161170c578051156116f45780518082602001fd5b60405162461bcd60e51b81526004016104de90612afc565b6000818060200190516117229190810190611ff8565b6001600160e01b031916630a85bd0160e11b149350610edb92505050565b6060808390506060839050606081518351016040519080825280601f01601f19166020018201604052801561177c576020820181803883390190505b5090506000805b84518110156117d45784818151811061179857fe5b602001015160f81c60f81b8383806001019450815181106117b557fe5b60200101906001600160f81b031916908160001a905350600101611783565b5060005b8351811015611829578381815181106117ed57fe5b602001015160f81c60f81b83838060010194508151811061180a57fe5b60200101906001600160f81b031916908160001a9053506001016117d8565b50909695505050505050565b6000818152600360205260409020546001600160a01b0316156107cb57600090815260036020526040902080546001600160a01b0319169055565b805461188390600163ffffffff61189016565b9055565b80546001019055565b60006118d283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a87565b9392505050565b6118e38282611ab3565b6118ed828261148b565b6000818152600a602052604081205561116881611b6b565b60008181526008602052604090205460026000196101006001841615020190911604156107cb5760008181526008602052604081206107cb91611ca9565b6001600160a01b0382166119695760405162461bcd60e51b81526004016104de90612b9c565b61197281610e3d565b1561198f5760405162461bcd60e51b81526004016104de90612b1c565b600081815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600490915290206119ce90611887565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600b80546000838152600c60205260408120829055600182018355919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610edb575050151592915050565b60008184841115611aab5760405162461bcd60e51b81526004016104de9190612acb565b505050900390565b816001600160a01b0316611ac682610858565b6001600160a01b031614611aec5760405162461bcd60e51b81526004016104de90612c2c565b611af581611835565b6001600160a01b0382166000908152600460205260409020611b1690611870565b60008181526002602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600b54600090611b8290600163ffffffff61189016565b6000838152600c6020526040812054600b8054939450909284908110611ba457fe5b9060005260206000200154905080600b8381548110611bbf57fe5b6000918252602080832090910192909255828152600c90915260409020829055600b805490611bf2906000198301611c85565b505050600091825250600c6020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c4857805160ff1916838001178555611c75565b82800160010185558215611c75579182015b82811115611c75578251825591602001919060010190611c5a565b50611c81929150611ce9565b5090565b81548183558181111561071a5760008381526020902061071a918101908301611ce9565b50805460018160011615610100020316600290046000825580601f10611ccf57506107cb565b601f0160209004906000526020600020908101906107cb91905b6106df91905b80821115611c815760008155600101611cef565b803561077a81612db9565b600082601f830112611d1f57600080fd5b8135611d32611d2d82612cc5565b612c9e565b91508181835260208401935060208101905083856040840282011115611d5757600080fd5b60005b83811015611d855781611d6d8882611e0a565b84525060209092019160409190910190600101611d5a565b5050505092915050565b803561077a81612dcd565b803561077a81612dd6565b803561077a81612ddf565b805161077a81612ddf565b600082601f830112611dcc57600080fd5b8135611dda611d2d82612ce6565b91508082526020830160208301858383011115611df657600080fd5b611e01838284612d60565b50505092915050565b600060408284031215611e1c57600080fd5b611e266040612c9e565b90506000611e348484611d03565b8252506020611e4584848301611d9a565b60208301525092915050565b803561077a81612de8565b600060208284031215611e6e57600080fd5b6000610edb8484611d03565b60008060408385031215611e8d57600080fd5b6000611e998585611d03565b9250506020611eaa85828601611d03565b9150509250929050565b600080600060608486031215611ec957600080fd5b6000611ed58686611d03565b9350506020611ee686828701611d03565b9250506040611ef786828701611d9a565b9150509250925092565b60008060008060808587031215611f1757600080fd5b6000611f238787611d03565b9450506020611f3487828801611d03565b9350506040611f4587828801611d9a565b925050606085013567ffffffffffffffff811115611f6257600080fd5b611f6e87828801611dbb565b91505092959194509250565b60008060408385031215611f8d57600080fd5b6000611f998585611d03565b9250506020611eaa85828601611d8f565b60008060408385031215611fbd57600080fd5b6000611fc98585611d03565b9250506020611eaa85828601611d9a565b600060208284031215611fec57600080fd5b6000610edb8484611da5565b60006020828403121561200a57600080fd5b6000610edb8484611db0565b60006020828403121561202857600080fd5b813567ffffffffffffffff81111561203f57600080fd5b610edb84828501611dbb565b60006020828403121561205d57600080fd5b6000610edb8484611d9a565b6000806040838503121561207c57600080fd5b6000611fc98585611d9a565b60008060008060008060c087890312156120a157600080fd5b60006120ad8989611d9a565b96505060206120be89828a01611e51565b95505060406120cf89828a01611d9a565b94505060606120e089828a01611d9a565b935050608087013567ffffffffffffffff8111156120fd57600080fd5b61210989828a01611d0e565b92505060a087013567ffffffffffffffff81111561212657600080fd5b61213289828a01611dbb565b9150509295509295509295565b600061214b838361215f565b505060200190565b600061214b838361226c565b61216881612d26565b82525050565b600061217982612d14565b6121838185612d18565b935061218e83612d0e565b8060005b838110156121bc5781516121a6888261213f565b97506121b183612d0e565b925050600101612192565b509495945050505050565b60006121d282612d14565b6121dc8185612d18565b93506121e783612d0e565b8060005b838110156121bc5781516121ff888261213f565b975061220a83612d0e565b9250506001016121eb565b600061222082612d14565b61222a8185612d18565b935061223583612d0e565b8060005b838110156121bc57815161224d8882612153565b975061225883612d0e565b925050600101612239565b61216881612d31565b612168816106df565b600061228082612d14565b61228a8185612d18565b935061229a818560208601612d6c565b6122a381612da9565b9093019392505050565b60006122b882612d14565b6122c28185612d21565b93506122d2818560208601612d6c565b9290920192915050565b6121686122e882612d55565b612d98565b60006122fa601c83612d18565b7f4665652076616c75652073686f756c6420626520706f73697469766500000000815260200192915050565b6000612333602b83612d18565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7581526a74206f6620626f756e647360a81b602082015260400192915050565b6000612380603283612d18565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b602082015260400192915050565b60006123d4602683612d18565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600061241c601c83612d18565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000815260200192915050565b6000612455602483612d18565b7f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b602082015260400192915050565b600061249b601983612d18565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000815260200192915050565b60006124d4602c83612d18565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000612522601983612d18565b7f6f776e65722073686f756c64207369676e20746f6b656e496400000000000000815260200192915050565b600061255b603883612d18565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015260400192915050565b60006125ba602a83612d18565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a65815269726f206164647265737360b01b602082015260400192915050565b6000612606602983612d18565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481526832b73a103a37b5b2b760b91b602082015260400192915050565b6000612651602083612d18565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373815260200192915050565b600061268a602c83612d18565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b60006126d8602c83612d18565b7f4552433732314d657461646174613a2055524920736574206f66206e6f6e657881526b34b9ba32b73a103a37b5b2b760a11b602082015260400192915050565b6000612726602083612d18565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572815260200192915050565b600061275f602983612d18565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981526839903737ba1037bbb760b91b602082015260400192915050565b60006127aa602f83612d18565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f81526e3732bc34b9ba32b73a103a37b5b2b760891b602082015260400192915050565b60006127fb602183612d18565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e658152603960f91b602082015260400192915050565b600061283e603183612d18565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f8152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b602082015260400192915050565b6000612891602c83612d18565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f81526b7574206f6620626f756e647360a01b602082015260400192915050565b60006128df602583612d18565b7f4552433732313a206275726e206f6620746f6b656e2074686174206973206e6f8152643a1037bbb760d91b602082015260400192915050565b6000612926601b83612d18565b7f526563697069656e742073686f756c642062652070726573656e740000000000815260200192915050565b600061295f603083612d18565b7f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7781526f1b995c881b9bdc88185c1c1c9bdd995960821b602082015260400192915050565b6121686129b0826106df565b6106df565b61216881612d4f565b60006118d282846122ad565b60006129d682856122dc565b6014820191506129e682846129a4565b5060200192915050565b6020810161077a828461215f565b60808101612a0c828761215f565b612a19602083018661215f565b612a26604083018561226c565b8181036060830152612a388184612275565b9695505050505050565b60408101612a50828561215f565b6118d2602083018461226c565b602080825281016118d281846121c7565b602080825281016118d28184612215565b6020810161077a8284612263565b60808101612a9b828761226c565b612aa860208301866129b5565b612ab5604083018561226c565b612ac2606083018461226c565b95945050505050565b602080825281016118d28184612275565b6020808252810161077a816122ed565b6020808252810161077a81612326565b6020808252810161077a81612373565b6020808252810161077a816123c7565b6020808252810161077a8161240f565b6020808252810161077a81612448565b6020808252810161077a8161248e565b6020808252810161077a816124c7565b6020808252810161077a81612515565b6020808252810161077a8161254e565b6020808252810161077a816125ad565b6020808252810161077a816125f9565b6020808252810161077a81612644565b6020808252810161077a8161267d565b6020808252810161077a816126cb565b6020808252810161077a81612719565b6020808252810161077a81612752565b6020808252810161077a8161279d565b6020808252810161077a816127ee565b6020808252810161077a81612831565b6020808252810161077a81612884565b6020808252810161077a816128d2565b6020808252810161077a81612919565b6020808252810161077a81612952565b6020810161077a828461226c565b60608101612c78828661226c565b8181036020830152612c8a818561216e565b90508181036040830152612ac28184612215565b60405181810167ffffffffffffffff81118282101715612cbd57600080fd5b604052919050565b600067ffffffffffffffff821115612cdc57600080fd5b5060209081020190565b600067ffffffffffffffff821115612cfd57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b600061077a82612d43565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60ff1690565b600061077a82612d26565b82818337506000910152565b60005b83811015612d87578181015183820152602001612d6f565b83811115610bfe5750506000910152565b600061077a82600061077a82612db3565b601f01601f191690565b60601b90565b612dc281612d26565b81146107cb57600080fd5b612dc281612d31565b612dc2816106df565b612dc281612d36565b612dc281612d4f56fea365627a7a723158207b86529ee5285f2fd349b9bd26121704afed6414c32b9f9344963e1850afb1ce6c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "430:981:8:-;;;525:303;8:9:-1;5:2;;;30:1;27;20:12;5:2;525:303:8;;;;;;;;;;;;;;;;;;;;;673:4;679:6;687:11;700:14;;687:11;698:17:28;718:12;-1:-1:-1;;;;;718:10:28;:12;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:28;-1:-1:-1;;;;;740:18:28;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:28;-1:-1:-1;;;;;;;;;;;773:43:28;740:6;;773:43;-1:-1:-1;718:40:25;-1:-1:-1;;;;;;;;718:18:25;:40;:::i;:::-;513:38:4;-1:-1:-1;;;;;;;;513:18:4;:38;:::i;:::-;2262:40:29;-1:-1:-1;;;;;;;;2262:18:29;:40;:::i;:::-;400:26:3;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;436:46:3;-1:-1:-1;;;;;;;;436:18:3;:46;:::i;:::-;-1:-1:-1;402:32:5;;;;:14;;:32;;;;;:::i;:::-;-1:-1:-1;1357:51:31;;-1:-1:-1;;;;;;;;;1357:18:31;:51;:::i;:::-;1476:12:2;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1498:16:2;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1602:49:2;-1:-1:-1;;;;;;;;1602:18:2;:49;:::i;:::-;1287:371;;;;726:58:8;752:30;;;;;;;;;;;;;;;-1:-1:-1;;;;;726:18:8;:58;:::i;:::-;794:27;812:8;-1:-1:-1;;;;;794:17:8;:27;:::i;:::-;525:303;;;;;430:981;;788:96:21;867:10;788:96;;:::o;1442:190:25:-;-1:-1:-1;;;;;;1517:25:25;;;;;1509:66;;;;-1:-1:-1;;;1509:66:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1585:33:25;;;;;1621:4;1585:33;;;;;;;;:40;;-1:-1:-1;;1585:40:25;;;;;;1442:190::o;1970:107:28:-;1103:9;-1:-1:-1;;;;;1103:7:28;:9;:::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:28;;;;;;;;;2042:28;2061:8;-1:-1:-1;;;;;2042:18:28;:28;:::i;:::-;1970:107;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:28;1313:12;-1:-1:-1;;;;;1313:10:28;:12;:::i;:::-;-1:-1:-1;;;;;1313:22:28;;1306:29;;1250:92;:::o;2178:225::-;-1:-1:-1;;;;;2251:22:28;;2243:73;;;;-1:-1:-1;;;2243:73:28;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:28;;;;2352:6;;;-1:-1:-1;;;;;;;;;;;2331:38:28;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:28;-1:-1:-1;;;;;2379:17:28;;;;;;;;;;2178:225::o;430:981:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;430:981:8;;;-1:-1:-1;430:981:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:1205;;;;;;822:3;810:9;801:7;797:23;793:33;790:2;;;839:1;836;829:12;790:2;874:24;;-1:-1;;;;;907:30;;904:2;;;950:1;947;940:12;904:2;970:74;1036:7;1027:6;1016:9;1012:22;970:74;;;960:84;;853:197;1102:2;1091:9;1087:18;1081:25;-1:-1;;;;;1118:6;1115:30;1112:2;;;1158:1;1155;1148:12;1112:2;1178:74;1244:7;1235:6;1224:9;1220:22;1178:74;;;1168:84;;1060:198;1289:2;1307:64;1363:7;1354:6;1343:9;1339:22;1307:64;;;1297:74;;1268:109;1429:2;1418:9;1414:18;1408:25;-1:-1;;;;;1445:6;1442:30;1439:2;;;1485:1;1482;1475:12;1439:2;1505:74;1571:7;1562:6;1551:9;1547:22;1505:74;;;1495:84;;1387:198;1637:3;1626:9;1622:19;1616:26;-1:-1;;;;;1654:6;1651:30;1648:2;;;1694:1;1691;1684:12;1648:2;1714:74;1780:7;1771:6;1760:9;1756:22;1714:74;;;1704:84;;1595:199;784:1020;;;;;;;;;1812:375;;1972:67;2036:2;2031:3;1972:67;;;2072:34;2052:55;;-1:-1;;;2136:2;2127:12;;2120:30;2178:2;2169:12;;1958:229;-1:-1;;1958:229;2196:328;;2356:67;2420:2;2415:3;2356:67;;;2456:30;2436:51;;2515:2;2506:12;;2342:182;-1:-1;;2342:182;2533:332;;2693:67;2757:2;2752:3;2693:67;;;2793:34;2773:55;;2856:2;2847:12;;2679:186;-1:-1;;2679:186;2874:353;;3052:85;3134:2;3129:3;3052:85;;;-1:-1;;;3150:40;;3218:2;3209:12;;3038:189;-1:-1;;3038:189;3235:372;;3434:148;3578:3;3434:148;;3614:407;3805:2;3819:47;;;3790:18;;3880:131;3790:18;3880:131;;4028:407;4219:2;4233:47;;;4204:18;;4294:131;4204:18;4294:131;;4442:407;4633:2;4647:47;;;4618:18;;4708:131;4618:18;4708:131;;4856:256;4918:2;4912:9;4944:17;;;-1:-1;;;;;5004:34;;5040:22;;;5001:62;4998:2;;;5076:1;5073;5066:12;4998:2;5092;5085:22;4896:216;;-1:-1;4896:216;5119:322;;-1:-1;;;;;5255:6;5252:30;5249:2;;;5295:1;5292;5285:12;5249:2;-1:-1;5426:4;5362;5339:17;;;;-1:-1;;5335:33;5416:15;;5186:255;5449:163;5552:19;;;5601:4;5592:14;;5545:67;5621:145;5757:3;5735:31;-1:-1;5735:31;5774:91;;-1:-1;;;;;5934:54;;5836:24;5917:76;6001:268;6066:1;6073:101;6087:6;6084:1;6081:13;6073:101;;;6154:11;;;6148:18;6135:11;;;6128:39;6109:2;6102:10;6073:101;;;6189:6;6186:1;6183:13;6180:2;;;6254:1;6245:6;6240:3;6236:16;6229:27;6180:2;6050:219;;;;;6277:117;6346:24;6364:5;6346:24;;;6339:5;6336:35;6326:2;;6385:1;6382;6375:12;6320:74;430:981:8;;;;;;",
  "deployedSourceMap": "430:981:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;430:981:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;689:18:2;;;:::i;:::-;;;;;;;;4283:200:29;;;;;;;;;:::i;:::-;;;;;;;;3583:415;;;;;;;;;:::i;:::-;;2007:293:2;;;;;;;;;:::i;:::-;;;;;;;;2171:94:31;;;:::i;:::-;;;;;;;;5929:287:29;;;;;;;;;:::i;1789:229:31:-;;;;;;;;;:::i;6865:132:29:-;;;;;;;;;:::i;362:233:30:-;;;;;;;;;:::i;2603:196:31:-;;;;;;;;;:::i;861:38:2:-;;;;;;;;;:::i;:::-;;;;;;;;;2939:223:29;;;;;;;;;:::i;834:325:8:-;;;;;;;;;:::i;2513:207:29:-;;;;;;;;;:::i;1684:137:28:-;;;:::i;899:77::-;;;:::i;1250:92::-;;;:::i;1296:113:8:-;;;;;;;;;:::i;734:20:2:-;;;:::i;1165:125:8:-;;;;;;;;;:::i;4776:249:29:-;;;;;;;;;:::i;7720:269::-;;;;;;;;;:::i;1664:337:2:-;;;;;;;;;:::i;:::-;;;;;;;;216:28:5;;;:::i;3188:207:2:-;;;;;;;;;:::i;170:25:3:-;;;:::i;5347:145:29:-;;;;;;;;;:::i;1970:107:28:-;;;;;;;;;:::i;915:133:25:-;-1:-1:-1;;;;;;1008:33:25;985:4;1008:33;;;:20;:33;;;;;;;;;915:133::o;689:18:2:-;;;;;;;;;;;;;;;-1:-1:-1;;689:18:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4283:200:29:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;-1:-1:-1;;;4361:73:29;;;;;;;;;;;;;;;;;-1:-1:-1;4452:24:29;;;;:15;:24;;;;;;-1:-1:-1;;;;;4452:24:29;;4283:200::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;-1:-1:-1;;;;;3696:11:29;:2;-1:-1:-1;;;;;3696:11:29;;;3688:57;;;;-1:-1:-1;;;3688:57:29;;;;;;;;;3780:5;-1:-1:-1;;;;;3764:21:29;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3764:21:29;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;3789:37::-;3756:152;;;;-1:-1:-1;;;3756:152:29;;;;;;;;;3919:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3919:29:29;-1:-1:-1;;;;;3919:29:29;;;;;;;;;3963:28;;3919:24;;3963:28;;;;;;;3583:415;;;:::o;2007:293:2:-;2105:8;;;;:4;:8;;;;;;;;2084:29;;;;;;;;;;;;;;;;;2059:13;;;;2084:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2084:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2123:20;2157:5;:12;2146:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2146:24:2;-1:-1:-1;2123:47:2;-1:-1:-1;2185:6:2;2180:91;2201:5;:12;2197:1;:16;2180:91;;;2246:5;2252:1;2246:8;;;;;;;;;;;;;;:14;;;2234:6;2241:1;2234:9;;;;;;;;;;;;;;;;;:26;2215:3;;2180:91;;;-1:-1:-1;2287:6:2;2007:293;-1:-1:-1;;;2007:293:2:o;2171:94:31:-;2241:10;:17;2171:94;;:::o;5929:287:29:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;-1:-1:-1;;;6063:103:29;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;1789:229:31:-;1869:7;1904:16;1914:5;1904:9;:16::i;:::-;1896:5;:24;1888:80;;;;-1:-1:-1;;;1888:80:31;;;;;;;;;-1:-1:-1;;;;;1985:19:31;;;;;;:12;:19;;;;;:26;;2005:5;;1985:26;;;;;;;;;;;;;;1978:33;;1789:229;;;;;:::o;6865:132:29:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;362:233:30:-;470:41;489:12;:10;:12::i;470:41::-;462:102;;;;-1:-1:-1;;;462:102:30;;;;;;;;;574:14;580:7;574:5;:14::i;:::-;362:233;:::o;2603:196:31:-;2661:7;2696:13;:11;:13::i;:::-;2688:5;:21;2680:78;;;;-1:-1:-1;;;2680:78:31;;;;;;;;;2775:10;2786:5;2775:17;;;;;;;;;;;;;;;;2768:24;;2603:196;;;:::o;861:38:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;861:38:2;;;;-1:-1:-1;861:38:2;-1:-1:-1;861:38:2;:::o;2939:223:29:-;2994:7;3029:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3029:20:29;3067:19;3059:73;;;;-1:-1:-1;;;3059:73:29;;;;;;;;834:325:8;976:62;1013:4;1019:7;996:31;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;996:31:8;;;986:42;;;;;;1030:1;1033;1036;976:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;976:62:8;;;;;;;;-1:-1:-1;;;;;965:73:8;:7;:5;:7::i;:::-;-1:-1:-1;;;;;965:73:8;;957:111;;;;-1:-1:-1;;;957:111:8;;;;;;;;;1078:33;1084:10;1096:7;1105:5;1078;:33::i;:::-;1121:31;1134:7;1143:8;1121:12;:31::i;:::-;834:325;;;;;;:::o;2513:207:29:-;2568:7;-1:-1:-1;;;;;2595:19:29;;2587:74;;;;-1:-1:-1;;;2587:74:29;;;;;;;;;-1:-1:-1;;;;;2679:24:29;;;;;;:17;:24;;;;;:34;;:32;:34::i;1684:137:28:-;1103:9;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:28;;;;;;;;;1782:1;1766:6;;1745:40;;-1:-1:-1;;;;;1766:6:28;;;;1745:40;;1782:1;;1745:40;1812:1;1795:19;;-1:-1:-1;;;;;;1795:19:28;;;1684:137::o;899:77::-;937:7;963:6;-1:-1:-1;;;;;963:6:28;899:77;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:28;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:28;;1306:29;;1250:92;:::o;1296:113:8:-;1103:9:28;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:28;;;;;;;;;1374:28:8;1390:11;1374:15;:28::i;734:20:2:-;;;;;;;;;;;;;;;-1:-1:-1;;734:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1165:125:8;1103:9:28;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:28;;;;;;;;;1249:34:8;1268:14;1249:18;:34::i;4776:249:29:-;4861:12;:10;:12::i;:::-;-1:-1:-1;;;;;4855:18:29;:2;-1:-1:-1;;;;;4855:18:29;;;4847:56;;;;-1:-1:-1;;;4847:56:29;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;-1:-1:-1;;;;;4914:32:29;;;;;;;;;;;;;;;;;-1:-1:-1;4914:32:29;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;4914:47:29;;;;;;;;;;;4991:12;:10;:12::i;:::-;-1:-1:-1;;;;;4976:42:29;;5009:8;4976:42;;;;;;;;;;;;;;;4776:249;;:::o;7720:269::-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;-1:-1:-1;;;7826:103:29;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;1664:337:2:-;1780:8;;;;:4;:8;;;;;;;;1759:29;;;;;;;;;;;;;;;;;1723:24;;;;1759:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1759:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1798:31;1854:5;:12;1832:35;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;1832:35:2;-1:-1:-1;1798:69:2;-1:-1:-1;1882:6:2;1877:95;1898:5;:12;1894:1;:16;1877:95;;;1943:5;1949:1;1943:8;;;;;;;;;;;;;;:18;;;1931:6;1938:1;1931:9;;;;;;;;-1:-1:-1;;;;;1931:30:2;;;:9;;;;;;;;;;;:30;1912:3;;1877:95;;216:28:5;;;;;;;;;;;;;;;-1:-1:-1;;216:28:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:207:2;3246:13;3279:16;3287:7;3279;:16::i;:::-;3271:76;;;;-1:-1:-1;;;3271:76:2;;;;;;;;;3364:24;3380:7;3364:15;:24::i;170:25:3:-;;;;;;;;;;;;;;;-1:-1:-1;;170:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5347:145:29;-1:-1:-1;;;;;5450:25:29;;;5427:4;5450:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5347:145::o;1970:107:28:-;1103:9;:7;:9::i;:::-;1095:54;;;;-1:-1:-1;;;1095:54:28;;;;;;;;;2042:28;2061:8;2042:18;:28::i;9158:152:29:-;9215:4;9247:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9247:20:29;9284:19;;;9158:152::o;788:96:21:-;867:10;788:96;:::o;9671:329:29:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;-1:-1:-1;;;9772:73:29;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;-1:-1:-1;;;;;9905:16:29;:7;-1:-1:-1;;;;;9905:16:29;;:51;;;;9949:7;-1:-1:-1;;;;;9925:31:29;:20;9937:7;9925:11;:20::i;:::-;-1:-1:-1;;;;;9925:31:29;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9897:96;9671:329;-1:-1:-1;;;;9671:329:29:o;3174:239:31:-;3259:38;3279:4;3285:2;3289:7;3259:19;:38::i;:::-;3308:47;3341:4;3347:7;3308:32;:47::i;:::-;3366:40;3394:2;3398:7;3366:27;:40::i;12814:90:29:-;12865:32;12871:16;12879:7;12871;:16::i;:::-;12889:7;12865:5;:32::i;2306:682:2:-;2389:18;2395:2;2399:7;2389:5;:18::i;:::-;2417:27;2461:5;:12;2447:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2447:27:2;;2417:57;;2484:17;2515:5;:12;2504:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2504:24:2;-1:-1:-1;2484:44:2;-1:-1:-1;2543:6:2;2538:340;2559:5;:12;2555:1;:16;2538:340;;;2630:3;-1:-1:-1;;;;;2600:34:2;:5;2606:1;2600:8;;;;;;;;;;;;;;:18;;;-1:-1:-1;;;;;2600:34:2;;;2592:74;;;;-1:-1:-1;;;2592:74:2;;;;;;;;;2688:5;2694:1;2688:8;;;;;;;;;;;;;;:14;;;2706:1;2688:19;;2680:60;;;;-1:-1:-1;;;2680:60:2;;;;;;;;;2754:13;;;;:4;:13;;;;;2773:8;;:5;;2779:1;;2773:8;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;2754:28:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2754:28:2;-1:-1:-1;;;;;2754:28:2;;;;;;;;;;;;;;;2812:8;;;;2818:1;;2812:8;;;;;;;;;;;;:18;;;2796:10;2807:1;2796:13;;;;;;;;;;;;;:34;-1:-1:-1;;;;;2796:34:2;;;-1:-1:-1;;;;;2796:34:2;;;;;2853:5;2859:1;2853:8;;;;;;;;;;;;;;:14;;;2844:3;2848:1;2844:6;;;;;;;;;;;;;;;;;:23;2573:3;;2538:340;;;-1:-1:-1;2891:12:2;;:16;2887:95;;2928:43;2946:7;2955:10;2967:3;2928:43;;;;;;;;;;;;;;;;;2887:95;2306:682;;;;;:::o;3634:199::-;3719:16;3727:7;3719;:16::i;:::-;3711:73;;;;-1:-1:-1;;;3711:73:2;;;;;;;;;3794:32;3813:7;3822:3;3794:18;:32::i;:::-;3634:199;;:::o;1065:112:24:-;1156:14;;1065:112::o;620:105:3:-;692:26;;;;:11;;:26;;;;;:::i;1268:117:5:-;1346:32;;;;:14;;:32;;;;;:::i;8694:269:29:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;-1:-1:-1;;;8845:111:29;;;;;;;;641:140:5;754:19;;;;:10;:19;;;;;;;;;732:42;;;;;;;;;;;-1:-1:-1;;732:42:5;;;;;;;;;;;;;;;;;;;;;;;;;;700:13;;732:42;;;;754:19;732:42;;754:19;732:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:14:5;:21;;;;;;;;-1:-1:-1;;732:21:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;732:14:5;;-1:-1:-1;732:21:5;-1:-1:-1;732:21:5;;:14;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;:::i;2178:225:28:-;-1:-1:-1;;;;;2251:22:28;;2243:73;;;;-1:-1:-1;;;2243:73:28;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:28;;;;2352:6;;;2331:38;;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:28;-1:-1:-1;;;;;2379:17:28;;;;;;;;;;2178:225::o;13281:447:29:-;13394:4;-1:-1:-1;;;;;13374:24:29;:16;13382:7;13374;:16::i;:::-;-1:-1:-1;;;;;13374:24:29;;13366:78;;;;-1:-1:-1;;;13366:78:29;;;;;;;;;-1:-1:-1;;;;;13462:16:29;;13454:65;;;;-1:-1:-1;;;13454:65:29;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;-1:-1:-1;;;;;13564:23:29;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13609:21:29;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13653:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13653:25:29;-1:-1:-1;;;;;13653:25:29;;;;;;;;;13694:27;;13653:20;;13694:27;;;;;;;13281:447;;;:::o;6284:1128:31:-;-1:-1:-1;;;;;6571:18:31;;6546:22;6571:18;;;:12;:18;;;;;:25;:32;;6601:1;6571:32;:29;:32;:::i;:::-;6613:18;6634:26;;;:17;:26;;;;;;6546:57;;-1:-1:-1;6764:28:31;;;6760:323;;-1:-1:-1;;;;;6830:18:31;;6808:19;6830:18;;;:12;:18;;;;;:34;;6849:14;;6830:34;;;;;;;;;;;;;;6808:56;;6912:11;6879:12;:18;6892:4;-1:-1:-1;;;;;6879:18:31;-1:-1:-1;;;;;6879:18:31;;;;;;;;;;;;6898:10;6879:30;;;;;;;;;;;;;;;;;;;:44;;;;6995:30;;;:17;:30;;;;;:43;;;6760:323;-1:-1:-1;;;;;7169:18:31;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7169:27:31;;;:::i;5128:183::-;-1:-1:-1;;;;;5241:16:31;;;;;;;:12;:16;;;;;;;;:23;;5212:26;;;:17;:26;;;;;:52;;;5274:16;;;39:1:-1;23:18;;45:23;;5274:30:31;;;;;;;;5128:183::o;4126:133:2:-;4192:27;4204:5;4211:7;4192:11;:27::i;:::-;4229:23;4244:7;4229:14;:23::i;3670:196:31:-;3733:24;3745:2;3749:7;3733:11;:24::i;:::-;3768:40;3796:2;3800:7;3768:27;:40::i;:::-;3819;3851:7;3819:31;:40::i;1020:109:5:-;1097:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;14367:1051:29:-;14488:4;14513:15;:2;-1:-1:-1;;;;;14513:13:29;;:15::i;:::-;14508:58;;-1:-1:-1;14551:4:29;14544:11;;14508:58;14635:12;14649:23;-1:-1:-1;;;;;14676:7:29;;-1:-1:-1;;;14779:12:29;:10;:12::i;:::-;14805:4;14823:7;14844:5;14684:175;;;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;14684:175:29;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;14684:175:29;;;179:29:-1;;;;160:49;;;14676:184:29;;;;14684:175;14676:184;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14634:226:29;;;;14875:7;14870:542;;14902:17;;:21;14898:376;;15067:10;15061:17;15127:15;15114:10;15110:2;15106:19;15099:44;15016:145;15199:60;;-1:-1:-1;;;15199:60:29;;;;;;;;14870:542;15304:13;15331:10;15320:32;;;;;;;;;;;;;;-1:-1:-1;;;;;;15374:26:29;-1:-1:-1;;;15374:26:29;;-1:-1:-1;15366:35:29;;-1:-1:-1;;;15366:35:29;118:414:19;193:13;218:16;243:2;218:28;;256:16;281:2;256:28;;294:16;336:3;:10;323:3;:10;:23;313:34;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;313:34:19;87::-1;135:17;;-1:-1;313:34:19;-1:-1:-1;294:53:19;-1:-1:-1;357:6:19;;377:55;398:3;:10;394:1;:14;377:55;;;426:3;430:1;426:6;;;;;;;;;;;;;;;;415:3;419;;;;;;415:8;;;;;;;;;;;:17;-1:-1:-1;;;;;415:17:19;;;;;;;;-1:-1:-1;410:3:19;;377:55;;;-1:-1:-1;447:6:19;442:55;463:3;:10;459:1;:14;442:55;;;491:3;495:1;491:6;;;;;;;;;;;;;;;;480:3;484;;;;;;480:8;;;;;;;;;;;:17;-1:-1:-1;;;;;480:17:19;;;;;;;;-1:-1:-1;475:3:19;;442:55;;;-1:-1:-1;521:3:19;;118:414;-1:-1:-1;;;;;;118:414:19:o;15580:171:29:-;15679:1;15643:24;;;:15;:24;;;;;;-1:-1:-1;;;;;15643:24:29;:38;15639:106;;15732:1;15697:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;15697:37:29;;;15580:171::o;1367:108:24:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;1274:134:27:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:27:o;4141:364:31:-;4207:27;4219:5;4226:7;4207:11;:27::i;:::-;4245:48;4278:5;4285:7;4245:32;:48::i;:::-;4441:1;4412:26;;;:17;:26;;;;;:30;4453:45;4430:7;4453:36;:45::i;1391:161:5:-;1461:19;;;;:10;:19;;;;;1455:33;;-1:-1:-1;;1455:33:5;;;;;;;;;;;:38;1451:95;;1516:19;;;;:10;:19;;;;;1509:26;;;:::i;11714:327:29:-;-1:-1:-1;;;;;11785:16:29;;11777:61;;;;-1:-1:-1;;;11777:61:29;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;-1:-1:-1;;;11848:58:29;;;;;;;;;11917:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;11917:25:29;-1:-1:-1;;;;;11917:25:29;;;;;;;;11952:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;12001;;12026:7;;-1:-1:-1;;;;;12001:33:29;;;12018:1;;12001:33;;12018:1;;12001:33;11714:327;;:::o;5506:161:31:-;5609:10;:17;;5582:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5636:24:31;;;;;;;5506:161::o;686:610:36:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:36;;;1238:51;-1:-1:-1;;686:610:36:o;1732:187:27:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:27;;;;;;;;;;-1:-1:-1;;;1888:5:27;;;1732:187::o;12309:324:29:-;12403:5;-1:-1:-1;;;;;12383:25:29;:16;12391:7;12383;:16::i;:::-;-1:-1:-1;;;;;12383:25:29;;12375:75;;;;-1:-1:-1;;;12375:75:29;;;;;;;;;12461:23;12476:7;12461:14;:23::i;:::-;-1:-1:-1;;;;;12495:24:29;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;12572:1;12541:20;;;:11;:20;;;;;;:33;;-1:-1:-1;;;;;;12541:33:29;;;12590:36;12553:7;;12572:1;-1:-1:-1;;;;;12590:36:29;;;;;12572:1;;12590:36;12309:324;;:::o;7700:1064:31:-;7974:10;:17;7949:22;;7974:24;;7996:1;7974:24;:21;:24;:::i;:::-;8008:18;8029:24;;;:15;:24;;;;;;8397:10;:26;;7949:49;;-1:-1:-1;8029:24:31;;7949:49;;8397:26;;;;;;;;;;;;;;8375:48;;8459:11;8434:10;8445;8434:22;;;;;;;;;;;;;;;;;;;:36;;;;8538:28;;;:15;:28;;;;;;:41;;;8700:10;:19;;;;;-1:-1:-1;;8700:19:31;;;:::i;:::-;-1:-1:-1;;;8756:1:31;8729:24;;;-1:-1:-1;8729:15:31;:24;;;;;:28;7700:1064::o;430:981:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;430:981:8;;;-1:-1:-1;430:981:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;327:755;;460:3;453:4;445:6;441:17;437:27;427:2;;478:1;475;468:12;427:2;515:6;502:20;537:96;552:80;625:6;552:80;;;537:96;;;528:105;;650:5;675:6;668:5;661:21;705:4;697:6;693:17;683:27;;727:4;722:3;718:14;711:21;;780:6;827:3;819:4;811:6;807:17;802:3;798:27;795:36;792:2;;;844:1;841;834:12;792:2;869:1;854:222;879:6;876:1;873:13;854:222;;;937:3;959:53;1008:3;996:10;959:53;;;947:66;;-1:-1;1036:4;1027:14;;;;1064:4;1055:14;;;;;901:1;894:9;854:222;;;858:14;420:662;;;;;;;;1090:124;1154:20;;1179:30;1154:20;1179:30;;1221:130;1288:20;;1313:33;1288:20;1313:33;;1358:128;1424:20;;1449:32;1424:20;1449:32;;1493:132;1570:13;;1588:32;1570:13;1588:32;;1633:440;;1734:3;1727:4;1719:6;1715:17;1711:27;1701:2;;1752:1;1749;1742:12;1701:2;1789:6;1776:20;1811:64;1826:48;1867:6;1826:48;;1811:64;1802:73;;1895:6;1888:5;1881:21;1931:4;1923:6;1919:17;1964:4;1957:5;1953:16;1999:3;1990:6;1985:3;1981:16;1978:25;1975:2;;;2016:1;2013;2006:12;1975:2;2026:41;2060:6;2055:3;2050;2026:41;;;1694:379;;;;;;;;2560:472;;2665:4;2653:9;2648:3;2644:19;2640:30;2637:2;;;2683:1;2680;2673:12;2637:2;2701:20;2716:4;2701:20;;;2692:29;-1:-1;2776:1;2808:57;2861:3;2841:9;2808:57;;;2783:83;;-1:-1;2928:2;2961:49;3006:3;2982:22;;;2961:49;;;2954:4;2947:5;2943:16;2936:75;2887:135;2631:401;;;;;3176:126;3241:20;;3266:31;3241:20;3266:31;;3309:241;;3413:2;3401:9;3392:7;3388:23;3384:32;3381:2;;;3429:1;3426;3419:12;3381:2;3464:1;3481:53;3526:7;3506:9;3481:53;;3557:366;;;3678:2;3666:9;3657:7;3653:23;3649:32;3646:2;;;3694:1;3691;3684:12;3646:2;3729:1;3746:53;3791:7;3771:9;3746:53;;;3736:63;;3708:97;3836:2;3854:53;3899:7;3890:6;3879:9;3875:22;3854:53;;;3844:63;;3815:98;3640:283;;;;;;3930:491;;;;4068:2;4056:9;4047:7;4043:23;4039:32;4036:2;;;4084:1;4081;4074:12;4036:2;4119:1;4136:53;4181:7;4161:9;4136:53;;;4126:63;;4098:97;4226:2;4244:53;4289:7;4280:6;4269:9;4265:22;4244:53;;;4234:63;;4205:98;4334:2;4352:53;4397:7;4388:6;4377:9;4373:22;4352:53;;;4342:63;;4313:98;4030:391;;;;;;4428:721;;;;;4592:3;4580:9;4571:7;4567:23;4563:33;4560:2;;;4609:1;4606;4599:12;4560:2;4644:1;4661:53;4706:7;4686:9;4661:53;;;4651:63;;4623:97;4751:2;4769:53;4814:7;4805:6;4794:9;4790:22;4769:53;;;4759:63;;4730:98;4859:2;4877:53;4922:7;4913:6;4902:9;4898:22;4877:53;;;4867:63;;4838:98;4995:2;4984:9;4980:18;4967:32;5019:18;5011:6;5008:30;5005:2;;;5051:1;5048;5041:12;5005:2;5071:62;5125:7;5116:6;5105:9;5101:22;5071:62;;;5061:72;;4946:193;4554:595;;;;;;;;5156:360;;;5274:2;5262:9;5253:7;5249:23;5245:32;5242:2;;;5290:1;5287;5280:12;5242:2;5325:1;5342:53;5387:7;5367:9;5342:53;;;5332:63;;5304:97;5432:2;5450:50;5492:7;5483:6;5472:9;5468:22;5450:50;;5523:366;;;5644:2;5632:9;5623:7;5619:23;5615:32;5612:2;;;5660:1;5657;5650:12;5612:2;5695:1;5712:53;5757:7;5737:9;5712:53;;;5702:63;;5674:97;5802:2;5820:53;5865:7;5856:6;5845:9;5841:22;5820:53;;5896:239;;5999:2;5987:9;5978:7;5974:23;5970:32;5967:2;;;6015:1;6012;6005:12;5967:2;6050:1;6067:52;6111:7;6091:9;6067:52;;6142:261;;6256:2;6244:9;6235:7;6231:23;6227:32;6224:2;;;6272:1;6269;6262:12;6224:2;6307:1;6324:63;6379:7;6359:9;6324:63;;6410:347;;6524:2;6512:9;6503:7;6499:23;6495:32;6492:2;;;6540:1;6537;6530:12;6492:2;6575:31;;6626:18;6615:30;;6612:2;;;6658:1;6655;6648:12;6612:2;6678:63;6733:7;6724:6;6713:9;6709:22;6678:63;;6764:241;;6868:2;6856:9;6847:7;6843:23;6839:32;6836:2;;;6884:1;6881;6874:12;6836:2;6919:1;6936:53;6981:7;6961:9;6936:53;;7012:366;;;7133:2;7121:9;7112:7;7108:23;7104:32;7101:2;;;7149:1;7146;7139:12;7101:2;7184:1;7201:53;7246:7;7226:9;7201:53;;7385:1139;;;;;;;7623:3;7611:9;7602:7;7598:23;7594:33;7591:2;;;7640:1;7637;7630:12;7591:2;7675:1;7692:53;7737:7;7717:9;7692:53;;;7682:63;;7654:97;7782:2;7800:51;7843:7;7834:6;7823:9;7819:22;7800:51;;;7790:61;;7761:96;7888:2;7906:53;7951:7;7942:6;7931:9;7927:22;7906:53;;;7896:63;;7867:98;7996:2;8014:53;8059:7;8050:6;8039:9;8035:22;8014:53;;;8004:63;;7975:98;8132:3;8121:9;8117:19;8104:33;8157:18;8149:6;8146:30;8143:2;;;8189:1;8186;8179:12;8143:2;8209:94;8295:7;8286:6;8275:9;8271:22;8209:94;;;8199:104;;8083:226;8368:3;8357:9;8353:19;8340:33;8393:18;8385:6;8382:30;8379:2;;;8425:1;8422;8415:12;8379:2;8445:63;8500:7;8491:6;8480:9;8476:22;8445:63;;;8435:73;;8319:195;7585:939;;;;;;;;;8532:205;;8635:62;8693:3;8685:6;8635:62;;;-1:-1;;8726:4;8717:14;;8628:109;8928:173;;9015:46;9057:3;9049:6;9015:46;;9109:127;9198:32;9224:5;9198:32;;;9193:3;9186:45;9180:56;;;9648:690;;9793:54;9841:5;9793:54;;;9860:86;9939:6;9934:3;9860:86;;;9853:93;;9967:56;10017:5;9967:56;;;10043:7;10071:1;10056:260;10081:6;10078:1;10075:13;10056:260;;;10148:6;10142:13;10169:63;10228:3;10213:13;10169:63;;;10162:70;;10249:60;10302:6;10249:60;;;10239:70;-1:-1;;10103:1;10096:9;10056:260;;;-1:-1;10329:3;;9772:566;-1:-1;;;;;9772:566;10393:754;;10554:62;10610:5;10554:62;;;10629:94;10716:6;10711:3;10629:94;;;10622:101;;10744:64;10802:5;10744:64;;;10828:7;10856:1;10841:284;10866:6;10863:1;10860:13;10841:284;;;10933:6;10927:13;10954:79;11029:3;11014:13;10954:79;;;10947:86;;11050:68;11111:6;11050:68;;;11040:78;-1:-1;;10888:1;10881:9;10841:284;;11186:690;;11331:54;11379:5;11331:54;;;11398:86;11477:6;11472:3;11398:86;;;11391:93;;11505:56;11555:5;11505:56;;;11581:7;11609:1;11594:260;11619:6;11616:1;11613:13;11594:260;;;11686:6;11680:13;11707:63;11766:3;11751:13;11707:63;;;11700:70;;11787:60;11840:6;11787:60;;;11777:70;-1:-1;;11641:1;11634:9;11594:260;;11884:104;11961:21;11976:5;11961:21;;11995:113;12078:24;12096:5;12078:24;;12115:343;;12225:38;12257:5;12225:38;;;12275:70;12338:6;12333:3;12275:70;;;12268:77;;12350:52;12395:6;12390:3;12383:4;12376:5;12372:16;12350:52;;;12423:29;12445:6;12423:29;;;12414:39;;;;12205:253;-1:-1;;;12205:253;12465:356;;12593:38;12625:5;12593:38;;;12643:88;12724:6;12719:3;12643:88;;;12636:95;;12736:52;12781:6;12776:3;12769:4;12762:5;12758:16;12736:52;;;12800:16;;;;;12573:248;-1:-1;;12573:248;12828:209;12951:80;12971:59;13024:5;12971:59;;;12951:80;;13745:328;;13905:67;13969:2;13964:3;13905:67;;;14005:30;13985:51;;14064:2;14055:12;;13891:182;-1:-1;;13891:182;14082:380;;14242:67;14306:2;14301:3;14242:67;;;14342:34;14322:55;;-1:-1;;;14406:2;14397:12;;14390:35;14453:2;14444:12;;14228:234;-1:-1;;14228:234;14471:387;;14631:67;14695:2;14690:3;14631:67;;;14731:34;14711:55;;-1:-1;;;14795:2;14786:12;;14779:42;14849:2;14840:12;;14617:241;-1:-1;;14617:241;14867:375;;15027:67;15091:2;15086:3;15027:67;;;15127:34;15107:55;;-1:-1;;;15191:2;15182:12;;15175:30;15233:2;15224:12;;15013:229;-1:-1;;15013:229;15251:328;;15411:67;15475:2;15470:3;15411:67;;;15511:30;15491:51;;15570:2;15561:12;;15397:182;-1:-1;;15397:182;15588:373;;15748:67;15812:2;15807:3;15748:67;;;15848:34;15828:55;;-1:-1;;;15912:2;15903:12;;15896:28;15952:2;15943:12;;15734:227;-1:-1;;15734:227;15970:325;;16130:67;16194:2;16189:3;16130:67;;;16230:27;16210:48;;16286:2;16277:12;;16116:179;-1:-1;;16116:179;16304:381;;16464:67;16528:2;16523:3;16464:67;;;16564:34;16544:55;;-1:-1;;;16628:2;16619:12;;16612:36;16676:2;16667:12;;16450:235;-1:-1;;16450:235;16694:325;;16854:67;16918:2;16913:3;16854:67;;;16954:27;16934:48;;17010:2;17001:12;;16840:179;-1:-1;;16840:179;17028:393;;17188:67;17252:2;17247:3;17188:67;;;17288:34;17268:55;;17357:26;17352:2;17343:12;;17336:48;17412:2;17403:12;;17174:247;-1:-1;;17174:247;17430:379;;17590:67;17654:2;17649:3;17590:67;;;17690:34;17670:55;;-1:-1;;;17754:2;17745:12;;17738:34;17800:2;17791:12;;17576:233;-1:-1;;17576:233;17818:378;;17978:67;18042:2;18037:3;17978:67;;;18078:34;18058:55;;-1:-1;;;18142:2;18133:12;;18126:33;18187:2;18178:12;;17964:232;-1:-1;;17964:232;18205:332;;18365:67;18429:2;18424:3;18365:67;;;18465:34;18445:55;;18528:2;18519:12;;18351:186;-1:-1;;18351:186;18546:381;;18706:67;18770:2;18765:3;18706:67;;;18806:34;18786:55;;-1:-1;;;18870:2;18861:12;;18854:36;18918:2;18909:12;;18692:235;-1:-1;;18692:235;18936:381;;19096:67;19160:2;19155:3;19096:67;;;19196:34;19176:55;;-1:-1;;;19260:2;19251:12;;19244:36;19308:2;19299:12;;19082:235;-1:-1;;19082:235;19326:332;;19486:67;19550:2;19545:3;19486:67;;;19586:34;19566:55;;19649:2;19640:12;;19472:186;-1:-1;;19472:186;19667:378;;19827:67;19891:2;19886:3;19827:67;;;19927:34;19907:55;;-1:-1;;;19991:2;19982:12;;19975:33;20036:2;20027:12;;19813:232;-1:-1;;19813:232;20054:384;;20214:67;20278:2;20273:3;20214:67;;;20314:34;20294:55;;-1:-1;;;20378:2;20369:12;;20362:39;20429:2;20420:12;;20200:238;-1:-1;;20200:238;20447:370;;20607:67;20671:2;20666:3;20607:67;;;20707:34;20687:55;;-1:-1;;;20771:2;20762:12;;20755:25;20808:2;20799:12;;20593:224;-1:-1;;20593:224;20826:386;;20986:67;21050:2;21045:3;20986:67;;;21086:34;21066:55;;-1:-1;;;21150:2;21141:12;;21134:41;21203:2;21194:12;;20972:240;-1:-1;;20972:240;21221:381;;21381:67;21445:2;21440:3;21381:67;;;21481:34;21461:55;;-1:-1;;;21545:2;21536:12;;21529:36;21593:2;21584:12;;21367:235;-1:-1;;21367:235;21611:374;;21771:67;21835:2;21830:3;21771:67;;;21871:34;21851:55;;-1:-1;;;21935:2;21926:12;;21919:29;21976:2;21967:12;;21757:228;-1:-1;;21757:228;21994:327;;22154:67;22218:2;22213:3;22154:67;;;22254:29;22234:50;;22312:2;22303:12;;22140:181;-1:-1;;22140:181;22330:385;;22490:67;22554:2;22549:3;22490:67;;;22590:34;22570:55;;-1:-1;;;22654:2;22645:12;;22638:40;22706:2;22697:12;;22476:239;-1:-1;;22476:239;22953:152;23054:45;23074:24;23092:5;23074:24;;;23054:45;;23112:107;23191:22;23207:5;23191:22;;23226:262;;23370:93;23459:3;23450:6;23370:93;;23495:427;;23664:97;23757:3;23748:6;23664:97;;;23783:2;23778:3;23774:12;23767:19;;23797:75;23868:3;23859:6;23797:75;;;-1:-1;23894:2;23885:12;;23652:270;-1:-1;;23652:270;23929:213;24047:2;24032:18;;24061:71;24036:9;24105:6;24061:71;;24149:663;24385:3;24370:19;;24400:87;24374:9;24460:6;24400:87;;;24498:72;24566:2;24555:9;24551:18;24542:6;24498:72;;;24581;24649:2;24638:9;24634:18;24625:6;24581:72;;;24701:9;24695:4;24691:20;24686:2;24675:9;24671:18;24664:48;24726:76;24797:4;24788:6;24726:76;;;24718:84;24356:456;-1:-1;;;;;;24356:456;24819:356;24981:2;24966:18;;24995:87;24970:9;25055:6;24995:87;;;25093:72;25161:2;25150:9;25146:18;25137:6;25093:72;;25182:393;25366:2;25380:47;;;25351:18;;25441:124;25351:18;25551:6;25441:124;;25582:361;25750:2;25764:47;;;25735:18;;25825:108;25735:18;25919:6;25825:108;;25950:201;26062:2;26047:18;;26076:65;26051:9;26114:6;26076:65;;26158:539;26356:3;26341:19;;26371:71;26345:9;26415:6;26371:71;;;26453:68;26517:2;26506:9;26502:18;26493:6;26453:68;;;26532:72;26600:2;26589:9;26585:18;26576:6;26532:72;;;26615;26683:2;26672:9;26668:18;26659:6;26615:72;;;26327:370;;;;;;;;26704:293;26838:2;26852:47;;;26823:18;;26913:74;26823:18;26973:6;26913:74;;27312:407;27503:2;27517:47;;;27488:18;;27578:131;27488:18;27578:131;;27726:407;27917:2;27931:47;;;27902:18;;27992:131;27902:18;27992:131;;28140:407;28331:2;28345:47;;;28316:18;;28406:131;28316:18;28406:131;;28554:407;28745:2;28759:47;;;28730:18;;28820:131;28730:18;28820:131;;28968:407;29159:2;29173:47;;;29144:18;;29234:131;29144:18;29234:131;;29382:407;29573:2;29587:47;;;29558:18;;29648:131;29558:18;29648:131;;29796:407;29987:2;30001:47;;;29972:18;;30062:131;29972:18;30062:131;;30210:407;30401:2;30415:47;;;30386:18;;30476:131;30386:18;30476:131;;30624:407;30815:2;30829:47;;;30800:18;;30890:131;30800:18;30890:131;;31038:407;31229:2;31243:47;;;31214:18;;31304:131;31214:18;31304:131;;31452:407;31643:2;31657:47;;;31628:18;;31718:131;31628:18;31718:131;;31866:407;32057:2;32071:47;;;32042:18;;32132:131;32042:18;32132:131;;32280:407;32471:2;32485:47;;;32456:18;;32546:131;32456:18;32546:131;;32694:407;32885:2;32899:47;;;32870:18;;32960:131;32870:18;32960:131;;33108:407;33299:2;33313:47;;;33284:18;;33374:131;33284:18;33374:131;;33522:407;33713:2;33727:47;;;33698:18;;33788:131;33698:18;33788:131;;33936:407;34127:2;34141:47;;;34112:18;;34202:131;34112:18;34202:131;;34350:407;34541:2;34555:47;;;34526:18;;34616:131;34526:18;34616:131;;34764:407;34955:2;34969:47;;;34940:18;;35030:131;34940:18;35030:131;;35178:407;35369:2;35383:47;;;35354:18;;35444:131;35354:18;35444:131;;35592:407;35783:2;35797:47;;;35768:18;;35858:131;35768:18;35858:131;;36006:407;36197:2;36211:47;;;36182:18;;36272:131;36182:18;36272:131;;36420:407;36611:2;36625:47;;;36596:18;;36686:131;36596:18;36686:131;;36834:407;37025:2;37039:47;;;37010:18;;37100:131;37010:18;37100:131;;37248:213;37366:2;37351:18;;37380:71;37355:9;37424:6;37380:71;;37468:731;37742:2;37727:18;;37756:71;37731:9;37800:6;37756:71;;;37875:9;37869:4;37865:20;37860:2;37849:9;37845:18;37838:48;37900:108;38003:4;37994:6;37900:108;;;37892:116;;38056:9;38050:4;38046:20;38041:2;38030:9;38026:18;38019:48;38081:108;38184:4;38175:6;38081:108;;38206:256;38268:2;38262:9;38294:17;;;38369:18;38354:34;;38390:22;;;38351:62;38348:2;;;38426:1;38423;38416:12;38348:2;38442;38435:22;38246:216;;-1:-1;38246:216;38469:320;;38644:18;38636:6;38633:30;38630:2;;;38676:1;38673;38666:12;38630:2;-1:-1;38711:4;38699:17;;;38764:15;;38567:222;38796:321;;38939:18;38931:6;38928:30;38925:2;;;38971:1;38968;38961:12;38925:2;-1:-1;39102:4;39038;39015:17;;;;-1:-1;;39011:33;39092:15;;38862:255;39453:151;39577:4;39568:14;;39525:79;39935:137;40038:12;;40009:63;41111:178;41229:19;;;41278:4;41269:14;;41222:67;41851:144;41986:3;41964:31;-1:-1;41964:31;42175:91;;42237:24;42255:5;42237:24;;42379:85;42445:13;42438:21;;42421:43;42550:144;-1:-1;;;;;;42611:78;;42594:100;42701:121;-1:-1;;;;;42763:54;;42746:76;42908:81;42979:4;42968:16;;42951:38;42996:165;;43097:59;43150:5;43097:59;;43306:145;43387:6;43382:3;43377;43364:30;-1:-1;43443:1;43425:16;;43418:27;43357:94;43460:268;43525:1;43532:101;43546:6;43543:1;43540:13;43532:101;;;43613:11;;;43607:18;43594:11;;;43587:39;43568:2;43561:10;43532:101;;;43648:6;43645:1;43642:13;43639:2;;;-1:-1;;43713:1;43695:16;;43688:27;43509:219;43736:95;;43800:26;43820:5;43838:89;43902:20;43916:5;43902:20;;44015:97;44103:2;44083:14;-1:-1;;44079:28;;44063:49;44120:94;44194:2;44190:14;;44162:52;44222:117;44291:24;44309:5;44291:24;;;44284:5;44281:35;44271:2;;44330:1;44327;44320:12;44486:111;44552:21;44567:5;44552:21;;44604:117;44673:24;44691:5;44673:24;;44728:115;44796:23;44813:5;44796:23;;44974:113;45041:22;45057:5;45041:22;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol\";\nimport \"./ERC721Base.sol\";\n\n/**\n * @title MintableToken\n * @dev anyone can mint token.\n */\ncontract MintableToken is Ownable, IERC721, IERC721Metadata, ERC721Burnable, ERC721Base {\n\n    constructor (string memory name, string memory symbol, address newOwner, string memory contractURI, string memory tokenURIPrefix) public ERC721Base(name, symbol, contractURI, tokenURIPrefix) {\n        _registerInterface(bytes4(keccak256('MINT_WITH_ADDRESS')));\n        transferOwnership(newOwner);\n    }\n\n    function mint(uint256 tokenId, uint8 v, bytes32 r, bytes32 s, Fee[] memory _fees, string memory tokenURI) public {\n        require(owner() == ecrecover(keccak256(abi.encodePacked(this, tokenId)), v, r, s), \"owner should sign tokenId\");\n        _mint(msg.sender, tokenId, _fees);\n        _setTokenURI(tokenId, tokenURI);\n    }\n\n    function setTokenURIPrefix(string memory tokenURIPrefix) public onlyOwner {\n        _setTokenURIPrefix(tokenURIPrefix);\n    }\n\n    function setContractURI(string memory contractURI) public onlyOwner {\n        _setContractURI(contractURI);\n    }\n}\n",
  "sourcePath": "/home/sergey/Projects/rarible/contracts/tokens/contracts/MintableToken.sol",
  "ast": {
    "absolutePath": "/home/sergey/Projects/rarible/contracts/tokens/contracts/MintableToken.sol",
    "exportedSymbols": {
      "MintableToken": [
        1789
      ]
    },
    "id": 1790,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1668,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "id": 1669,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1670,
        "nodeType": "ImportDirective",
        "scope": 1790,
        "sourceUnit": 4001,
        "src": "59:63:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
        "id": 1671,
        "nodeType": "ImportDirective",
        "scope": 1790,
        "sourceUnit": 5143,
        "src": "123:66:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
        "id": 1672,
        "nodeType": "ImportDirective",
        "scope": 1790,
        "sourceUnit": 5193,
        "src": "190:74:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 1673,
        "nodeType": "ImportDirective",
        "scope": 1790,
        "sourceUnit": 4700,
        "src": "265:73:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/sergey/Projects/rarible/contracts/tokens/contracts/ERC721Base.sol",
        "file": "./ERC721Base.sol",
        "id": 1674,
        "nodeType": "ImportDirective",
        "scope": 1790,
        "sourceUnit": 1305,
        "src": "339:26:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1675,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4000,
              "src": "456:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4000",
                "typeString": "contract Ownable"
              }
            },
            "id": 1676,
            "nodeType": "InheritanceSpecifier",
            "src": "456:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1677,
              "name": "IERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5142,
              "src": "465:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$5142",
                "typeString": "contract IERC721"
              }
            },
            "id": 1678,
            "nodeType": "InheritanceSpecifier",
            "src": "465:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1679,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5192,
              "src": "474:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$5192",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 1680,
            "nodeType": "InheritanceSpecifier",
            "src": "474:15:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1681,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4699,
              "src": "491:14:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$4699",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 1682,
            "nodeType": "InheritanceSpecifier",
            "src": "491:14:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1683,
              "name": "ERC721Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1304,
              "src": "507:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Base_$1304",
                "typeString": "contract ERC721Base"
              }
            },
            "id": 1684,
            "nodeType": "InheritanceSpecifier",
            "src": "507:10:8"
          }
        ],
        "contractDependencies": [
          1304,
          1340,
          1383,
          1467,
          3396,
          3685,
          3695,
          4000,
          4671,
          4699,
          5039,
          5142,
          5169,
          5192
        ],
        "contractKind": "contract",
        "documentation": "@title MintableToken\n@dev anyone can mint token.",
        "fullyImplemented": true,
        "id": 1789,
        "linearizedBaseContracts": [
          1789,
          1304,
          5039,
          5169,
          1467,
          1340,
          4699,
          4671,
          5192,
          5142,
          1383,
          3685,
          3695,
          4000,
          3396
        ],
        "name": "MintableToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1715,
              "nodeType": "Block",
              "src": "716:112:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "4d494e545f574954485f41444452455353",
                                "id": 1706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "762:19:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e37243f27916e395706434720b54132b80ef5cc8c56f39b0df6485e8dfb697cf",
                                  "typeString": "literal_string \"MINT_WITH_ADDRESS\""
                                },
                                "value": "MINT_WITH_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_e37243f27916e395706434720b54132b80ef5cc8c56f39b0df6485e8dfb697cf",
                                  "typeString": "literal_string \"MINT_WITH_ADDRESS\""
                                }
                              ],
                              "id": 1705,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5292,
                              "src": "752:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "752:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "745:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": "bytes4"
                        },
                        "id": 1708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "745:38:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 1703,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3684,
                      "src": "726:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 1709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:58:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1710,
                  "nodeType": "ExpressionStatement",
                  "src": "726:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1712,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1690,
                        "src": "812:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1711,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3975,
                      "src": "794:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1714,
                  "nodeType": "ExpressionStatement",
                  "src": "794:27:8"
                }
              ]
            },
            "documentation": null,
            "id": 1716,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1697,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1686,
                    "src": "673:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1698,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1688,
                    "src": "679:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1699,
                    "name": "contractURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1692,
                    "src": "687:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1700,
                    "name": "tokenURIPrefix",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1694,
                    "src": "700:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1701,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1696,
                  "name": "ERC721Base",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1304,
                  "src": "662:10:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Base_$1304_$",
                    "typeString": "type(contract ERC721Base)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "662:53:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1686,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1716,
                  "src": "538:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1685,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1688,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1716,
                  "src": "558:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "558:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1690,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1716,
                  "src": "580:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1692,
                  "name": "contractURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1716,
                  "src": "598:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1691,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1694,
                  "name": "tokenURIPrefix",
                  "nodeType": "VariableDeclaration",
                  "scope": 1716,
                  "src": "625:28:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1693,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:117:8"
            },
            "returnParameters": {
              "id": 1702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:0:8"
            },
            "scope": 1789,
            "src": "525:303:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1763,
              "nodeType": "Block",
              "src": "947:212:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1733,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3923,
                            "src": "965:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "965:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1739,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5380,
                                      "src": "1013:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MintableToken_$1789",
                                        "typeString": "contract MintableToken"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 1740,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1718,
                                      "src": "1019:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_MintableToken_$1789",
                                        "typeString": "contract MintableToken"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1737,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5285,
                                      "src": "996:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 1738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "996:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 1741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "996:31:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 1736,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5292,
                                "src": "986:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 1742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "986:42:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1743,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1720,
                              "src": "1030:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1744,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1722,
                              "src": "1033:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1745,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1724,
                              "src": "1036:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1735,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5290,
                            "src": "976:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "976:62:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "965:73:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f776e65722073686f756c64207369676e20746f6b656e4964",
                        "id": 1748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1040:27:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d18537e1ea0e06778bbeb75e3ff436a0ff7887d1472fe2fe1cc084dee8c7fe4",
                          "typeString": "literal_string \"owner should sign tokenId\""
                        },
                        "value": "owner should sign tokenId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d18537e1ea0e06778bbeb75e3ff436a0ff7887d1472fe2fe1cc084dee8c7fe4",
                          "typeString": "literal_string \"owner should sign tokenId\""
                        }
                      ],
                      "id": 1732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5301,
                        5302
                      ],
                      "referencedDeclaration": 5302,
                      "src": "957:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "957:111:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1750,
                  "nodeType": "ExpressionStatement",
                  "src": "957:111:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1752,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5298,
                          "src": "1084:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1084:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1754,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1718,
                        "src": "1096:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1755,
                        "name": "_fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1727,
                        "src": "1105:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fee_$989_memory_$dyn_memory_ptr",
                          "typeString": "struct ERC721Base.Fee memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fee_$989_memory_$dyn_memory_ptr",
                          "typeString": "struct ERC721Base.Fee memory[] memory"
                        }
                      ],
                      "id": 1751,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1242,
                        4846
                      ],
                      "referencedDeclaration": 1242,
                      "src": "1078:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_array$_t_struct$_Fee_$989_memory_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct ERC721Base.Fee memory[] memory)"
                      }
                    },
                    "id": 1756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1757,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:33:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1759,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1718,
                        "src": "1134:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1760,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1729,
                        "src": "1143:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1758,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1284
                      ],
                      "referencedDeclaration": 1284,
                      "src": "1121:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1762,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:31:8"
                }
              ]
            },
            "documentation": null,
            "id": 1764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1764,
                  "src": "848:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1720,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 1764,
                  "src": "865:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1722,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 1764,
                  "src": "874:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1724,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 1764,
                  "src": "885:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1727,
                  "name": "_fees",
                  "nodeType": "VariableDeclaration",
                  "scope": 1764,
                  "src": "896:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fee_$989_memory_$dyn_memory_ptr",
                    "typeString": "struct ERC721Base.Fee[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1725,
                      "name": "Fee",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 989,
                      "src": "896:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fee_$989_storage_ptr",
                        "typeString": "struct ERC721Base.Fee"
                      }
                    },
                    "id": 1726,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "896:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fee_$989_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC721Base.Fee[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1729,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1764,
                  "src": "916:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1728,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "847:92:8"
            },
            "returnParameters": {
              "id": 1731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:8"
            },
            "scope": 1789,
            "src": "834:325:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1775,
              "nodeType": "Block",
              "src": "1239:51:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1772,
                        "name": "tokenURIPrefix",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1766,
                        "src": "1268:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1771,
                      "name": "_setTokenURIPrefix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "1249:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1774,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:34:8"
                }
              ]
            },
            "documentation": null,
            "id": 1776,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1769,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1768,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3933,
                  "src": "1229:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:9:8"
              }
            ],
            "name": "setTokenURIPrefix",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1766,
                  "name": "tokenURIPrefix",
                  "nodeType": "VariableDeclaration",
                  "scope": 1776,
                  "src": "1192:28:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1765,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1191:30:8"
            },
            "returnParameters": {
              "id": 1770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:0:8"
            },
            "scope": 1789,
            "src": "1165:125:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1787,
              "nodeType": "Block",
              "src": "1364:45:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1784,
                        "name": "contractURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1778,
                        "src": "1390:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1783,
                      "name": "_setContractURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1339,
                      "src": "1374:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1786,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:28:8"
                }
              ]
            },
            "documentation": null,
            "id": 1788,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1781,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1780,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3933,
                  "src": "1354:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1354:9:8"
              }
            ],
            "name": "setContractURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1778,
                  "name": "contractURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1788,
                  "src": "1320:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1319:27:8"
            },
            "returnParameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1364:0:8"
            },
            "scope": 1789,
            "src": "1296:113:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1790,
        "src": "430:981:8"
      }
    ],
    "src": "0:1412:8"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/sergey/Projects/rarible/contracts/tokens/contracts/MintableToken.sol",
      "exportedSymbols": {
        "MintableToken": [
          1789
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1668,
        "name": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1669,
        "name": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "attributes": {
          "SourceUnit": 4001,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 1790,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1670,
        "name": "ImportDirective",
        "src": "59:63:8"
      },
      {
        "attributes": {
          "SourceUnit": 5143,
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
          "scope": 1790,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1671,
        "name": "ImportDirective",
        "src": "123:66:8"
      },
      {
        "attributes": {
          "SourceUnit": 5193,
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol",
          "scope": 1790,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1672,
        "name": "ImportDirective",
        "src": "190:74:8"
      },
      {
        "attributes": {
          "SourceUnit": 4700,
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Burnable.sol",
          "scope": 1790,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1673,
        "name": "ImportDirective",
        "src": "265:73:8"
      },
      {
        "attributes": {
          "SourceUnit": 1305,
          "absolutePath": "/home/sergey/Projects/rarible/contracts/tokens/contracts/ERC721Base.sol",
          "file": "./ERC721Base.sol",
          "scope": 1790,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1674,
        "name": "ImportDirective",
        "src": "339:26:8"
      },
      {
        "attributes": {
          "contractDependencies": [
            1304,
            1340,
            1383,
            1467,
            3396,
            3685,
            3695,
            4000,
            4671,
            4699,
            5039,
            5142,
            5169,
            5192
          ],
          "contractKind": "contract",
          "documentation": "@title MintableToken\n@dev anyone can mint token.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1789,
            1304,
            5039,
            5169,
            1467,
            1340,
            4699,
            4671,
            5192,
            5142,
            1383,
            3685,
            3695,
            4000,
            3396
          ],
          "name": "MintableToken",
          "scope": 1790
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 4000,
                  "type": "contract Ownable"
                },
                "id": 1675,
                "name": "UserDefinedTypeName",
                "src": "456:7:8"
              }
            ],
            "id": 1676,
            "name": "InheritanceSpecifier",
            "src": "456:7:8"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IERC721",
                  "referencedDeclaration": 5142,
                  "type": "contract IERC721"
                },
                "id": 1677,
                "name": "UserDefinedTypeName",
                "src": "465:7:8"
              }
            ],
            "id": 1678,
            "name": "InheritanceSpecifier",
            "src": "465:7:8"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IERC721Metadata",
                  "referencedDeclaration": 5192,
                  "type": "contract IERC721Metadata"
                },
                "id": 1679,
                "name": "UserDefinedTypeName",
                "src": "474:15:8"
              }
            ],
            "id": 1680,
            "name": "InheritanceSpecifier",
            "src": "474:15:8"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Burnable",
                  "referencedDeclaration": 4699,
                  "type": "contract ERC721Burnable"
                },
                "id": 1681,
                "name": "UserDefinedTypeName",
                "src": "491:14:8"
              }
            ],
            "id": 1682,
            "name": "InheritanceSpecifier",
            "src": "491:14:8"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Base",
                  "referencedDeclaration": 1304,
                  "type": "contract ERC721Base"
                },
                "id": 1683,
                "name": "UserDefinedTypeName",
                "src": "507:10:8"
              }
            ],
            "id": 1684,
            "name": "InheritanceSpecifier",
            "src": "507:10:8"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1789,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 1716,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1685,
                        "name": "ElementaryTypeName",
                        "src": "538:6:8"
                      }
                    ],
                    "id": 1686,
                    "name": "VariableDeclaration",
                    "src": "538:18:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 1716,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1687,
                        "name": "ElementaryTypeName",
                        "src": "558:6:8"
                      }
                    ],
                    "id": 1688,
                    "name": "VariableDeclaration",
                    "src": "558:20:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "newOwner",
                      "scope": 1716,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1689,
                        "name": "ElementaryTypeName",
                        "src": "580:7:8"
                      }
                    ],
                    "id": 1690,
                    "name": "VariableDeclaration",
                    "src": "580:16:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "contractURI",
                      "scope": 1716,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1691,
                        "name": "ElementaryTypeName",
                        "src": "598:6:8"
                      }
                    ],
                    "id": 1692,
                    "name": "VariableDeclaration",
                    "src": "598:25:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenURIPrefix",
                      "scope": 1716,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1693,
                        "name": "ElementaryTypeName",
                        "src": "625:6:8"
                      }
                    ],
                    "id": 1694,
                    "name": "VariableDeclaration",
                    "src": "625:28:8"
                  }
                ],
                "id": 1695,
                "name": "ParameterList",
                "src": "537:117:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1702,
                "name": "ParameterList",
                "src": "716:0:8"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1304,
                      "type": "type(contract ERC721Base)",
                      "value": "ERC721Base"
                    },
                    "id": 1696,
                    "name": "Identifier",
                    "src": "662:10:8"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1686,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 1697,
                    "name": "Identifier",
                    "src": "673:4:8"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1688,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 1698,
                    "name": "Identifier",
                    "src": "679:6:8"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1692,
                      "type": "string memory",
                      "value": "contractURI"
                    },
                    "id": 1699,
                    "name": "Identifier",
                    "src": "687:11:8"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1694,
                      "type": "string memory",
                      "value": "tokenURIPrefix"
                    },
                    "id": 1700,
                    "name": "Identifier",
                    "src": "700:14:8"
                  }
                ],
                "id": 1701,
                "name": "ModifierInvocation",
                "src": "662:53:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3684,
                              "type": "function (bytes4)",
                              "value": "_registerInterface"
                            },
                            "id": 1703,
                            "name": "Identifier",
                            "src": "726:18:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes4",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes4)",
                                  "value": "bytes4"
                                },
                                "id": 1704,
                                "name": "ElementaryTypeNameExpression",
                                "src": "745:6:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_e37243f27916e395706434720b54132b80ef5cc8c56f39b0df6485e8dfb697cf",
                                          "typeString": "literal_string \"MINT_WITH_ADDRESS\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5292,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 1705,
                                    "name": "Identifier",
                                    "src": "752:9:8"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "4d494e545f574954485f41444452455353",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"MINT_WITH_ADDRESS\"",
                                      "value": "MINT_WITH_ADDRESS"
                                    },
                                    "id": 1706,
                                    "name": "Literal",
                                    "src": "762:19:8"
                                  }
                                ],
                                "id": 1707,
                                "name": "FunctionCall",
                                "src": "752:30:8"
                              }
                            ],
                            "id": 1708,
                            "name": "FunctionCall",
                            "src": "745:38:8"
                          }
                        ],
                        "id": 1709,
                        "name": "FunctionCall",
                        "src": "726:58:8"
                      }
                    ],
                    "id": 1710,
                    "name": "ExpressionStatement",
                    "src": "726:58:8"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3975,
                              "type": "function (address)",
                              "value": "transferOwnership"
                            },
                            "id": 1711,
                            "name": "Identifier",
                            "src": "794:17:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1690,
                              "type": "address",
                              "value": "newOwner"
                            },
                            "id": 1712,
                            "name": "Identifier",
                            "src": "812:8:8"
                          }
                        ],
                        "id": 1713,
                        "name": "FunctionCall",
                        "src": "794:27:8"
                      }
                    ],
                    "id": 1714,
                    "name": "ExpressionStatement",
                    "src": "794:27:8"
                  }
                ],
                "id": 1715,
                "name": "Block",
                "src": "716:112:8"
              }
            ],
            "id": 1716,
            "name": "FunctionDefinition",
            "src": "525:303:8"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1789,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 1764,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1717,
                        "name": "ElementaryTypeName",
                        "src": "848:7:8"
                      }
                    ],
                    "id": 1718,
                    "name": "VariableDeclaration",
                    "src": "848:15:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "v",
                      "scope": 1764,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 1719,
                        "name": "ElementaryTypeName",
                        "src": "865:5:8"
                      }
                    ],
                    "id": 1720,
                    "name": "VariableDeclaration",
                    "src": "865:7:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "r",
                      "scope": 1764,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 1721,
                        "name": "ElementaryTypeName",
                        "src": "874:7:8"
                      }
                    ],
                    "id": 1722,
                    "name": "VariableDeclaration",
                    "src": "874:9:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "s",
                      "scope": 1764,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 1723,
                        "name": "ElementaryTypeName",
                        "src": "885:7:8"
                      }
                    ],
                    "id": 1724,
                    "name": "VariableDeclaration",
                    "src": "885:9:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_fees",
                      "scope": 1764,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct ERC721Base.Fee[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct ERC721Base.Fee[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Fee",
                              "referencedDeclaration": 989,
                              "type": "struct ERC721Base.Fee"
                            },
                            "id": 1725,
                            "name": "UserDefinedTypeName",
                            "src": "896:3:8"
                          }
                        ],
                        "id": 1726,
                        "name": "ArrayTypeName",
                        "src": "896:5:8"
                      }
                    ],
                    "id": 1727,
                    "name": "VariableDeclaration",
                    "src": "896:18:8"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenURI",
                      "scope": 1764,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1728,
                        "name": "ElementaryTypeName",
                        "src": "916:6:8"
                      }
                    ],
                    "id": 1729,
                    "name": "VariableDeclaration",
                    "src": "916:22:8"
                  }
                ],
                "id": 1730,
                "name": "ParameterList",
                "src": "847:92:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1731,
                "name": "ParameterList",
                "src": "947:0:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6d18537e1ea0e06778bbeb75e3ff436a0ff7887d1472fe2fe1cc084dee8c7fe4",
                                  "typeString": "literal_string \"owner should sign tokenId\""
                                }
                              ],
                              "overloadedDeclarations": [
                                5301,
                                5302
                              ],
                              "referencedDeclaration": 5302,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1732,
                            "name": "Identifier",
                            "src": "957:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3923,
                                      "type": "function () view returns (address)",
                                      "value": "owner"
                                    },
                                    "id": 1733,
                                    "name": "Identifier",
                                    "src": "965:5:8"
                                  }
                                ],
                                "id": 1734,
                                "name": "FunctionCall",
                                "src": "965:7:8"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5290,
                                      "type": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)",
                                      "value": "ecrecover"
                                    },
                                    "id": 1735,
                                    "name": "Identifier",
                                    "src": "976:9:8"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 5292,
                                          "type": "function (bytes memory) pure returns (bytes32)",
                                          "value": "keccak256"
                                        },
                                        "id": 1736,
                                        "name": "Identifier",
                                        "src": "986:9:8"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes memory",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_MintableToken_$1789",
                                                  "typeString": "contract MintableToken"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "member_name": "encodePacked",
                                              "referencedDeclaration": null,
                                              "type": "function () pure returns (bytes memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 5285,
                                                  "type": "abi",
                                                  "value": "abi"
                                                },
                                                "id": 1737,
                                                "name": "Identifier",
                                                "src": "996:3:8"
                                              }
                                            ],
                                            "id": 1738,
                                            "name": "MemberAccess",
                                            "src": "996:16:8"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 5380,
                                              "type": "contract MintableToken",
                                              "value": "this"
                                            },
                                            "id": 1739,
                                            "name": "Identifier",
                                            "src": "1013:4:8"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1718,
                                              "type": "uint256",
                                              "value": "tokenId"
                                            },
                                            "id": 1740,
                                            "name": "Identifier",
                                            "src": "1019:7:8"
                                          }
                                        ],
                                        "id": 1741,
                                        "name": "FunctionCall",
                                        "src": "996:31:8"
                                      }
                                    ],
                                    "id": 1742,
                                    "name": "FunctionCall",
                                    "src": "986:42:8"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1720,
                                      "type": "uint8",
                                      "value": "v"
                                    },
                                    "id": 1743,
                                    "name": "Identifier",
                                    "src": "1030:1:8"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1722,
                                      "type": "bytes32",
                                      "value": "r"
                                    },
                                    "id": 1744,
                                    "name": "Identifier",
                                    "src": "1033:1:8"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1724,
                                      "type": "bytes32",
                                      "value": "s"
                                    },
                                    "id": 1745,
                                    "name": "Identifier",
                                    "src": "1036:1:8"
                                  }
                                ],
                                "id": 1746,
                                "name": "FunctionCall",
                                "src": "976:62:8"
                              }
                            ],
                            "id": 1747,
                            "name": "BinaryOperation",
                            "src": "965:73:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6f776e65722073686f756c64207369676e20746f6b656e4964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"owner should sign tokenId\"",
                              "value": "owner should sign tokenId"
                            },
                            "id": 1748,
                            "name": "Literal",
                            "src": "1040:27:8"
                          }
                        ],
                        "id": 1749,
                        "name": "FunctionCall",
                        "src": "957:111:8"
                      }
                    ],
                    "id": 1750,
                    "name": "ExpressionStatement",
                    "src": "957:111:8"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_struct$_Fee_$989_memory_$dyn_memory_ptr",
                                  "typeString": "struct ERC721Base.Fee memory[] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                1242,
                                4846
                              ],
                              "referencedDeclaration": 1242,
                              "type": "function (address,uint256,struct ERC721Base.Fee memory[] memory)",
                              "value": "_mint"
                            },
                            "id": 1751,
                            "name": "Identifier",
                            "src": "1078:5:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5298,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1752,
                                "name": "Identifier",
                                "src": "1084:3:8"
                              }
                            ],
                            "id": 1753,
                            "name": "MemberAccess",
                            "src": "1084:10:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1718,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 1754,
                            "name": "Identifier",
                            "src": "1096:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1727,
                              "type": "struct ERC721Base.Fee memory[] memory",
                              "value": "_fees"
                            },
                            "id": 1755,
                            "name": "Identifier",
                            "src": "1105:5:8"
                          }
                        ],
                        "id": 1756,
                        "name": "FunctionCall",
                        "src": "1078:33:8"
                      }
                    ],
                    "id": 1757,
                    "name": "ExpressionStatement",
                    "src": "1078:33:8"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                1284
                              ],
                              "referencedDeclaration": 1284,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 1758,
                            "name": "Identifier",
                            "src": "1121:12:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1718,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 1759,
                            "name": "Identifier",
                            "src": "1134:7:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1729,
                              "type": "string memory",
                              "value": "tokenURI"
                            },
                            "id": 1760,
                            "name": "Identifier",
                            "src": "1143:8:8"
                          }
                        ],
                        "id": 1761,
                        "name": "FunctionCall",
                        "src": "1121:31:8"
                      }
                    ],
                    "id": 1762,
                    "name": "ExpressionStatement",
                    "src": "1121:31:8"
                  }
                ],
                "id": 1763,
                "name": "Block",
                "src": "947:212:8"
              }
            ],
            "id": 1764,
            "name": "FunctionDefinition",
            "src": "834:325:8"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setTokenURIPrefix",
              "scope": 1789,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenURIPrefix",
                      "scope": 1776,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1765,
                        "name": "ElementaryTypeName",
                        "src": "1192:6:8"
                      }
                    ],
                    "id": 1766,
                    "name": "VariableDeclaration",
                    "src": "1192:28:8"
                  }
                ],
                "id": 1767,
                "name": "ParameterList",
                "src": "1191:30:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1770,
                "name": "ParameterList",
                "src": "1239:0:8"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3933,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1768,
                    "name": "Identifier",
                    "src": "1229:9:8"
                  }
                ],
                "id": 1769,
                "name": "ModifierInvocation",
                "src": "1229:9:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1445,
                              "type": "function (string memory)",
                              "value": "_setTokenURIPrefix"
                            },
                            "id": 1771,
                            "name": "Identifier",
                            "src": "1249:18:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1766,
                              "type": "string memory",
                              "value": "tokenURIPrefix"
                            },
                            "id": 1772,
                            "name": "Identifier",
                            "src": "1268:14:8"
                          }
                        ],
                        "id": 1773,
                        "name": "FunctionCall",
                        "src": "1249:34:8"
                      }
                    ],
                    "id": 1774,
                    "name": "ExpressionStatement",
                    "src": "1249:34:8"
                  }
                ],
                "id": 1775,
                "name": "Block",
                "src": "1239:51:8"
              }
            ],
            "id": 1776,
            "name": "FunctionDefinition",
            "src": "1165:125:8"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setContractURI",
              "scope": 1789,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "contractURI",
                      "scope": 1788,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1777,
                        "name": "ElementaryTypeName",
                        "src": "1320:6:8"
                      }
                    ],
                    "id": 1778,
                    "name": "VariableDeclaration",
                    "src": "1320:25:8"
                  }
                ],
                "id": 1779,
                "name": "ParameterList",
                "src": "1319:27:8"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1782,
                "name": "ParameterList",
                "src": "1364:0:8"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3933,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1780,
                    "name": "Identifier",
                    "src": "1354:9:8"
                  }
                ],
                "id": 1781,
                "name": "ModifierInvocation",
                "src": "1354:9:8"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1339,
                              "type": "function (string memory)",
                              "value": "_setContractURI"
                            },
                            "id": 1783,
                            "name": "Identifier",
                            "src": "1374:15:8"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1778,
                              "type": "string memory",
                              "value": "contractURI"
                            },
                            "id": 1784,
                            "name": "Identifier",
                            "src": "1390:11:8"
                          }
                        ],
                        "id": 1785,
                        "name": "FunctionCall",
                        "src": "1374:28:8"
                      }
                    ],
                    "id": 1786,
                    "name": "ExpressionStatement",
                    "src": "1374:28:8"
                  }
                ],
                "id": 1787,
                "name": "Block",
                "src": "1364:45:8"
              }
            ],
            "id": 1788,
            "name": "FunctionDefinition",
            "src": "1296:113:8"
          }
        ],
        "id": 1789,
        "name": "ContractDefinition",
        "src": "430:981:8"
      }
    ],
    "id": 1790,
    "name": "SourceUnit",
    "src": "0:1412:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "18": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x99aba1d63749cfd5ad1afda7c4663840924d54eb5f005bbbeadedc6ec13674b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "recipients",
              "type": "address[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "bps",
              "type": "uint256[]"
            }
          ],
          "name": "SecondarySaleFees",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6F696C64Ff7cDfD779099484C9DD555fBa3D10ab",
      "transactionHash": "0xa70f1f02a7db9ed146ea0f528e9e8f2281199b05ac42f81d47d24d594aa674de"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-08T15:40:05.182Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "anyone can mint token.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "MintableToken"
  },
  "userdoc": {
    "methods": {}
  }
}