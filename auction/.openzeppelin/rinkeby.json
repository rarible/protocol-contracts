{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0b38426f46797432EB207774966A86c6C2ac8Bc1",
    "txHash": "0xa8e6df0096ff9d9e362b73cb94fc834acfe0961e10c7ce29e7be658bb8d43e39"
  },
  "proxies": [
    {
      "address": "0x8458d047e66805625e081A8B4466d3d349d9e33a",
      "txHash": "0xe3e61db4c2599d47bdd63042da3cfe0d6ee74a60089d2e4f975838e46238ad29",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d3db6a39b502c85c982d5f46f607853c2c7c5455dd9c6f145cc0032b101e35ea": {
      "address": "0x3362FF9b8E05C4015eA174FBcd156aE50A1cF4B0",
      "txHash": "0xbeffc1c615c18a6242a92a51b68719a461ff064efa5960dafff01c52cf30e5e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721HolderUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "TokenToAuction",
            "label": "tokenToAuctionId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../project:/contracts/TokenToAuction.sol:9"
          },
          {
            "contract": "TokenToAuction",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/TokenToAuction.sol:27"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "AuctionHouseBase",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../project:/contracts/AuctionHouseBase.sol:78"
          },
          {
            "contract": "AuctionHouseBase",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/AuctionHouseBase.sol:98"
          },
          {
            "contract": "AuctionHouse",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(Auction)6355_storage)",
            "src": "../project:/contracts/AuctionHouse.sol:26"
          },
          {
            "contract": "AuctionHouse",
            "label": "readyToWithdraw",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/AuctionHouse.sol:29"
          },
          {
            "contract": "AuctionHouse",
            "label": "auctionId",
            "type": "t_uint256",
            "src": "../project:/contracts/AuctionHouse.sol:32"
          },
          {
            "contract": "AuctionHouse",
            "label": "minimalDuration",
            "type": "t_uint256",
            "src": "../project:/contracts/AuctionHouse.sol:35"
          },
          {
            "contract": "AuctionHouse",
            "label": "transferManager",
            "type": "t_contract(ITransferManager)1720",
            "src": "../project:/contracts/AuctionHouse.sol:38"
          },
          {
            "contract": "AuctionHouse",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "../project:/contracts/AuctionHouse.sol:41"
          },
          {
            "contract": "AuctionHouse",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/AuctionHouse.sol:447"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Auction)6355_storage)": {
            "label": "mapping(uint256 => struct AuctionHouseBase.Auction)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Auction)6355_storage": {
            "label": "struct AuctionHouseBase.Auction",
            "members": [
              {
                "label": "sellAsset",
                "type": "t_struct(Asset)2104_storage"
              },
              {
                "label": "buyAsset",
                "type": "t_struct(AssetType)2099_storage"
              },
              {
                "label": "lastBid",
                "type": "t_struct(Bid)6362_storage"
              },
              {
                "label": "seller",
                "type": "t_address_payable"
              },
              {
                "label": "buyer",
                "type": "t_address_payable"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "minimalStep",
                "type": "t_uint256"
              },
              {
                "label": "minimalPrice",
                "type": "t_uint256"
              },
              {
                "label": "protocolFee",
                "type": "t_uint256"
              },
              {
                "label": "dataType",
                "type": "t_bytes4"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(Asset)2104_storage": {
            "label": "struct LibAsset.Asset",
            "members": [
              {
                "label": "assetType",
                "type": "t_struct(AssetType)2099_storage"
              },
              {
                "label": "value",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(AssetType)2099_storage": {
            "label": "struct LibAsset.AssetType",
            "members": [
              {
                "label": "assetClass",
                "type": "t_bytes4"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(Bid)6362_storage": {
            "label": "struct AuctionHouseBase.Bid",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "dataType",
                "type": "t_bytes4"
              },
              {
                "label": "data",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ITransferManager)1720": {
            "label": "contract ITransferManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
