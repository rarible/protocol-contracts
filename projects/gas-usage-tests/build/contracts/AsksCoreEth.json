{
  "contractName": "AsksCoreEth",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc721TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeSettings",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AskCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AskFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AskPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyPayout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payoutCurrency",
          "type": "address"
        }
      ],
      "name": "_handleRoyaltyEnginePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "askForNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "price",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC721TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        }
      ],
      "name": "setRoyaltyEngineAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "createAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setAskPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "fillAsk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc721TransferHelper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeSettings\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AskCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AskFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AskPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyPayout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payoutCurrency\",\"type\":\"address\"}],\"name\":\"_handleRoyaltyEnginePayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"askForNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"price\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"createAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721TransferHelper\",\"outputs\":[{\"internalType\":\"contract ERC721TransferHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"fillAsk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setAskPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"}],\"name\":\"setRoyaltyEngineAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"kulkarohan\",\"events\":{\"AskCanceled(address,uint256,address,uint256)\":{\"params\":{\"price\":\"The price of the canceled ask\",\"seller\":\"The user that canceled the ask\",\"tokenContract\":\"The ERC-721 token address of the canceled ask\",\"tokenId\":\"The ERC-721 token id of the canceled ask\"}},\"AskCreated(address,uint256,address,uint256)\":{\"params\":{\"price\":\"The price of the created ask\",\"seller\":\"The seller address of the created ask\",\"tokenContract\":\"The ERC-721 token address of the created ask\",\"tokenId\":\"The ERC-721 token id of the created ask\"}},\"AskFilled(address,uint256,address,address,uint256)\":{\"params\":{\"buyer\":\"The buyer address of the filled ask\",\"price\":\"The price of the filled ask\",\"seller\":\"The seller address of the filled ask\",\"tokenContract\":\"The ERC-721 token address of the filled ask\",\"tokenId\":\"The ERC-721 token id of the filled ask\"}},\"AskPriceUpdated(address,uint256,address,uint256)\":{\"params\":{\"price\":\"The updated price of the ask\",\"seller\":\"The user that updated the ask\",\"tokenContract\":\"The ERC-721 token address of the updated ask\",\"tokenId\":\"The ERC-721 token id of the updated ask\"}}},\"kind\":\"dev\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"details\":\"This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.\",\"params\":{\"_amount\":\"The total sale amount\",\"_payoutCurrency\":\"The ERC-20 token address to payout royalties in, or address(0) for ETH\",\"_tokenContract\":\"The NFT Contract to get royalty information from\",\"_tokenId\":\", The Token ID to get royalty information from\"},\"returns\":{\"_0\":\"The remaining funds after paying out royalties\"}},\"cancelAsk(address,uint256)\":{\"params\":{\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"constructor\":{\"params\":{\"_erc721TransferHelper\":\"The ZORA ERC-721 Transfer Helper address\",\"_protocolFeeSettings\":\"The ZORA Protocol Fee Settings address\",\"_royaltyEngine\":\"The Manifold Royalty Engine address\",\"_weth\":\"The WETH token address\"}},\"createAsk(address,uint256,uint256)\":{\"params\":{\"_price\":\"The price to fill the ask\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"fillAsk(address,uint256)\":{\"params\":{\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"setAskPrice(address,uint256,uint256)\":{\"params\":{\"_price\":\"The ask price to set\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"setRoyaltyEngineAddress(address)\":{\"details\":\"emergency use only \\u2013 requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI\",\"params\":{\"_royaltyEngine\":\"The address for the new royalty engine\"}},\"supportsInterface(bytes4)\":{\"details\":\"`0x01ffc9a7` is the IERC165 interface id\",\"params\":{\"_interfaceId\":\"The identifier of a given interface\"},\"returns\":{\"_0\":\"If the given interface is supported\"}}},\"stateVariables\":{\"askForNFT\":{\"details\":\"ERC-721 token contract => ERC-721 token id => Ask\"}},\"title\":\"Asks Core ETH\",\"version\":1},\"userdoc\":{\"events\":{\"AskCanceled(address,uint256,address,uint256)\":{\"notice\":\"Emitted when an ask is canceled\"},\"AskCreated(address,uint256,address,uint256)\":{\"notice\":\"Emitted when an ask is created\"},\"AskFilled(address,uint256,address,address,uint256)\":{\"notice\":\"Emitted when an ask is filled\"},\"AskPriceUpdated(address,uint256,address,uint256)\":{\"notice\":\"Emitted when an ask is updated\"},\"RoyaltyPayout(address,uint256,address,uint256)\":{\"notice\":\"Emitted when royalties are paid\"}},\"kind\":\"user\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"notice\":\"Pays out royalties for NFTs based on the information returned by the royalty engine\"},\"askForNFT(address,uint256)\":{\"notice\":\"The ask for a given NFT\"},\"cancelAsk(address,uint256)\":{\"notice\":\"Cancels the ask for a given NFT\"},\"createAsk(address,uint256,uint256)\":{\"notice\":\"Creates an ask for a given NFT\"},\"erc721TransferHelper()\":{\"notice\":\"The ZORA ERC-721 Transfer Helper\"},\"fillAsk(address,uint256)\":{\"notice\":\"Fills the ask for a given NFT\"},\"name()\":{\"notice\":\"The module name\"},\"registrar()\":{\"notice\":\"The ZORA Module Registrar\"},\"setAskPrice(address,uint256,uint256)\":{\"notice\":\"Updates the ask price for a given NFT\"},\"setRoyaltyEngineAddress(address)\":{\"notice\":\"Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy\"},\"supportsInterface(bytes4)\":{\"notice\":\"Implements EIP-165 for standard interface detection\"}},\"notice\":\"Module for minimal ETH asks for ERC-721 tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/modules/Asks/Core/ETH/AsksCoreEth.sol\":\"AsksCoreEth\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@manifoldxyz/royalty-registry-solidity/contracts/IRoyaltyEngineV1.sol\":{\"keccak256\":\"0x088b901b9fe87d03d237b5a0a84ba35c18933dafb9fc344bd4d17a8085ea0387\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa396e7cb04483aaffc2d50038d01a71816e5a3bc72021c5780e56a6437a1bcf\",\"dweb:/ipfs/QmUEawXCXimTSihzT2UBVvwVjmCa1ykFuwwQg9p6CapDzM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbc4803332d45dff58f865ed21c942fe4668e47cc7196c8dfe84102040b1d70f\",\"dweb:/ipfs/QmXhZLsocznRWCSyhjo3vo66Z1VsuuNptAVb6ASPYsWtGx\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826\",\"dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@rari-capital/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x37da48458a348878d8db5b58367d734e340b9172ef947df430027638fc45a015\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://665cc22c86db049785843b49741e6c8f3356ec4c00c5e8a77a65f24238e1cfed\",\"dweb:/ipfs/QmVtU93ya9nFc23w5m2ADGo5np6zB3JCofT6GeV8r82Kw2\"]},\"project:/contracts/ZoraModuleManager.sol\":{\"keccak256\":\"0x516cbb1377511ada04fdd9bb12ef5ab7ec8694c7722f9252e7f7664dc274b435\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://888a20823cafe1044f8d902c340295ad1d0b4496f9115f1cce7d5a445eeac56f\",\"dweb:/ipfs/Qmcss7A3T7eDqtwvFS9azwXNeRbTGAHbwdcE1X4JivNZf6\"]},\"project:/contracts/auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol\":{\"keccak256\":\"0xff7d072720136e7be2ee226a2dfc22a9cf60c2b4d9ecd96a732d89680cb7416d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://75331ba64befdf18ddae428cfbe4c211e0aaea97cc0427f43854561ab8761805\",\"dweb:/ipfs/QmWRbJd61RpfRNKmiyrEzJ4Z6KoJq4mUXNmBeUPKM8MC8t\"]},\"project:/contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol\":{\"keccak256\":\"0xa29ac2f5104fe554ccab7c1c1eac1a91c043064a8c571253177e8c707d3df8d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7335dcf58a8134289861c5dbe20e79bb7db28d131d065bc1e4c0dc0f79a99f27\",\"dweb:/ipfs/Qmdabk1co2w1LQzh4bmaniFXPogmVaPMDHP2WPcrRkmBFc\"]},\"project:/contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol\":{\"keccak256\":\"0xe4496549a785f714d8b8edea0716aa0f9ac53152fc171d286b24ed35d6046481\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://86bf38b07ac5b62dac1889c23d6ffa72c41413c5b3e2c37518e3ef16724170d2\",\"dweb:/ipfs/QmdmpFLMTReVM6j49CPXkzgyS4qjGsAkM7LtFzszqTy3EL\"]},\"project:/contracts/common/OutgoingTransferSupport/V1/IWETH.sol\":{\"keccak256\":\"0xc95333328cada092ac242d36c205f984a69a22925f1d6ec4f3d26032006cd70a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ef55582164f1ad9ce2ba8ac25e49cd3e01a0e8383bdfbf9bac97c768b1e91f84\",\"dweb:/ipfs/QmXupdT8p88m5dNJuCGpQABoMLFs98AvRS4E1CDRkt7isM\"]},\"project:/contracts/common/OutgoingTransferSupport/V1/OutgoingTransferSupportV1.sol\":{\"keccak256\":\"0xe13614f0a2f5547fa1c97564ed26d843678aaaf245d7406d051ab8ad91115efe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://815cc7f0070d60dedfe610a7189aae87594383b8010d1df65342fd6fb67e1a21\",\"dweb:/ipfs/QmbU8yxSwYgV9A7L2FCnfHCHHyDntUaHKg5sCxfNwbBrDQ\"]},\"project:/contracts/modules/Asks/Core/ETH/AsksCoreEth.sol\":{\"keccak256\":\"0x7e57c64f5b490898fb70119bf971ee02fb86f710083ac29c510fc75083ccf34c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce00d48bb2b629de919193b04b99aefd92f3d003927bdbeef490c93ee9d07667\",\"dweb:/ipfs/QmQJJs6ZLUfNv7ocFeneFgimGFegvx15zso14o9J5H2imt\"]},\"project:/contracts/modules/Asks/Core/ETH/IAsksCoreEth.sol\":{\"keccak256\":\"0xf52bc708209663113c52dcbf884efe74da039e6e33e00fcf246272b66c13f5eb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://799e4f69d8409b3e21fe7d20cbd7b7f6923fb292667a78dc500b5d9a345bbef6\",\"dweb:/ipfs/QmejbLyDmeUYXwm1rvnAKCjKBSonaCkdSUD82zj3CRxHat\"]},\"project:/contracts/transferHelpers/BaseTransferHelper.sol\":{\"keccak256\":\"0xb06a76885ef1a8f1fbdd6c4472a846cdff7ebf7c92b03f5786a0f261798e3f46\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://62deee4eeb9f070b17ce7bf2ef7b0bb0c163f500a8c70f13eba35b010d640575\",\"dweb:/ipfs/QmRnQaTqJBMXW4Vgjz62N2YDAYKtj8xVwQ1WhiCyXwLpKp\"]},\"project:/contracts/transferHelpers/ERC721TransferHelper.sol\":{\"keccak256\":\"0x23fa0ddaac378c885fabf22e8d458e61f3ab8608b9937dfbf49ac82e25153761\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a5d75279b5ca309e35b184db7fefa69053dc58402be86aea1fc141bf55cf95d3\",\"dweb:/ipfs/QmXfoyWWAekkinQrzcSgkJJoKCRVg2dWqBtdLe6m2drDqW\"]}},\"version\":1}",
  "bytecode": "0x61010060405260016000553480156200001757600080fd5b5060405162001cce38038062001cce8339810160408190526200003a916200024a565b6040518060400160405280600d81526020016c082e6d6e64086dee4ca408aa89609b1b815250838383876001600160a01b031663e3e606f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c89190620002b2565b6001600160a01b0316632b20e3976040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000106573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012c9190620002b2565b6001600160a01b03918216608052600180546001600160a01b0319169483169490941790935590811660c0521660a0528051620001719060029060208401906200018b565b5050506001600160a01b0390921660e05250620003169050565b8280546200019990620002d9565b90600052602060002090601f016020900481019282620001bd576000855562000208565b82601f10620001d857805160ff191683800117855562000208565b8280016001018555821562000208579182015b8281111562000208578251825591602001919060010190620001eb565b50620002169291506200021a565b5090565b5b808211156200021657600081556001016200021b565b6001600160a01b03811681146200024757600080fd5b50565b600080600080608085870312156200026157600080fd5b84516200026e8162000231565b6020860151909450620002818162000231565b6040860151909350620002948162000231565b6060860151909250620002a78162000231565b939692955090935050565b600060208284031215620002c557600080fd5b8151620002d28162000231565b9392505050565b600181811c90821680620002ee57607f821691505b602082108114156200031057634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516119626200036c6000396000818161028601526107a4015260008181610e680152610efb01526000818161012c0152610a89015260008181611093015261111101526119626000f3fe60806040526004361061009c5760003560e01c8063418f065611610064578063418f06561461018657806368b5a9a8146102005780639128c22c14610213578063b249bb3014610234578063c4f0ee3614610254578063f7cd1d9b1461027457600080fd5b806301ffc9a7146100a157806306fdde03146100d65780630be48095146100f85780632b20e3971461011a57806340b8074614610166575b600080fd5b3480156100ad57600080fd5b506100c16100bc3660046114d9565b6102a8565b60405190151581526020015b60405180910390f35b3480156100e257600080fd5b506100eb6102df565b6040516100cd919061152f565b34801561010457600080fd5b5061011861011336600461157a565b61036d565b005b34801561012657600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100cd565b34801561017257600080fd5b506101186101813660046115af565b61046c565b34801561019257600080fd5b506101d96101a13660046115af565b60036020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b90046001600160601b031682565b604080516001600160a01b0390931683526001600160601b039091166020830152016100cd565b61011861020e3660046115af565b610643565b6102266102213660046115db565b610882565b6040519081526020016100cd565b34801561024057600080fd5b5061011861024f366004611625565b610a7e565b34801561026057600080fd5b5061011861026f36600461157a565b610baa565b34801561028057600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b0319821663e719c04d60e01b14806102d957506301ffc9a760e01b6001600160e01b03198316145b92915050565b600280546102ec90611642565b80601f016020809104026020016040519081016040528092919081815260200182805461031890611642565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081565b6000546001146103985760405162461bcd60e51b815260040161038f9061167d565b60405180910390fd5b600260009081556001600160a01b038481168252600360209081526040808420868552909152909120805490911633146104025760405162461bcd60e51b815260206004820152600b60248201526a27a7262cafa9a2a62622a960a91b604482015260640161038f565b80546001600160a01b03908116600160a01b6001600160601b03851602178255604080513381526020810185905285928716917f18c0eece1e729d9b8010f8a94ed680280eb3ccfedaedef0218b6c6a64a2d314391015b60405180910390a3505060016000555050565b60005460011461048e5760405162461bcd60e51b815260040161038f9061167d565b600260009081556001600160a01b038381168252600360209081526040808420858552825292839020835180850190945254918216808452600160a01b9092046001600160601b0316908301523381148061056257506040516331a9108f60e11b8152600481018490526001600160a01b03851690636352211e90602401602060405180830381865afa158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d91906116a1565b6001600160a01b0316336001600160a01b0316145b6105ae5760405162461bcd60e51b815260206004820152601a60248201527f4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552000000000000604482015260640161038f565b82846001600160a01b03167fbe338a95c86a3b9c15c04bcc9498991ef98dc6013ff35a86006784873bf0f9b483856020015160405161060b9291906001600160a01b039290921682526001600160601b0316602082015260400190565b60405180910390a350506001600160a01b03909116600090815260036020908152604080832093835292905290812081905560019055565b6000546001146106655760405162461bcd60e51b815260040161038f9061167d565b600260009081556001600160a01b038381168252600360209081526040808420858552825292839020835180850190945254918216808452600160a01b9092046001600160601b031690830152806106ee5760405162461bcd60e51b815260206004820152600c60248201526b494e4143544956455f41534b60a01b604482015260640161038f565b60208201516001600160601b031634811461073e5760405162461bcd60e51b815260206004820152601060248201526f4d5553545f4d415443485f505249434560801b604482015260640161038f565b60006107518686846000620493e0610d7d565b50905061075f816000610e3f565b90506107708382600061c350610f91565b604051630aed65f560e11b81526001600160a01b0387811660048301528481166024830152336044830152606482018790527f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90608401600060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b5050604080513381526001600160a01b03878116602083015291810186905288935090891691507fed509339c949cdfdb11c117315bb3f74aa98886204732c065edd38979d7ccf539060600160405180910390a35050506001600160a01b0390921660009081526003602090815260408083209383529290529081208190556001905550565b60003330146108e95760405162461bcd60e51b815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201526c73656c662063616c6c61626c6560981b606482015260840161038f565b600154604051637a99dc0160e11b81526001600160a01b0387811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610947573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261096f9190810190611794565b815191935091508061098657859350505050610a76565b85600080805b84811015610a6c578681815181106109a6576109a6611859565b602002602001015192508581815181106109c2576109c2611859565b6020026020010151915081841015610a085760405162461bcd60e51b81526020600482015260096024820152681a5b9cdbdb1d995b9d60ba1b604482015260640161038f565b610a1683838b61c350610f91565b604080516001600160a01b038581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a3928190039260010161098c565b5091955050505050505b949350505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b055760405162461bcd60e51b815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201526534b9ba3930b960d11b606482015260840161038f565b610b1681636591fc0b60e11b61115d565b610b885760405162461bcd60e51b815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e74657266616365000000606482015260840161038f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600054600114610bcc5760405162461bcd60e51b815260040161038f9061167d565b600260009081556040516331a9108f60e11b8152600481018490526001600160a01b03851690636352211e90602401602060405180830381865afa158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c91906116a1565b9050336001600160a01b0382161480610cc0575060405163e985e9c560e01b81526001600160a01b03828116600483015233602483015285169063e985e9c590604401602060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc0919061186f565b610d0c5760405162461bcd60e51b815260206004820152601c60248201527f4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f5200000000604482015260640161038f565b6001600160a01b038481166000818152600360209081526040808320888452825291829020938516600160a01b6001600160601b0388160281179094558151938452830185905285927fb427f2572be967193f84fe4fa05aa3137657735475127a9dffaf978c15f682be9101610459565b60008080831580610d8d57505a84115b610d975783610d99565b5a5b60405163244a308b60e21b81526001600160a01b03808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f193505050508015610e17575060408051601f3d908101601f19168201909252610e1491810190611891565b60015b610e28578560009250925050610e35565b925060019150610e359050565b9550959350505050565b6040516330da42fb60e11b81523060048201526024810183905260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015610eaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed39190611891565b905080610ee357839150506102d9565b6040516386ab6fb960e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906386ab6fb9906024016040805180830381865afa158015610f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6d91906118aa565b915050610f7e81838661c350610f91565b610f8882866118eb565b95945050505050565b821580610fa557506001600160a01b038416155b15610faf57611157565b6001600160a01b03821661114357824710156110175760405162461bcd60e51b815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e6044820152601d60fa1b606482015260840161038f565b600081158061102557505a82115b61102f5781611031565b5a5b90506000856001600160a01b0316858390604051600060405180830381858888f193505050503d8060008114611083576040519150601f19603f3d011682016040523d82523d6000602084013e611088565b606091505b505090508061113c577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b1580156110ec57600080fd5b505af1158015611100573d6000803e3d6000fd5b5061113c9350506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915088905087611180565b5050611157565b6111576001600160a01b0383168585611180565b50505050565b6000611168836111d7565b80156111795750611179838361120a565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526111d29084906112f3565b505050565b60006111ea826301ffc9a760e01b61120a565b80156102d95750611203826001600160e01b031961120a565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b0387169061753090611271908690611910565b6000604051808303818686fa925050503d80600081146112ad576040519150601f19603f3d011682016040523d82523d6000602084013e6112b2565b606091505b50915091506020815110156112cd57600093505050506102d9565b8180156112e95750808060200190518101906112e9919061186f565b9695505050505050565b6000611348826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113c59092919063ffffffff16565b8051909150156111d25780806020019051810190611366919061186f565b6111d25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161038f565b6060610a768484600085856001600160a01b0385163b6114275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038f565b600080866001600160a01b031685876040516114439190611910565b60006040518083038185875af1925050503d8060008114611480576040519150601f19603f3d011682016040523d82523d6000602084013e611485565b606091505b50915091506114958282866114a0565b979650505050505050565b606083156114af575081611179565b8251156114bf5782518084602001fd5b8160405162461bcd60e51b815260040161038f919061152f565b6000602082840312156114eb57600080fd5b81356001600160e01b03198116811461117957600080fd5b60005b8381101561151e578181015183820152602001611506565b838111156111575750506000910152565b602081526000825180602084015261154e816040850160208701611503565b601f01601f19169190910160400192915050565b6001600160a01b038116811461157757600080fd5b50565b60008060006060848603121561158f57600080fd5b833561159a81611562565b95602085013595506040909401359392505050565b600080604083850312156115c257600080fd5b82356115cd81611562565b946020939093013593505050565b600080600080608085870312156115f157600080fd5b84356115fc81611562565b93506020850135925060408501359150606085013561161a81611562565b939692955090935050565b60006020828403121561163757600080fd5b813561117981611562565b600181811c9082168061165657607f821691505b6020821081141561167757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b6000602082840312156116b357600080fd5b815161117981611562565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156116fd576116fd6116be565b604052919050565b600067ffffffffffffffff82111561171f5761171f6116be565b5060051b60200190565b600082601f83011261173a57600080fd5b8151602061174f61174a83611705565b6116d4565b82815260059290921b8401810191818101908684111561176e57600080fd5b8286015b848110156117895780518352918301918301611772565b509695505050505050565b600080604083850312156117a757600080fd5b825167ffffffffffffffff808211156117bf57600080fd5b818501915085601f8301126117d357600080fd5b815160206117e361174a83611705565b82815260059290921b8401810191818101908984111561180257600080fd5b948201945b8386101561182957855161181a81611562565b82529482019490820190611807565b9188015191965090935050508082111561184257600080fd5b5061184f85828601611729565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561188157600080fd5b8151801515811461117957600080fd5b6000602082840312156118a357600080fd5b5051919050565b600080604083850312156118bd57600080fd5b825161ffff811681146118cf57600080fd5b60208401519092506118e081611562565b809150509250929050565b60008282101561190b57634e487b7160e01b600052601160045260246000fd5b500390565b60008251611922818460208701611503565b919091019291505056fea2646970667358221220dc3a125a82d5d8f8cd346c6b19413c1da20cb6121ac6a0973bc498ff4e36d57f64736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c8063418f065611610064578063418f06561461018657806368b5a9a8146102005780639128c22c14610213578063b249bb3014610234578063c4f0ee3614610254578063f7cd1d9b1461027457600080fd5b806301ffc9a7146100a157806306fdde03146100d65780630be48095146100f85780632b20e3971461011a57806340b8074614610166575b600080fd5b3480156100ad57600080fd5b506100c16100bc3660046114d9565b6102a8565b60405190151581526020015b60405180910390f35b3480156100e257600080fd5b506100eb6102df565b6040516100cd919061152f565b34801561010457600080fd5b5061011861011336600461157a565b61036d565b005b34801561012657600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100cd565b34801561017257600080fd5b506101186101813660046115af565b61046c565b34801561019257600080fd5b506101d96101a13660046115af565b60036020908152600092835260408084209091529082529020546001600160a01b03811690600160a01b90046001600160601b031682565b604080516001600160a01b0390931683526001600160601b039091166020830152016100cd565b61011861020e3660046115af565b610643565b6102266102213660046115db565b610882565b6040519081526020016100cd565b34801561024057600080fd5b5061011861024f366004611625565b610a7e565b34801561026057600080fd5b5061011861026f36600461157a565b610baa565b34801561028057600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b0319821663e719c04d60e01b14806102d957506301ffc9a760e01b6001600160e01b03198316145b92915050565b600280546102ec90611642565b80601f016020809104026020016040519081016040528092919081815260200182805461031890611642565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081565b6000546001146103985760405162461bcd60e51b815260040161038f9061167d565b60405180910390fd5b600260009081556001600160a01b038481168252600360209081526040808420868552909152909120805490911633146104025760405162461bcd60e51b815260206004820152600b60248201526a27a7262cafa9a2a62622a960a91b604482015260640161038f565b80546001600160a01b03908116600160a01b6001600160601b03851602178255604080513381526020810185905285928716917f18c0eece1e729d9b8010f8a94ed680280eb3ccfedaedef0218b6c6a64a2d314391015b60405180910390a3505060016000555050565b60005460011461048e5760405162461bcd60e51b815260040161038f9061167d565b600260009081556001600160a01b038381168252600360209081526040808420858552825292839020835180850190945254918216808452600160a01b9092046001600160601b0316908301523381148061056257506040516331a9108f60e11b8152600481018490526001600160a01b03851690636352211e90602401602060405180830381865afa158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d91906116a1565b6001600160a01b0316336001600160a01b0316145b6105ae5760405162461bcd60e51b815260206004820152601a60248201527f4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552000000000000604482015260640161038f565b82846001600160a01b03167fbe338a95c86a3b9c15c04bcc9498991ef98dc6013ff35a86006784873bf0f9b483856020015160405161060b9291906001600160a01b039290921682526001600160601b0316602082015260400190565b60405180910390a350506001600160a01b03909116600090815260036020908152604080832093835292905290812081905560019055565b6000546001146106655760405162461bcd60e51b815260040161038f9061167d565b600260009081556001600160a01b038381168252600360209081526040808420858552825292839020835180850190945254918216808452600160a01b9092046001600160601b031690830152806106ee5760405162461bcd60e51b815260206004820152600c60248201526b494e4143544956455f41534b60a01b604482015260640161038f565b60208201516001600160601b031634811461073e5760405162461bcd60e51b815260206004820152601060248201526f4d5553545f4d415443485f505249434560801b604482015260640161038f565b60006107518686846000620493e0610d7d565b50905061075f816000610e3f565b90506107708382600061c350610f91565b604051630aed65f560e11b81526001600160a01b0387811660048301528481166024830152336044830152606482018790527f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90608401600060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b5050604080513381526001600160a01b03878116602083015291810186905288935090891691507fed509339c949cdfdb11c117315bb3f74aa98886204732c065edd38979d7ccf539060600160405180910390a35050506001600160a01b0390921660009081526003602090815260408083209383529290529081208190556001905550565b60003330146108e95760405162461bcd60e51b815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201526c73656c662063616c6c61626c6560981b606482015260840161038f565b600154604051637a99dc0160e11b81526001600160a01b0387811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610947573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261096f9190810190611794565b815191935091508061098657859350505050610a76565b85600080805b84811015610a6c578681815181106109a6576109a6611859565b602002602001015192508581815181106109c2576109c2611859565b6020026020010151915081841015610a085760405162461bcd60e51b81526020600482015260096024820152681a5b9cdbdb1d995b9d60ba1b604482015260640161038f565b610a1683838b61c350610f91565b604080516001600160a01b038581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a3928190039260010161098c565b5091955050505050505b949350505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b055760405162461bcd60e51b815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201526534b9ba3930b960d11b606482015260840161038f565b610b1681636591fc0b60e11b61115d565b610b885760405162461bcd60e51b815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e74657266616365000000606482015260840161038f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600054600114610bcc5760405162461bcd60e51b815260040161038f9061167d565b600260009081556040516331a9108f60e11b8152600481018490526001600160a01b03851690636352211e90602401602060405180830381865afa158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c91906116a1565b9050336001600160a01b0382161480610cc0575060405163e985e9c560e01b81526001600160a01b03828116600483015233602483015285169063e985e9c590604401602060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc0919061186f565b610d0c5760405162461bcd60e51b815260206004820152601c60248201527f4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f5200000000604482015260640161038f565b6001600160a01b038481166000818152600360209081526040808320888452825291829020938516600160a01b6001600160601b0388160281179094558151938452830185905285927fb427f2572be967193f84fe4fa05aa3137657735475127a9dffaf978c15f682be9101610459565b60008080831580610d8d57505a84115b610d975783610d99565b5a5b60405163244a308b60e21b81526001600160a01b03808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f193505050508015610e17575060408051601f3d908101601f19168201909252610e1491810190611891565b60015b610e28578560009250925050610e35565b925060019150610e359050565b9550959350505050565b6040516330da42fb60e11b81523060048201526024810183905260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015610eaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed39190611891565b905080610ee357839150506102d9565b6040516386ab6fb960e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906386ab6fb9906024016040805180830381865afa158015610f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6d91906118aa565b915050610f7e81838661c350610f91565b610f8882866118eb565b95945050505050565b821580610fa557506001600160a01b038416155b15610faf57611157565b6001600160a01b03821661114357824710156110175760405162461bcd60e51b815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e6044820152601d60fa1b606482015260840161038f565b600081158061102557505a82115b61102f5781611031565b5a5b90506000856001600160a01b0316858390604051600060405180830381858888f193505050503d8060008114611083576040519150601f19603f3d011682016040523d82523d6000602084013e611088565b606091505b505090508061113c577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b1580156110ec57600080fd5b505af1158015611100573d6000803e3d6000fd5b5061113c9350506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915088905087611180565b5050611157565b6111576001600160a01b0383168585611180565b50505050565b6000611168836111d7565b80156111795750611179838361120a565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526111d29084906112f3565b505050565b60006111ea826301ffc9a760e01b61120a565b80156102d95750611203826001600160e01b031961120a565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b0387169061753090611271908690611910565b6000604051808303818686fa925050503d80600081146112ad576040519150601f19603f3d011682016040523d82523d6000602084013e6112b2565b606091505b50915091506020815110156112cd57600093505050506102d9565b8180156112e95750808060200190518101906112e9919061186f565b9695505050505050565b6000611348826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113c59092919063ffffffff16565b8051909150156111d25780806020019051810190611366919061186f565b6111d25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161038f565b6060610a768484600085856001600160a01b0385163b6114275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038f565b600080866001600160a01b031685876040516114439190611910565b60006040518083038185875af1925050503d8060008114611480576040519150601f19603f3d011682016040523d82523d6000602084013e611485565b606091505b50915091506114958282866114a0565b979650505050505050565b606083156114af575081611179565b8251156114bf5782518084602001fd5b8160405162461bcd60e51b815260040161038f919061152f565b6000602082840312156114eb57600080fd5b81356001600160e01b03198116811461117957600080fd5b60005b8381101561151e578181015183820152602001611506565b838111156111575750506000910152565b602081526000825180602084015261154e816040850160208701611503565b601f01601f19169190910160400192915050565b6001600160a01b038116811461157757600080fd5b50565b60008060006060848603121561158f57600080fd5b833561159a81611562565b95602085013595506040909401359392505050565b600080604083850312156115c257600080fd5b82356115cd81611562565b946020939093013593505050565b600080600080608085870312156115f157600080fd5b84356115fc81611562565b93506020850135925060408501359150606085013561161a81611562565b939692955090935050565b60006020828403121561163757600080fd5b813561117981611562565b600181811c9082168061165657607f821691505b6020821081141561167757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b6000602082840312156116b357600080fd5b815161117981611562565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156116fd576116fd6116be565b604052919050565b600067ffffffffffffffff82111561171f5761171f6116be565b5060051b60200190565b600082601f83011261173a57600080fd5b8151602061174f61174a83611705565b6116d4565b82815260059290921b8401810191818101908684111561176e57600080fd5b8286015b848110156117895780518352918301918301611772565b509695505050505050565b600080604083850312156117a757600080fd5b825167ffffffffffffffff808211156117bf57600080fd5b818501915085601f8301126117d357600080fd5b815160206117e361174a83611705565b82815260059290921b8401810191818101908984111561180257600080fd5b948201945b8386101561182957855161181a81611562565b82529482019490820190611807565b9188015191965090935050508082111561184257600080fd5b5061184f85828601611729565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561188157600080fd5b8151801515811461117957600080fd5b6000602082840312156118a357600080fd5b5051919050565b600080604083850312156118bd57600080fd5b825161ffff811681146118cf57600080fd5b60208401519092506118e081611562565b809150509250929050565b60008282101561190b57634e487b7160e01b600052601160045260246000fd5b500390565b60008251611922818460208701611503565b919091019291505056fea2646970667358221220dc3a125a82d5d8f8cd346c6b19413c1da20cb6121ac6a0973bc498ff4e36d57f64736f6c634300080a0033",
  "immutableReferences": {
    "8147": [
      {
        "length": 32,
        "start": 300
      },
      {
        "length": 32,
        "start": 2697
      }
    ],
    "8151": [
      {
        "length": 32,
        "start": 3688
      },
      {
        "length": 32,
        "start": 3835
      }
    ],
    "8607": [
      {
        "length": 32,
        "start": 4243
      },
      {
        "length": 32,
        "start": 4369
      }
    ],
    "9303": [
      {
        "length": 32,
        "start": 646
      },
      {
        "length": 32,
        "start": 1956
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1729:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:80"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:80"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:80",
                "type": ""
              }
            ],
            "src": "14:131:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "282:522:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "329:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "338:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "341:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "331:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "331:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "331:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "303:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "312:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "299:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "299:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "324:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "295:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "295:33:80"
                  },
                  "nodeType": "YulIf",
                  "src": "292:53:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "354:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "373:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "367:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "367:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "358:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "417:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "392:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "392:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "432:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "442:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "432:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "456:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "481:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "492:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "477:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "477:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "471:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "471:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "460:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "530:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "505:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "505:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "505:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "547:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "557:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "547:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "573:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "598:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "609:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "594:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "594:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "588:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "577:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "647:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "622:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "664:17:80",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "674:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "664:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "690:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "715:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "726:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "711:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "711:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "705:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "694:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "764:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "739:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "739:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "739:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "781:17:80",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "791:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "781:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "224:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "235:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "247:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "255:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "263:6:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "271:6:80",
                "type": ""
              }
            ],
            "src": "150:654:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "916:170:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "962:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "971:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "974:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "964:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "964:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "964:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "937:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "933:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "933:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "958:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "929:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "929:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "926:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "987:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1006:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1000:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "991:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1050:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1025:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1025:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1025:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1065:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1075:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1065:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ZoraModuleManager_$6707_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "882:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "893:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "905:6:80",
                "type": ""
              }
            ],
            "src": "809:277:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1172:170:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1218:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1227:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1230:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1220:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1220:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1220:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1193:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1202:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1189:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1189:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1214:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1185:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1185:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1182:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1243:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1262:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1256:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1247:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1306:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1281:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1281:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1281:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1321:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1331:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1321:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1138:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1149:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1161:6:80",
                "type": ""
              }
            ],
            "src": "1091:251:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1402:325:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1412:22:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1426:1:80",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1429:4:80"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1422:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1422:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1412:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1443:38:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1473:4:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1479:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1469:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1469:12:80"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1447:18:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1520:31:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1522:27:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1536:6:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1544:4:80",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1532:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1532:17:80"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1522:6:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1500:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1493:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1493:26:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1490:61:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1610:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1631:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1638:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1643:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1634:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1634:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1624:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1624:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1624:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1675:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1678:4:80",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1668:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1668:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1668:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1703:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1706:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1696:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1696:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1696:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1566:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1589:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1597:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1586:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1586:14:80"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1563:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:38:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1560:161:80"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1382:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1391:6:80",
                "type": ""
              }
            ],
            "src": "1347:380:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n    }\n    function abi_decode_tuple_t_contract$_ZoraModuleManager_$6707_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:16586:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:80",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:80",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:80"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:80",
                "type": ""
              }
            ],
            "src": "14:286:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:80",
                "type": ""
              }
            ],
            "src": "305:187:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "550:205:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "560:10:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "569:1:80",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "564:1:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "629:63:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "654:3:80"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "659:1:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "650:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "650:11:80"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "673:3:80"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "678:1:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "669:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "669:11:80"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "663:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "663:18:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "643:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "643:39:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "643:39:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "590:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "593:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "587:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "587:13:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "601:19:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "603:15:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "612:1:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "615:2:80",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "608:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "608:10:80"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "603:1:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "583:3:80",
                    "statements": []
                  },
                  "src": "579:113:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "718:31:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "731:3:80"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "736:6:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "727:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "727:16:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "745:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "720:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "720:27:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "720:27:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "707:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "710:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "704:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:13:80"
                  },
                  "nodeType": "YulIf",
                  "src": "701:48:80"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "528:3:80",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "533:3:80",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "538:6:80",
                "type": ""
              }
            ],
            "src": "497:258:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "881:262:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "898:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "909:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "891:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "891:21:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "921:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "941:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "935:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:13:80"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "925:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "968:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "979:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "964:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "964:18:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "984:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "957:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "957:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1034:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1022:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1022:15:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1043:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1054:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1039:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1039:18:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1059:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1000:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:66:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1000:66:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1075:62:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1091:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1110:6:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1118:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1106:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1106:15:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1127:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1123:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1123:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1102:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1102:29:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1087:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1087:45:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1134:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1083:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:54:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1075:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "850:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "861:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "872:4:80",
                "type": ""
              }
            ],
            "src": "760:383:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1193:86:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1257:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1266:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1269:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1259:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1259:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1259:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1216:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1227:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1242:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1247:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1238:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1238:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1251:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1234:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1234:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1223:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1223:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1213:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1213:42:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1206:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:50:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1203:70:80"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1182:5:80",
                "type": ""
              }
            ],
            "src": "1148:131:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1388:279:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1434:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1443:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1446:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1436:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1436:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1436:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1409:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1418:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1405:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1405:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1430:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1401:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1401:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1398:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1459:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1485:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1472:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1472:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1463:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1529:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1504:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1504:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1544:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1554:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1544:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1568:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1595:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1606:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1591:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1591:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1578:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1578:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1568:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1619:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1646:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1657:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1642:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1642:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1629:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1629:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1619:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1338:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1349:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1361:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1369:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1377:6:80",
                "type": ""
              }
            ],
            "src": "1284:383:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1773:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1783:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1795:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1806:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1791:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1791:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1783:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1825:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1840:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1856:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1861:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1852:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1852:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1865:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1848:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1848:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1836:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1836:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1818:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1818:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1818:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1742:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1753:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1764:4:80",
                "type": ""
              }
            ],
            "src": "1672:203:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1967:228:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2013:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2022:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2025:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2015:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2015:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2015:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1988:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1997:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1984:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1984:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2009:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1980:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1980:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1977:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2038:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2064:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2051:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2042:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2108:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2083:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2083:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2083:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2123:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2133:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2123:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2147:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2174:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2185:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2170:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2170:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2157:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2157:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2147:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1925:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1936:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1948:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1956:6:80",
                "type": ""
              }
            ],
            "src": "1880:315:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2327:178:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2337:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2349:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2360:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2345:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2345:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2337:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2379:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2394:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2410:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2415:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2406:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2406:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2419:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2402:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2402:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2390:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2390:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2372:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2372:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2443:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2454:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2439:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2439:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2463:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2471:26:80",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2459:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2459:39:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2432:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2432:67:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2432:67:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint96__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2288:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2299:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2307:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2318:4:80",
                "type": ""
              }
            ],
            "src": "2200:305:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2631:404:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2678:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2687:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2690:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2680:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2680:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2680:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2652:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2661:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2648:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2648:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2673:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2644:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2644:33:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2641:53:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2703:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2729:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2716:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2716:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2707:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2773:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2748:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2748:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2788:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2798:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2788:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2812:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2839:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2850:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2835:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2835:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2822:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2812:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2863:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2890:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2901:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2886:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2886:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2873:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2873:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2863:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2914:47:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2946:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2957:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2942:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2942:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2929:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2929:32:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2918:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2995:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2970:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2970:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2970:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3012:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3022:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3012:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2573:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2584:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2596:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2604:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2612:6:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2620:6:80",
                "type": ""
              }
            ],
            "src": "2510:525:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3141:76:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3151:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3163:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3174:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3159:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3159:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3151:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3193:9:80"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3204:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3186:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3186:25:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3186:25:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3110:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3121:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3132:4:80",
                "type": ""
              }
            ],
            "src": "3040:177:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3292:177:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3338:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3347:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3350:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3340:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3340:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3340:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3313:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3322:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3309:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3309:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3334:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3305:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3305:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3302:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3363:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3389:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3376:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3376:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3367:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3433:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3408:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3408:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3408:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3448:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3458:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3448:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3258:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3269:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3281:6:80",
                "type": ""
              }
            ],
            "src": "3222:247:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3605:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3615:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3627:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3638:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3623:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3623:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3615:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3657:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3672:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3688:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3693:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3684:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3684:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3697:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3680:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3680:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3668:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3668:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3650:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3650:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC721TransferHelper_$16334__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3574:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3585:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3596:4:80",
                "type": ""
              }
            ],
            "src": "3474:233:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3767:325:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3777:22:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3791:1:80",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3794:4:80"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3787:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3787:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3777:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3808:38:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3838:4:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3844:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3834:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3834:12:80"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3812:18:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3885:31:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3887:27:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3901:6:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3909:4:80",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3897:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3897:17:80"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3887:6:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3865:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3858:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3858:26:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3855:61:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3975:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3996:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4003:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4008:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3999:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3999:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3989:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3989:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3989:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4040:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4043:4:80",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4033:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4033:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4033:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4068:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4071:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4061:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4061:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4061:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3931:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3954:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3962:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3951:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3951:14:80"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3928:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3928:38:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3925:161:80"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3747:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3756:6:80",
                "type": ""
              }
            ],
            "src": "3712:380:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4271:160:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4288:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4299:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4281:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4281:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4281:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4322:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4333:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4318:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4338:2:80",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4311:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4311:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4311:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4361:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4372:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4357:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4357:18:80"
                      },
                      {
                        "hexValue": "5245454e5452414e4359",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4377:12:80",
                        "type": "",
                        "value": "REENTRANCY"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4350:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4350:40:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4350:40:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4399:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4411:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4422:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4407:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4407:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4399:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_180a23d5434c537ca84b1e47f534d18e25bd055e02a65ce20bae4afd9c835f59__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4248:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4262:4:80",
                "type": ""
              }
            ],
            "src": "4097:334:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4610:161:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4627:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4638:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4620:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4620:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4620:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4661:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4672:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4657:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4657:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4677:2:80",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4650:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4650:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4650:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4700:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4711:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4696:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4696:18:80"
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c4552",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4716:13:80",
                        "type": "",
                        "value": "ONLY_SELLER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4689:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4689:41:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4689:41:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4739:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4751:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4762:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4747:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4747:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4739:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4587:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4601:4:80",
                "type": ""
              }
            ],
            "src": "4436:335:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4905:145:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4915:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4927:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4938:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4923:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4923:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4915:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4957:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4972:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4988:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4993:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4984:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4984:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4997:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4980:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4980:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4968:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4968:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4950:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4950:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4950:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5021:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5032:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5017:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5017:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5037:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5010:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5010:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5010:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4866:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4877:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4885:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4896:4:80",
                "type": ""
              }
            ],
            "src": "4776:274:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5136:170:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5182:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5191:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5194:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5184:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5184:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5184:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5157:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5166:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5153:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5153:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5178:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5149:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5149:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "5146:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5207:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5226:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5220:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5220:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5211:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5270:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5245:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5245:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5245:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5285:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5295:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5285:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5102:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5113:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5125:6:80",
                "type": ""
              }
            ],
            "src": "5055:251:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5485:176:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5502:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5513:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5495:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5495:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5495:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5536:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5547:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5532:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5532:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5552:2:80",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5525:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5525:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5525:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5575:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5586:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5571:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5571:18:80"
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5591:28:80",
                        "type": "",
                        "value": "ONLY_SELLER_OR_TOKEN_OWNER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5564:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5564:56:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5564:56:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5629:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5641:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5652:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5637:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5637:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5629:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5462:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5476:4:80",
                "type": ""
              }
            ],
            "src": "5311:350:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5794:178:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5804:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5816:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5827:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5812:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5812:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5804:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5846:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5861:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5877:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5882:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5873:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5873:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5886:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5869:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5869:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5857:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5857:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5839:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5839:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5839:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5910:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5921:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5906:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5906:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5930:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5938:26:80",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5926:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5926:39:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5899:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:67:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5899:67:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5755:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5766:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5774:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5785:4:80",
                "type": ""
              }
            ],
            "src": "5666:306:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6151:162:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6168:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6179:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6161:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6161:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6161:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6202:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6213:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6198:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6198:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6218:2:80",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6191:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6191:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6191:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6241:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6252:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6237:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6237:18:80"
                      },
                      {
                        "hexValue": "494e4143544956455f41534b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6257:14:80",
                        "type": "",
                        "value": "INACTIVE_ASK"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6230:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6230:42:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6230:42:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6281:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6293:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6304:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6289:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6289:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6281:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6128:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6142:4:80",
                "type": ""
              }
            ],
            "src": "5977:336:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6492:166:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6509:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6520:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6502:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6502:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6502:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6543:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6554:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6539:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6539:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6559:2:80",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6532:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6532:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6532:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6582:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6593:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6578:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6578:18:80"
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f5052494345",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6598:18:80",
                        "type": "",
                        "value": "MUST_MATCH_PRICE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6571:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6571:46:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6571:46:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6626:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6638:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6649:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6634:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6634:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6626:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6469:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6483:4:80",
                "type": ""
              }
            ],
            "src": "6318:340:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6848:271:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6858:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6870:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6881:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6866:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6866:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6858:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6894:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6912:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6917:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6908:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6908:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6921:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6904:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6904:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6898:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6939:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6954:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6962:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6950:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6950:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6932:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6932:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6932:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6986:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6997:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6982:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6982:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7006:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7014:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7002:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7002:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6975:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6975:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6975:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7038:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7049:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7034:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7034:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "7058:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7066:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7054:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7054:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7027:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7027:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7027:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7090:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7101:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7086:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7086:18:80"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7106:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7079:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7079:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7079:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6793:9:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6804:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6812:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6820:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6828:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6839:4:80",
                "type": ""
              }
            ],
            "src": "6663:456:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7281:218:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7291:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7303:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7314:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7299:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7299:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7291:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7326:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7344:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7349:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7340:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7340:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7353:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7336:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7336:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7330:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7371:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7386:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7394:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7382:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7382:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7364:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7364:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7364:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7418:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7429:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7414:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7414:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7438:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7446:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7434:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7434:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7407:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7407:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7407:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7470:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7481:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7466:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7466:18:80"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7486:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7459:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7459:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7459:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7234:9:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7245:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7253:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7261:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7272:4:80",
                "type": ""
              }
            ],
            "src": "7124:375:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7678:235:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7695:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7706:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7688:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7688:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7688:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7729:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7740:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7725:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7725:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7745:2:80",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7718:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7718:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7718:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7768:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7779:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7764:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7764:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c7920",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7784:34:80",
                        "type": "",
                        "value": "_handleRoyaltyEnginePayout only "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7757:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7757:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7757:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7839:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7850:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7835:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7835:18:80"
                      },
                      {
                        "hexValue": "73656c662063616c6c61626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7855:15:80",
                        "type": "",
                        "value": "self callable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7828:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7828:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7828:43:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7880:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7892:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7903:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7888:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7888:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7880:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_444d058793ff79cc791225f4d17e32ac57d05ee9a18813e601615cfd6c77a5e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7655:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7669:4:80",
                "type": ""
              }
            ],
            "src": "7504:409:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8075:188:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8085:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8097:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8108:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8093:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8093:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8085:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8127:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8142:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8158:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8163:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8154:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8154:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8167:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8150:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8150:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8138:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8138:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8120:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8120:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8120:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8191:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8202:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8187:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8187:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8207:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8180:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8180:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8180:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8234:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8245:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8230:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8230:18:80"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8250:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8223:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8223:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8223:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8028:9:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8039:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8047:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8055:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8066:4:80",
                "type": ""
              }
            ],
            "src": "7918:345:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8300:95:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8317:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8324:3:80",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8329:10:80",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8320:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8320:20:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8310:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8310:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8310:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8357:1:80",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8360:4:80",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8350:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8350:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8350:15:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8381:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8384:4:80",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8374:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8374:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8374:15:80"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "8268:127:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8445:230:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8455:19:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8471:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8465:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8465:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "8455:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8483:58:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "8505:6:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "8521:4:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8527:2:80",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8517:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8517:13:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8536:2:80",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "8532:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8532:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8513:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8513:27:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8501:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8501:40:80"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "8487:10:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8616:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8618:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8618:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8618:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8559:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8571:18:80",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8556:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8556:34:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8595:10:80"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8607:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8592:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8592:22:80"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8553:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8553:62:80"
                  },
                  "nodeType": "YulIf",
                  "src": "8550:88:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8654:2:80",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8658:10:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8647:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8647:22:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8647:22:80"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "8425:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8434:6:80",
                "type": ""
              }
            ],
            "src": "8400:275:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8757:114:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8801:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8803:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8803:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8803:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8773:6:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8781:18:80",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8770:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8770:30:80"
                  },
                  "nodeType": "YulIf",
                  "src": "8767:56:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8832:33:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8848:1:80",
                            "type": "",
                            "value": "5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8851:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8844:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8844:14:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8860:4:80",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8840:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8840:25:80"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8832:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_array_address_payable_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8737:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "8748:4:80",
                "type": ""
              }
            ],
            "src": "8680:191:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8951:592:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9000:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9009:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9012:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9002:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9002:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9002:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8979:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8987:4:80",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8975:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8975:17:80"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "8994:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8971:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8971:27:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8964:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8964:35:80"
                  },
                  "nodeType": "YulIf",
                  "src": "8961:55:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9025:23:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9041:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9035:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9035:13:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9029:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9057:14:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9067:4:80",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "9061:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9080:79:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9155:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_payable_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "9107:47:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9107:51:80"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9091:15:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9091:68:80"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "9084:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9168:16:80",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "9181:3:80"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "9172:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "9200:3:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9205:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9193:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9193:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9193:15:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9217:19:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "9228:3:80"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "9233:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9224:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9224:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "9217:3:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9245:46:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9267:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9279:1:80",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "9282:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "9275:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9275:10:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9263:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9263:23:80"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "9288:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9259:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9259:32:80"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "9249:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9319:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9328:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9331:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9321:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9321:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9321:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9306:6:80"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "9314:3:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9303:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9303:15:80"
                  },
                  "nodeType": "YulIf",
                  "src": "9300:35:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9344:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9359:6:80"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "9367:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9355:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9355:15:80"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "9348:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9435:79:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "9456:3:80"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "9467:3:80"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9461:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9461:10:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9449:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9449:23:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9449:23:80"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9485:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "9496:3:80"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "9501:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9492:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9492:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "9485:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "9390:3:80"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9395:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9387:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9387:15:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9403:23:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9405:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "9416:3:80"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "9421:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9412:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9412:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "9405:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9383:3:80",
                    "statements": []
                  },
                  "src": "9379:135:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9523:14:80",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "9532:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "9523:5:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_array_uint256_dyn_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8925:6:80",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8933:3:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "8941:5:80",
                "type": ""
              }
            ],
            "src": "8876:667:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9704:1069:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9750:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9759:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9762:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9752:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9752:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9752:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9725:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9734:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9721:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9721:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9746:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9717:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9717:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "9714:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9775:30:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9795:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9789:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9789:16:80"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9779:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9814:28:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9824:18:80",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9818:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9869:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9878:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9881:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9871:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9871:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9871:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9857:6:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9865:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9854:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9854:14:80"
                  },
                  "nodeType": "YulIf",
                  "src": "9851:34:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9894:32:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9908:9:80"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9919:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9904:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9904:22:80"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "9898:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9974:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9983:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9986:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9976:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9976:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9976:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9953:2:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9957:4:80",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9949:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9949:13:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9964:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "9945:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9945:27:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9938:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9938:35:80"
                  },
                  "nodeType": "YulIf",
                  "src": "9935:55:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9999:19:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10015:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10009:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10009:9:80"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "10003:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10027:14:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10037:4:80",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "10031:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10050:79:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "10125:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_payable_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "10077:47:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10077:51:80"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "10061:15:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10061:68:80"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "10054:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10138:16:80",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "10151:3:80"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "10142:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "10170:3:80"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "10175:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10163:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10163:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10163:15:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10187:19:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "10198:3:80"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "10203:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10194:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10194:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "10187:3:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10215:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "10237:2:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10245:1:80",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "10248:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10241:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10241:10:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10233:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10233:19:80"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "10254:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10229:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10229:28:80"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "10219:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10289:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10298:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10301:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10291:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10291:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10291:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10272:6:80"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10280:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10269:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10269:19:80"
                  },
                  "nodeType": "YulIf",
                  "src": "10266:39:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10314:22:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10329:2:80"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "10333:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10325:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10325:11:80"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "10318:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10401:154:80",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10415:23:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "10434:3:80"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10428:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10428:10:80"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10419:5:80",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10476:5:80"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "10451:24:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10451:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10451:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "10502:3:80"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10507:5:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10495:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10495:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10495:18:80"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10526:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "10537:3:80"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "10542:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10533:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10533:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "10526:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "10356:3:80"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10361:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10353:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10353:15:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10369:23:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10371:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "10382:3:80"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "10387:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10378:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10378:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "10371:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10349:3:80",
                    "statements": []
                  },
                  "src": "10345:210:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10564:15:80",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "10574:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10564:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10588:41:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10614:9:80"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "10625:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10610:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10610:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10604:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10604:25:80"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "10592:8:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10658:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10667:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10670:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10660:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10660:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10660:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "10644:8:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10654:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10641:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10641:16:80"
                  },
                  "nodeType": "YulIf",
                  "src": "10638:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10683:84:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10737:9:80"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "10748:8:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10733:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10733:24:80"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10759:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_uint256_dyn_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "10693:39:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10693:74:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10683:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9662:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9673:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9685:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9693:6:80",
                "type": ""
              }
            ],
            "src": "9548:1225:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10810:95:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10827:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10834:3:80",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10839:10:80",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10830:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10830:20:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10820:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10820:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10820:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10867:1:80",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10870:4:80",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10860:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10860:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10860:15:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10891:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10894:4:80",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10884:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10884:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10884:15:80"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10778:127:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11084:158:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11101:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11112:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11094:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11094:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11094:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11135:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11146:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11131:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11131:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11151:1:80",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11124:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11124:29:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11124:29:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11173:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11184:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11169:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11169:18:80"
                      },
                      {
                        "hexValue": "696e736f6c76656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11189:11:80",
                        "type": "",
                        "value": "insolvent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11162:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11162:39:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11162:39:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11210:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11222:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11233:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11218:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11218:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11210:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_081e2fa72c4e34011d3656bfe84745bd16318a4f9c6c6323843d390046b89502__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11061:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11075:4:80",
                "type": ""
              }
            ],
            "src": "10910:332:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11421:228:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11438:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11449:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11431:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11431:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11431:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11472:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11483:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11468:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11468:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11488:2:80",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11461:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11461:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11461:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11511:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11522:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11507:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11507:18:80"
                      },
                      {
                        "hexValue": "736574526f79616c7479456e67696e6541646472657373206f6e6c7920726567",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11527:34:80",
                        "type": "",
                        "value": "setRoyaltyEngineAddress only reg"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11500:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11500:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11500:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11582:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11593:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11578:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11578:18:80"
                      },
                      {
                        "hexValue": "697374726172",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11598:8:80",
                        "type": "",
                        "value": "istrar"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11571:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11571:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11571:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11616:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11628:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11639:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11624:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11624:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11616:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b05b4162d2b5d35bd4fc3f4069624371167f16d817ef10b51b2b726f9b1bcc3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11398:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11412:4:80",
                "type": ""
              }
            ],
            "src": "11247:402:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11828:251:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11845:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11856:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11838:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11838:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11838:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11879:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11890:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11875:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11875:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11895:2:80",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11868:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11868:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11868:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11918:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11929:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11914:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11914:18:80"
                      },
                      {
                        "hexValue": "736574526f79616c7479456e67696e6541646472657373206d757374206d6174",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11934:34:80",
                        "type": "",
                        "value": "setRoyaltyEngineAddress must mat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11907:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11907:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11907:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11989:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12000:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11985:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11985:18:80"
                      },
                      {
                        "hexValue": "63682049526f79616c7479456e67696e65563120696e74657266616365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12005:31:80",
                        "type": "",
                        "value": "ch IRoyaltyEngineV1 interface"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11978:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11978:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11978:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12046:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12058:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12069:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12054:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12054:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12046:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26f9ddf619fa8b63737e112dd69d7c055a02dff0013d77d5cdc77bc5ba30c241__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11805:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11819:4:80",
                "type": ""
              }
            ],
            "src": "11654:425:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12213:175:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12223:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12235:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12246:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12231:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12231:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12223:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12258:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12276:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12281:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12272:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12272:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12285:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12268:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12268:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12262:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12303:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12318:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12326:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12314:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12314:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12296:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12296:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12296:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12350:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12361:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12346:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12346:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12370:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12378:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12366:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12366:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12339:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12339:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12339:43:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12174:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12185:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12193:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12204:4:80",
                "type": ""
              }
            ],
            "src": "12084:304:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12471:199:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12517:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12526:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12529:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12519:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12519:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12519:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12492:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12501:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12488:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12488:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12513:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12484:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12484:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "12481:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12542:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12561:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12555:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12555:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12546:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12624:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12633:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12636:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12626:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12626:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12626:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12593:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12614:5:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12607:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12607:13:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12600:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12600:21:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12590:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12590:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12583:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12583:40:80"
                  },
                  "nodeType": "YulIf",
                  "src": "12580:60:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12649:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12659:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12649:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12437:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12448:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12460:6:80",
                "type": ""
              }
            ],
            "src": "12393:277:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12849:178:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12866:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12877:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12859:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12859:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12859:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12900:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12911:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12896:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12896:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12916:2:80",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12889:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12889:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12889:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12939:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12950:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12935:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12935:18:80"
                      },
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12955:30:80",
                        "type": "",
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12928:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12928:58:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12928:58:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12995:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13007:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13018:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13003:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13003:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12995:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12826:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12840:4:80",
                "type": ""
              }
            ],
            "src": "12675:352:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13217:262:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13227:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13239:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13250:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13235:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13235:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13227:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13263:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13281:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13286:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13277:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13277:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13290:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13273:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13273:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13267:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13308:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13323:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13331:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13319:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13319:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13301:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13301:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13301:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13355:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13366:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13351:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13351:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13371:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13344:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13344:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13344:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13398:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13409:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13394:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13394:18:80"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13414:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13387:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13387:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13387:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13441:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13452:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13437:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13437:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "13461:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13469:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13457:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13457:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13430:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13430:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13430:43:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13162:9:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "13173:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13181:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13189:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13197:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13208:4:80",
                "type": ""
              }
            ],
            "src": "13032:447:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13565:103:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13611:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13620:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13623:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13613:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13613:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13613:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13586:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13595:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13582:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13582:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13607:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13578:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13578:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "13575:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13636:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13652:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13646:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13646:16:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13636:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13531:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13542:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13554:6:80",
                "type": ""
              }
            ],
            "src": "13484:184:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13770:313:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13816:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13825:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13828:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13818:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13818:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13818:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13791:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13800:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13787:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13787:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13812:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13783:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13783:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "13780:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13841:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13860:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13854:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13854:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13845:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13920:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13929:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13932:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13922:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13922:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13922:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13892:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13903:5:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13910:6:80",
                                "type": "",
                                "value": "0xffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "13899:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13899:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13889:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13889:29:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13882:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13882:37:80"
                  },
                  "nodeType": "YulIf",
                  "src": "13879:57:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13945:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13955:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13945:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13969:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13994:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14005:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13990:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13990:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13984:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13984:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "13973:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "14043:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "14018:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14018:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14018:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14060:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "14070:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "14060:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint16t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13728:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13739:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13751:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13759:6:80",
                "type": ""
              }
            ],
            "src": "13673:410:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14137:173:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14167:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14188:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14195:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14200:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "14191:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14191:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14181:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14181:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14181:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14232:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14235:4:80",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14225:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14225:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14225:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14260:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14263:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14253:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14253:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14253:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14153:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14156:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14150:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14150:8:80"
                  },
                  "nodeType": "YulIf",
                  "src": "14147:131:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14287:17:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14299:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14302:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14295:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14295:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14287:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14119:1:80",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14122:1:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14128:4:80",
                "type": ""
              }
            ],
            "src": "14088:222:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14489:223:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14506:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14517:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14499:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14499:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14499:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14540:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14551:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14536:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14536:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14556:2:80",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14529:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14529:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14529:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14579:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14590:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14575:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14575:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14595:34:80",
                        "type": "",
                        "value": "_handleOutgoingTransfer insolven"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14568:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14568:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14568:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14650:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14661:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14646:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14646:18:80"
                      },
                      {
                        "hexValue": "74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14666:3:80",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14639:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14639:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14639:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14679:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14691:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14702:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14687:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14687:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14679:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9dffe34bf37f5f5456d5b06dc7a95307b7993514988baa141cd803d3b091f6e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14466:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14480:4:80",
                "type": ""
              }
            ],
            "src": "14315:397:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14908:14:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14910:10:80",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "14917:3:80"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14910:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14892:3:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14900:3:80",
                "type": ""
              }
            ],
            "src": "14717:205:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15026:103:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15036:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15048:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15059:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15044:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15044:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15036:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15078:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15093:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15105:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15110:10:80",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "15101:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15101:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15089:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15089:33:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15071:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15071:52:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15071:52:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14995:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15006:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15017:4:80",
                "type": ""
              }
            ],
            "src": "14927:202:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15271:137:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15281:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15301:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15295:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15295:13:80"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "15285:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15343:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15351:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15339:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15339:17:80"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15358:3:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15363:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "15317:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15317:53:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15317:53:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15379:23:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15390:3:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15395:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15386:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15386:16:80"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15379:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15247:3:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15252:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15263:3:80",
                "type": ""
              }
            ],
            "src": "15134:274:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15587:232:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15604:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15615:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15597:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15597:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15597:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15638:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15649:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15634:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15634:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15654:2:80",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15627:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15627:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15627:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15677:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15688:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15673:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15673:18:80"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15693:34:80",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15666:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15666:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15666:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15748:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15759:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15744:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15744:18:80"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15764:12:80",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15737:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15737:40:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15737:40:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15786:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15798:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15809:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15794:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15794:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15786:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15564:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15578:4:80",
                "type": ""
              }
            ],
            "src": "15413:406:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15998:228:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16015:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16026:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16008:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16008:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16008:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16049:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16060:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16045:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16045:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16065:2:80",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16038:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16038:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16038:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16088:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16099:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16084:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16084:18:80"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16104:34:80",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16077:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16077:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16077:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16159:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16170:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16155:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16155:18:80"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16175:8:80",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16148:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16148:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16148:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16193:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16205:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16216:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16201:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16201:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16193:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15975:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15989:4:80",
                "type": ""
              }
            ],
            "src": "15824:402:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16405:179:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16422:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16433:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16415:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16415:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16415:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16456:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16467:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16452:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16452:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16472:2:80",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16445:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16445:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16445:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16495:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16506:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16491:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16491:18:80"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16511:31:80",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16484:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16484:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16484:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16552:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16564:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16575:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16560:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16560:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16552:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16382:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16396:4:80",
                "type": ""
              }
            ],
            "src": "16231:353:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint96__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ERC721TransferHelper_$16334__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_180a23d5434c537ca84b1e47f534d18e25bd055e02a65ce20bae4afd9c835f59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"REENTRANCY\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"ONLY_SELLER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ONLY_SELLER_OR_TOKEN_OWNER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"INACTIVE_ASK\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"MUST_MATCH_PRICE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_444d058793ff79cc791225f4d17e32ac57d05ee9a18813e601615cfd6c77a5e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"_handleRoyaltyEnginePayout only \")\n        mstore(add(headStart, 96), \"self callable\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_payable_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_payable_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_payable_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := mload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_081e2fa72c4e34011d3656bfe84745bd16318a4f9c6c6323843d390046b89502__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"insolvent\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b05b4162d2b5d35bd4fc3f4069624371167f16d817ef10b51b2b726f9b1bcc3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"setRoyaltyEngineAddress only reg\")\n        mstore(add(headStart, 96), \"istrar\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_26f9ddf619fa8b63737e112dd69d7c055a02dff0013d77d5cdc77bc5ba30c241__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"setRoyaltyEngineAddress must mat\")\n        mstore(add(headStart, 96), \"ch IRoyaltyEngineV1 interface\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ONLY_TOKEN_OWNER_OR_OPERATOR\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint16t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9dffe34bf37f5f5456d5b06dc7a95307b7993514988baa141cd803d3b091f6e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"_handleOutgoingTransfer insolven\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "668:13389:59:-:0;;;461:1:37;426:36;;1342:419:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:62:53;;;;;;;;;;;;;-1:-1:-1;;;376:62:53;;;1519:14:59;1535:20;1557:5;1585:21;-1:-1:-1;;;;;1564:47:59;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1564:59:59;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;552:26:55;;;;;1931:13:51::1;:48:::0;;-1:-1:-1;;;;;;1931:48:51::1;::::0;;::::1;::::0;;;::::1;::::0;;;1989:67;;::::1;;::::0;2066:29:::1;;::::0;419:12:53;;;;:4;;-1:-1:-1;419:12:53;;;;:::i;:::-;-1:-1:-1;;;;;;;;1688:66:59;;::::2;;::::0;-1:-1:-1;668:13389:59;;-1:-1:-1;668:13389:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;668:13389:59;;;-1:-1:-1;668:13389:59;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:80;-1:-1:-1;;;;;89:31:80;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:654::-;247:6;255;263;271;324:3;312:9;303:7;299:23;295:33;292:53;;;341:1;338;331:12;292:53;373:9;367:16;392:31;417:5;392:31;:::i;:::-;492:2;477:18;;471:25;442:5;;-1:-1:-1;505:33:80;471:25;505:33;:::i;:::-;609:2;594:18;;588:25;557:7;;-1:-1:-1;622:33:80;588:25;622:33;:::i;:::-;726:2;711:18;;705:25;674:7;;-1:-1:-1;739:33:80;705:25;739:33;:::i;:::-;150:654;;;;-1:-1:-1;150:654:80;;-1:-1:-1;;150:654:80:o;809:277::-;905:6;958:2;946:9;937:7;933:23;929:32;926:52;;;974:1;971;964:12;926:52;1006:9;1000:16;1025:31;1050:5;1025:31;:::i;:::-;1075:5;809:277;-1:-1:-1;;;809:277:80:o;1347:380::-;1426:1;1422:12;;;;1469;;;1490:61;;1544:4;1536:6;1532:17;1522:27;;1490:61;1597:2;1589:6;1586:14;1566:18;1563:38;1560:161;;;1643:10;1638:3;1634:20;1631:1;1624:31;1678:4;1675:1;1668:15;1706:4;1703:1;1696:15;1560:161;;1347:380;;;:::o;:::-;668:13389:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "668:13389:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2005:177;;;;;;;;;;-1:-1:-1;2005:177:59;;;;;:::i;:::-;;:::i;:::-;;;470:14:80;;463:22;445:41;;433:2;418:18;2005:177:59;;;;;;;;265:18:53;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6745:602:59:-;;;;;;;;;;-1:-1:-1;6745:602:59;;;;;:::i;:::-;;:::i;:::-;;792:34:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1836:32:80;;;1818:51;;1806:2;1791:18;792:34:51;1672:203:80;8850:630:59;;;;;;;;;;-1:-1:-1;8850:630:59;;;;;:::i;:::-;;:::i;2709:60::-;;;;;;;;;;-1:-1:-1;2709:60:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2709:60:59;;;-1:-1:-1;;;2709:60:59;;-1:-1:-1;;;;;2709:60:59;;;;;;;-1:-1:-1;;;;;2390:32:80;;;2372:51;;-1:-1:-1;;;;;2459:39:80;;;2454:2;2439:18;;2432:67;2345:18;2709:60:59;2200:305:80;12685:1370:59;;;;;;:::i;:::-;;:::i;5751:1742:51:-;;;;;;:::i;:::-;;:::i;:::-;;;3186:25:80;;;3174:2;3159:18;5751:1742:51;3040:177:80;2472:414:51;;;;;;;;;;-1:-1:-1;2472:414:51;;;;;:::i;:::-;;:::i;4329:855:59:-;;;;;;;;;;-1:-1:-1;4329:855:59;;;;;:::i;:::-;;:::i;1014:58::-;;;;;;;;;;;;;;;2005:177;2076:4;-1:-1:-1;;;;;;2099:46:59;;-1:-1:-1;;;2099:46:59;;:76;;-1:-1:-1;;;;;;;;;;2149:26:59;;;2099:76;2092:83;2005:177;-1:-1:-1;;2005:177:59:o;265:18:53:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6745:602:59:-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;;;;;;;;;577:1;558:16;:20;;;-1:-1:-1;;;;;6951:25:59;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;7058:10;;6951:35;;7058:10:::1;7044;:24;7036:48;;;::::0;-1:-1:-1;;;7036:48:59;;4638:2:80;7036:48:59::1;::::0;::::1;4620:21:80::0;4677:2;4657:18;;;4650:30;-1:-1:-1;;;4696:18:80;;;4689:41;4747:18;;7036:48:59::1;4436:335:80::0;7036:48:59::1;7237:26:::0;;-1:-1:-1;;;;;7237:26:59;;::::1;-1:-1:-1::0;;;;;;;;7237:26:59;::::1;;;::::0;;7279:61:::1;::::0;;7321:10:::1;4950:51:80::0;;5032:2;5017:18;;5010:34;;;7311:8:59;;7279:61;::::1;::::0;::::1;::::0;4923:18:80;7279:61:59::1;;;;;;;;-1:-1:-1::0;;620:1:37;601:16;:20;-1:-1:-1;;6745:602:59:o;8850:630::-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;577:1;558:16;:20;;;-1:-1:-1;;;;;9007:25:59;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;8990:52;;;;::::1;::::0;;;;;;::::1;::::0;;;-1:-1:-1;;;8990:52:59;;::::1;-1:-1:-1::0;;;;;8990:52:59::1;::::0;;::::1;::::0;9199:10:::1;:20:::0;::::1;::::0;:79:::1;;-1:-1:-1::0;9237:41:59::1;::::0;-1:-1:-1;;;9237:41:59;;::::1;::::0;::::1;3186:25:80::0;;;-1:-1:-1;;;;;9237:31:59;::::1;::::0;::::1;::::0;3159:18:80;;9237:41:59::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9223:55:59::1;:10;-1:-1:-1::0;;;;;9223:55:59::1;;9199:79;9191:118;;;::::0;-1:-1:-1;;;9191:118:59;;5513:2:80;9191:118:59::1;::::0;::::1;5495:21:80::0;5552:2;5532:18;;;5525:30;5591:28;5571:18;;;5564:56;5637:18;;9191:118:59::1;5311:350:80::0;9191:118:59::1;9353:8;9337:14;-1:-1:-1::0;;;;;9325:56:59::1;;9363:6;9371:3;:9;;;9325:56;;;;;;-1:-1:-1::0;;;;;2390:32:80;;;;2372:51;;-1:-1:-1;;;;;2459:39:80;2454:2;2439:18;;2432:67;2360:2;2345:18;;2200:305;9325:56:59::1;;;;;;;;-1:-1:-1::0;;;;;;;9438:25:59;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;9431:42;;;;601:20:37;;8850:630:59:o;12685:1370::-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;577:1;558:16;:20;;;-1:-1:-1;;;;;12848:25:59;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;12831:52;;;;::::1;::::0;;;;;;::::1;::::0;;;-1:-1:-1;;;12831:52:59;;::::1;-1:-1:-1::0;;;;;12831:52:59::1;::::0;;::::1;::::0;;12996:45:::1;;;::::0;-1:-1:-1;;;12996:45:59;;6179:2:80;12996:45:59::1;::::0;::::1;6161:21:80::0;6218:2;6198:18;;;6191:30;-1:-1:-1;;;6237:18:80;;;6230:42;6289:18;;12996:45:59::1;5977:336:80::0;12996:45:59::1;13095:9;::::0;::::1;::::0;-1:-1:-1;;;;;13079:25:59::1;13176:9;:18:::0;::::1;13168:47;;;::::0;-1:-1:-1;;;13168:47:59;;6520:2:80;13168:47:59::1;::::0;::::1;6502:21:80::0;6559:2;6539:18;;;6532:30;-1:-1:-1;;;6578:18:80;;;6571:46;6634:18;;13168:47:59::1;6318:340:80::0;13168:47:59::1;13280:23;13309:73;13330:14;13346:8;13356:5;13371:1;13375:6;13309:20;:73::i;:::-;13279:103;;;13459:53;13484:15;13509:1;13459:24;:53::i;:::-;13441:71;;13578:67;13602:6;13610:15;13635:1;13639:5;13578:23;:67::i;:::-;13799:79;::::0;-1:-1:-1;;;13799:79:59;;-1:-1:-1;;;;;6950:15:80;;;13799:79:59::1;::::0;::::1;6932:34:80::0;7002:15;;;6982:18;;;6975:43;13857:10:59::1;7034:18:80::0;;;7027:43;7086:18;;;7079:34;;;13799:20:59::1;:33;::::0;::::1;::::0;6866:19:80;;13799:79:59::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13894:62:59::1;::::0;;13930:10:::1;7364:34:80::0;;-1:-1:-1;;;;;7434:15:80;;;7429:2;7414:18;;7407:43;7466:18;;;7459:34;;;13920:8:59;;-1:-1:-1;13894:62:59;;::::1;::::0;-1:-1:-1;13894:62:59::1;::::0;7314:2:80;7299:18;13894:62:59::1;;;;;;;-1:-1:-1::0;;;;;;;;14013:25:59;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;14006:42;;;;601:20:37;;-1:-1:-1;12685:1370:59:o;5751:1742:51:-;5935:7;6007:10;6029:4;6007:27;5999:85;;;;-1:-1:-1;;;5999:85:51;;7706:2:80;5999:85:51;;;7688:21:80;7745:2;7725:18;;;7718:30;7784:34;7764:18;;;7757:62;-1:-1:-1;;;7835:18:80;;;7828:43;7888:19;;5999:85:51;7504:409:80;5999:85:51;6228:13;;:59;;-1:-1:-1;;;6228:59:51;;-1:-1:-1;;;;;8138:32:80;;;6228:59:51;;;8120:51:80;8187:18;;;8180:34;;;8230:18;;;8223:34;;;6163:35:51;;;;6228:13;;;:24;;8093:18:80;;6228:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6228:59:51;;;;;;;;;;;;:::i;:::-;6364:17;;6162:125;;-1:-1:-1;6162:125:51;-1:-1:-1;6460:18:51;6456:38;;6487:7;6480:14;;;;;;;6456:38;6567:7;6541:23;;;6736:718;6760:13;6756:1;:17;6736:718;;;6849:10;6860:1;6849:13;;;;;;;;:::i;:::-;;;;;;;6837:25;;6885:7;6893:1;6885:10;;;;;;;;:::i;:::-;;;;;;;6876:19;;7011:6;6992:15;:25;;6984:47;;;;-1:-1:-1;;;6984:47:51;;11112:2:80;6984:47:51;;;11094:21:80;11151:1;11131:18;;;11124:29;-1:-1:-1;;;11169:18:80;;;11162:39;11218:18;;6984:47:51;10910:332:80;6984:47:51;7087:66;7111:9;7122:6;7130:15;7147:5;7087:23;:66::i;:::-;7173:58;;;-1:-1:-1;;;;;4968:32:80;;;4950:51;;5032:2;5017:18;;5010:34;;;7203:8:51;;7173:58;;;;;;4923:18:80;7173:58:51;;;;;;;7383:25;;;;;7426:3;;6736:718;;;-1:-1:-1;7471:15:51;;-1:-1:-1;;;;;;5751:1742:51;;;;;;;:::o;2472:414::-;2554:10;-1:-1:-1;;;;;2568:9:51;2554:23;;2546:74;;;;-1:-1:-1;;;2546:74:51;;11449:2:80;2546:74:51;;;11431:21:80;11488:2;11468:18;;;11461:30;11527:34;11507:18;;;11500:62;-1:-1:-1;;;11578:18:80;;;11571:36;11624:19;;2546:74:51;11247:402:80;2546:74:51;2651:83;2683:14;-1:-1:-1;;;2651:31:51;:83::i;:::-;2630:191;;;;-1:-1:-1;;;2630:191:51;;11856:2:80;2630:191:51;;;11838:21:80;11895:2;11875:18;;;11868:30;11934:34;11914:18;;;11907:62;12005:31;11985:18;;;11978:59;12054:19;;2630:191:51;11654:425:80;2630:191:51;2831:13;:48;;-1:-1:-1;;;;;;2831:48:51;-1:-1:-1;;;;;2831:48:51;;;;;;;;;;2472:414::o;4329:855:59:-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;577:1;558:16;:20;;;4537:41:59::1;::::0;-1:-1:-1;;;4537:41:59;;::::1;::::0;::::1;3186:25:80::0;;;-1:-1:-1;;;;;4537:31:59;::::1;::::0;::::1;::::0;3159:18:80;;4537:41:59::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4516:62:::0;-1:-1:-1;4663:10:59::1;-1:-1:-1::0;;;;;4663:24:59;::::1;;::::0;:92:::1;;-1:-1:-1::0;4691:64:59::1;::::0;-1:-1:-1;;;4691:64:59;;-1:-1:-1;;;;;12314:15:80;;;4691:64:59::1;::::0;::::1;12296:34:80::0;4744:10:59::1;12346:18:80::0;;;12339:43;4691:40:59;::::1;::::0;::::1;::::0;12231:18:80;;4691:64:59::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4655:133;;;::::0;-1:-1:-1;;;4655:133:59;;12877:2:80;4655:133:59::1;::::0;::::1;12859:21:80::0;12916:2;12896:18;;;12889:30;12955;12935:18;;;12928:58;13003:18;;4655:133:59::1;12675:352:80::0;4655:133:59::1;-1:-1:-1::0;;;;;4840:25:59;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;:55;;::::1;-1:-1:-1::0;;;;;;;;5047:58:59;::::1;;::::0;::::1;::::0;;;5121:56;;4950:51:80;;;5017:18;;5010:34;;;4840:35:59;;5121:56:::1;::::0;4923:18:80;5121:56:59::1;4776:274:80::0;4289:888:51;4486:7;;;4640:14;;;:39;;;4670:9;4658;:21;4640:39;4639:65;;4695:9;4639:65;;;4683:9;4639:65;4802:93;;-1:-1:-1;;;4802:93:51;;-1:-1:-1;;;;;13319:15:80;;;4802:93:51;;;13301:34:80;13351:18;;;13344:34;;;13394:18;;;13387:34;;;13457:15;;13437:18;;;13430:43;4625:79:51;;-1:-1:-1;4802:4:51;;:31;;4625:79;;13235:19:80;;4802:93:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4802:93:51;;;;;;;;-1:-1:-1;;4802:93:51;;;;;;;;;;;;:::i;:::-;;;4798:373;;5145:7;5154:5;5137:23;;;;;;;4798:373;5020:14;-1:-1:-1;5036:4:51;;-1:-1:-1;5012:29:51;;-1:-1:-1;5012:29:51;4289:888;;;;;;;;;:::o;3119:632::-;3289:56;;-1:-1:-1;;;3289:56:51;;3330:4;3289:56;;;4950:51:80;5017:18;;;5010:34;;;3213:7:51;;;;-1:-1:-1;;;;;3289:19:51;:32;;;;4923:18:80;;3289:56:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:78;-1:-1:-1;3404:16:51;3400:36;;3429:7;3422:14;;;;;3400:36;3503:51;;-1:-1:-1;;;3503:51:51;;3548:4;3503:51;;;1818::80;3479:20:51;;3503:19;-1:-1:-1;;;;;3503:36:51;;;;1791:18:80;;3503:51:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3476:78;;;3596:74;3620:12;3634:11;3647:15;3664:5;3596:23;:74::i;:::-;3723:21;3733:11;3723:7;:21;:::i;:::-;3716:28;3119:632;-1:-1:-1;;;;;3119:632:51:o;1039:1016:55:-;1203:12;;;:35;;-1:-1:-1;;;;;;1219:19:55;;;1203:35;1199:72;;;1254:7;;1199:72;-1:-1:-1;;;;;1315:23:55;;1311:738;;1387:7;1362:21;:32;;1354:78;;;;-1:-1:-1;;;1354:78:55;;14517:2:80;1354:78:55;;;14499:21:80;14556:2;14536:18;;;14529:30;14595:34;14575:18;;;14568:62;-1:-1:-1;;;14646:18:80;;;14639:31;14687:19;;1354:78:55;14315:397:80;1354:78:55;1564:11;1579:14;;;:39;;;1609:9;1597;:21;1579:39;1578:65;;1634:9;1578:65;;;1622:9;1578:65;1564:79;;1658:12;1676:5;-1:-1:-1;;;;;1676:10:55;1694:7;1708:3;1676:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:59;;;1822:7;1817:145;;1849:4;-1:-1:-1;;;;;1849:12:55;;1869:7;1849:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1897:50:55;;-1:-1:-1;;;;;;;1912:4:55;1897:34;;-1:-1:-1;1932:5:55;;-1:-1:-1;1939:7:55;1897:34;:50::i;:::-;1340:632;;1311:738;;;1992:46;-1:-1:-1;;;;;1992:30:55;;2023:5;2030:7;1992:30;:46::i;:::-;1039:1016;;;;:::o;1318:274:35:-;1405:4;1512:23;1527:7;1512:14;:23::i;:::-;:73;;;;;1539:46;1564:7;1573:11;1539:24;:46::i;:::-;1505:80;1318:274;-1:-1:-1;;;1318:274:35:o;701:205:25:-;840:58;;;-1:-1:-1;;;;;4968:32:80;;840:58:25;;;4950:51:80;5017:18;;;;5010:34;;;840:58:25;;;;;;;;;;4923:18:80;;;;840:58:25;;;;;;;;-1:-1:-1;;;;;840:58:25;-1:-1:-1;;;840:58:25;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;689:411:35:-;753:4;960:60;985:7;-1:-1:-1;;;960:24:35;:60::i;:::-;:133;;;;-1:-1:-1;1037:56:35;1062:7;-1:-1:-1;;;;;;1037:24:35;:56::i;:::-;1036:57;941:152;689:411;-1:-1:-1;;689:411:35:o;4208:409::-;4346:71;;;-1:-1:-1;;;;;;15089:33:80;;4346:71:35;;;;15071:52:80;;;;4346:71:35;;;;;;;;;;15044:18:80;;;;4346:71:35;;;;;;;-1:-1:-1;;;;;4346:71:35;-1:-1:-1;;;4346:71:35;;;4465:45;;4301:4;;4346:71;4301:4;;;;-1:-1:-1;;;;;4465:18:35;;;4489:5;;4465:45;;4346:71;;4465:45;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4427:83;;;;4540:2;4524:6;:13;:18;4520:36;;;4551:5;4544:12;;;;;;;4520:36;4573:7;:37;;;;;4595:6;4584:26;;;;;;;;;;;;:::i;:::-;4566:44;4208:409;-1:-1:-1;;;;;;4208:409:35:o;3207:706:25:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:25;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:25;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:25;;15615:2:80;3811:85:25;;;15597:21:80;15654:2;15634:18;;;15627:30;15693:34;15673:18;;;15666:62;-1:-1:-1;;;15744:18:80;;;15737:40;15794:19;;3811:85:25;15413:406:80;3861:223:31;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;-1:-1:-1;;;;;1465:19:31;;;5228:60;;;;-1:-1:-1;;;5228:60:31;;16433:2:80;5228:60:31;;;16415:21:80;16472:2;16452:18;;;16445:30;16511:31;16491:18;;;16484:59;16560:18;;5228:60:31;16231:353:80;5228:60:31;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:31;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:31:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:31;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:31;;;;;;;;:::i;14:286:80:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:80;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;-1:-1:-1;;745:1:80;727:16;;720:27;497:258::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:80;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:80:o;1148:131::-;-1:-1:-1;;;;;1223:31:80;;1213:42;;1203:70;;1269:1;1266;1259:12;1203:70;1148:131;:::o;1284:383::-;1361:6;1369;1377;1430:2;1418:9;1409:7;1405:23;1401:32;1398:52;;;1446:1;1443;1436:12;1398:52;1485:9;1472:23;1504:31;1529:5;1504:31;:::i;:::-;1554:5;1606:2;1591:18;;1578:32;;-1:-1:-1;1657:2:80;1642:18;;;1629:32;;1284:383;-1:-1:-1;;;1284:383:80:o;1880:315::-;1948:6;1956;2009:2;1997:9;1988:7;1984:23;1980:32;1977:52;;;2025:1;2022;2015:12;1977:52;2064:9;2051:23;2083:31;2108:5;2083:31;:::i;:::-;2133:5;2185:2;2170:18;;;;2157:32;;-1:-1:-1;;;1880:315:80:o;2510:525::-;2596:6;2604;2612;2620;2673:3;2661:9;2652:7;2648:23;2644:33;2641:53;;;2690:1;2687;2680:12;2641:53;2729:9;2716:23;2748:31;2773:5;2748:31;:::i;:::-;2798:5;-1:-1:-1;2850:2:80;2835:18;;2822:32;;-1:-1:-1;2901:2:80;2886:18;;2873:32;;-1:-1:-1;2957:2:80;2942:18;;2929:32;2970:33;2929:32;2970:33;:::i;:::-;2510:525;;;;-1:-1:-1;2510:525:80;;-1:-1:-1;;2510:525:80:o;3222:247::-;3281:6;3334:2;3322:9;3313:7;3309:23;3305:32;3302:52;;;3350:1;3347;3340:12;3302:52;3389:9;3376:23;3408:31;3433:5;3408:31;:::i;3712:380::-;3791:1;3787:12;;;;3834;;;3855:61;;3909:4;3901:6;3897:17;3887:27;;3855:61;3962:2;3954:6;3951:14;3931:18;3928:38;3925:161;;;4008:10;4003:3;3999:20;3996:1;3989:31;4043:4;4040:1;4033:15;4071:4;4068:1;4061:15;3925:161;;3712:380;;;:::o;4097:334::-;4299:2;4281:21;;;4338:2;4318:18;;;4311:30;-1:-1:-1;;;4372:2:80;4357:18;;4350:40;4422:2;4407:18;;4097:334::o;5055:251::-;5125:6;5178:2;5166:9;5157:7;5153:23;5149:32;5146:52;;;5194:1;5191;5184:12;5146:52;5226:9;5220:16;5245:31;5270:5;5245:31;:::i;8268:127::-;8329:10;8324:3;8320:20;8317:1;8310:31;8360:4;8357:1;8350:15;8384:4;8381:1;8374:15;8400:275;8471:2;8465:9;8536:2;8517:13;;-1:-1:-1;;8513:27:80;8501:40;;8571:18;8556:34;;8592:22;;;8553:62;8550:88;;;8618:18;;:::i;:::-;8654:2;8647:22;8400:275;;-1:-1:-1;8400:275:80:o;8680:191::-;8748:4;8781:18;8773:6;8770:30;8767:56;;;8803:18;;:::i;:::-;-1:-1:-1;8848:1:80;8844:14;8860:4;8840:25;;8680:191::o;8876:667::-;8941:5;8994:3;8987:4;8979:6;8975:17;8971:27;8961:55;;9012:1;9009;9002:12;8961:55;9041:6;9035:13;9067:4;9091:68;9107:51;9155:2;9107:51;:::i;:::-;9091:68;:::i;:::-;9193:15;;;9279:1;9275:10;;;;9263:23;;9259:32;;;9224:12;;;;9303:15;;;9300:35;;;9331:1;9328;9321:12;9300:35;9367:2;9359:6;9355:15;9379:135;9395:6;9390:3;9387:15;9379:135;;;9461:10;;9449:23;;9492:12;;;;9412;;9379:135;;;-1:-1:-1;9532:5:80;8876:667;-1:-1:-1;;;;;;8876:667:80:o;9548:1225::-;9685:6;9693;9746:2;9734:9;9725:7;9721:23;9717:32;9714:52;;;9762:1;9759;9752:12;9714:52;9795:9;9789:16;9824:18;9865:2;9857:6;9854:14;9851:34;;;9881:1;9878;9871:12;9851:34;9919:6;9908:9;9904:22;9894:32;;9964:7;9957:4;9953:2;9949:13;9945:27;9935:55;;9986:1;9983;9976:12;9935:55;10015:2;10009:9;10037:4;10061:68;10077:51;10125:2;10077:51;:::i;10061:68::-;10163:15;;;10245:1;10241:10;;;;10233:19;;10229:28;;;10194:12;;;;10269:19;;;10266:39;;;10301:1;10298;10291:12;10266:39;10325:11;;;;10345:210;10361:6;10356:3;10353:15;10345:210;;;10434:3;10428:10;10451:31;10476:5;10451:31;:::i;:::-;10495:18;;10378:12;;;;10533;;;;10345:210;;;10610:18;;;10604:25;10574:5;;-1:-1:-1;10604:25:80;;-1:-1:-1;;;10641:16:80;;;10638:36;;;10670:1;10667;10660:12;10638:36;;10693:74;10759:7;10748:8;10737:9;10733:24;10693:74;:::i;:::-;10683:84;;;9548:1225;;;;;:::o;10778:127::-;10839:10;10834:3;10830:20;10827:1;10820:31;10870:4;10867:1;10860:15;10894:4;10891:1;10884:15;12393:277;12460:6;12513:2;12501:9;12492:7;12488:23;12484:32;12481:52;;;12529:1;12526;12519:12;12481:52;12561:9;12555:16;12614:5;12607:13;12600:21;12593:5;12590:32;12580:60;;12636:1;12633;12626:12;13484:184;13554:6;13607:2;13595:9;13586:7;13582:23;13578:32;13575:52;;;13623:1;13620;13613:12;13575:52;-1:-1:-1;13646:16:80;;13484:184;-1:-1:-1;13484:184:80:o;13673:410::-;13751:6;13759;13812:2;13800:9;13791:7;13787:23;13783:32;13780:52;;;13828:1;13825;13818:12;13780:52;13860:9;13854:16;13910:6;13903:5;13899:18;13892:5;13889:29;13879:57;;13932:1;13929;13922:12;13879:57;14005:2;13990:18;;13984:25;13955:5;;-1:-1:-1;14018:33:80;13984:25;14018:33;:::i;:::-;14070:7;14060:17;;;13673:410;;;;;:::o;14088:222::-;14128:4;14156:1;14153;14150:8;14147:131;;;14200:10;14195:3;14191:20;14188:1;14181:31;14235:4;14232:1;14225:15;14263:4;14260:1;14253:15;14147:131;-1:-1:-1;14295:9:80;;14088:222::o;15134:274::-;15263:3;15301:6;15295:13;15317:53;15363:6;15358:3;15351:4;15343:6;15339:17;15317:53;:::i;:::-;15386:16;;;;;15134:274;-1:-1:-1;;15134:274:80:o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.10;\n\nimport {ReentrancyGuard} from \"@rari-capital/solmate/src/utils/ReentrancyGuard.sol\";\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nimport {ERC721TransferHelper} from \"../../../../transferHelpers/ERC721TransferHelper.sol\";\nimport {FeePayoutSupportV1} from \"../../../../common/FeePayoutSupport/FeePayoutSupportV1.sol\";\nimport {ModuleNamingSupportV1} from \"../../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol\";\nimport {IAsksCoreEth} from \"./IAsksCoreEth.sol\";\n\n/// @title Asks Core ETH\n/// @author kulkarohan\n/// @notice Module for minimal ETH asks for ERC-721 tokens\ncontract AsksCoreEth is ReentrancyGuard, FeePayoutSupportV1, ModuleNamingSupportV1 {\n    ///                                                          ///\n    ///                        IMMUTABLES                        ///\n    ///                                                          ///\n\n    /// @notice The ZORA ERC-721 Transfer Helper\n    ERC721TransferHelper public immutable erc721TransferHelper;\n\n    /// @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n    /// @param _royaltyEngine The Manifold Royalty Engine address\n    /// @param _protocolFeeSettings The ZORA Protocol Fee Settings address\n    /// @param _weth The WETH token address\n    constructor(\n        address _erc721TransferHelper,\n        address _royaltyEngine,\n        address _protocolFeeSettings,\n        address _weth\n    )\n        FeePayoutSupportV1(_royaltyEngine, _protocolFeeSettings, _weth, ERC721TransferHelper(_erc721TransferHelper).ZMM().registrar())\n        ModuleNamingSupportV1(\"Asks Core ETH\")\n    {\n        erc721TransferHelper = ERC721TransferHelper(_erc721TransferHelper);\n    }\n\n    /// @notice Implements EIP-165 for standard interface detection\n    /// @dev `0x01ffc9a7` is the IERC165 interface id\n    /// @param _interfaceId The identifier of a given interface\n    /// @return If the given interface is supported\n    function supportsInterface(bytes4 _interfaceId) external pure returns (bool) {\n        return _interfaceId == type(IAsksCoreEth).interfaceId || _interfaceId == 0x01ffc9a7;\n    }\n\n    ///                                                          ///\n    ///                        ASK STORAGE                       ///\n    ///                                                          ///\n\n    /// @notice The metadata for a given ask\n    /// @param seller The address of the seller\n    /// @param price The price to fill the ask\n    struct Ask {\n        address seller;\n        uint96 price;\n    }\n\n    /// @notice The ask for a given NFT\n    /// @dev ERC-721 token contract => ERC-721 token id => Ask\n    mapping(address => mapping(uint256 => Ask)) public askForNFT;\n\n    ///                                                          ///\n    ///                        CREATE ASK                        ///\n    ///                                                          ///\n\n    //     ,-.\n    //     `-'\n    //     /|\\\n    //      |             ,-----------.\n    //     / \\            |AsksCoreEth|\n    //   Caller           `-----+-----'\n    //     |    createAsk()     |\n    //     | ------------------>|\n    //     |                    |\n    //     |                    ----.\n    //     |                        | store ask metadata\n    //     |                    <---'\n    //     |                    |\n    //     |                    ----.\n    //     |                        | emit AskCreated()\n    //     |                    <---'\n    //   Caller           ,-----+-----.\n    //     ,-.            |AsksCoreEth|\n    //     `-'            `-----------'\n    //     /|\\\n    //      |\n    //     / \\\n\n    /// @notice Emitted when an ask is created\n    /// @param tokenContract The ERC-721 token address of the created ask\n    /// @param tokenId The ERC-721 token id of the created ask\n    /// @param seller The seller address of the created ask\n    /// @param price The price of the created ask\n    event AskCreated(address indexed tokenContract, uint256 indexed tokenId, address seller, uint256 price);\n\n    /// @notice Creates an ask for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The id of the ERC-721 token\n    /// @param _price The price to fill the ask\n    function createAsk(\n        address _tokenContract,\n        uint256 _tokenId,\n        uint256 _price\n    ) external nonReentrant {\n        // Get the owner of the specified token\n        address tokenOwner = IERC721(_tokenContract).ownerOf(_tokenId);\n\n        // Ensure the caller is the owner or an approved operator\n        require(msg.sender == tokenOwner || IERC721(_tokenContract).isApprovedForAll(tokenOwner, msg.sender), \"ONLY_TOKEN_OWNER_OR_OPERATOR\");\n\n        // Store the owner as the seller\n        askForNFT[_tokenContract][_tokenId].seller = tokenOwner;\n\n        // Store the ask price\n        // The max value for this module is 2^96 - 1, which is magnitudes higher than the total supply of ETH\n        askForNFT[_tokenContract][_tokenId].price = uint96(_price);\n\n        emit AskCreated(_tokenContract, _tokenId, tokenOwner, _price);\n    }\n\n    ///                                                          ///\n    ///                        UPDATE ASK                        ///\n    ///                                                          ///\n\n    //     ,-.\n    //     `-'\n    //     /|\\\n    //      |             ,-----------.\n    //     / \\            |AsksCoreEth|\n    //   Caller           `-----+-----'\n    //     |   setAskPrice()    |\n    //     | ------------------>|\n    //     |                    |\n    //     |                    ----.\n    //     |                        | update ask price\n    //     |                    <---'\n    //     |                    |\n    //     |                    ----.\n    //     |                        | emit AskPriceUpdated()\n    //     |                    <---'\n    //   Caller           ,-----+-----.\n    //     ,-.            |AsksCoreEth|\n    //     `-'            `-----------'\n    //     /|\\\n    //      |\n    //     / \\\n\n    /// @notice Emitted when an ask is updated\n    /// @param tokenContract The ERC-721 token address of the updated ask\n    /// @param tokenId The ERC-721 token id of the updated ask\n    /// @param seller The user that updated the ask\n    /// @param price The updated price of the ask\n    event AskPriceUpdated(address indexed tokenContract, uint256 indexed tokenId, address seller, uint256 price);\n\n    /// @notice Updates the ask price for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The id of the ERC-721 token\n    /// @param _price The ask price to set\n    function setAskPrice(\n        address _tokenContract,\n        uint256 _tokenId,\n        uint256 _price\n    ) external nonReentrant {\n        // Get the ask for the specified token\n        Ask storage ask = askForNFT[_tokenContract][_tokenId];\n\n        // Ensure the caller is seller\n        require(msg.sender == ask.seller, \"ONLY_SELLER\");\n\n        // Update the ask price\n        // The max value for this module is 2^96 - 1, which is magnitudes higher than the total supply of ETH\n        ask.price = uint96(_price);\n\n        emit AskPriceUpdated(_tokenContract, _tokenId, msg.sender, _price);\n    }\n\n    ///                                                          ///\n    ///                        CANCEL ASK                        ///\n    ///                                                          ///\n\n    //     ,-.\n    //     `-'\n    //     /|\\\n    //      |             ,-----------.\n    //     / \\            |AsksCoreEth|\n    //   Caller           `-----+-----'\n    //     |    cancelAsk()     |\n    //     | ------------------>|\n    //     |                    |\n    //     |                    ----.\n    //     |                        | emit AskCanceled()\n    //     |                    <---'\n    //     |                    |\n    //     |                    ----.\n    //     |                        | delete ask\n    //     |                    <---'\n    //   Caller           ,-----+-----.\n    //     ,-.            |AsksCoreEth|\n    //     `-'            `-----------'\n    //     /|\\\n    //      |\n    //     / \\\n\n    /// @notice Emitted when an ask is canceled\n    /// @param tokenContract The ERC-721 token address of the canceled ask\n    /// @param tokenId The ERC-721 token id of the canceled ask\n    /// @param seller The user that canceled the ask\n    /// @param price The price of the canceled ask\n    event AskCanceled(address indexed tokenContract, uint256 indexed tokenId, address seller, uint256 price);\n\n    /// @notice Cancels the ask for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The id of the ERC-721 token\n    function cancelAsk(address _tokenContract, uint256 _tokenId) external nonReentrant {\n        // Get the ask for the specified token\n        Ask memory ask = askForNFT[_tokenContract][_tokenId];\n\n        // Cache the seller address\n        address seller = ask.seller;\n\n        // Ensure the caller is the seller or a new token owner\n        require(msg.sender == seller || msg.sender == IERC721(_tokenContract).ownerOf(_tokenId), \"ONLY_SELLER_OR_TOKEN_OWNER\");\n\n        emit AskCanceled(_tokenContract, _tokenId, seller, ask.price);\n\n        // Remove the ask from storage\n        delete askForNFT[_tokenContract][_tokenId];\n    }\n\n    ///                                                          ///\n    ///                         FILL ASK                         ///\n    ///                                                          ///\n\n    //     ,-.\n    //     `-'\n    //     /|\\\n    //      |             ,-----------.            ,--------------------.\n    //     / \\            |AsksCoreEth|            |ERC721TransferHelper|\n    //   Caller           `-----+-----'            `---------+----------'\n    //     |     fillAsk()      |                            |\n    //     | ------------------>|                            |\n    //     |                    |                            |\n    //     |                    ----.                        |\n    //     |                        | validate received ETH  |\n    //     |                    <---'                        |\n    //     |                    |                            |\n    //     |                    ----.                        |\n    //     |                        | handle royalty payouts |\n    //     |                    <---'                        |\n    //     |                    |                            |\n    //     |                    ----.                        |\n    //     |                        | handle seller payout   |\n    //     |                    <---'                        |\n    //     |                    |                            |\n    //     |                    |       transferFrom()       |\n    //     |                    |---------------------------->\n    //     |                    |                            |\n    //     |                    |                            |----.\n    //     |                    |                            |    | transfer NFT from seller to buyer\n    //     |                    |                            |<---'\n    //     |                    |                            |\n    //     |                    ----.                        |\n    //     |                        | emit AskFilled()       |\n    //     |                    <---'                        |\n    //     |                    |                            |\n    //     |                    ----.\n    //     |                        | delete ask from contract\n    //     |                    <---'\n    //   Caller           ,-----+-----.            ,---------+----------.\n    //     ,-.            |AsksCoreEth|            |ERC721TransferHelper|\n    //     `-'            `-----------'            `--------------------'\n    //     /|\\\n    //      |\n    //     / \\\n\n    /// @notice Emitted when an ask is filled\n    /// @param tokenContract The ERC-721 token address of the filled ask\n    /// @param tokenId The ERC-721 token id of the filled ask\n    /// @param buyer The buyer address of the filled ask\n    /// @param seller The seller address of the filled ask\n    /// @param price The price of the filled ask\n    event AskFilled(address indexed tokenContract, uint256 indexed tokenId, address buyer, address seller, uint256 price);\n\n    /// @notice Fills the ask for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The id of the ERC-721 token\n    function fillAsk(address _tokenContract, uint256 _tokenId) external payable nonReentrant {\n        // Get the ask for the specified token\n        Ask memory ask = askForNFT[_tokenContract][_tokenId];\n\n        // Cache the seller\n        address seller = ask.seller;\n\n        // Ensure the ask is active\n        require(seller != address(0), \"INACTIVE_ASK\");\n\n        // Cache the price\n        uint256 price = ask.price;\n\n        // Ensure the attached ETH matches the price\n        require(msg.value == price, \"MUST_MATCH_PRICE\");\n\n        // Payout associated token royalties, if any\n        (uint256 remainingProfit, ) = _handleRoyaltyPayout(_tokenContract, _tokenId, price, address(0), 300000);\n\n        // Payout the module fee, if configured\n        remainingProfit = _handleProtocolFeePayout(remainingProfit, address(0));\n\n        // Transfer the remaining profit to the seller\n        _handleOutgoingTransfer(seller, remainingProfit, address(0), 50000);\n\n        // Transfer the NFT to the buyer\n        // Reverts if the seller did not approve the ERC721TransferHelper or no longer owns the token\n        erc721TransferHelper.transferFrom(_tokenContract, seller, msg.sender, _tokenId);\n\n        emit AskFilled(_tokenContract, _tokenId, msg.sender, seller, price);\n\n        // Remove the ask from storage\n        delete askForNFT[_tokenContract][_tokenId];\n    }\n}\n",
  "sourcePath": "/Users/ds/Documents/rarible/scripts/contracts/modules/Asks/Core/ETH/AsksCoreEth.sol",
  "ast": {
    "absolutePath": "project:/contracts/modules/Asks/Core/ETH/AsksCoreEth.sol",
    "exportedSymbols": {
      "AsksCoreEth": [
        9697
      ],
      "ERC721TransferHelper": [
        16334
      ],
      "FeePayoutSupportV1": [
        8453
      ],
      "IAsksCoreEth": [
        9737
      ],
      "IERC721": [
        5438
      ],
      "ModuleNamingSupportV1": [
        8576
      ],
      "ReentrancyGuard": [
        6294
      ]
    },
    "id": 9698,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9280,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:59"
      },
      {
        "absolutePath": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "id": 9282,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 6295,
        "src": "61:84:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9281,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 9284,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 5439,
        "src": "146:73:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9283,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../../transferHelpers/ERC721TransferHelper.sol",
        "id": 9286,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 16335,
        "src": "221:90:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9285,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "229:20:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "id": 9288,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 8454,
        "src": "312:94:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9287,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "320:18:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "id": 9290,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 8577,
        "src": "407:103:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9289,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "415:21:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/modules/Asks/Core/ETH/IAsksCoreEth.sol",
        "file": "./IAsksCoreEth.sol",
        "id": 9292,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 9738,
        "src": "511:48:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9291,
              "name": "IAsksCoreEth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "519:12:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9294,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6294,
              "src": "692:15:59"
            },
            "id": 9295,
            "nodeType": "InheritanceSpecifier",
            "src": "692:15:59"
          },
          {
            "baseName": {
              "id": 9296,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8453,
              "src": "709:18:59"
            },
            "id": 9297,
            "nodeType": "InheritanceSpecifier",
            "src": "709:18:59"
          },
          {
            "baseName": {
              "id": 9298,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8576,
              "src": "729:21:59"
            },
            "id": 9299,
            "nodeType": "InheritanceSpecifier",
            "src": "729:21:59"
          }
        ],
        "canonicalName": "AsksCoreEth",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9293,
          "nodeType": "StructuredDocumentation",
          "src": "561:107:59",
          "text": "@title Asks Core ETH\n @author kulkarohan\n @notice Module for minimal ETH asks for ERC-721 tokens"
        },
        "fullyImplemented": true,
        "id": 9697,
        "linearizedBaseContracts": [
          9697,
          8576,
          8453,
          8722,
          6294
        ],
        "name": "AsksCoreEth",
        "nameLocation": "677:11:59",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 9300,
              "nodeType": "StructuredDocumentation",
              "src": "965:44:59",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "id": 9303,
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1052:20:59",
            "nodeType": "VariableDeclaration",
            "scope": 9697,
            "src": "1014:58:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 9302,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9301,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16334,
                "src": "1014:20:59"
              },
              "referencedDeclaration": 16334,
              "src": "1014:20:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9336,
              "nodeType": "Block",
              "src": "1678:83:59",
              "statements": [
                {
                  "expression": {
                    "id": 9334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9330,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9303,
                      "src": "1688:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9332,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9306,
                          "src": "1732:21:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9331,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16334,
                        "src": "1711:20:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 9333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1711:43:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "1688:66:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 9335,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:66:59"
                }
              ]
            },
            "documentation": {
              "id": 9304,
              "nodeType": "StructuredDocumentation",
              "src": "1079:258:59",
              "text": "@param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address\n @param _protocolFeeSettings The ZORA Protocol Fee Settings address\n @param _weth The WETH token address"
            },
            "id": 9337,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9315,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9308,
                    "src": "1519:14:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9316,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9310,
                    "src": "1535:20:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9317,
                    "name": "_weth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9312,
                    "src": "1557:5:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9319,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9306,
                                "src": "1585:21:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9318,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16334,
                              "src": "1564:20:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 9320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1564:43:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 9321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16083,
                          "src": "1564:47:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$6707_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 9322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1564:49:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$6707",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 9323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6372,
                      "src": "1564:59:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 9324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:61:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9325,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9314,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8453,
                  "src": "1500:18:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1500:126:59"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b7320436f726520455448",
                    "id": 9327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1657:15:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c762a0d1da0dd24320216e767d9c3b09b0d2dad0570c310ace73390378b2d6aa",
                      "typeString": "literal_string \"Asks Core ETH\""
                    },
                    "value": "Asks Core ETH"
                  }
                ],
                "id": 9328,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9326,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8576,
                  "src": "1635:21:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1635:38:59"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9306,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "1371:21:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9337,
                  "src": "1363:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1363:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9308,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "1410:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9337,
                  "src": "1402:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9310,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "1442:20:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9337,
                  "src": "1434:28:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9312,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "1480:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9337,
                  "src": "1472:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:138:59"
            },
            "returnParameters": {
              "id": 9329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:0:59"
            },
            "scope": 9697,
            "src": "1342:419:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9356,
              "nodeType": "Block",
              "src": "2082:100:59",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 9350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9345,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9340,
                        "src": "2099:12:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9347,
                              "name": "IAsksCoreEth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9737,
                              "src": "2120:12:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreEth_$9737_$",
                                "typeString": "type(contract IAsksCoreEth)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreEth_$9737_$",
                                "typeString": "type(contract IAsksCoreEth)"
                              }
                            ],
                            "id": 9346,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2115:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2115:18:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IAsksCoreEth_$9737",
                            "typeString": "type(contract IAsksCoreEth)"
                          }
                        },
                        "id": 9349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2115:30:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2099:46:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 9353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9351,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9340,
                        "src": "2149:12:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 9352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "src": "2149:26:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2099:76:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9344,
                  "id": 9355,
                  "nodeType": "Return",
                  "src": "2092:83:59"
                }
              ]
            },
            "documentation": {
              "id": 9338,
              "nodeType": "StructuredDocumentation",
              "src": "1767:233:59",
              "text": "@notice Implements EIP-165 for standard interface detection\n @dev `0x01ffc9a7` is the IERC165 interface id\n @param _interfaceId The identifier of a given interface\n @return If the given interface is supported"
            },
            "functionSelector": "01ffc9a7",
            "id": 9357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2014:17:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9340,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "2039:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9357,
                  "src": "2032:19:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9339,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2031:21:59"
            },
            "returnParameters": {
              "id": 9344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9357,
                  "src": "2076:4:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9342,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2075:6:59"
            },
            "scope": 9697,
            "src": "2005:177:59",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "AsksCoreEth.Ask",
            "id": 9362,
            "members": [
              {
                "constant": false,
                "id": 9359,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2565:6:59",
                "nodeType": "VariableDeclaration",
                "scope": 9362,
                "src": "2557:14:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9358,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2557:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9361,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "2588:5:59",
                "nodeType": "VariableDeclaration",
                "scope": 9362,
                "src": "2581:12:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 9360,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2581:6:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "2543:3:59",
            "nodeType": "StructDefinition",
            "scope": 9697,
            "src": "2536:64:59",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9363,
              "nodeType": "StructuredDocumentation",
              "src": "2606:98:59",
              "text": "@notice The ask for a given NFT\n @dev ERC-721 token contract => ERC-721 token id => Ask"
            },
            "functionSelector": "418f0656",
            "id": 9370,
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "2760:9:59",
            "nodeType": "VariableDeclaration",
            "scope": 9697,
            "src": "2709:60:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask))"
            },
            "typeName": {
              "id": 9369,
              "keyType": {
                "id": 9364,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2717:7:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2709:43:59",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask))"
              },
              "valueType": {
                "id": 9368,
                "keyType": {
                  "id": 9365,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2736:7:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2728:23:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                  "typeString": "mapping(uint256 => struct AsksCoreEth.Ask)"
                },
                "valueType": {
                  "id": 9367,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9366,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9362,
                    "src": "2747:3:59"
                  },
                  "referencedDeclaration": 9362,
                  "src": "2747:3:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                    "typeString": "struct AsksCoreEth.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9371,
              "nodeType": "StructuredDocumentation",
              "src": "3715:289:59",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token id of the created ask\n @param seller The seller address of the created ask\n @param price The price of the created ask"
            },
            "id": 9381,
            "name": "AskCreated",
            "nameLocation": "4015:10:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9373,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "4042:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9381,
                  "src": "4026:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4026:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9375,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4073:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9381,
                  "src": "4057:23:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4057:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9377,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "4090:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9381,
                  "src": "4082:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9379,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4106:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9381,
                  "src": "4098:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4098:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4025:87:59"
            },
            "src": "4009:104:59"
          },
          {
            "body": {
              "id": 9447,
              "nodeType": "Block",
              "src": "4458:726:59",
              "statements": [
                {
                  "assignments": [
                    9394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9394,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "4524:10:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9447,
                      "src": "4516:18:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9393,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4516:7:59",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9401,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9399,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9386,
                        "src": "4569:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9396,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9384,
                            "src": "4545:14:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9395,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "4537:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 9397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4537:23:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5438",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 9398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5371,
                      "src": "4537:31:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 9400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4537:41:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4516:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9403,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4663:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4663:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 9405,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9394,
                            "src": "4677:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4663:24:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 9411,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9394,
                              "src": "4732:10:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 9412,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4744:3:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4744:10:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 9408,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9384,
                                  "src": "4699:14:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 9407,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5438,
                                "src": "4691:7:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 9409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4691:23:59",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5438",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 9410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5425,
                            "src": "4691:40:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 9414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4691:64:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4663:92:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "id": 9416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4757:30:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        },
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        }
                      ],
                      "id": 9402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4655:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4655:133:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9418,
                  "nodeType": "ExpressionStatement",
                  "src": "4655:133:59"
                },
                {
                  "expression": {
                    "id": 9426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 9419,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "4840:9:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                            }
                          },
                          "id": 9422,
                          "indexExpression": {
                            "id": 9420,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9384,
                            "src": "4850:14:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4840:25:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                          }
                        },
                        "id": 9423,
                        "indexExpression": {
                          "id": 9421,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9386,
                          "src": "4866:8:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4840:35:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage",
                          "typeString": "struct AsksCoreEth.Ask storage ref"
                        }
                      },
                      "id": 9424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9359,
                      "src": "4840:42:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9425,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9394,
                      "src": "4885:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4840:55:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9427,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:55:59"
                },
                {
                  "expression": {
                    "id": 9438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 9428,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "5047:9:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                            }
                          },
                          "id": 9431,
                          "indexExpression": {
                            "id": 9429,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9384,
                            "src": "5057:14:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5047:25:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                          }
                        },
                        "id": 9432,
                        "indexExpression": {
                          "id": 9430,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9386,
                          "src": "5073:8:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5047:35:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage",
                          "typeString": "struct AsksCoreEth.Ask storage ref"
                        }
                      },
                      "id": 9433,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9361,
                      "src": "5047:41:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9436,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9388,
                          "src": "5098:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5091:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 9434,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5091:6:59",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5091:14:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "5047:58:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 9439,
                  "nodeType": "ExpressionStatement",
                  "src": "5047:58:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9441,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9384,
                        "src": "5132:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9442,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9386,
                        "src": "5148:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9443,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9394,
                        "src": "5158:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9444,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9388,
                        "src": "5170:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9440,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9381,
                      "src": "5121:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5121:56:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9446,
                  "nodeType": "EmitStatement",
                  "src": "5116:61:59"
                }
              ]
            },
            "documentation": {
              "id": 9382,
              "nodeType": "StructuredDocumentation",
              "src": "4119:205:59",
              "text": "@notice Creates an ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask"
            },
            "functionSelector": "c4f0ee36",
            "id": 9448,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9390,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "4445:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "4445:12:59"
              }
            ],
            "name": "createAsk",
            "nameLocation": "4338:9:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9384,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "4365:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9448,
                  "src": "4357:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4357:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9386,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4397:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9448,
                  "src": "4389:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9388,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4423:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9448,
                  "src": "4415:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4415:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4347:88:59"
            },
            "returnParameters": {
              "id": 9392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4458:0:59"
            },
            "scope": 9697,
            "src": "4329:855:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9449,
              "nodeType": "StructuredDocumentation",
              "src": "6132:281:59",
              "text": "@notice Emitted when an ask is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token id of the updated ask\n @param seller The user that updated the ask\n @param price The updated price of the ask"
            },
            "id": 9459,
            "name": "AskPriceUpdated",
            "nameLocation": "6424:15:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9451,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "6456:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9459,
                  "src": "6440:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6440:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9453,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6487:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9459,
                  "src": "6471:23:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6471:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9455,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "6504:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9459,
                  "src": "6496:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9457,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "6520:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9459,
                  "src": "6512:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6512:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6439:87:59"
            },
            "src": "6418:109:59"
          },
          {
            "body": {
              "id": 9506,
              "nodeType": "Block",
              "src": "6876:471:59",
              "statements": [
                {
                  "assignments": [
                    9473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9473,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "6945:3:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9506,
                      "src": "6933:15:59",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                        "typeString": "struct AsksCoreEth.Ask"
                      },
                      "typeName": {
                        "id": 9472,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9471,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9362,
                          "src": "6933:3:59"
                        },
                        "referencedDeclaration": 9362,
                        "src": "6933:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9479,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9474,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9370,
                        "src": "6951:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                        }
                      },
                      "id": 9476,
                      "indexExpression": {
                        "id": 9475,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9462,
                        "src": "6961:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6951:25:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                      }
                    },
                    "id": 9478,
                    "indexExpression": {
                      "id": 9477,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9464,
                      "src": "6977:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6951:35:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9362_storage",
                      "typeString": "struct AsksCoreEth.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6933:53:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9481,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7044:3:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7044:10:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9483,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9473,
                            "src": "7058:3:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                              "typeString": "struct AsksCoreEth.Ask storage pointer"
                            }
                          },
                          "id": 9484,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9359,
                          "src": "7058:10:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7044:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c4552",
                        "id": 9486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7070:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        },
                        "value": "ONLY_SELLER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        }
                      ],
                      "id": 9480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7036:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7036:48:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9488,
                  "nodeType": "ExpressionStatement",
                  "src": "7036:48:59"
                },
                {
                  "expression": {
                    "id": 9496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9489,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9473,
                        "src": "7237:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask storage pointer"
                        }
                      },
                      "id": 9491,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9361,
                      "src": "7237:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9494,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9466,
                          "src": "7256:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7249:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 9492,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "7249:6:59",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7249:14:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "7237:26:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 9497,
                  "nodeType": "ExpressionStatement",
                  "src": "7237:26:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9499,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9462,
                        "src": "7295:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9500,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9464,
                        "src": "7311:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9501,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7321:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7321:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9503,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9466,
                        "src": "7333:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9498,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9459,
                      "src": "7279:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7279:61:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9505,
                  "nodeType": "EmitStatement",
                  "src": "7274:66:59"
                }
              ]
            },
            "documentation": {
              "id": 9460,
              "nodeType": "StructuredDocumentation",
              "src": "6533:207:59",
              "text": "@notice Updates the ask price for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The ask price to set"
            },
            "functionSelector": "0be48095",
            "id": 9507,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9469,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9468,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "6863:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "6863:12:59"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "6754:11:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9462,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "6783:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9507,
                  "src": "6775:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6775:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9464,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6815:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9507,
                  "src": "6807:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6807:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9466,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "6841:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9507,
                  "src": "6833:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6833:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6765:88:59"
            },
            "returnParameters": {
              "id": 9470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6876:0:59"
            },
            "scope": 9697,
            "src": "6745:602:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9508,
              "nodeType": "StructuredDocumentation",
              "src": "8285:286:59",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token id of the canceled ask\n @param seller The user that canceled the ask\n @param price The price of the canceled ask"
            },
            "id": 9518,
            "name": "AskCanceled",
            "nameLocation": "8582:11:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9510,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "8610:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9518,
                  "src": "8594:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8594:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9512,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8641:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9518,
                  "src": "8625:23:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8625:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "8658:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9518,
                  "src": "8650:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8650:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9516,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "8674:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9518,
                  "src": "8666:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8666:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8593:87:59"
            },
            "src": "8576:105:59"
          },
          {
            "body": {
              "id": 9575,
              "nodeType": "Block",
              "src": "8933:547:59",
              "statements": [
                {
                  "assignments": [
                    9530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9530,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "9001:3:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9575,
                      "src": "8990:14:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask"
                      },
                      "typeName": {
                        "id": 9529,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9528,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9362,
                          "src": "8990:3:59"
                        },
                        "referencedDeclaration": 9362,
                        "src": "8990:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9536,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9531,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9370,
                        "src": "9007:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                        }
                      },
                      "id": 9533,
                      "indexExpression": {
                        "id": 9532,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9521,
                        "src": "9017:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9007:25:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                      }
                    },
                    "id": 9535,
                    "indexExpression": {
                      "id": 9534,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9523,
                      "src": "9033:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9007:35:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9362_storage",
                      "typeString": "struct AsksCoreEth.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8990:52:59"
                },
                {
                  "assignments": [
                    9538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9538,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "9097:6:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9575,
                      "src": "9089:14:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9537,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9089:7:59",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9541,
                  "initialValue": {
                    "expression": {
                      "id": 9539,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9530,
                      "src": "9106:3:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask memory"
                      }
                    },
                    "id": 9540,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9359,
                    "src": "9106:10:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9089:27:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9543,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9199:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9199:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 9545,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9538,
                            "src": "9213:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9199:20:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9547,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9223:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9223:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 9553,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9523,
                                "src": "9269:8:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 9550,
                                    "name": "_tokenContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9521,
                                    "src": "9245:14:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 9549,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5438,
                                  "src": "9237:7:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 9551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9237:23:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$5438",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 9552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5371,
                              "src": "9237:31:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 9554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9237:41:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9223:55:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9199:79:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552",
                        "id": 9557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9280:28:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        },
                        "value": "ONLY_SELLER_OR_TOKEN_OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        }
                      ],
                      "id": 9542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9191:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9191:118:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9559,
                  "nodeType": "ExpressionStatement",
                  "src": "9191:118:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9561,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9521,
                        "src": "9337:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9562,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9523,
                        "src": "9353:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9563,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9538,
                        "src": "9363:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9564,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9530,
                          "src": "9371:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                            "typeString": "struct AsksCoreEth.Ask memory"
                          }
                        },
                        "id": 9565,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9361,
                        "src": "9371:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 9560,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9518,
                      "src": "9325:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9325:56:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9567,
                  "nodeType": "EmitStatement",
                  "src": "9320:61:59"
                },
                {
                  "expression": {
                    "id": 9573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9431:42:59",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9568,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9370,
                          "src": "9438:9:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                          }
                        },
                        "id": 9570,
                        "indexExpression": {
                          "id": 9569,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9521,
                          "src": "9448:14:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9438:25:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                        }
                      },
                      "id": 9572,
                      "indexExpression": {
                        "id": 9571,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9523,
                        "src": "9464:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9438:35:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_storage",
                        "typeString": "struct AsksCoreEth.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9574,
                  "nodeType": "ExpressionStatement",
                  "src": "9431:42:59"
                }
              ]
            },
            "documentation": {
              "id": 9519,
              "nodeType": "StructuredDocumentation",
              "src": "8687:158:59",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "id": 9576,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9526,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9525,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "8920:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "8920:12:59"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "8859:9:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9521,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "8877:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "8869:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8869:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9523,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8901:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "8893:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8893:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8868:42:59"
            },
            "returnParameters": {
              "id": 9527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8933:0:59"
            },
            "scope": 9697,
            "src": "8850:630:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9577,
              "nodeType": "StructuredDocumentation",
              "src": "12054:341:59",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token id of the filled ask\n @param buyer The buyer address of the filled ask\n @param seller The seller address of the filled ask\n @param price The price of the filled ask"
            },
            "id": 9589,
            "name": "AskFilled",
            "nameLocation": "12406:9:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9579,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "12432:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12416:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12416:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9581,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12463:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12447:23:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12447:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9583,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "12480:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12472:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12472:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9585,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "12495:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12487:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12487:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9587,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "12511:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12503:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12503:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12415:102:59"
            },
            "src": "12400:118:59"
          },
          {
            "body": {
              "id": 9695,
              "nodeType": "Block",
              "src": "12774:1281:59",
              "statements": [
                {
                  "assignments": [
                    9601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9601,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "12842:3:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9695,
                      "src": "12831:14:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask"
                      },
                      "typeName": {
                        "id": 9600,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9599,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9362,
                          "src": "12831:3:59"
                        },
                        "referencedDeclaration": 9362,
                        "src": "12831:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9607,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9602,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9370,
                        "src": "12848:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                        }
                      },
                      "id": 9604,
                      "indexExpression": {
                        "id": 9603,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9592,
                        "src": "12858:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12848:25:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                      }
                    },
                    "id": 9606,
                    "indexExpression": {
                      "id": 9605,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9594,
                      "src": "12874:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12848:35:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9362_storage",
                      "typeString": "struct AsksCoreEth.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12831:52:59"
                },
                {
                  "assignments": [
                    9609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9609,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "12930:6:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9695,
                      "src": "12922:14:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9608,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12922:7:59",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9612,
                  "initialValue": {
                    "expression": {
                      "id": 9610,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9601,
                      "src": "12939:3:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask memory"
                      }
                    },
                    "id": 9611,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9359,
                    "src": "12939:10:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12922:27:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9614,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9609,
                          "src": "13004:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13022:1:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13014:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9615,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13014:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13014:10:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13004:20:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e4143544956455f41534b",
                        "id": 9620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13026:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        },
                        "value": "INACTIVE_ASK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        }
                      ],
                      "id": 9613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12996:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12996:45:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9622,
                  "nodeType": "ExpressionStatement",
                  "src": "12996:45:59"
                },
                {
                  "assignments": [
                    9624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9624,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "13087:5:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9695,
                      "src": "13079:13:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13079:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9627,
                  "initialValue": {
                    "expression": {
                      "id": 9625,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9601,
                      "src": "13095:3:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask memory"
                      }
                    },
                    "id": 9626,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9361,
                    "src": "13095:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13079:25:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9629,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "13176:3:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "13176:9:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 9631,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9624,
                          "src": "13189:5:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13176:18:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f5052494345",
                        "id": 9633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13196:18:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        },
                        "value": "MUST_MATCH_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        }
                      ],
                      "id": 9628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13168:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13168:47:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9635,
                  "nodeType": "ExpressionStatement",
                  "src": "13168:47:59"
                },
                {
                  "assignments": [
                    9637,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9637,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "13288:15:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9695,
                      "src": "13280:23:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9636,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13280:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 9648,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9639,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9592,
                        "src": "13330:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9640,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9594,
                        "src": "13346:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9641,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9624,
                        "src": "13356:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 9644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13371:1:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13363:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9642,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13363:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13363:10:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "333030303030",
                        "id": 9646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13375:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        "value": "300000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        }
                      ],
                      "id": 9638,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "13309:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 9647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13309:73:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13279:103:59"
                },
                {
                  "expression": {
                    "id": 9657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9649,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9637,
                      "src": "13441:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9651,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9637,
                          "src": "13484:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13509:1:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13501:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9652,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13501:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13501:10:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9650,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8280,
                        "src": "13459:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 9656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13459:53:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13441:71:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9658,
                  "nodeType": "ExpressionStatement",
                  "src": "13441:71:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9660,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9609,
                        "src": "13602:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9661,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9637,
                        "src": "13610:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 9664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13635:1:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13627:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13627:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13627:10:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 9666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13639:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 9659,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8721,
                      "src": "13578:23:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13578:67:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9668,
                  "nodeType": "ExpressionStatement",
                  "src": "13578:67:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9672,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9592,
                        "src": "13833:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9673,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9609,
                        "src": "13849:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9674,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "13857:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13857:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9676,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9594,
                        "src": "13869:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9669,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9303,
                        "src": "13799:20:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 9671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16333,
                      "src": "13799:33:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 9677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13799:79:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9678,
                  "nodeType": "ExpressionStatement",
                  "src": "13799:79:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9680,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9592,
                        "src": "13904:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9681,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9594,
                        "src": "13920:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "13930:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13930:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9684,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9609,
                        "src": "13942:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9685,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9624,
                        "src": "13950:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9679,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9589,
                      "src": "13894:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 9686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13894:62:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9687,
                  "nodeType": "EmitStatement",
                  "src": "13889:67:59"
                },
                {
                  "expression": {
                    "id": 9693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "14006:42:59",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9688,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9370,
                          "src": "14013:9:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                          }
                        },
                        "id": 9690,
                        "indexExpression": {
                          "id": 9689,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9592,
                          "src": "14023:14:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14013:25:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                        }
                      },
                      "id": 9692,
                      "indexExpression": {
                        "id": 9691,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9594,
                        "src": "14039:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14013:35:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_storage",
                        "typeString": "struct AsksCoreEth.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9694,
                  "nodeType": "ExpressionStatement",
                  "src": "14006:42:59"
                }
              ]
            },
            "documentation": {
              "id": 9590,
              "nodeType": "StructuredDocumentation",
              "src": "12524:156:59",
              "text": "@notice Fills the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token"
            },
            "functionSelector": "68b5a9a8",
            "id": 9696,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9597,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9596,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "12761:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "12761:12:59"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "12694:7:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9592,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "12710:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9696,
                  "src": "12702:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12702:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9594,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "12734:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9696,
                  "src": "12726:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12726:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12701:42:59"
            },
            "returnParameters": {
              "id": 9598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12774:0:59"
            },
            "scope": 9697,
            "src": "12685:1370:59",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9698,
        "src": "668:13389:59",
        "usedErrors": []
      }
    ],
    "src": "36:14022:59"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/modules/Asks/Core/ETH/AsksCoreEth.sol",
    "exportedSymbols": {
      "AsksCoreEth": [
        9697
      ],
      "ERC721TransferHelper": [
        16334
      ],
      "FeePayoutSupportV1": [
        8453
      ],
      "IAsksCoreEth": [
        9737
      ],
      "IERC721": [
        5438
      ],
      "ModuleNamingSupportV1": [
        8576
      ],
      "ReentrancyGuard": [
        6294
      ]
    },
    "id": 9698,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9280,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:59"
      },
      {
        "absolutePath": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "id": 9282,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 6295,
        "src": "61:84:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9281,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 9284,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 5439,
        "src": "146:73:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9283,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../../transferHelpers/ERC721TransferHelper.sol",
        "id": 9286,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 16335,
        "src": "221:90:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9285,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "229:20:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "id": 9288,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 8454,
        "src": "312:94:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9287,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "320:18:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "id": 9290,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 8577,
        "src": "407:103:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9289,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "415:21:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/modules/Asks/Core/ETH/IAsksCoreEth.sol",
        "file": "./IAsksCoreEth.sol",
        "id": 9292,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9698,
        "sourceUnit": 9738,
        "src": "511:48:59",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9291,
              "name": "IAsksCoreEth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "519:12:59",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9294,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6294,
              "src": "692:15:59"
            },
            "id": 9295,
            "nodeType": "InheritanceSpecifier",
            "src": "692:15:59"
          },
          {
            "baseName": {
              "id": 9296,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8453,
              "src": "709:18:59"
            },
            "id": 9297,
            "nodeType": "InheritanceSpecifier",
            "src": "709:18:59"
          },
          {
            "baseName": {
              "id": 9298,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8576,
              "src": "729:21:59"
            },
            "id": 9299,
            "nodeType": "InheritanceSpecifier",
            "src": "729:21:59"
          }
        ],
        "canonicalName": "AsksCoreEth",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9293,
          "nodeType": "StructuredDocumentation",
          "src": "561:107:59",
          "text": "@title Asks Core ETH\n @author kulkarohan\n @notice Module for minimal ETH asks for ERC-721 tokens"
        },
        "fullyImplemented": true,
        "id": 9697,
        "linearizedBaseContracts": [
          9697,
          8576,
          8453,
          8722,
          6294
        ],
        "name": "AsksCoreEth",
        "nameLocation": "677:11:59",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 9300,
              "nodeType": "StructuredDocumentation",
              "src": "965:44:59",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "id": 9303,
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1052:20:59",
            "nodeType": "VariableDeclaration",
            "scope": 9697,
            "src": "1014:58:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 9302,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9301,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16334,
                "src": "1014:20:59"
              },
              "referencedDeclaration": 16334,
              "src": "1014:20:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9336,
              "nodeType": "Block",
              "src": "1678:83:59",
              "statements": [
                {
                  "expression": {
                    "id": 9334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9330,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9303,
                      "src": "1688:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9332,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9306,
                          "src": "1732:21:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9331,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16334,
                        "src": "1711:20:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 9333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1711:43:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "1688:66:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 9335,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:66:59"
                }
              ]
            },
            "documentation": {
              "id": 9304,
              "nodeType": "StructuredDocumentation",
              "src": "1079:258:59",
              "text": "@param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address\n @param _protocolFeeSettings The ZORA Protocol Fee Settings address\n @param _weth The WETH token address"
            },
            "id": 9337,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9315,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9308,
                    "src": "1519:14:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9316,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9310,
                    "src": "1535:20:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9317,
                    "name": "_weth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9312,
                    "src": "1557:5:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9319,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9306,
                                "src": "1585:21:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9318,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16334,
                              "src": "1564:20:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 9320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1564:43:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 9321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16083,
                          "src": "1564:47:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$6707_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 9322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1564:49:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$6707",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 9323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6372,
                      "src": "1564:59:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 9324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:61:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9325,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9314,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8453,
                  "src": "1500:18:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1500:126:59"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b7320436f726520455448",
                    "id": 9327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1657:15:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c762a0d1da0dd24320216e767d9c3b09b0d2dad0570c310ace73390378b2d6aa",
                      "typeString": "literal_string \"Asks Core ETH\""
                    },
                    "value": "Asks Core ETH"
                  }
                ],
                "id": 9328,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9326,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8576,
                  "src": "1635:21:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "1635:38:59"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9306,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "1371:21:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9337,
                  "src": "1363:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1363:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9308,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "1410:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9337,
                  "src": "1402:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9310,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "1442:20:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9337,
                  "src": "1434:28:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9312,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "1480:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9337,
                  "src": "1472:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:138:59"
            },
            "returnParameters": {
              "id": 9329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:0:59"
            },
            "scope": 9697,
            "src": "1342:419:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9356,
              "nodeType": "Block",
              "src": "2082:100:59",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 9354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 9350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9345,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9340,
                        "src": "2099:12:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9347,
                              "name": "IAsksCoreEth",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9737,
                              "src": "2120:12:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreEth_$9737_$",
                                "typeString": "type(contract IAsksCoreEth)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreEth_$9737_$",
                                "typeString": "type(contract IAsksCoreEth)"
                              }
                            ],
                            "id": 9346,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2115:4:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2115:18:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IAsksCoreEth_$9737",
                            "typeString": "type(contract IAsksCoreEth)"
                          }
                        },
                        "id": 9349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2115:30:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2099:46:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 9353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9351,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9340,
                        "src": "2149:12:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 9352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "src": "2149:26:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2099:76:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9344,
                  "id": 9355,
                  "nodeType": "Return",
                  "src": "2092:83:59"
                }
              ]
            },
            "documentation": {
              "id": 9338,
              "nodeType": "StructuredDocumentation",
              "src": "1767:233:59",
              "text": "@notice Implements EIP-165 for standard interface detection\n @dev `0x01ffc9a7` is the IERC165 interface id\n @param _interfaceId The identifier of a given interface\n @return If the given interface is supported"
            },
            "functionSelector": "01ffc9a7",
            "id": 9357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2014:17:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9340,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "2039:12:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9357,
                  "src": "2032:19:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9339,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:6:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2031:21:59"
            },
            "returnParameters": {
              "id": 9344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9357,
                  "src": "2076:4:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9342,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2076:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2075:6:59"
            },
            "scope": 9697,
            "src": "2005:177:59",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "AsksCoreEth.Ask",
            "id": 9362,
            "members": [
              {
                "constant": false,
                "id": 9359,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2565:6:59",
                "nodeType": "VariableDeclaration",
                "scope": 9362,
                "src": "2557:14:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9358,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2557:7:59",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9361,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "2588:5:59",
                "nodeType": "VariableDeclaration",
                "scope": 9362,
                "src": "2581:12:59",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 9360,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2581:6:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "2543:3:59",
            "nodeType": "StructDefinition",
            "scope": 9697,
            "src": "2536:64:59",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9363,
              "nodeType": "StructuredDocumentation",
              "src": "2606:98:59",
              "text": "@notice The ask for a given NFT\n @dev ERC-721 token contract => ERC-721 token id => Ask"
            },
            "functionSelector": "418f0656",
            "id": 9370,
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "2760:9:59",
            "nodeType": "VariableDeclaration",
            "scope": 9697,
            "src": "2709:60:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask))"
            },
            "typeName": {
              "id": 9369,
              "keyType": {
                "id": 9364,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2717:7:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2709:43:59",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask))"
              },
              "valueType": {
                "id": 9368,
                "keyType": {
                  "id": 9365,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2736:7:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2728:23:59",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                  "typeString": "mapping(uint256 => struct AsksCoreEth.Ask)"
                },
                "valueType": {
                  "id": 9367,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9366,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9362,
                    "src": "2747:3:59"
                  },
                  "referencedDeclaration": 9362,
                  "src": "2747:3:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                    "typeString": "struct AsksCoreEth.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9371,
              "nodeType": "StructuredDocumentation",
              "src": "3715:289:59",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token id of the created ask\n @param seller The seller address of the created ask\n @param price The price of the created ask"
            },
            "id": 9381,
            "name": "AskCreated",
            "nameLocation": "4015:10:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9373,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "4042:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9381,
                  "src": "4026:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4026:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9375,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4073:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9381,
                  "src": "4057:23:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4057:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9377,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "4090:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9381,
                  "src": "4082:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9379,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "4106:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9381,
                  "src": "4098:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4098:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4025:87:59"
            },
            "src": "4009:104:59"
          },
          {
            "body": {
              "id": 9447,
              "nodeType": "Block",
              "src": "4458:726:59",
              "statements": [
                {
                  "assignments": [
                    9394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9394,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "4524:10:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9447,
                      "src": "4516:18:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9393,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4516:7:59",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9401,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9399,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9386,
                        "src": "4569:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9396,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9384,
                            "src": "4545:14:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9395,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "4537:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 9397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4537:23:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5438",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 9398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5371,
                      "src": "4537:31:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 9400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4537:41:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4516:62:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9403,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4663:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4663:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 9405,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9394,
                            "src": "4677:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4663:24:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 9411,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9394,
                              "src": "4732:10:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 9412,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4744:3:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4744:10:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 9408,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9384,
                                  "src": "4699:14:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 9407,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5438,
                                "src": "4691:7:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 9409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4691:23:59",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5438",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 9410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5425,
                            "src": "4691:40:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 9414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4691:64:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4663:92:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "id": 9416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4757:30:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        },
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        }
                      ],
                      "id": 9402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4655:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4655:133:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9418,
                  "nodeType": "ExpressionStatement",
                  "src": "4655:133:59"
                },
                {
                  "expression": {
                    "id": 9426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 9419,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "4840:9:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                            }
                          },
                          "id": 9422,
                          "indexExpression": {
                            "id": 9420,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9384,
                            "src": "4850:14:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4840:25:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                          }
                        },
                        "id": 9423,
                        "indexExpression": {
                          "id": 9421,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9386,
                          "src": "4866:8:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4840:35:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage",
                          "typeString": "struct AsksCoreEth.Ask storage ref"
                        }
                      },
                      "id": 9424,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9359,
                      "src": "4840:42:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9425,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9394,
                      "src": "4885:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4840:55:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9427,
                  "nodeType": "ExpressionStatement",
                  "src": "4840:55:59"
                },
                {
                  "expression": {
                    "id": 9438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 9428,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9370,
                            "src": "5047:9:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                            }
                          },
                          "id": 9431,
                          "indexExpression": {
                            "id": 9429,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9384,
                            "src": "5057:14:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5047:25:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                          }
                        },
                        "id": 9432,
                        "indexExpression": {
                          "id": 9430,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9386,
                          "src": "5073:8:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5047:35:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage",
                          "typeString": "struct AsksCoreEth.Ask storage ref"
                        }
                      },
                      "id": 9433,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9361,
                      "src": "5047:41:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9436,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9388,
                          "src": "5098:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5091:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 9434,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5091:6:59",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5091:14:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "5047:58:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 9439,
                  "nodeType": "ExpressionStatement",
                  "src": "5047:58:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9441,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9384,
                        "src": "5132:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9442,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9386,
                        "src": "5148:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9443,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9394,
                        "src": "5158:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9444,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9388,
                        "src": "5170:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9440,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9381,
                      "src": "5121:10:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5121:56:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9446,
                  "nodeType": "EmitStatement",
                  "src": "5116:61:59"
                }
              ]
            },
            "documentation": {
              "id": 9382,
              "nodeType": "StructuredDocumentation",
              "src": "4119:205:59",
              "text": "@notice Creates an ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask"
            },
            "functionSelector": "c4f0ee36",
            "id": 9448,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9390,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "4445:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "4445:12:59"
              }
            ],
            "name": "createAsk",
            "nameLocation": "4338:9:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9384,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "4365:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9448,
                  "src": "4357:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4357:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9386,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4397:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9448,
                  "src": "4389:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9388,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4423:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9448,
                  "src": "4415:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4415:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4347:88:59"
            },
            "returnParameters": {
              "id": 9392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4458:0:59"
            },
            "scope": 9697,
            "src": "4329:855:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9449,
              "nodeType": "StructuredDocumentation",
              "src": "6132:281:59",
              "text": "@notice Emitted when an ask is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token id of the updated ask\n @param seller The user that updated the ask\n @param price The updated price of the ask"
            },
            "id": 9459,
            "name": "AskPriceUpdated",
            "nameLocation": "6424:15:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9451,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "6456:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9459,
                  "src": "6440:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6440:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9453,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6487:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9459,
                  "src": "6471:23:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6471:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9455,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "6504:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9459,
                  "src": "6496:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6496:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9457,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "6520:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9459,
                  "src": "6512:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6512:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6439:87:59"
            },
            "src": "6418:109:59"
          },
          {
            "body": {
              "id": 9506,
              "nodeType": "Block",
              "src": "6876:471:59",
              "statements": [
                {
                  "assignments": [
                    9473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9473,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "6945:3:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9506,
                      "src": "6933:15:59",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                        "typeString": "struct AsksCoreEth.Ask"
                      },
                      "typeName": {
                        "id": 9472,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9471,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9362,
                          "src": "6933:3:59"
                        },
                        "referencedDeclaration": 9362,
                        "src": "6933:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9479,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9474,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9370,
                        "src": "6951:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                        }
                      },
                      "id": 9476,
                      "indexExpression": {
                        "id": 9475,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9462,
                        "src": "6961:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6951:25:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                      }
                    },
                    "id": 9478,
                    "indexExpression": {
                      "id": 9477,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9464,
                      "src": "6977:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6951:35:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9362_storage",
                      "typeString": "struct AsksCoreEth.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6933:53:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9481,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7044:3:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7044:10:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 9483,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9473,
                            "src": "7058:3:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                              "typeString": "struct AsksCoreEth.Ask storage pointer"
                            }
                          },
                          "id": 9484,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9359,
                          "src": "7058:10:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7044:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c4552",
                        "id": 9486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7070:13:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        },
                        "value": "ONLY_SELLER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        }
                      ],
                      "id": 9480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7036:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7036:48:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9488,
                  "nodeType": "ExpressionStatement",
                  "src": "7036:48:59"
                },
                {
                  "expression": {
                    "id": 9496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9489,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9473,
                        "src": "7237:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask storage pointer"
                        }
                      },
                      "id": 9491,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9361,
                      "src": "7237:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9494,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9466,
                          "src": "7256:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7249:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 9492,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "7249:6:59",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7249:14:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "7237:26:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 9497,
                  "nodeType": "ExpressionStatement",
                  "src": "7237:26:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9499,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9462,
                        "src": "7295:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9500,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9464,
                        "src": "7311:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9501,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7321:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7321:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9503,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9466,
                        "src": "7333:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9498,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9459,
                      "src": "7279:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7279:61:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9505,
                  "nodeType": "EmitStatement",
                  "src": "7274:66:59"
                }
              ]
            },
            "documentation": {
              "id": 9460,
              "nodeType": "StructuredDocumentation",
              "src": "6533:207:59",
              "text": "@notice Updates the ask price for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The ask price to set"
            },
            "functionSelector": "0be48095",
            "id": 9507,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9469,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9468,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "6863:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "6863:12:59"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "6754:11:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9462,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "6783:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9507,
                  "src": "6775:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6775:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9464,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6815:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9507,
                  "src": "6807:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6807:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9466,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "6841:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9507,
                  "src": "6833:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6833:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6765:88:59"
            },
            "returnParameters": {
              "id": 9470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6876:0:59"
            },
            "scope": 9697,
            "src": "6745:602:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9508,
              "nodeType": "StructuredDocumentation",
              "src": "8285:286:59",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token id of the canceled ask\n @param seller The user that canceled the ask\n @param price The price of the canceled ask"
            },
            "id": 9518,
            "name": "AskCanceled",
            "nameLocation": "8582:11:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9510,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "8610:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9518,
                  "src": "8594:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8594:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9512,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8641:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9518,
                  "src": "8625:23:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8625:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "8658:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9518,
                  "src": "8650:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8650:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9516,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "8674:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9518,
                  "src": "8666:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8666:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8593:87:59"
            },
            "src": "8576:105:59"
          },
          {
            "body": {
              "id": 9575,
              "nodeType": "Block",
              "src": "8933:547:59",
              "statements": [
                {
                  "assignments": [
                    9530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9530,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "9001:3:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9575,
                      "src": "8990:14:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask"
                      },
                      "typeName": {
                        "id": 9529,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9528,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9362,
                          "src": "8990:3:59"
                        },
                        "referencedDeclaration": 9362,
                        "src": "8990:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9536,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9531,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9370,
                        "src": "9007:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                        }
                      },
                      "id": 9533,
                      "indexExpression": {
                        "id": 9532,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9521,
                        "src": "9017:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9007:25:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                      }
                    },
                    "id": 9535,
                    "indexExpression": {
                      "id": 9534,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9523,
                      "src": "9033:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9007:35:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9362_storage",
                      "typeString": "struct AsksCoreEth.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8990:52:59"
                },
                {
                  "assignments": [
                    9538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9538,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "9097:6:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9575,
                      "src": "9089:14:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9537,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9089:7:59",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9541,
                  "initialValue": {
                    "expression": {
                      "id": 9539,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9530,
                      "src": "9106:3:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask memory"
                      }
                    },
                    "id": 9540,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9359,
                    "src": "9106:10:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9089:27:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9543,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9199:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9199:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 9545,
                            "name": "seller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9538,
                            "src": "9213:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9199:20:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9547,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9223:3:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9223:10:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 9553,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9523,
                                "src": "9269:8:59",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 9550,
                                    "name": "_tokenContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9521,
                                    "src": "9245:14:59",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 9549,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5438,
                                  "src": "9237:7:59",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 9551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9237:23:59",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$5438",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 9552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5371,
                              "src": "9237:31:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 9554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9237:41:59",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9223:55:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9199:79:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552",
                        "id": 9557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9280:28:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        },
                        "value": "ONLY_SELLER_OR_TOKEN_OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        }
                      ],
                      "id": 9542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9191:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9191:118:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9559,
                  "nodeType": "ExpressionStatement",
                  "src": "9191:118:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9561,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9521,
                        "src": "9337:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9562,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9523,
                        "src": "9353:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9563,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9538,
                        "src": "9363:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9564,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9530,
                          "src": "9371:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                            "typeString": "struct AsksCoreEth.Ask memory"
                          }
                        },
                        "id": 9565,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9361,
                        "src": "9371:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 9560,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9518,
                      "src": "9325:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9325:56:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9567,
                  "nodeType": "EmitStatement",
                  "src": "9320:61:59"
                },
                {
                  "expression": {
                    "id": 9573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9431:42:59",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9568,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9370,
                          "src": "9438:9:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                          }
                        },
                        "id": 9570,
                        "indexExpression": {
                          "id": 9569,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9521,
                          "src": "9448:14:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9438:25:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                        }
                      },
                      "id": 9572,
                      "indexExpression": {
                        "id": 9571,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9523,
                        "src": "9464:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9438:35:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_storage",
                        "typeString": "struct AsksCoreEth.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9574,
                  "nodeType": "ExpressionStatement",
                  "src": "9431:42:59"
                }
              ]
            },
            "documentation": {
              "id": 9519,
              "nodeType": "StructuredDocumentation",
              "src": "8687:158:59",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "id": 9576,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9526,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9525,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "8920:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "8920:12:59"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "8859:9:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9521,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "8877:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "8869:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8869:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9523,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8901:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9576,
                  "src": "8893:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8893:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8868:42:59"
            },
            "returnParameters": {
              "id": 9527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8933:0:59"
            },
            "scope": 9697,
            "src": "8850:630:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9577,
              "nodeType": "StructuredDocumentation",
              "src": "12054:341:59",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token id of the filled ask\n @param buyer The buyer address of the filled ask\n @param seller The seller address of the filled ask\n @param price The price of the filled ask"
            },
            "id": 9589,
            "name": "AskFilled",
            "nameLocation": "12406:9:59",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9579,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "12432:13:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12416:29:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12416:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9581,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12463:7:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12447:23:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12447:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9583,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "12480:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12472:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12472:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9585,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "12495:6:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12487:14:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12487:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9587,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "12511:5:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9589,
                  "src": "12503:13:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12503:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12415:102:59"
            },
            "src": "12400:118:59"
          },
          {
            "body": {
              "id": 9695,
              "nodeType": "Block",
              "src": "12774:1281:59",
              "statements": [
                {
                  "assignments": [
                    9601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9601,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "12842:3:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9695,
                      "src": "12831:14:59",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask"
                      },
                      "typeName": {
                        "id": 9600,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9599,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9362,
                          "src": "12831:3:59"
                        },
                        "referencedDeclaration": 9362,
                        "src": "12831:3:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9362_storage_ptr",
                          "typeString": "struct AsksCoreEth.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9607,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9602,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9370,
                        "src": "12848:9:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                        }
                      },
                      "id": 9604,
                      "indexExpression": {
                        "id": 9603,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9592,
                        "src": "12858:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12848:25:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                      }
                    },
                    "id": 9606,
                    "indexExpression": {
                      "id": 9605,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9594,
                      "src": "12874:8:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12848:35:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9362_storage",
                      "typeString": "struct AsksCoreEth.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12831:52:59"
                },
                {
                  "assignments": [
                    9609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9609,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "12930:6:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9695,
                      "src": "12922:14:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9608,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12922:7:59",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9612,
                  "initialValue": {
                    "expression": {
                      "id": 9610,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9601,
                      "src": "12939:3:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask memory"
                      }
                    },
                    "id": 9611,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9359,
                    "src": "12939:10:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12922:27:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9614,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9609,
                          "src": "13004:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13022:1:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13014:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9615,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13014:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13014:10:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13004:20:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e4143544956455f41534b",
                        "id": 9620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13026:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        },
                        "value": "INACTIVE_ASK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        }
                      ],
                      "id": 9613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12996:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12996:45:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9622,
                  "nodeType": "ExpressionStatement",
                  "src": "12996:45:59"
                },
                {
                  "assignments": [
                    9624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9624,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "13087:5:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9695,
                      "src": "13079:13:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13079:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9627,
                  "initialValue": {
                    "expression": {
                      "id": 9625,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9601,
                      "src": "13095:3:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_memory_ptr",
                        "typeString": "struct AsksCoreEth.Ask memory"
                      }
                    },
                    "id": 9626,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9361,
                    "src": "13095:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13079:25:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9629,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "13176:3:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "13176:9:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 9631,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9624,
                          "src": "13189:5:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13176:18:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f5052494345",
                        "id": 9633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13196:18:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        },
                        "value": "MUST_MATCH_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        }
                      ],
                      "id": 9628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13168:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13168:47:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9635,
                  "nodeType": "ExpressionStatement",
                  "src": "13168:47:59"
                },
                {
                  "assignments": [
                    9637,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9637,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "13288:15:59",
                      "nodeType": "VariableDeclaration",
                      "scope": 9695,
                      "src": "13280:23:59",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9636,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13280:7:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 9648,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9639,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9592,
                        "src": "13330:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9640,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9594,
                        "src": "13346:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9641,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9624,
                        "src": "13356:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 9644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13371:1:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13363:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9642,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13363:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13363:10:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "333030303030",
                        "id": 9646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13375:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        "value": "300000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        }
                      ],
                      "id": 9638,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "13309:20:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 9647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13309:73:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13279:103:59"
                },
                {
                  "expression": {
                    "id": 9657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9649,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9637,
                      "src": "13441:15:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9651,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9637,
                          "src": "13484:15:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13509:1:59",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13501:7:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9652,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13501:7:59",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13501:10:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9650,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8280,
                        "src": "13459:24:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 9656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13459:53:59",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13441:71:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9658,
                  "nodeType": "ExpressionStatement",
                  "src": "13441:71:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9660,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9609,
                        "src": "13602:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9661,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9637,
                        "src": "13610:15:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 9664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13635:1:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 9663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13627:7:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 9662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13627:7:59",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 9665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13627:10:59",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 9666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13639:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 9659,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8721,
                      "src": "13578:23:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13578:67:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9668,
                  "nodeType": "ExpressionStatement",
                  "src": "13578:67:59"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9672,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9592,
                        "src": "13833:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9673,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9609,
                        "src": "13849:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9674,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "13857:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13857:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9676,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9594,
                        "src": "13869:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9669,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9303,
                        "src": "13799:20:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 9671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16333,
                      "src": "13799:33:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 9677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13799:79:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9678,
                  "nodeType": "ExpressionStatement",
                  "src": "13799:79:59"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9680,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9592,
                        "src": "13904:14:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9681,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9594,
                        "src": "13920:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "13930:3:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13930:10:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9684,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9609,
                        "src": "13942:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9685,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9624,
                        "src": "13950:5:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9679,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9589,
                      "src": "13894:9:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,address,uint256)"
                      }
                    },
                    "id": 9686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13894:62:59",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9687,
                  "nodeType": "EmitStatement",
                  "src": "13889:67:59"
                },
                {
                  "expression": {
                    "id": 9693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "14006:42:59",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9688,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9370,
                          "src": "14013:9:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreEth.Ask storage ref))"
                          }
                        },
                        "id": 9690,
                        "indexExpression": {
                          "id": 9689,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9592,
                          "src": "14023:14:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14013:25:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9362_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreEth.Ask storage ref)"
                        }
                      },
                      "id": 9692,
                      "indexExpression": {
                        "id": 9691,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9594,
                        "src": "14039:8:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14013:35:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9362_storage",
                        "typeString": "struct AsksCoreEth.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9694,
                  "nodeType": "ExpressionStatement",
                  "src": "14006:42:59"
                }
              ]
            },
            "documentation": {
              "id": 9590,
              "nodeType": "StructuredDocumentation",
              "src": "12524:156:59",
              "text": "@notice Fills the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token"
            },
            "functionSelector": "68b5a9a8",
            "id": 9696,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9597,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9596,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "12761:12:59"
                },
                "nodeType": "ModifierInvocation",
                "src": "12761:12:59"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "12694:7:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9592,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "12710:14:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9696,
                  "src": "12702:22:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12702:7:59",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9594,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "12734:8:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 9696,
                  "src": "12726:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12726:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12701:42:59"
            },
            "returnParameters": {
              "id": 9598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12774:0:59"
            },
            "scope": 9697,
            "src": "12685:1370:59",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9698,
        "src": "668:13389:59",
        "usedErrors": []
      }
    ],
    "src": "36:14022:59"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-04-04T14:37:20.156Z",
  "devdoc": {
    "author": "kulkarohan",
    "events": {
      "AskCanceled(address,uint256,address,uint256)": {
        "params": {
          "price": "The price of the canceled ask",
          "seller": "The user that canceled the ask",
          "tokenContract": "The ERC-721 token address of the canceled ask",
          "tokenId": "The ERC-721 token id of the canceled ask"
        }
      },
      "AskCreated(address,uint256,address,uint256)": {
        "params": {
          "price": "The price of the created ask",
          "seller": "The seller address of the created ask",
          "tokenContract": "The ERC-721 token address of the created ask",
          "tokenId": "The ERC-721 token id of the created ask"
        }
      },
      "AskFilled(address,uint256,address,address,uint256)": {
        "params": {
          "buyer": "The buyer address of the filled ask",
          "price": "The price of the filled ask",
          "seller": "The seller address of the filled ask",
          "tokenContract": "The ERC-721 token address of the filled ask",
          "tokenId": "The ERC-721 token id of the filled ask"
        }
      },
      "AskPriceUpdated(address,uint256,address,uint256)": {
        "params": {
          "price": "The updated price of the ask",
          "seller": "The user that updated the ask",
          "tokenContract": "The ERC-721 token address of the updated ask",
          "tokenId": "The ERC-721 token id of the updated ask"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
        "details": "This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.",
        "params": {
          "_amount": "The total sale amount",
          "_payoutCurrency": "The ERC-20 token address to payout royalties in, or address(0) for ETH",
          "_tokenContract": "The NFT Contract to get royalty information from",
          "_tokenId": ", The Token ID to get royalty information from"
        },
        "returns": {
          "_0": "The remaining funds after paying out royalties"
        }
      },
      "cancelAsk(address,uint256)": {
        "params": {
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The id of the ERC-721 token"
        }
      },
      "constructor": {
        "params": {
          "_erc721TransferHelper": "The ZORA ERC-721 Transfer Helper address",
          "_protocolFeeSettings": "The ZORA Protocol Fee Settings address",
          "_royaltyEngine": "The Manifold Royalty Engine address",
          "_weth": "The WETH token address"
        }
      },
      "createAsk(address,uint256,uint256)": {
        "params": {
          "_price": "The price to fill the ask",
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The id of the ERC-721 token"
        }
      },
      "fillAsk(address,uint256)": {
        "params": {
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The id of the ERC-721 token"
        }
      },
      "setAskPrice(address,uint256,uint256)": {
        "params": {
          "_price": "The ask price to set",
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The id of the ERC-721 token"
        }
      },
      "setRoyaltyEngineAddress(address)": {
        "details": "emergency use only – requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI",
        "params": {
          "_royaltyEngine": "The address for the new royalty engine"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "`0x01ffc9a7` is the IERC165 interface id",
        "params": {
          "_interfaceId": "The identifier of a given interface"
        },
        "returns": {
          "_0": "If the given interface is supported"
        }
      }
    },
    "stateVariables": {
      "askForNFT": {
        "details": "ERC-721 token contract => ERC-721 token id => Ask"
      }
    },
    "title": "Asks Core ETH",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AskCanceled(address,uint256,address,uint256)": {
        "notice": "Emitted when an ask is canceled"
      },
      "AskCreated(address,uint256,address,uint256)": {
        "notice": "Emitted when an ask is created"
      },
      "AskFilled(address,uint256,address,address,uint256)": {
        "notice": "Emitted when an ask is filled"
      },
      "AskPriceUpdated(address,uint256,address,uint256)": {
        "notice": "Emitted when an ask is updated"
      },
      "RoyaltyPayout(address,uint256,address,uint256)": {
        "notice": "Emitted when royalties are paid"
      }
    },
    "kind": "user",
    "methods": {
      "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
        "notice": "Pays out royalties for NFTs based on the information returned by the royalty engine"
      },
      "askForNFT(address,uint256)": {
        "notice": "The ask for a given NFT"
      },
      "cancelAsk(address,uint256)": {
        "notice": "Cancels the ask for a given NFT"
      },
      "createAsk(address,uint256,uint256)": {
        "notice": "Creates an ask for a given NFT"
      },
      "erc721TransferHelper()": {
        "notice": "The ZORA ERC-721 Transfer Helper"
      },
      "fillAsk(address,uint256)": {
        "notice": "Fills the ask for a given NFT"
      },
      "name()": {
        "notice": "The module name"
      },
      "registrar()": {
        "notice": "The ZORA Module Registrar"
      },
      "setAskPrice(address,uint256,uint256)": {
        "notice": "Updates the ask price for a given NFT"
      },
      "setRoyaltyEngineAddress(address)": {
        "notice": "Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy"
      },
      "supportsInterface(bytes4)": {
        "notice": "Implements EIP-165 for standard interface detection"
      }
    },
    "notice": "Module for minimal ETH asks for ERC-721 tokens",
    "version": 1
  }
}