{
  "contractName": "IncomingTransferSupportV1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20TransferHelper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "erc20TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC20TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20TransferHelper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"erc20TransferHelper\",\"outputs\":[{\"internalType\":\"contract ERC20TransferHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"tbtstl <t@zora.co>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IncomingTransferSupportV1\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"erc20TransferHelper()\":{\"notice\":\"The ZORA ERC-20 Transfer Helper\"}},\"notice\":\"This contract extension supports receiving funds from an external user\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol\":\"IncomingTransferSupportV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbc4803332d45dff58f865ed21c942fe4668e47cc7196c8dfe84102040b1d70f\",\"dweb:/ipfs/QmXhZLsocznRWCSyhjo3vo66Z1VsuuNptAVb6ASPYsWtGx\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/ZoraModuleManager.sol\":{\"keccak256\":\"0x516cbb1377511ada04fdd9bb12ef5ab7ec8694c7722f9252e7f7664dc274b435\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://888a20823cafe1044f8d902c340295ad1d0b4496f9115f1cce7d5a445eeac56f\",\"dweb:/ipfs/Qmcss7A3T7eDqtwvFS9azwXNeRbTGAHbwdcE1X4JivNZf6\"]},\"project:/contracts/auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol\":{\"keccak256\":\"0xff7d072720136e7be2ee226a2dfc22a9cf60c2b4d9ecd96a732d89680cb7416d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://75331ba64befdf18ddae428cfbe4c211e0aaea97cc0427f43854561ab8761805\",\"dweb:/ipfs/QmWRbJd61RpfRNKmiyrEzJ4Z6KoJq4mUXNmBeUPKM8MC8t\"]},\"project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol\":{\"keccak256\":\"0xc9fcd245467d24b64528581a38fcf0f07568f107f520edbb93c287c11f745bd3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2284e0522eff27797026547b2162ae656458d0c33f71cc1a98efe9117265e35f\",\"dweb:/ipfs/QmQbnLjat7YZro2Ko3XXn7Hi8BMgVnW6BTNj9aaMuMuKM6\"]},\"project:/contracts/transferHelpers/BaseTransferHelper.sol\":{\"keccak256\":\"0xb06a76885ef1a8f1fbdd6c4472a846cdff7ebf7c92b03f5786a0f261798e3f46\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://62deee4eeb9f070b17ce7bf2ef7b0bb0c163f500a8c70f13eba35b010d640575\",\"dweb:/ipfs/QmRnQaTqJBMXW4Vgjz62N2YDAYKtj8xVwQ1WhiCyXwLpKp\"]},\"project:/contracts/transferHelpers/ERC20TransferHelper.sol\":{\"keccak256\":\"0xc859f86b8ab62e2b98840360995426c70171e74f68fd5ed63c7d34cdfee00623\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://33ecf220a30ac6a6b56a98d58fcca6ee38fc4bcde498e8e33750e675c5d77ab3\",\"dweb:/ipfs/QmVn2cxhEiQdD11f2b1vaQ1uGrXHKanxBXxjP5P3SWdsPz\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161012d38038061012d83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805160a561008860003960006031015260a56000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638f9d325114602d575b600080fd5b60537f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f3fea264697066735822122035c63a53c9fa8f1972743f86021f49a35116864a19aa0ebf952c07ce057a165564736f6c634300080a0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80638f9d325114602d575b600080fd5b60537f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f3fea264697066735822122035c63a53c9fa8f1972743f86021f49a35116864a19aa0ebf952c07ce057a165564736f6c634300080a0033",
  "immutableReferences": {
    "8470": [
      {
        "length": 32,
        "start": 49
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:80"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:80",
                "type": ""
              }
            ],
            "src": "14:290:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:248:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "144:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "154:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "166:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "177:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "162:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "154:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "196:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "211:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "227:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "232:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "223:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "223:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "236:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "207:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "207:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "189:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "189:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20TransferHelper_$16267__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "113:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "124:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "135:4:80",
                "type": ""
              }
            ],
            "src": "14:232:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_ERC20TransferHelper_$16267__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "453:1489:52:-:0;;;638:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;690:63:52;;;453:1489;;14:290:80;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:80;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:80:o;:::-;453:1489:52;;;;;;;;;;;;",
  "deployedSourceMap": "453:1489:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:56;;;;;;;;-1:-1:-1;;;;;207:32:80;;;189:51;;177:2;162:18;575:56:52;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.10;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {ERC20TransferHelper} from \"../../../transferHelpers/ERC20TransferHelper.sol\";\n\n/// @title IncomingTransferSupportV1\n/// @author tbtstl <t@zora.co>\n/// @notice This contract extension supports receiving funds from an external user\ncontract IncomingTransferSupportV1 {\n    using SafeERC20 for IERC20;\n\n    /// @notice The ZORA ERC-20 Transfer Helper\n    ERC20TransferHelper public immutable erc20TransferHelper;\n\n    constructor(address _erc20TransferHelper) {\n        erc20TransferHelper = ERC20TransferHelper(_erc20TransferHelper);\n    }\n\n    /// @notice Handle an incoming funds transfer, ensuring the sent amount is valid and the sender is solvent\n    /// @param _amount The amount to be received\n    /// @param _currency The currency to receive funds in, or address(0) for ETH\n    function _handleIncomingTransfer(uint256 _amount, address _currency) internal {\n        if (_currency == address(0)) {\n            require(msg.value >= _amount, \"_handleIncomingTransfer msg value less than expected amount\");\n        } else {\n            // We must check the balance that was actually transferred to this contract,\n            // as some tokens impose a transfer fee and would not actually transfer the\n            // full amount to the market, resulting in potentally locked funds\n            IERC20 token = IERC20(_currency);\n            uint256 beforeBalance = token.balanceOf(address(this));\n            erc20TransferHelper.safeTransferFrom(_currency, msg.sender, address(this), _amount);\n            uint256 afterBalance = token.balanceOf(address(this));\n            require(beforeBalance + _amount == afterBalance, \"_handleIncomingTransfer token transfer call did not transfer expected amount\");\n        }\n    }\n}\n",
  "sourcePath": "/Users/ds/Documents/rarible/scripts/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
  "ast": {
    "absolutePath": "project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
    "exportedSymbols": {
      "ERC20TransferHelper": [
        16267
      ],
      "IERC20": [
        4207
      ],
      "IncomingTransferSupportV1": [
        8558
      ],
      "SafeERC20": [
        4456
      ]
    },
    "id": 8559,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8455,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:52"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 8457,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 4208,
        "src": "61:70:52",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8456,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:6:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 8459,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 4457,
        "src": "132:82:52",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8458,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "140:9:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/transferHelpers/ERC20TransferHelper.sol",
        "file": "../../../transferHelpers/ERC20TransferHelper.sol",
        "id": 8461,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 16268,
        "src": "215:85:52",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8460,
              "name": "ERC20TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "223:19:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IncomingTransferSupportV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8462,
          "nodeType": "StructuredDocumentation",
          "src": "302:151:52",
          "text": "@title IncomingTransferSupportV1\n @author tbtstl <t@zora.co>\n @notice This contract extension supports receiving funds from an external user"
        },
        "fullyImplemented": true,
        "id": 8558,
        "linearizedBaseContracts": [
          8558
        ],
        "name": "IncomingTransferSupportV1",
        "nameLocation": "462:25:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8466,
            "libraryName": {
              "id": 8463,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4456,
              "src": "500:9:52"
            },
            "nodeType": "UsingForDirective",
            "src": "494:27:52",
            "typeName": {
              "id": 8465,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8464,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4207,
                "src": "514:6:52"
              },
              "referencedDeclaration": 4207,
              "src": "514:6:52",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4207",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 8467,
              "nodeType": "StructuredDocumentation",
              "src": "527:43:52",
              "text": "@notice The ZORA ERC-20 Transfer Helper"
            },
            "functionSelector": "8f9d3251",
            "id": 8470,
            "mutability": "immutable",
            "name": "erc20TransferHelper",
            "nameLocation": "612:19:52",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "575:56:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
              "typeString": "contract ERC20TransferHelper"
            },
            "typeName": {
              "id": 8469,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8468,
                "name": "ERC20TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16267,
                "src": "575:19:52"
              },
              "referencedDeclaration": 16267,
              "src": "575:19:52",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                "typeString": "contract ERC20TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8481,
              "nodeType": "Block",
              "src": "680:80:52",
              "statements": [
                {
                  "expression": {
                    "id": 8479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8475,
                      "name": "erc20TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8470,
                      "src": "690:19:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                        "typeString": "contract ERC20TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8477,
                          "name": "_erc20TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8472,
                          "src": "732:20:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8476,
                        "name": "ERC20TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16267,
                        "src": "712:19:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20TransferHelper_$16267_$",
                          "typeString": "type(contract ERC20TransferHelper)"
                        }
                      },
                      "id": 8478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "712:41:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                        "typeString": "contract ERC20TransferHelper"
                      }
                    },
                    "src": "690:63:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                      "typeString": "contract ERC20TransferHelper"
                    }
                  },
                  "id": 8480,
                  "nodeType": "ExpressionStatement",
                  "src": "690:63:52"
                }
              ]
            },
            "id": 8482,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8472,
                  "mutability": "mutable",
                  "name": "_erc20TransferHelper",
                  "nameLocation": "658:20:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8482,
                  "src": "650:28:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "649:30:52"
            },
            "returnParameters": {
              "id": 8474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:52"
            },
            "scope": 8558,
            "src": "638:122:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8556,
              "nodeType": "Block",
              "src": "1085:855:52",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8490,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8487,
                      "src": "1099:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1112:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8491,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1112:7:52",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1112:10:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1099:23:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8554,
                    "nodeType": "Block",
                    "src": "1247:687:52",
                    "statements": [
                      {
                        "assignments": [
                          8507
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8507,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "1524:5:52",
                            "nodeType": "VariableDeclaration",
                            "scope": 8554,
                            "src": "1517:12:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4207",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 8506,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8505,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4207,
                                "src": "1517:6:52"
                              },
                              "referencedDeclaration": 4207,
                              "src": "1517:6:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8511,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 8509,
                              "name": "_currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8487,
                              "src": "1539:9:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8508,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4207,
                            "src": "1532:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$4207_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 8510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1532:17:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4207",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1517:32:52"
                      },
                      {
                        "assignments": [
                          8513
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8513,
                            "mutability": "mutable",
                            "name": "beforeBalance",
                            "nameLocation": "1571:13:52",
                            "nodeType": "VariableDeclaration",
                            "scope": 8554,
                            "src": "1563:21:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8512,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1563:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8521,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8518,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1611:4:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                ],
                                "id": 8517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1603:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8516,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1603:7:52",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1603:13:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 8514,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8507,
                              "src": "1587:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4146,
                            "src": "1587:15:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 8520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1587:30:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1563:54:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8525,
                              "name": "_currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8487,
                              "src": "1668:9:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 8526,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1679:3:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1679:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 8530,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1699:4:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                ],
                                "id": 8529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1691:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8528,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1691:7:52",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1691:13:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8532,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8485,
                              "src": "1706:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8522,
                              "name": "erc20TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8470,
                              "src": "1631:19:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                                "typeString": "contract ERC20TransferHelper"
                              }
                            },
                            "id": 8524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16266,
                            "src": "1631:36:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256) external"
                            }
                          },
                          "id": 8533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1631:83:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8534,
                        "nodeType": "ExpressionStatement",
                        "src": "1631:83:52"
                      },
                      {
                        "assignments": [
                          8536
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8536,
                            "mutability": "mutable",
                            "name": "afterBalance",
                            "nameLocation": "1736:12:52",
                            "nodeType": "VariableDeclaration",
                            "scope": 8554,
                            "src": "1728:20:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8535,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1728:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8544,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8541,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1775:4:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                ],
                                "id": 8540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1767:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8539,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1767:7:52",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1767:13:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 8537,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8507,
                              "src": "1751:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4146,
                            "src": "1751:15:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 8543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1751:30:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1728:53:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 8548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 8546,
                                  "name": "beforeBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8513,
                                  "src": "1803:13:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 8547,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8485,
                                  "src": "1819:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1803:23:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 8549,
                                "name": "afterBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8536,
                                "src": "1830:12:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1803:39:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e207472616e736665722063616c6c20646964206e6f74207472616e7366657220657870656374656420616d6f756e74",
                              "id": 8551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1844:78:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b65aa3af0e641ce457a9e84d8e0216edfc393ae83aa6421dd6a44678137ac33c",
                                "typeString": "literal_string \"_handleIncomingTransfer token transfer call did not transfer expected amount\""
                              },
                              "value": "_handleIncomingTransfer token transfer call did not transfer expected amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b65aa3af0e641ce457a9e84d8e0216edfc393ae83aa6421dd6a44678137ac33c",
                                "typeString": "literal_string \"_handleIncomingTransfer token transfer call did not transfer expected amount\""
                              }
                            ],
                            "id": 8545,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1795:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1795:128:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8553,
                        "nodeType": "ExpressionStatement",
                        "src": "1795:128:52"
                      }
                    ]
                  },
                  "id": 8555,
                  "nodeType": "IfStatement",
                  "src": "1095:839:52",
                  "trueBody": {
                    "id": 8504,
                    "nodeType": "Block",
                    "src": "1124:117:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8497,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1146:3:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 8498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1146:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 8499,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8485,
                                "src": "1159:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1146:20:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7565206c657373207468616e20657870656374656420616d6f756e74",
                              "id": 8501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1168:61:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0a711e744101fa8eb9530b2ad457a5beb5398212856e071b8bc9b20ff8107dc2",
                                "typeString": "literal_string \"_handleIncomingTransfer msg value less than expected amount\""
                              },
                              "value": "_handleIncomingTransfer msg value less than expected amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0a711e744101fa8eb9530b2ad457a5beb5398212856e071b8bc9b20ff8107dc2",
                                "typeString": "literal_string \"_handleIncomingTransfer msg value less than expected amount\""
                              }
                            ],
                            "id": 8496,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1138:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1138:92:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8503,
                        "nodeType": "ExpressionStatement",
                        "src": "1138:92:52"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8483,
              "nodeType": "StructuredDocumentation",
              "src": "766:236:52",
              "text": "@notice Handle an incoming funds transfer, ensuring the sent amount is valid and the sender is solvent\n @param _amount The amount to be received\n @param _currency The currency to receive funds in, or address(0) for ETH"
            },
            "id": 8557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handleIncomingTransfer",
            "nameLocation": "1016:23:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8485,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1048:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8557,
                  "src": "1040:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8487,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "1065:9:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8557,
                  "src": "1057:17:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:36:52"
            },
            "returnParameters": {
              "id": 8489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1085:0:52"
            },
            "scope": 8558,
            "src": "1007:933:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8559,
        "src": "453:1489:52",
        "usedErrors": []
      }
    ],
    "src": "36:1907:52"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
    "exportedSymbols": {
      "ERC20TransferHelper": [
        16267
      ],
      "IERC20": [
        4207
      ],
      "IncomingTransferSupportV1": [
        8558
      ],
      "SafeERC20": [
        4456
      ]
    },
    "id": 8559,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8455,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:52"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 8457,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 4208,
        "src": "61:70:52",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8456,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:6:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 8459,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 4457,
        "src": "132:82:52",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8458,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "140:9:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/transferHelpers/ERC20TransferHelper.sol",
        "file": "../../../transferHelpers/ERC20TransferHelper.sol",
        "id": 8461,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8559,
        "sourceUnit": 16268,
        "src": "215:85:52",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8460,
              "name": "ERC20TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "223:19:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IncomingTransferSupportV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8462,
          "nodeType": "StructuredDocumentation",
          "src": "302:151:52",
          "text": "@title IncomingTransferSupportV1\n @author tbtstl <t@zora.co>\n @notice This contract extension supports receiving funds from an external user"
        },
        "fullyImplemented": true,
        "id": 8558,
        "linearizedBaseContracts": [
          8558
        ],
        "name": "IncomingTransferSupportV1",
        "nameLocation": "462:25:52",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8466,
            "libraryName": {
              "id": 8463,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4456,
              "src": "500:9:52"
            },
            "nodeType": "UsingForDirective",
            "src": "494:27:52",
            "typeName": {
              "id": 8465,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8464,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4207,
                "src": "514:6:52"
              },
              "referencedDeclaration": 4207,
              "src": "514:6:52",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4207",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 8467,
              "nodeType": "StructuredDocumentation",
              "src": "527:43:52",
              "text": "@notice The ZORA ERC-20 Transfer Helper"
            },
            "functionSelector": "8f9d3251",
            "id": 8470,
            "mutability": "immutable",
            "name": "erc20TransferHelper",
            "nameLocation": "612:19:52",
            "nodeType": "VariableDeclaration",
            "scope": 8558,
            "src": "575:56:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
              "typeString": "contract ERC20TransferHelper"
            },
            "typeName": {
              "id": 8469,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8468,
                "name": "ERC20TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16267,
                "src": "575:19:52"
              },
              "referencedDeclaration": 16267,
              "src": "575:19:52",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                "typeString": "contract ERC20TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8481,
              "nodeType": "Block",
              "src": "680:80:52",
              "statements": [
                {
                  "expression": {
                    "id": 8479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8475,
                      "name": "erc20TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8470,
                      "src": "690:19:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                        "typeString": "contract ERC20TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8477,
                          "name": "_erc20TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8472,
                          "src": "732:20:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8476,
                        "name": "ERC20TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16267,
                        "src": "712:19:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20TransferHelper_$16267_$",
                          "typeString": "type(contract ERC20TransferHelper)"
                        }
                      },
                      "id": 8478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "712:41:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                        "typeString": "contract ERC20TransferHelper"
                      }
                    },
                    "src": "690:63:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                      "typeString": "contract ERC20TransferHelper"
                    }
                  },
                  "id": 8480,
                  "nodeType": "ExpressionStatement",
                  "src": "690:63:52"
                }
              ]
            },
            "id": 8482,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8472,
                  "mutability": "mutable",
                  "name": "_erc20TransferHelper",
                  "nameLocation": "658:20:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8482,
                  "src": "650:28:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "649:30:52"
            },
            "returnParameters": {
              "id": 8474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:52"
            },
            "scope": 8558,
            "src": "638:122:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8556,
              "nodeType": "Block",
              "src": "1085:855:52",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8490,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8487,
                      "src": "1099:9:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:1:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1112:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8491,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1112:7:52",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1112:10:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1099:23:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8554,
                    "nodeType": "Block",
                    "src": "1247:687:52",
                    "statements": [
                      {
                        "assignments": [
                          8507
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8507,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "1524:5:52",
                            "nodeType": "VariableDeclaration",
                            "scope": 8554,
                            "src": "1517:12:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4207",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 8506,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8505,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4207,
                                "src": "1517:6:52"
                              },
                              "referencedDeclaration": 4207,
                              "src": "1517:6:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8511,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 8509,
                              "name": "_currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8487,
                              "src": "1539:9:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8508,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4207,
                            "src": "1532:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$4207_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 8510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1532:17:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4207",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1517:32:52"
                      },
                      {
                        "assignments": [
                          8513
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8513,
                            "mutability": "mutable",
                            "name": "beforeBalance",
                            "nameLocation": "1571:13:52",
                            "nodeType": "VariableDeclaration",
                            "scope": 8554,
                            "src": "1563:21:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8512,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1563:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8521,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8518,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1611:4:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                ],
                                "id": 8517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1603:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8516,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1603:7:52",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1603:13:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 8514,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8507,
                              "src": "1587:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4146,
                            "src": "1587:15:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 8520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1587:30:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1563:54:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8525,
                              "name": "_currency",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8487,
                              "src": "1668:9:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 8526,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1679:3:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1679:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 8530,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1699:4:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                ],
                                "id": 8529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1691:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8528,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1691:7:52",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1691:13:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8532,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8485,
                              "src": "1706:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8522,
                              "name": "erc20TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8470,
                              "src": "1631:19:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20TransferHelper_$16267",
                                "typeString": "contract ERC20TransferHelper"
                              }
                            },
                            "id": 8524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16266,
                            "src": "1631:36:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256) external"
                            }
                          },
                          "id": 8533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1631:83:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8534,
                        "nodeType": "ExpressionStatement",
                        "src": "1631:83:52"
                      },
                      {
                        "assignments": [
                          8536
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8536,
                            "mutability": "mutable",
                            "name": "afterBalance",
                            "nameLocation": "1736:12:52",
                            "nodeType": "VariableDeclaration",
                            "scope": 8554,
                            "src": "1728:20:52",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8535,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1728:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8544,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8541,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1775:4:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IncomingTransferSupportV1_$8558",
                                    "typeString": "contract IncomingTransferSupportV1"
                                  }
                                ],
                                "id": 8540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1767:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8539,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1767:7:52",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1767:13:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 8537,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8507,
                              "src": "1751:5:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 8538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4146,
                            "src": "1751:15:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 8543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1751:30:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1728:53:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 8548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 8546,
                                  "name": "beforeBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8513,
                                  "src": "1803:13:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 8547,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8485,
                                  "src": "1819:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1803:23:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 8549,
                                "name": "afterBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8536,
                                "src": "1830:12:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1803:39:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e207472616e736665722063616c6c20646964206e6f74207472616e7366657220657870656374656420616d6f756e74",
                              "id": 8551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1844:78:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b65aa3af0e641ce457a9e84d8e0216edfc393ae83aa6421dd6a44678137ac33c",
                                "typeString": "literal_string \"_handleIncomingTransfer token transfer call did not transfer expected amount\""
                              },
                              "value": "_handleIncomingTransfer token transfer call did not transfer expected amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b65aa3af0e641ce457a9e84d8e0216edfc393ae83aa6421dd6a44678137ac33c",
                                "typeString": "literal_string \"_handleIncomingTransfer token transfer call did not transfer expected amount\""
                              }
                            ],
                            "id": 8545,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1795:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1795:128:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8553,
                        "nodeType": "ExpressionStatement",
                        "src": "1795:128:52"
                      }
                    ]
                  },
                  "id": 8555,
                  "nodeType": "IfStatement",
                  "src": "1095:839:52",
                  "trueBody": {
                    "id": 8504,
                    "nodeType": "Block",
                    "src": "1124:117:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8497,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1146:3:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 8498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1146:9:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 8499,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8485,
                                "src": "1159:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1146:20:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7565206c657373207468616e20657870656374656420616d6f756e74",
                              "id": 8501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1168:61:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0a711e744101fa8eb9530b2ad457a5beb5398212856e071b8bc9b20ff8107dc2",
                                "typeString": "literal_string \"_handleIncomingTransfer msg value less than expected amount\""
                              },
                              "value": "_handleIncomingTransfer msg value less than expected amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0a711e744101fa8eb9530b2ad457a5beb5398212856e071b8bc9b20ff8107dc2",
                                "typeString": "literal_string \"_handleIncomingTransfer msg value less than expected amount\""
                              }
                            ],
                            "id": 8496,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1138:7:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 8502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1138:92:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8503,
                        "nodeType": "ExpressionStatement",
                        "src": "1138:92:52"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 8483,
              "nodeType": "StructuredDocumentation",
              "src": "766:236:52",
              "text": "@notice Handle an incoming funds transfer, ensuring the sent amount is valid and the sender is solvent\n @param _amount The amount to be received\n @param _currency The currency to receive funds in, or address(0) for ETH"
            },
            "id": 8557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_handleIncomingTransfer",
            "nameLocation": "1016:23:52",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8485,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1048:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8557,
                  "src": "1040:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8487,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "1065:9:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 8557,
                  "src": "1057:17:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1039:36:52"
            },
            "returnParameters": {
              "id": 8489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1085:0:52"
            },
            "scope": 8558,
            "src": "1007:933:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8559,
        "src": "453:1489:52",
        "usedErrors": []
      }
    ],
    "src": "36:1907:52"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-04-04T14:37:20.139Z",
  "devdoc": {
    "author": "tbtstl <t@zora.co>",
    "kind": "dev",
    "methods": {},
    "title": "IncomingTransferSupportV1",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "erc20TransferHelper()": {
        "notice": "The ZORA ERC-20 Transfer Helper"
      }
    },
    "notice": "This contract extension supports receiving funds from an external user",
    "version": 1
  }
}