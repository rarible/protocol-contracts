{
  "contractName": "AsksV1_1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc721TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeSettings",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wethAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "finder",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sellerFundsRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "askCurrency",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "findersFeeBps",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "askPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksV1_1.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userA",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "userB",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct UniversalExchangeEventV1.ExchangeDetails",
          "name": "a",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct UniversalExchangeEventV1.ExchangeDetails",
          "name": "b",
          "type": "tuple"
        }
      ],
      "name": "ExchangeExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyPayout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payoutCurrency",
          "type": "address"
        }
      ],
      "name": "_handleRoyaltyEnginePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "askForNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sellerFundsRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "askCurrency",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "findersFeeBps",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "askPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC20TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC721TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        }
      ],
      "name": "setRoyaltyEngineAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_askPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_askCurrency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sellerFundsRecipient",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_findersFeeBps",
          "type": "uint16"
        }
      ],
      "name": "createAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_askPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_askCurrency",
          "type": "address"
        }
      ],
      "name": "setAskPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_fillCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fillAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_finder",
          "type": "address"
        }
      ],
      "name": "fillAsk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20TransferHelper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc721TransferHelper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeSettings\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AsksV1_1.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AsksV1_1.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"finder\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AsksV1_1.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct AsksV1_1.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userB\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct UniversalExchangeEventV1.ExchangeDetails\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct UniversalExchangeEventV1.ExchangeDetails\",\"name\":\"b\",\"type\":\"tuple\"}],\"name\":\"ExchangeExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyPayout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payoutCurrency\",\"type\":\"address\"}],\"name\":\"_handleRoyaltyEnginePayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"askForNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"askCurrency\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"findersFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"askPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_askPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_askCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sellerFundsRecipient\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_findersFeeBps\",\"type\":\"uint16\"}],\"name\":\"createAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20TransferHelper\",\"outputs\":[{\"internalType\":\"contract ERC20TransferHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721TransferHelper\",\"outputs\":[{\"internalType\":\"contract ERC721TransferHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fillCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fillAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"}],\"name\":\"fillAsk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_askPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_askCurrency\",\"type\":\"address\"}],\"name\":\"setAskPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"}],\"name\":\"setRoyaltyEngineAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"tbtstl <t@zora.co>\",\"events\":{\"AskCanceled(address,uint256,(address,address,address,uint16,uint256))\":{\"params\":{\"ask\":\"The metadata of the canceled ask\",\"tokenContract\":\"The ERC-721 token address of the canceled ask\",\"tokenId\":\"The ERC-721 token ID of the canceled ask\"}},\"AskCreated(address,uint256,(address,address,address,uint16,uint256))\":{\"params\":{\"ask\":\"The metadata of the created ask\",\"tokenContract\":\"The ERC-721 token address of the created ask\",\"tokenId\":\"The ERC-721 token ID of the created ask\"}},\"AskFilled(address,uint256,address,address,(address,address,address,uint16,uint256))\":{\"params\":{\"ask\":\"The metadata of the filled ask\",\"buyer\":\"The buyer address of the filled ask\",\"finder\":\"The address of finder who referred the ask\",\"tokenContract\":\"The ERC-721 token address of the filled ask\",\"tokenId\":\"The ERC-721 token ID of the filled ask\"}},\"AskPriceUpdated(address,uint256,(address,address,address,uint16,uint256))\":{\"params\":{\"ask\":\"The metadata of the updated ask\",\"tokenContract\":\"The ERC-721 token address of the updated ask\",\"tokenId\":\"The ERC-721 token ID of the updated ask\"}}},\"kind\":\"dev\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"details\":\"This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.\",\"params\":{\"_amount\":\"The total sale amount\",\"_payoutCurrency\":\"The ERC-20 token address to payout royalties in, or address(0) for ETH\",\"_tokenContract\":\"The NFT Contract to get royalty information from\",\"_tokenId\":\", The Token ID to get royalty information from\"},\"returns\":{\"_0\":\"The remaining funds after paying out royalties\"}},\"cancelAsk(address,uint256)\":{\"params\":{\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The ID of the ERC-721 token\"}},\"constructor\":{\"params\":{\"_erc20TransferHelper\":\"The ZORA ERC-20 Transfer Helper address\",\"_erc721TransferHelper\":\"The ZORA ERC-721 Transfer Helper address\",\"_protocolFeeSettings\":\"The ZoraProtocolFeeSettingsV1 address\",\"_royaltyEngine\":\"The Manifold Royalty Engine address\",\"_wethAddress\":\"The WETH token address\"}},\"createAsk(address,uint256,uint256,address,address,uint16)\":{\"params\":{\"_askCurrency\":\"The address of the ERC-20 token required to fill, or address(0) for ETH\",\"_askPrice\":\"The price to fill the ask\",\"_findersFeeBps\":\"The bps of the ask price (post-royalties) to be sent to the referrer of the sale\",\"_sellerFundsRecipient\":\"The address to send funds once the ask is filled\",\"_tokenContract\":\"The address of the ERC-721 token to be sold\",\"_tokenId\":\"The ID of the ERC-721 token to be sold\"}},\"fillAsk(address,uint256,address,uint256,address)\":{\"params\":{\"_fillAmount\":\"The amount to fill the ask\",\"_fillCurrency\":\"The address of the ERC-20 token using to fill, or address(0) for ETH\",\"_finder\":\"The address of the ask referrer\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The ID of the ERC-721 token\"}},\"setAskPrice(address,uint256,uint256,address)\":{\"params\":{\"_askCurrency\":\"The address of the ERC-20 token required to fill, or address(0) for ETH\",\"_askPrice\":\"The ask price to set\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The ID of the ERC-721 token\"}},\"setRoyaltyEngineAddress(address)\":{\"details\":\"emergency use only \\u2013 requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI\",\"params\":{\"_royaltyEngine\":\"The address for the new royalty engine\"}}},\"stateVariables\":{\"USE_ALL_GAS_FLAG\":{\"details\":\"The indicator to pass all remaining gas when paying out royalties\"},\"askForNFT\":{\"details\":\"ERC-721 token contract => ERC-721 token ID => Ask\"}},\"title\":\"Asks V1.1\",\"version\":1},\"userdoc\":{\"events\":{\"AskCanceled(address,uint256,(address,address,address,uint16,uint256))\":{\"notice\":\"Emitted when an ask is canceled\"},\"AskCreated(address,uint256,(address,address,address,uint16,uint256))\":{\"notice\":\"Emitted when an ask is created\"},\"AskFilled(address,uint256,address,address,(address,address,address,uint16,uint256))\":{\"notice\":\"Emitted when an ask is filled\"},\"AskPriceUpdated(address,uint256,(address,address,address,uint16,uint256))\":{\"notice\":\"Emitted when an ask price is updated\"},\"ExchangeExecuted(address,address,(address,uint256,uint256),(address,uint256,uint256))\":{\"notice\":\"Emitted when a token exchange is executed\"},\"RoyaltyPayout(address,uint256,address,uint256)\":{\"notice\":\"Emitted when royalties are paid\"}},\"kind\":\"user\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"notice\":\"Pays out royalties for NFTs based on the information returned by the royalty engine\"},\"askForNFT(address,uint256)\":{\"notice\":\"The ask for a given NFT, if one exists\"},\"cancelAsk(address,uint256)\":{\"notice\":\"Cancels the ask for a given NFT\"},\"createAsk(address,uint256,uint256,address,address,uint16)\":{\"notice\":\"Creates the ask for a given NFT\"},\"erc20TransferHelper()\":{\"notice\":\"The ZORA ERC-20 Transfer Helper\"},\"erc721TransferHelper()\":{\"notice\":\"The ZORA ERC-721 Transfer Helper\"},\"fillAsk(address,uint256,address,uint256,address)\":{\"notice\":\"Fills the ask for a given NFT, transferring the ETH/ERC-20 to the seller and NFT to the buyer\"},\"name()\":{\"notice\":\"The module name\"},\"registrar()\":{\"notice\":\"The ZORA Module Registrar\"},\"setAskPrice(address,uint256,uint256,address)\":{\"notice\":\"Updates the ask price for a given NFT\"},\"setRoyaltyEngineAddress(address)\":{\"notice\":\"Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy\"}},\"notice\":\"This module allows sellers to list an owned ERC-721 token for sale for a given price in a given currency, and allows buyers to purchase from those asks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/modules/Asks/V1.1/AsksV1_1.sol\":\"AsksV1_1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@manifoldxyz/royalty-registry-solidity/contracts/IRoyaltyEngineV1.sol\":{\"keccak256\":\"0x088b901b9fe87d03d237b5a0a84ba35c18933dafb9fc344bd4d17a8085ea0387\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa396e7cb04483aaffc2d50038d01a71816e5a3bc72021c5780e56a6437a1bcf\",\"dweb:/ipfs/QmUEawXCXimTSihzT2UBVvwVjmCa1ykFuwwQg9p6CapDzM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbc4803332d45dff58f865ed21c942fe4668e47cc7196c8dfe84102040b1d70f\",\"dweb:/ipfs/QmXhZLsocznRWCSyhjo3vo66Z1VsuuNptAVb6ASPYsWtGx\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826\",\"dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@rari-capital/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x37da48458a348878d8db5b58367d734e340b9172ef947df430027638fc45a015\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://665cc22c86db049785843b49741e6c8f3356ec4c00c5e8a77a65f24238e1cfed\",\"dweb:/ipfs/QmVtU93ya9nFc23w5m2ADGo5np6zB3JCofT6GeV8r82Kw2\"]},\"project:/contracts/ZoraModuleManager.sol\":{\"keccak256\":\"0x516cbb1377511ada04fdd9bb12ef5ab7ec8694c7722f9252e7f7664dc274b435\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://888a20823cafe1044f8d902c340295ad1d0b4496f9115f1cce7d5a445eeac56f\",\"dweb:/ipfs/Qmcss7A3T7eDqtwvFS9azwXNeRbTGAHbwdcE1X4JivNZf6\"]},\"project:/contracts/auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol\":{\"keccak256\":\"0xff7d072720136e7be2ee226a2dfc22a9cf60c2b4d9ecd96a732d89680cb7416d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://75331ba64befdf18ddae428cfbe4c211e0aaea97cc0427f43854561ab8761805\",\"dweb:/ipfs/QmWRbJd61RpfRNKmiyrEzJ4Z6KoJq4mUXNmBeUPKM8MC8t\"]},\"project:/contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol\":{\"keccak256\":\"0xa29ac2f5104fe554ccab7c1c1eac1a91c043064a8c571253177e8c707d3df8d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7335dcf58a8134289861c5dbe20e79bb7db28d131d065bc1e4c0dc0f79a99f27\",\"dweb:/ipfs/Qmdabk1co2w1LQzh4bmaniFXPogmVaPMDHP2WPcrRkmBFc\"]},\"project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol\":{\"keccak256\":\"0xc9fcd245467d24b64528581a38fcf0f07568f107f520edbb93c287c11f745bd3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2284e0522eff27797026547b2162ae656458d0c33f71cc1a98efe9117265e35f\",\"dweb:/ipfs/QmQbnLjat7YZro2Ko3XXn7Hi8BMgVnW6BTNj9aaMuMuKM6\"]},\"project:/contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol\":{\"keccak256\":\"0xe4496549a785f714d8b8edea0716aa0f9ac53152fc171d286b24ed35d6046481\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://86bf38b07ac5b62dac1889c23d6ffa72c41413c5b3e2c37518e3ef16724170d2\",\"dweb:/ipfs/QmdmpFLMTReVM6j49CPXkzgyS4qjGsAkM7LtFzszqTy3EL\"]},\"project:/contracts/common/OutgoingTransferSupport/V1/IWETH.sol\":{\"keccak256\":\"0xc95333328cada092ac242d36c205f984a69a22925f1d6ec4f3d26032006cd70a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ef55582164f1ad9ce2ba8ac25e49cd3e01a0e8383bdfbf9bac97c768b1e91f84\",\"dweb:/ipfs/QmXupdT8p88m5dNJuCGpQABoMLFs98AvRS4E1CDRkt7isM\"]},\"project:/contracts/common/OutgoingTransferSupport/V1/OutgoingTransferSupportV1.sol\":{\"keccak256\":\"0xe13614f0a2f5547fa1c97564ed26d843678aaaf245d7406d051ab8ad91115efe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://815cc7f0070d60dedfe610a7189aae87594383b8010d1df65342fd6fb67e1a21\",\"dweb:/ipfs/QmbU8yxSwYgV9A7L2FCnfHCHHyDntUaHKg5sCxfNwbBrDQ\"]},\"project:/contracts/common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol\":{\"keccak256\":\"0x5558ac2feadaea95d7cdd50a08b0ff7ef7212232939cd96c9c07a52512a5f994\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7f18b2e3ae487f002d6e000db0e640a8602c754d884244dad720e0ce59fa1aa4\",\"dweb:/ipfs/QmbETw9NikqJ4vYVPhqAoQqpBJoYYDq1nfq8J6LD6SCjTE\"]},\"project:/contracts/modules/Asks/V1.1/AsksV1_1.sol\":{\"keccak256\":\"0x78e9d9846647a2b03854cac456f47713eebc603f3798d963a40ae5b776a6b1af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9c412c0263e2e3c85511c84004389303343153b84bf54cd61652f3ecc86e18f8\",\"dweb:/ipfs/Qmcg1KSvgFr3MTJmC17ERccmgTycasUVGFuR4XY7rfJ4LM\"]},\"project:/contracts/transferHelpers/BaseTransferHelper.sol\":{\"keccak256\":\"0xb06a76885ef1a8f1fbdd6c4472a846cdff7ebf7c92b03f5786a0f261798e3f46\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://62deee4eeb9f070b17ce7bf2ef7b0bb0c163f500a8c70f13eba35b010d640575\",\"dweb:/ipfs/QmRnQaTqJBMXW4Vgjz62N2YDAYKtj8xVwQ1WhiCyXwLpKp\"]},\"project:/contracts/transferHelpers/ERC20TransferHelper.sol\":{\"keccak256\":\"0xc859f86b8ab62e2b98840360995426c70171e74f68fd5ed63c7d34cdfee00623\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://33ecf220a30ac6a6b56a98d58fcca6ee38fc4bcde498e8e33750e675c5d77ab3\",\"dweb:/ipfs/QmVn2cxhEiQdD11f2b1vaQ1uGrXHKanxBXxjP5P3SWdsPz\"]},\"project:/contracts/transferHelpers/ERC721TransferHelper.sol\":{\"keccak256\":\"0x23fa0ddaac378c885fabf22e8d458e61f3ab8608b9937dfbf49ac82e25153761\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a5d75279b5ca309e35b184db7fefa69053dc58402be86aea1fc141bf55cf95d3\",\"dweb:/ipfs/QmXfoyWWAekkinQrzcSgkJJoKCRVg2dWqBtdLe6m2drDqW\"]}},\"version\":1}",
  "bytecode": "0x61012060405260016000553480156200001757600080fd5b5060405162002869380380620028698339810160408190526200003a916200024f565b6040518060400160405280600a81526020016941736b733a2076312e3160b01b815250838383876001600160a01b031663e3e606f06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200009f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c59190620002cf565b6001600160a01b0316632b20e3976040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001299190620002cf565b6001600160a01b038a811660805291821660a052600180546001600160a01b0319169483169490941790935590811660e0521660c05280516200017490600290602084019062000190565b5050506001600160a01b03909216610100525062000333915050565b8280546200019e90620002f6565b90600052602060002090601f016020900481019282620001c257600085556200020d565b82601f10620001dd57805160ff19168380011785556200020d565b828001600101855582156200020d579182015b828111156200020d578251825591602001919060010190620001f0565b506200021b9291506200021f565b5090565b5b808211156200021b576000815560010162000220565b6001600160a01b03811681146200024c57600080fd5b50565b600080600080600060a086880312156200026857600080fd5b8551620002758162000236565b6020870151909550620002888162000236565b60408701519094506200029b8162000236565b6060870151909350620002ae8162000236565b6080870151909250620002c18162000236565b809150509295509295909350565b600060208284031215620002e257600080fd5b8151620002ef8162000236565b9392505050565b600181811c908216806200030b57607f821691505b602082108114156200032d57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516124c1620003a8600039600081816102b80152818161080401528181610d230152610e0d01526000818161183201526118c501526000818160de01526112e1015260008181611a5f0152611add01526000818161020301526115e201526124c16000f3fe60806040526004361061009c5760003560e01c80638f9d3251116100645780638f9d3251146101f15780639128c22c146102255780639e84710814610246578063b200753314610266578063b249bb3014610286578063f7cd1d9b146102a657600080fd5b806306fdde03146100a15780632b20e397146100cc57806340b8074614610118578063418f06561461013a578063622dcbd7146101de575b600080fd5b3480156100ad57600080fd5b506100b66102da565b6040516100c39190611ed1565b60405180910390f35b3480156100d857600080fd5b506101007f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c3565b34801561012457600080fd5b50610138610133366004611f1c565b610368565b005b34801561014657600080fd5b506101a1610155366004611f1c565b6003602081815260009384526040808520909152918352912080546001820154600283015492909301546001600160a01b039182169382169291821691600160a01b900461ffff169085565b604080516001600160a01b0396871681529486166020860152929094169183019190915261ffff166060820152608081019190915260a0016100c3565b6101386101ec366004611f48565b61056c565b3480156101fd57600080fd5b506101007f000000000000000000000000000000000000000000000000000000000000000081565b610238610233366004611fa7565b61099e565b6040519081526020016100c3565b34801561025257600080fd5b50610138610261366004612001565b610b9a565b34801561027257600080fd5b50610138610281366004611fa7565b6111c6565b34801561029257600080fd5b506101386102a1366004612071565b6112d6565b3480156102b257600080fd5b506101007f000000000000000000000000000000000000000000000000000000000000000081565b600280546102e79061208e565b80601f01602080910402602001604051908101604052809291908181526020018280546103139061208e565b80156103605780601f1061033557610100808354040283529160200191610360565b820191906000526020600020905b81548152906001019060200180831161034357829003601f168201915b505050505081565b6000546001146103935760405162461bcd60e51b815260040161038a906120c9565b60405180910390fd5b600260009081556001600160a01b038381168252600360209081526040808420858552909152909120541661040a5760405162461bcd60e51b815260206004820152601b60248201527f63616e63656c41736b2061736b20646f65736e27742065786973740000000000604482015260640161038a565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03841690636352211e90602401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047691906120ed565b9050336001600160a01b03821614806104fa575060405163e985e9c560e01b81526001600160a01b03828116600483015233602483015284169063e985e9c590604401602060405180830381865afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa919061210a565b6105585760405162461bcd60e51b815260206004820152602960248201527f63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f726044820152681037b832b930ba37b960b91b606482015260840161038a565b6105628383611402565b5050600160005550565b60005460011461058e5760405162461bcd60e51b815260040161038a906120c9565b600260009081556001600160a01b03808716825260036020908152604080842088855290915290912080549091166106085760405162461bcd60e51b815260206004820152601a60248201527f66696c6c41736b206d757374206265206163746976652061736b000000000000604482015260640161038a565b60028101546001600160a01b0385811691161461067d5760405162461bcd60e51b815260206004820152602d60248201527f66696c6c41736b205f66696c6c43757272656e6379206d757374206d6174636860448201526c2061736b2063757272656e637960981b606482015260840161038a565b828160030154146106e25760405162461bcd60e51b815260206004820152602960248201527f66696c6c41736b205f66696c6c416d6f756e74206d757374206d6174636820616044820152681cdac8185b5bdd5b9d60ba1b606482015260840161038a565b600381015460028201546106ff91906001600160a01b03166114b8565b6003810154600282015460009161072391899189916001600160a01b031685611747565b5060028301549091506107409082906001600160a01b0316611809565b90506001600160a01b038316156107aa5760028201546000906127109061077290600160a01b900461ffff1684612142565b61077c9190612161565b600284015490915061079c90859083906001600160a01b0316600061195d565b6107a68183612183565b9150505b600182015460028301546107ce916001600160a01b0390811691849116600061195d565b8154604051630aed65f560e11b81526001600160a01b0389811660048301529182166024820152336044820152606481018890527f0000000000000000000000000000000000000000000000000000000000000000909116906315dacbea90608401600060405180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b505060408051606080820183526001600160a01b03808d16835260208084018d90526001848601528451928301855260028901548216835260009083015260038801548285015287549351929550909350339216907f1f432c9454edd444f55492be01e3fa82aa88bfa28e120a039be204253c10c36e906108e2908690869061219a565b60405180910390a3336001600160a01b0316888a6001600160a01b03167f21a9d8e221211780696258a05c6225b1a24f428e2fd4d51708f1ab2be4224d398888604051610930929190612228565b60405180910390a45050506001600160a01b03909516600090815260036020818152604080842097845296905294812080546001600160a01b03199081168255600180830180549092169091556002820180546001600160b01b031916905595018190559390935550505050565b6000333014610a055760405162461bcd60e51b815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201526c73656c662063616c6c61626c6560981b606482015260840161038a565b600154604051637a99dc0160e11b81526001600160a01b0387811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af1158015610a63573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a8b919081019061231b565b8151919350915080610aa257859350505050610b92565b85600080805b84811015610b8857868181518110610ac257610ac26123e0565b60200260200101519250858181518110610ade57610ade6123e0565b6020026020010151915081841015610b245760405162461bcd60e51b81526020600482015260096024820152681a5b9cdbdb1d995b9d60ba1b604482015260640161038a565b610b3283838b61c35061195d565b604080516001600160a01b038581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a39281900392600101610aa8565b5091955050505050505b949350505050565b600054600114610bbc5760405162461bcd60e51b815260040161038a906120c9565b600260009081556040516331a9108f60e11b8152600481018790526001600160a01b03881690636352211e90602401602060405180830381865afa158015610c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2c91906120ed565b9050336001600160a01b0382161480610cb0575060405163e985e9c560e01b81526001600160a01b03828116600483015233602483015288169063e985e9c590604401602060405180830381865afa158015610c8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb0919061210a565b610d0e5760405162461bcd60e51b815260206004820152602960248201527f63726561746541736b206d75737420626520746f6b656e206f776e6572206f726044820152681037b832b930ba37b960b91b606482015260840161038a565b6040516339693b4960e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906372d2769290602401602060405180830381865afa158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d96919061210a565b610dee5760405162461bcd60e51b8152602060048201526024808201527f63726561746541736b206d75737420617070726f76652041736b735631206d6f60448201526364756c6560e01b606482015260840161038a565b60405163e985e9c560e01b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015288169063e985e9c590604401602060405180830381865afa158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e80919061210a565b610ef25760405162461bcd60e51b815260206004820152603760248201527f63726561746541736b206d75737420617070726f76652045524337323154726160448201527f6e7366657248656c706572206173206f70657261746f72000000000000000000606482015260840161038a565b6127108261ffff161115610f6e5760405162461bcd60e51b815260206004820152603d60248201527f63726561746541736b2066696e646572732066656520627073206d757374206260448201527f65206c657373207468616e206f7220657175616c20746f203130303030000000606482015260840161038a565b6001600160a01b038316610fd95760405162461bcd60e51b815260206004820152602c60248201527f63726561746541736b206d7573742073706563696679205f73656c6c6572467560448201526b1b991cd49958da5c1a595b9d60a21b606482015260840161038a565b6001600160a01b0387811660009081526003602090815260408083208a8452909152902054161561100e5761100e8787611402565b6040518060a00160405280826001600160a01b03168152602001846001600160a01b03168152602001856001600160a01b031681526020018361ffff1681526020018681525060036000896001600160a01b03166001600160a01b03168152602001908152602001600020600088815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160146101000a81548161ffff021916908361ffff1602179055506080820151816003015590505085876001600160a01b03167f5b65b398e1d736436510f4da442eaec71466d2abee0816567088c892c4bcee70600360008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000206040516111b091906123f6565b60405180910390a3505060016000555050505050565b6000546001146111e85760405162461bcd60e51b815260040161038a906120c9565b600260009081556001600160a01b038086168252600360209081526040808420878552909152909120805490911633146112645760405162461bcd60e51b815260206004820152601a60248201527f73657441736b5072696365206d7573742062652073656c6c6572000000000000604482015260640161038a565b600381018390556002810180546001600160a01b0319166001600160a01b038481169190911790915560405185918716907f1a24bcf5290feab70f35cfb4870c294ebf497e608d4262b0ec0debe045008140906112c29085906123f6565b60405180910390a350506001600055505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461135d5760405162461bcd60e51b815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201526534b9ba3930b960d11b606482015260840161038a565b61136e81636591fc0b60e11b611b29565b6113e05760405162461bcd60e51b815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e74657266616365000000606482015260840161038a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821660008181526003602090815260408083208584529091529081902090518392917f871956abf85befb7c955eacd40fcabe7e01b1702d75764bf7f54bf481933fd359161145891906123f6565b60405180910390a36001600160a01b03909116600090815260036020818152604080842094845293905291812080546001600160a01b0319908116825560018201805490911690556002810180546001600160b01b031916905590910155565b6001600160a01b038116611540578134101561153c5760405162461bcd60e51b815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e740000000000606482015260840161038a565b5050565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ad9190612404565b60405163d9fc4b6160e01b81526001600160a01b038581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b15801561162857600080fd5b505af115801561163c573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03851691506370a0823190602401602060405180830381865afa158015611687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ab9190612404565b9050806116b8868461241d565b146117405760405162461bcd60e51b815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201526b1958dd195908185b5bdd5b9d60a21b608482015260a40161038a565b5050505050565b6000808083158061175757505a84115b6117615783611763565b5a5b60405163244a308b60e21b81526001600160a01b03808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f1935050505080156117e1575060408051601f3d908101601f191682019092526117de91810190612404565b60015b6117f25785600092509250506117ff565b9250600191506117ff9050565b9550959350505050565b6040516330da42fb60e11b81523060048201526024810183905260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa158015611879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189d9190612404565b9050806118ad5783915050611957565b6040516386ab6fb960e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906386ab6fb9906024016040805180830381865afa158015611913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119379190612435565b91505061194881838661c35061195d565b6119528286612183565b925050505b92915050565b82158061197157506001600160a01b038416155b1561197b57611b23565b6001600160a01b038216611b0f57824710156119e35760405162461bcd60e51b815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e6044820152601d60fa1b606482015260840161038a565b60008115806119f157505a82115b6119fb57816119fd565b5a5b90506000856001600160a01b0316858390604051600060405180830381858888f193505050503d8060008114611a4f576040519150601f19603f3d011682016040523d82523d6000602084013e611a54565b606091505b5050905080611b08577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b158015611ab857600080fd5b505af1158015611acc573d6000803e3d6000fd5b50611b089350506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915088905087611b4c565b5050611b23565b611b236001600160a01b0383168585611b4c565b50505050565b6000611b3483611ba3565b8015611b455750611b458383611bd6565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611b9e908490611cbf565b505050565b6000611bb6826301ffc9a760e01b611bd6565b80156119575750611bcf826001600160e01b0319611bd6565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b0387169061753090611c3d90869061246f565b6000604051808303818686fa925050503d8060008114611c79576040519150601f19603f3d011682016040523d82523d6000602084013e611c7e565b606091505b5091509150602081511015611c995760009350505050611957565b818015611cb5575080806020019051810190611cb5919061210a565b9695505050505050565b6000611d14826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611d919092919063ffffffff16565b805190915015611b9e5780806020019051810190611d32919061210a565b611b9e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161038a565b6060610b928484600085856001600160a01b0385163b611df35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038a565b600080866001600160a01b03168587604051611e0f919061246f565b60006040518083038185875af1925050503d8060008114611e4c576040519150601f19603f3d011682016040523d82523d6000602084013e611e51565b606091505b5091509150611e61828286611e6c565b979650505050505050565b60608315611e7b575081611b45565b825115611e8b5782518084602001fd5b8160405162461bcd60e51b815260040161038a9190611ed1565b60005b83811015611ec0578181015183820152602001611ea8565b83811115611b235750506000910152565b6020815260008251806020840152611ef0816040850160208701611ea5565b601f01601f19169190910160400192915050565b6001600160a01b0381168114611f1957600080fd5b50565b60008060408385031215611f2f57600080fd5b8235611f3a81611f04565b946020939093013593505050565b600080600080600060a08688031215611f6057600080fd5b8535611f6b81611f04565b9450602086013593506040860135611f8281611f04565b9250606086013591506080860135611f9981611f04565b809150509295509295909350565b60008060008060808587031215611fbd57600080fd5b8435611fc881611f04565b935060208501359250604085013591506060850135611fe681611f04565b939692955090935050565b61ffff81168114611f1957600080fd5b60008060008060008060c0878903121561201a57600080fd5b863561202581611f04565b95506020870135945060408701359350606087013561204381611f04565b9250608087013561205381611f04565b915060a087013561206381611ff1565b809150509295509295509295565b60006020828403121561208357600080fd5b8135611b4581611f04565b600181811c908216806120a257607f821691505b602082108114156120c357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b6000602082840312156120ff57600080fd5b8151611b4581611f04565b60006020828403121561211c57600080fd5b81518015158114611b4557600080fd5b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561215c5761215c61212c565b500290565b60008261217e57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156121955761219561212c565b500390565b82516001600160a01b03168152602080840151908201526040808401519082015260c0810182516001600160a01b0316606083015260208301516080830152604083015160a0830152611b45565b80546001600160a01b0390811683526001820154811660208401526002820154908116604084015260a01c61ffff16606083015260030154608090910152565b6001600160a01b038316815260c08101611b4560208301846121e8565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561228457612284612245565b604052919050565b600067ffffffffffffffff8211156122a6576122a6612245565b5060051b60200190565b600082601f8301126122c157600080fd5b815160206122d66122d18361228c565b61225b565b82815260059290921b840181019181810190868411156122f557600080fd5b8286015b8481101561231057805183529183019183016122f9565b509695505050505050565b6000806040838503121561232e57600080fd5b825167ffffffffffffffff8082111561234657600080fd5b818501915085601f83011261235a57600080fd5b8151602061236a6122d18361228c565b82815260059290921b8401810191818101908984111561238957600080fd5b948201945b838610156123b05785516123a181611f04565b8252948201949082019061238e565b918801519196509093505050808211156123c957600080fd5b506123d6858286016122b0565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b60a0810161195782846121e8565b60006020828403121561241657600080fd5b5051919050565b600082198211156124305761243061212c565b500190565b6000806040838503121561244857600080fd5b825161245381611ff1565b602084015190925061246481611f04565b809150509250929050565b60008251612481818460208701611ea5565b919091019291505056fea264697066735822122063b9fedd4f08a8acd90b682288542f797bdf2ecde92dc2b6e87f1caadd0c5c5f64736f6c634300080a0033",
  "deployedBytecode": "",
  "immutableReferences": {
    "8147": [
      {
        "length": 32,
        "start": 222
      },
      {
        "length": 32,
        "start": 4833
      }
    ],
    "8151": [
      {
        "length": 32,
        "start": 6194
      },
      {
        "length": 32,
        "start": 6341
      }
    ],
    "8470": [
      {
        "length": 32,
        "start": 515
      },
      {
        "length": 32,
        "start": 5602
      }
    ],
    "8607": [
      {
        "length": 32,
        "start": 6751
      },
      {
        "length": 32,
        "start": 6877
      }
    ],
    "9772": [
      {
        "length": 32,
        "start": 696
      },
      {
        "length": 32,
        "start": 2052
      },
      {
        "length": 32,
        "start": 3363
      },
      {
        "length": 32,
        "start": 3597
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1864:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:80"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:80"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:80",
                "type": ""
              }
            ],
            "src": "14:131:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "299:640:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "346:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "355:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "358:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "348:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "348:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "348:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "320:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "329:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "316:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "316:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "341:3:80",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "312:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "312:33:80"
                  },
                  "nodeType": "YulIf",
                  "src": "309:53:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "371:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "390:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "384:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "375:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "434:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "409:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "409:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "409:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "449:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "459:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "449:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "473:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "498:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "509:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "494:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "494:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "488:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "477:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "547:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "522:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "522:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "522:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "564:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "574:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "564:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "590:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "615:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "626:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "611:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "611:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "605:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "605:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "594:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "664:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "639:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "639:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "639:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "681:17:80",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "691:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "707:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "732:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "743:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "728:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "728:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "722:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "722:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "711:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "781:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "756:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "756:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "798:17:80",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "808:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "798:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "824:41:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "849:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "860:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "845:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "845:19:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "839:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:26:80"
                  },
                  "variables": [
                    {
                      "name": "value_4",
                      "nodeType": "YulTypedName",
                      "src": "828:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_4",
                        "nodeType": "YulIdentifier",
                        "src": "899:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "874:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "874:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "874:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "916:17:80",
                  "value": {
                    "name": "value_4",
                    "nodeType": "YulIdentifier",
                    "src": "926:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "916:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "233:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "244:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "256:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "264:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "272:6:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "280:6:80",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "288:6:80",
                "type": ""
              }
            ],
            "src": "150:789:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1051:170:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1097:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1106:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1109:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1099:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1099:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1099:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1072:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1081:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1068:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1068:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1093:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1064:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1064:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1061:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1122:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1141:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1135:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1126:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1185:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1160:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1160:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1160:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1200:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1210:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ZoraModuleManager_$6707_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1017:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1028:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1040:6:80",
                "type": ""
              }
            ],
            "src": "944:277:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1307:170:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1353:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1362:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1365:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1355:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1355:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1355:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1328:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1337:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1324:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1324:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1349:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1320:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1320:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1317:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1378:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1397:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1391:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1382:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1441:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1416:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1416:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1456:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1466:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1456:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1273:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1284:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1296:6:80",
                "type": ""
              }
            ],
            "src": "1226:251:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1537:325:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1547:22:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1561:1:80",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1564:4:80"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1557:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1557:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1547:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1578:38:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1608:4:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1614:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1604:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:12:80"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1582:18:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1655:31:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1657:27:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1671:6:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1679:4:80",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1667:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1667:17:80"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1657:6:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1635:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1628:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:26:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1625:61:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1745:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1766:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1773:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1778:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1769:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1769:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1759:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1759:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1759:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1810:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1813:4:80",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1803:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1803:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1803:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1838:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1841:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1831:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1831:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1831:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1701:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1724:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1732:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1721:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:14:80"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1698:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1698:38:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1695:161:80"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1517:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1526:6:80",
                "type": ""
              }
            ],
            "src": "1482:380:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        let value_4 := mload(add(headStart, 128))\n        validator_revert_address(value_4)\n        value4 := value_4\n    }\n    function abi_decode_tuple_t_contract$_ZoraModuleManager_$6707_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:23167:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:205:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "77:10:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "86:1:80",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "81:1:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "146:63:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "171:3:80"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:1:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "167:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "167:11:80"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "190:3:80"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "195:1:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "186:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "186:11:80"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "180:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "180:18:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:39:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:39:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "107:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "110:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "104:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:13:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "118:19:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "120:15:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "129:1:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:2:80",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "125:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:10:80"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "120:1:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "100:3:80",
                    "statements": []
                  },
                  "src": "96:113:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:31:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "248:3:80"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "253:6:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "244:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "244:16:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "262:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "237:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:27:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:27:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "224:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "227:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "221:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:13:80"
                  },
                  "nodeType": "YulIf",
                  "src": "218:48:80"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "45:3:80",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "50:3:80",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "55:6:80",
                "type": ""
              }
            ],
            "src": "14:258:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "398:262:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "426:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "408:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:21:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "438:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "458:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "452:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:13:80"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "442:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "501:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "551:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "539:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:15:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "560:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "571:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "556:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "556:18:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "576:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "517:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "517:66:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "517:66:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "592:62:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "608:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "627:6:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "635:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "623:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "623:15:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "644:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "619:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "619:29:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "604:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:45:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "651:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:54:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "592:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "367:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "378:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "389:4:80",
                "type": ""
              }
            ],
            "src": "277:383:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "766:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "776:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "788:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "799:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "784:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "776:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "818:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "833:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "849:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "854:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "845:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "845:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "858:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "841:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "841:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "829:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "829:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "811:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "811:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "735:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "746:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "757:4:80",
                "type": ""
              }
            ],
            "src": "665:203:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "918:86:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "982:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "991:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "994:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "984:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "984:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "984:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "941:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "952:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "967:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "972:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "963:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "963:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "976:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "959:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "959:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "948:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "948:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "938:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "938:42:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "931:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "931:50:80"
                  },
                  "nodeType": "YulIf",
                  "src": "928:70:80"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "907:5:80",
                "type": ""
              }
            ],
            "src": "873:131:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1096:228:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1142:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1151:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1154:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1144:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1144:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1144:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1117:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1126:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1113:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1113:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1138:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1109:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1109:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1106:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1167:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1193:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1180:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1180:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1171:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1237:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1212:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1212:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1212:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1252:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1262:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1252:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1276:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1303:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1314:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1299:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1299:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1286:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1286:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1276:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1054:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1065:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1077:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1085:6:80",
                "type": ""
              }
            ],
            "src": "1009:315:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1540:328:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1550:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1562:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:3:80",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1558:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1550:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1586:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1604:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1609:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1600:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1600:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1613:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1596:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1596:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1590:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1631:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1646:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1654:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1642:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1642:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1624:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1624:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1624:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1678:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1689:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1674:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1674:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1698:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1706:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1694:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1694:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1667:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1730:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1741:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1726:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1750:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1758:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1746:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1746:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1719:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1719:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1719:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1782:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1793:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1778:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1778:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "1802:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1810:6:80",
                            "type": "",
                            "value": "0xffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1798:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1798:19:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1771:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1771:47:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1771:47:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1838:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1849:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1834:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1834:19:80"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "1855:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1827:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1827:35:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1827:35:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint16_t_uint256__to_t_address_t_address_t_address_t_uint16_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1477:9:80",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1488:6:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1496:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1504:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1512:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1520:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1531:4:80",
                "type": ""
              }
            ],
            "src": "1329:539:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2011:529:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2058:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2067:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2070:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2060:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2060:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2060:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2032:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2041:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2028:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2028:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2053:3:80",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2024:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2024:33:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2021:53:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2083:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2109:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2096:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2096:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2087:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2153:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2128:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2128:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2128:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2168:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2178:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2168:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2192:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2230:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2215:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2215:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2202:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2192:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2243:47:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2275:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2286:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2271:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2271:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2258:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2258:32:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2247:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2324:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2299:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2299:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2299:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2341:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2351:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2341:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2367:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2394:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2405:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2390:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2390:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2377:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2367:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2418:48:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2450:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2461:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2446:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2446:19:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2433:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2433:33:80"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "2422:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "2500:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2475:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2475:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2517:17:80",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "2527:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2517:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1945:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1956:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1968:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1976:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1984:6:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1992:6:80",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2000:6:80",
                "type": ""
              }
            ],
            "src": "1873:667:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2675:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2685:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2697:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2708:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2693:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2693:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2685:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2727:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2742:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2758:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2763:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2754:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2754:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2767:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2750:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2750:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2738:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2738:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2720:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2720:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2720:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20TransferHelper_$16267__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2644:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2655:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2666:4:80",
                "type": ""
              }
            ],
            "src": "2545:232:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2903:404:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2950:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2959:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2962:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2952:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2952:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2952:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2924:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2933:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2920:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2920:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2945:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2916:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2916:33:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2913:53:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2975:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3001:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2988:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2988:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2979:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3045:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3020:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3020:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3020:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3060:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3070:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3060:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3084:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3111:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3122:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3107:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3107:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3094:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3094:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3084:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3135:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3162:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3173:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3158:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3158:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3145:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3145:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3135:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3186:47:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3218:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3229:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3214:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3214:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3201:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3201:32:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3190:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3267:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3242:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3242:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3242:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3284:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3294:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3284:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2845:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2856:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2868:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2876:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2884:6:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2892:6:80",
                "type": ""
              }
            ],
            "src": "2782:525:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3413:76:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3423:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3435:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3446:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3431:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3431:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3423:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3465:9:80"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3476:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3458:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3458:25:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3458:25:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3382:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3393:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3404:4:80",
                "type": ""
              }
            ],
            "src": "3312:177:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3538:73:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3589:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3598:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3601:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3591:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3591:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3591:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3561:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3572:5:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3579:6:80",
                                "type": "",
                                "value": "0xffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3568:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3568:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3558:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3558:29:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3551:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3551:37:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3548:57:80"
                }
              ]
            },
            "name": "validator_revert_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3527:5:80",
                "type": ""
              }
            ],
            "src": "3494:117:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3770:653:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3817:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3826:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3829:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3819:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3819:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3819:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3791:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3800:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3787:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3787:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3812:3:80",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3783:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3783:33:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3780:53:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3842:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3868:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3855:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3855:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3846:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3912:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3887:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3887:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3887:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3927:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3937:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3927:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3951:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3978:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3989:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3974:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3974:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3961:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3961:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3951:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4002:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4029:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4040:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4025:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4025:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4012:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4012:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4002:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4053:47:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4085:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4096:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4081:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4081:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4068:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4068:32:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4057:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4134:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4109:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4109:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4151:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4161:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4151:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4177:48:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4209:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4220:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4205:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4205:19:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4192:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4192:33:80"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "4181:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "4259:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4234:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4234:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4234:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4276:17:80",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "4286:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4276:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4302:48:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4334:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4345:3:80",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4330:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4330:19:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4317:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4317:33:80"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "4306:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "4383:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint16",
                      "nodeType": "YulIdentifier",
                      "src": "4359:23:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4359:32:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4359:32:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4400:17:80",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "4410:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4400:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_addresst_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3696:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3707:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3719:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3727:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3735:6:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3743:6:80",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3751:6:80",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3759:6:80",
                "type": ""
              }
            ],
            "src": "3616:807:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4498:177:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4544:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4553:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4556:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4546:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4546:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4546:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4519:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4528:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4515:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4515:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4540:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4511:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4511:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "4508:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4569:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4595:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4582:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4582:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4573:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4639:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4614:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4614:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4614:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4654:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4664:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4654:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4464:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4475:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4487:6:80",
                "type": ""
              }
            ],
            "src": "4428:247:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4811:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4821:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4833:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4844:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4829:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4829:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4821:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4863:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4878:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4894:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4899:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4890:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4890:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4903:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4886:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4886:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4874:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4874:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4856:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4856:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4856:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC721TransferHelper_$16334__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4780:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4791:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4802:4:80",
                "type": ""
              }
            ],
            "src": "4680:233:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4973:325:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4983:22:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4997:1:80",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5000:4:80"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "4993:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4993:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4983:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5014:38:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5044:4:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5050:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5040:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5040:12:80"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5018:18:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5091:31:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5093:27:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5107:6:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5115:4:80",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5103:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5103:17:80"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5093:6:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5071:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5064:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5064:26:80"
                  },
                  "nodeType": "YulIf",
                  "src": "5061:61:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5181:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5202:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5209:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5214:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "5205:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5205:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5195:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5195:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5195:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5246:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5249:4:80",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5239:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5239:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5239:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5274:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5277:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5267:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5267:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5267:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5137:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5160:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5168:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5157:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5157:14:80"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5134:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5134:38:80"
                  },
                  "nodeType": "YulIf",
                  "src": "5131:161:80"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4953:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4962:6:80",
                "type": ""
              }
            ],
            "src": "4918:380:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5477:160:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5494:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5505:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5487:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5487:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5487:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5528:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5539:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5524:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5524:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5544:2:80",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5517:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5517:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5517:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5567:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5578:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5563:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5563:18:80"
                      },
                      {
                        "hexValue": "5245454e5452414e4359",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5583:12:80",
                        "type": "",
                        "value": "REENTRANCY"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5556:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5556:40:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5556:40:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5605:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5617:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5628:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5613:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5613:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5605:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_180a23d5434c537ca84b1e47f534d18e25bd055e02a65ce20bae4afd9c835f59__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5454:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5468:4:80",
                "type": ""
              }
            ],
            "src": "5303:334:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5816:177:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5833:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5844:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5826:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5826:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5826:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5867:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5878:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5863:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5863:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5883:2:80",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5856:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5856:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5856:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5906:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5917:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5902:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5902:18:80"
                      },
                      {
                        "hexValue": "63616e63656c41736b2061736b20646f65736e2774206578697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5922:29:80",
                        "type": "",
                        "value": "cancelAsk ask doesn't exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5895:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5895:57:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5895:57:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5961:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5973:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5984:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5969:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5969:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5961:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5793:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5807:4:80",
                "type": ""
              }
            ],
            "src": "5642:351:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6079:170:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6125:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6134:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6137:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6127:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6127:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6127:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6100:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6109:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6096:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6096:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6121:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6092:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6092:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "6089:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6150:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6169:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6163:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6163:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6154:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6213:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6188:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6188:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6188:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6228:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6238:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6228:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6045:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6056:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6068:6:80",
                "type": ""
              }
            ],
            "src": "5998:251:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6383:175:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6393:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6405:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6416:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6401:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6401:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6393:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6428:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6446:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6451:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6442:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6442:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6455:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6438:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6438:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6432:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6473:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6488:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6496:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6484:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6484:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6466:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6466:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6466:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6520:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6531:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6516:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6516:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6540:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6548:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6536:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6536:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6509:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6509:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6509:43:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6344:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6355:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6363:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6374:4:80",
                "type": ""
              }
            ],
            "src": "6254:304:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6641:199:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6687:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6696:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6699:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6689:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6689:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6689:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6662:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6671:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6658:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6658:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6683:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6654:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6654:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "6651:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6712:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6731:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6725:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6725:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6716:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6794:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6803:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6806:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6796:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6796:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6796:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6763:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6784:5:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6777:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6777:13:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6770:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6770:21:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6760:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6760:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6753:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6753:40:80"
                  },
                  "nodeType": "YulIf",
                  "src": "6750:60:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6819:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6829:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6819:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6607:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6618:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6630:6:80",
                "type": ""
              }
            ],
            "src": "6563:277:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7019:231:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7036:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7047:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7029:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7029:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7029:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7070:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7081:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7066:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7066:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7086:2:80",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7059:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7059:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7059:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7109:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7120:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7105:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7105:18:80"
                      },
                      {
                        "hexValue": "63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7125:34:80",
                        "type": "",
                        "value": "cancelAsk must be token owner or"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7098:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7098:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7098:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7180:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7191:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7176:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7176:18:80"
                      },
                      {
                        "hexValue": "206f70657261746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7196:11:80",
                        "type": "",
                        "value": " operator"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7169:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7169:39:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7169:39:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7217:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7229:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7240:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7225:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7225:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7217:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6996:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7010:4:80",
                "type": ""
              }
            ],
            "src": "6845:405:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7429:176:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7446:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7457:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7439:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7439:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7439:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7480:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7491:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7476:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7476:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7496:2:80",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7469:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7469:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7469:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7519:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7530:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7515:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7515:18:80"
                      },
                      {
                        "hexValue": "66696c6c41736b206d757374206265206163746976652061736b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7535:28:80",
                        "type": "",
                        "value": "fillAsk must be active ask"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7508:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7508:56:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7508:56:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7573:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7585:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7596:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7581:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7581:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7573:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7406:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7420:4:80",
                "type": ""
              }
            ],
            "src": "7255:350:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7784:235:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7801:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7812:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7794:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7794:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7794:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7835:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7846:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7831:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7831:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7851:2:80",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7824:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7824:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7824:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7874:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7885:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7870:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7870:18:80"
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c43757272656e6379206d757374206d61746368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7890:34:80",
                        "type": "",
                        "value": "fillAsk _fillCurrency must match"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7863:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7863:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7863:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7945:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7956:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7941:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7941:18:80"
                      },
                      {
                        "hexValue": "2061736b2063757272656e6379",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7961:15:80",
                        "type": "",
                        "value": " ask currency"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7934:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7934:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7934:43:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7986:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7998:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8009:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7994:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7994:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7986:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7761:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7775:4:80",
                "type": ""
              }
            ],
            "src": "7610:409:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8198:231:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8215:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8226:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8208:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8208:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8208:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8249:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8260:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8245:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8245:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8265:2:80",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8238:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8238:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8238:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8288:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8299:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8284:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8284:18:80"
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c416d6f756e74206d757374206d617463682061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8304:34:80",
                        "type": "",
                        "value": "fillAsk _fillAmount must match a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8277:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8277:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8277:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8359:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8370:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8355:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8355:18:80"
                      },
                      {
                        "hexValue": "736b20616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8375:11:80",
                        "type": "",
                        "value": "sk amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8348:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8348:39:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8348:39:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8396:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8408:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8419:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8404:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8404:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8396:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8175:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8189:4:80",
                "type": ""
              }
            ],
            "src": "8024:405:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8466:95:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8483:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8490:3:80",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8495:10:80",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8486:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8486:20:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8476:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8476:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8476:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8523:1:80",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8526:4:80",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8516:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8516:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8516:15:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8547:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8550:4:80",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8540:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8540:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8540:15:80"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8434:127:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8618:116:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8677:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8679:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8679:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8679:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8649:1:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8642:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8642:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8635:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8635:17:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8657:1:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8668:1:80",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8664:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8664:6:80"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8672:1:80"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8660:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8660:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8654:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8654:21:80"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8631:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8631:45:80"
                  },
                  "nodeType": "YulIf",
                  "src": "8628:71:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8708:20:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8723:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8726:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8719:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8719:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8708:7:80"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8597:1:80",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8600:1:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8606:7:80",
                "type": ""
              }
            ],
            "src": "8566:168:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8785:171:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8816:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8837:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8844:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8849:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8840:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8840:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8830:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8830:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8830:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8881:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8884:4:80",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8874:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8874:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8874:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8909:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8912:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8902:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8902:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8902:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8805:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8798:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8798:9:80"
                  },
                  "nodeType": "YulIf",
                  "src": "8795:132:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8936:14:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8945:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8948:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8941:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8941:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8936:1:80"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8770:1:80",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8773:1:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8779:1:80",
                "type": ""
              }
            ],
            "src": "8739:217:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9010:76:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9032:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9034:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9034:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9034:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9026:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9029:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9023:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9023:8:80"
                  },
                  "nodeType": "YulIf",
                  "src": "9020:34:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9063:17:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9075:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9078:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9071:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9071:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9063:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8992:1:80",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8995:1:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "9001:4:80",
                "type": ""
              }
            ],
            "src": "8961:125:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9276:271:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9286:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9298:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9309:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9294:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9294:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9286:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9322:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9340:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9345:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9336:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9336:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9349:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9332:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9332:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9326:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9367:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9382:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9390:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9378:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9378:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9360:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9360:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9360:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9414:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9425:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9410:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9410:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "9434:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9442:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9430:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9430:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9403:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9403:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9403:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9466:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9477:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9462:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9462:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "9486:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9494:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9482:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9482:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9455:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9455:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9455:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9518:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9529:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9514:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9514:18:80"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "9534:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9507:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9507:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9507:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9221:9:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9232:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9240:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9248:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9256:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9267:4:80",
                "type": ""
              }
            ],
            "src": "9091:456:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9611:179:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9628:3:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9643:5:80"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "9637:5:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9637:12:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9659:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9664:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9655:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9655:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9668:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9651:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9651:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9633:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9633:38:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9621:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9621:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9621:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9692:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9697:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9688:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9688:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9714:5:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9721:4:80",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9710:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9710:16:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9704:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9704:23:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9681:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9681:47:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9681:47:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9748:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9753:4:80",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9744:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9744:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9770:5:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9777:4:80",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9766:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9766:16:80"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9760:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9760:23:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9737:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9737:47:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9737:47:80"
                }
              ]
            },
            "name": "abi_encode_struct_ExchangeDetails",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9595:5:80",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9602:3:80",
                "type": ""
              }
            ],
            "src": "9552:238:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10056:174:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10066:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10078:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10089:3:80",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10074:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10074:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10066:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10136:6:80"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10144:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ExchangeDetails",
                      "nodeType": "YulIdentifier",
                      "src": "10102:33:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10102:52:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10102:52:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10197:6:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10209:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10220:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10205:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10205:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ExchangeDetails",
                      "nodeType": "YulIdentifier",
                      "src": "10163:33:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10163:61:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10163:61:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ExchangeDetails_$8732_memory_ptr_t_struct$_ExchangeDetails_$8732_memory_ptr__to_t_struct$_ExchangeDetails_$8732_memory_ptr_t_struct$_ExchangeDetails_$8732_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10017:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10028:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10036:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10047:4:80",
                "type": ""
              }
            ],
            "src": "9795:435:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10294:374:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10304:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10322:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10327:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10318:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10318:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10331:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10314:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10314:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10308:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10349:3:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10364:5:80"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "10358:5:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10358:12:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10372:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10354:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10354:21:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10342:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10342:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10342:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10396:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10401:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10392:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10392:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10422:5:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10429:4:80",
                                    "type": "",
                                    "value": "0x01"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10418:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10418:16:80"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "10412:5:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10412:23:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10437:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10408:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10408:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10385:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10385:56:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10385:56:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10450:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10477:5:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10484:4:80",
                            "type": "",
                            "value": "0x02"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10473:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10473:16:80"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "10467:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10467:23:80"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "10454:9:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10510:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10515:4:80",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10506:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10506:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "10526:9:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10537:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10522:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10522:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10499:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10499:42:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10499:42:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10561:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10566:4:80",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10557:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10557:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10581:3:80",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "name": "slotValue",
                                "nodeType": "YulIdentifier",
                                "src": "10586:9:80"
                              }
                            ],
                            "functionName": {
                              "name": "shr",
                              "nodeType": "YulIdentifier",
                              "src": "10577:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10577:19:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10598:6:80",
                            "type": "",
                            "value": "0xffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10573:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10573:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10550:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10550:56:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10550:56:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10626:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10631:4:80",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10622:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10622:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10648:5:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10655:4:80",
                                "type": "",
                                "value": "0x03"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10644:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10644:16:80"
                          }
                        ],
                        "functionName": {
                          "name": "sload",
                          "nodeType": "YulIdentifier",
                          "src": "10638:5:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10638:23:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10615:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10615:47:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10615:47:80"
                }
              ]
            },
            "name": "abi_encode_struct_Ask_storage_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10278:5:80",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10285:3:80",
                "type": ""
              }
            ],
            "src": "10235:433:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10845:173:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10855:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10867:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10878:3:80",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10863:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10863:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10855:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10898:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10913:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10929:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10934:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10925:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10925:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10938:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10921:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10921:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10909:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10909:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10891:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10891:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10891:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10985:6:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10997:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11008:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10993:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10993:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Ask_storage_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10951:33:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10951:61:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10951:61:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_struct$_Ask_$9791_storage_ptr__to_t_address_t_struct$_Ask_$9791_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10806:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10817:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10825:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10836:4:80",
                "type": ""
              }
            ],
            "src": "10673:345:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11197:235:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11214:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11225:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11207:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11207:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11207:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11248:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11259:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11244:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11244:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11264:2:80",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11237:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11237:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11237:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11287:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11298:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11283:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11283:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c7920",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11303:34:80",
                        "type": "",
                        "value": "_handleRoyaltyEnginePayout only "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11276:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11276:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11276:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11358:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11369:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11354:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11354:18:80"
                      },
                      {
                        "hexValue": "73656c662063616c6c61626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11374:15:80",
                        "type": "",
                        "value": "self callable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11347:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11347:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11347:43:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11399:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11411:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11422:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11407:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11407:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11399:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_444d058793ff79cc791225f4d17e32ac57d05ee9a18813e601615cfd6c77a5e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11174:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11188:4:80",
                "type": ""
              }
            ],
            "src": "11023:409:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11594:188:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11604:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11616:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11627:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11612:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11612:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11604:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11646:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11661:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11677:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11682:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11673:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11673:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11686:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11669:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11669:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11657:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11657:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11639:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11639:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11639:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11710:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11721:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11706:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11706:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11726:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11699:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11699:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11699:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11753:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11764:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11749:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11749:18:80"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11769:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11742:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11742:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11742:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11547:9:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11558:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11566:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11574:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11585:4:80",
                "type": ""
              }
            ],
            "src": "11437:345:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11819:95:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11836:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11843:3:80",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11848:10:80",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11839:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11839:20:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11829:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11829:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11829:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11876:1:80",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11879:4:80",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11869:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11869:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11869:15:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11900:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11903:4:80",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11893:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11893:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11893:15:80"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "11787:127:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11964:230:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11974:19:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11990:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11984:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11984:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "11974:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12002:58:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "12024:6:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "12040:4:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12046:2:80",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12036:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12036:13:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12055:2:80",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "12051:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12051:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12032:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12032:27:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12020:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12020:40:80"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "12006:10:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12135:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "12137:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12137:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12137:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "12078:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12090:18:80",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12075:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12075:34:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "12114:10:80"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12126:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "12111:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12111:22:80"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "12072:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12072:62:80"
                  },
                  "nodeType": "YulIf",
                  "src": "12069:88:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12173:2:80",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "12177:10:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12166:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12166:22:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12166:22:80"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "11944:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11953:6:80",
                "type": ""
              }
            ],
            "src": "11919:275:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12276:114:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12320:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "12322:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12322:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12322:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12292:6:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12300:18:80",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12289:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12289:30:80"
                  },
                  "nodeType": "YulIf",
                  "src": "12286:56:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12351:33:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12367:1:80",
                            "type": "",
                            "value": "5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12370:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12363:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12363:14:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12379:4:80",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12359:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12359:25:80"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "12351:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_array_address_payable_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12256:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "12267:4:80",
                "type": ""
              }
            ],
            "src": "12199:191:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12470:592:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12519:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12528:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12531:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12521:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12521:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12521:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "12498:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12506:4:80",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12494:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12494:17:80"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "12513:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "12490:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12490:27:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12483:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12483:35:80"
                  },
                  "nodeType": "YulIf",
                  "src": "12480:55:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12544:23:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12560:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12554:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12554:13:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12548:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12576:14:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12586:4:80",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "12580:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12599:79:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12674:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_payable_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "12626:47:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12626:51:80"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "12610:15:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12610:68:80"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "12603:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12687:16:80",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "12700:3:80"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "12691:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "12719:3:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12724:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12712:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12712:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12712:15:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12736:19:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "12747:3:80"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "12752:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12743:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12743:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "12736:3:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12764:46:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "12786:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12798:1:80",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "12801:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "12794:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12794:10:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12782:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12782:23:80"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "12807:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12778:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12778:32:80"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "12768:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12838:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12847:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12850:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12840:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12840:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12840:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12825:6:80"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "12833:3:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12822:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12822:15:80"
                  },
                  "nodeType": "YulIf",
                  "src": "12819:35:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12863:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12878:6:80"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "12886:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12874:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12874:15:80"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "12867:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12954:79:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "12975:3:80"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "12986:3:80"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12980:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12980:10:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12968:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12968:23:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12968:23:80"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13004:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "13015:3:80"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "13020:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13011:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13011:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "13004:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "12909:3:80"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12914:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12906:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12906:15:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12922:23:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12924:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "12935:3:80"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "12940:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12931:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12931:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "12924:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12902:3:80",
                    "statements": []
                  },
                  "src": "12898:135:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13042:14:80",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "13051:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "13042:5:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_array_uint256_dyn_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "12444:6:80",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12452:3:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "12460:5:80",
                "type": ""
              }
            ],
            "src": "12395:667:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13223:1069:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13269:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13278:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13281:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13271:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13271:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13271:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13244:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13253:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13240:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13240:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13265:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13236:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13236:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "13233:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13294:30:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13314:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13308:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13308:16:80"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "13298:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13333:28:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13343:18:80",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13337:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13388:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13397:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13400:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13390:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13390:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13390:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "13376:6:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "13384:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13373:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13373:14:80"
                  },
                  "nodeType": "YulIf",
                  "src": "13370:34:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13413:32:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13427:9:80"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "13438:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13423:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13423:22:80"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "13417:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13493:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13502:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13505:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13495:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13495:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13495:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "13472:2:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13476:4:80",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13468:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13468:13:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13483:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "13464:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13464:27:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13457:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13457:35:80"
                  },
                  "nodeType": "YulIf",
                  "src": "13454:55:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13518:19:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "13534:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13528:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13528:9:80"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "13522:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13546:14:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13556:4:80",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "13550:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13569:79:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "13644:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_payable_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "13596:47:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13596:51:80"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "13580:15:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13580:68:80"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "13573:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13657:16:80",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "13670:3:80"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "13661:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "13689:3:80"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "13694:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13682:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13682:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13682:15:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13706:19:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "13717:3:80"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "13722:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13713:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13713:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "13706:3:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13734:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "13756:2:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13764:1:80",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "13767:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "13760:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13760:10:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13752:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13752:19:80"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "13773:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13748:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13748:28:80"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "13738:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13808:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13817:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13820:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13810:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13810:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13810:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "13791:6:80"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "13799:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13788:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13788:19:80"
                  },
                  "nodeType": "YulIf",
                  "src": "13785:39:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13833:22:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "13848:2:80"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "13852:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13844:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13844:11:80"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "13837:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13920:154:80",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13934:23:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "13953:3:80"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13947:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13947:10:80"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13938:5:80",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "13995:5:80"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "13970:24:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13970:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13970:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "14021:3:80"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "14026:5:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14014:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14014:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14014:18:80"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "14045:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "14056:3:80"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "14061:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14052:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14052:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "14045:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "13875:3:80"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "13880:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13872:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13872:15:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "13888:23:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13890:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "13901:3:80"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "13906:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13897:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13897:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "13890:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "13868:3:80",
                    "statements": []
                  },
                  "src": "13864:210:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14083:15:80",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "14093:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "14083:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14107:41:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14133:9:80"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "14144:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14129:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14129:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14123:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14123:25:80"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "14111:8:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14177:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14186:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14189:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14179:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14179:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14179:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "14163:8:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "14173:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14160:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14160:16:80"
                  },
                  "nodeType": "YulIf",
                  "src": "14157:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14202:84:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14256:9:80"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "14267:8:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14252:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14252:24:80"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "14278:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_uint256_dyn_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "14212:39:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14212:74:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "14202:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13181:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13192:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13204:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13212:6:80",
                "type": ""
              }
            ],
            "src": "13067:1225:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14329:95:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14346:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14353:3:80",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14358:10:80",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "14349:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14349:20:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14339:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14339:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14339:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14386:1:80",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14389:4:80",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14379:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14379:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14379:15:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14410:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14413:4:80",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14403:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14403:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14403:15:80"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "14297:127:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14603:158:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14620:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14631:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14613:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14613:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14613:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14654:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14665:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14650:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14650:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14670:1:80",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14643:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14643:29:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14643:29:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14692:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14703:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14688:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14688:18:80"
                      },
                      {
                        "hexValue": "696e736f6c76656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14708:11:80",
                        "type": "",
                        "value": "insolvent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14681:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14681:39:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14681:39:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14729:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14741:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14752:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14737:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14737:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14729:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_081e2fa72c4e34011d3656bfe84745bd16318a4f9c6c6323843d390046b89502__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14580:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14594:4:80",
                "type": ""
              }
            ],
            "src": "14429:332:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14895:145:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14905:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14917:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14928:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14913:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14913:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14905:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14947:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14962:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14978:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14983:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "14974:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14974:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14987:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "14970:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14970:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14958:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14958:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14940:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14940:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14940:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15011:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15022:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15007:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15007:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15027:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15000:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15000:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15000:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14856:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14867:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14875:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14886:4:80",
                "type": ""
              }
            ],
            "src": "14766:274:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15219:231:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15236:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15247:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15229:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15229:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15229:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15270:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15281:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15266:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15266:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15286:2:80",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15259:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15259:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15259:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15309:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15320:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15305:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15305:18:80"
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420626520746f6b656e206f776e6572206f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15325:34:80",
                        "type": "",
                        "value": "createAsk must be token owner or"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15298:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15298:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15298:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15380:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15391:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15376:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15376:18:80"
                      },
                      {
                        "hexValue": "206f70657261746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15396:11:80",
                        "type": "",
                        "value": " operator"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15369:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15369:39:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15369:39:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15417:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15429:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15440:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15425:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15425:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15417:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15196:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15210:4:80",
                "type": ""
              }
            ],
            "src": "15045:405:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15629:226:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15646:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15657:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15639:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15639:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15639:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15680:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15691:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15676:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15676:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15696:2:80",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15669:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15669:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15669:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15719:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15730:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15715:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15715:18:80"
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f76652041736b735631206d6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15735:34:80",
                        "type": "",
                        "value": "createAsk must approve AsksV1 mo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15708:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15708:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15708:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15790:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15801:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15786:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15786:18:80"
                      },
                      {
                        "hexValue": "64756c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15806:6:80",
                        "type": "",
                        "value": "dule"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15779:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15779:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15779:34:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15822:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15834:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15845:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15830:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15830:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15822:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15606:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15620:4:80",
                "type": ""
              }
            ],
            "src": "15455:400:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16034:245:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16051:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16062:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16044:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16044:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16044:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16085:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16096:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16081:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16081:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16101:2:80",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16074:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16074:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16074:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16124:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16135:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16120:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16120:18:80"
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f766520455243373231547261",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16140:34:80",
                        "type": "",
                        "value": "createAsk must approve ERC721Tra"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16113:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16113:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16113:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16195:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16206:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16191:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16191:18:80"
                      },
                      {
                        "hexValue": "6e7366657248656c706572206173206f70657261746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16211:25:80",
                        "type": "",
                        "value": "nsferHelper as operator"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16184:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16184:53:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16184:53:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16246:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16258:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16269:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16254:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16254:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16246:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16011:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16025:4:80",
                "type": ""
              }
            ],
            "src": "15860:419:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16458:251:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16475:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16486:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16468:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16468:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16468:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16509:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16520:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16505:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16505:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16525:2:80",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16498:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16498:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16498:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16548:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16559:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16544:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16544:18:80"
                      },
                      {
                        "hexValue": "63726561746541736b2066696e646572732066656520627073206d7573742062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16564:34:80",
                        "type": "",
                        "value": "createAsk finders fee bps must b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16537:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16537:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16537:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16619:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16630:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16615:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16615:18:80"
                      },
                      {
                        "hexValue": "65206c657373207468616e206f7220657175616c20746f203130303030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16635:31:80",
                        "type": "",
                        "value": "e less than or equal to 10000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16608:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16608:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16608:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16676:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16688:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16699:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16684:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16684:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16676:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16435:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16449:4:80",
                "type": ""
              }
            ],
            "src": "16284:425:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16888:234:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16905:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16916:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16898:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16898:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16898:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16939:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16950:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16935:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16935:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16955:2:80",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16928:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16928:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16928:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16978:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16989:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16974:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16974:18:80"
                      },
                      {
                        "hexValue": "63726561746541736b206d7573742073706563696679205f73656c6c65724675",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16994:34:80",
                        "type": "",
                        "value": "createAsk must specify _sellerFu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16967:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16967:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16967:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17049:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17060:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17045:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17045:18:80"
                      },
                      {
                        "hexValue": "6e6473526563697069656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17065:14:80",
                        "type": "",
                        "value": "ndsRecipient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17038:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17038:42:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17038:42:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17089:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17101:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17112:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17097:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17097:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17089:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16865:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16879:4:80",
                "type": ""
              }
            ],
            "src": "16714:408:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17267:104:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17277:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17289:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17300:3:80",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17285:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17285:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17277:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17347:6:80"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17355:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Ask_storage_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "17313:33:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17313:52:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17313:52:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Ask_$9791_storage__to_t_struct$_Ask_$9791_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17236:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17247:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17258:4:80",
                "type": ""
              }
            ],
            "src": "17127:244:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17550:176:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17567:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17578:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17560:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17560:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17560:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17601:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17612:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17597:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17597:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17617:2:80",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17590:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17590:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17590:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17640:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17651:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17636:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17636:18:80"
                      },
                      {
                        "hexValue": "73657441736b5072696365206d7573742062652073656c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17656:28:80",
                        "type": "",
                        "value": "setAskPrice must be seller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17629:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17629:56:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17629:56:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17694:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17706:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17717:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17702:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17702:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17694:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17527:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17541:4:80",
                "type": ""
              }
            ],
            "src": "17376:350:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17875:104:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17885:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17897:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17908:3:80",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17893:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17893:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17885:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17955:6:80"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17963:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Ask_storage_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "17921:33:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17921:52:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17921:52:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Ask_$9791_storage_ptr__to_t_struct$_Ask_$9791_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17844:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17855:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17866:4:80",
                "type": ""
              }
            ],
            "src": "17731:248:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18158:228:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18175:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18186:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18168:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18168:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18168:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18209:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18220:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18205:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18205:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18225:2:80",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18198:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18198:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18198:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18248:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18259:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18244:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18244:18:80"
                      },
                      {
                        "hexValue": "736574526f79616c7479456e67696e6541646472657373206f6e6c7920726567",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18264:34:80",
                        "type": "",
                        "value": "setRoyaltyEngineAddress only reg"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18237:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18237:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18237:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18319:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18330:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18315:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18315:18:80"
                      },
                      {
                        "hexValue": "697374726172",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18335:8:80",
                        "type": "",
                        "value": "istrar"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18308:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18308:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18308:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18353:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18365:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18376:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18361:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18361:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18353:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b05b4162d2b5d35bd4fc3f4069624371167f16d817ef10b51b2b726f9b1bcc3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18135:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18149:4:80",
                "type": ""
              }
            ],
            "src": "17984:402:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18565:251:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18582:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18593:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18575:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18575:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18575:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18616:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18627:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18612:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18612:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18632:2:80",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18605:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18605:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18605:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18655:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18666:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18651:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18651:18:80"
                      },
                      {
                        "hexValue": "736574526f79616c7479456e67696e6541646472657373206d757374206d6174",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18671:34:80",
                        "type": "",
                        "value": "setRoyaltyEngineAddress must mat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18644:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18644:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18644:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18726:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18737:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18722:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18722:18:80"
                      },
                      {
                        "hexValue": "63682049526f79616c7479456e67696e65563120696e74657266616365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18742:31:80",
                        "type": "",
                        "value": "ch IRoyaltyEngineV1 interface"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18715:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18715:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18715:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18783:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18795:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18806:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18791:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18791:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18783:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26f9ddf619fa8b63737e112dd69d7c055a02dff0013d77d5cdc77bc5ba30c241__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18542:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18556:4:80",
                "type": ""
              }
            ],
            "src": "18391:425:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18995:249:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19012:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19023:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19005:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19005:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19005:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19046:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19057:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19042:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19042:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19062:2:80",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19035:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19035:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19035:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19085:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19096:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19081:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19081:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c75",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19101:34:80",
                        "type": "",
                        "value": "_handleIncomingTransfer msg valu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19074:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19074:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19074:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19156:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19167:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19152:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19152:18:80"
                      },
                      {
                        "hexValue": "65206c657373207468616e20657870656374656420616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19172:29:80",
                        "type": "",
                        "value": "e less than expected amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19145:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19145:57:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19145:57:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19211:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19223:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19234:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19219:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19219:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19211:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0a711e744101fa8eb9530b2ad457a5beb5398212856e071b8bc9b20ff8107dc2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18972:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18986:4:80",
                "type": ""
              }
            ],
            "src": "18821:423:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19330:103:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19376:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19385:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19388:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19378:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19378:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19378:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "19351:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19360:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19347:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19347:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19372:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "19343:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19343:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "19340:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19401:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19417:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "19411:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19411:16:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "19401:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19296:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "19307:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19319:6:80",
                "type": ""
              }
            ],
            "src": "19249:184:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19486:80:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19513:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19515:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19515:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19515:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19502:1:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "19509:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "19505:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19505:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19499:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19499:13:80"
                  },
                  "nodeType": "YulIf",
                  "src": "19496:39:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19544:16:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19555:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19558:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19551:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19551:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "19544:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19469:1:80",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19472:1:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "19478:3:80",
                "type": ""
              }
            ],
            "src": "19438:128:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19745:306:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19762:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19773:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19755:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19755:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19755:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19796:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19807:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19792:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19792:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19812:2:80",
                        "type": "",
                        "value": "76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19785:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19785:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19785:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19835:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19846:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19831:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19831:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e207472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19851:34:80",
                        "type": "",
                        "value": "_handleIncomingTransfer token tr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19824:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19824:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19824:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19906:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19917:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19902:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19902:18:80"
                      },
                      {
                        "hexValue": "616e736665722063616c6c20646964206e6f74207472616e7366657220657870",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19922:34:80",
                        "type": "",
                        "value": "ansfer call did not transfer exp"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19895:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19895:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19895:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19977:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19988:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19973:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19973:19:80"
                      },
                      {
                        "hexValue": "656374656420616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19994:14:80",
                        "type": "",
                        "value": "ected amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19966:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19966:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19966:43:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20018:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20030:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20041:3:80",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20026:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20026:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20018:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b65aa3af0e641ce457a9e84d8e0216edfc393ae83aa6421dd6a44678137ac33c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19722:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19736:4:80",
                "type": ""
              }
            ],
            "src": "19571:480:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20241:262:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20251:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20263:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20274:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20259:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20259:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20251:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20287:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20305:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20310:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "20301:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20301:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20314:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "20297:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20297:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "20291:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20332:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20347:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20355:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20343:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20343:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20325:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20325:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20325:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20379:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20390:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20375:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20375:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20395:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20368:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20368:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20368:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20422:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20433:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20418:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20418:18:80"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "20438:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20411:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20411:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20411:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20465:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20476:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20461:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20461:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "20485:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20493:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20481:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20481:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20454:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20454:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20454:43:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20186:9:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "20197:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "20205:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20213:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20221:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20232:4:80",
                "type": ""
              }
            ],
            "src": "20056:447:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20605:286:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20651:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20660:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20663:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "20653:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20653:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20653:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "20626:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20635:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20622:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20622:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20647:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "20618:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20618:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "20615:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20676:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20695:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20689:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20689:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "20680:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20738:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint16",
                      "nodeType": "YulIdentifier",
                      "src": "20714:23:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20714:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20714:30:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20753:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "20763:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "20753:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20777:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20802:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20813:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20798:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20798:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20792:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20792:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "20781:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "20851:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "20826:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20826:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20826:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20868:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "20878:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "20868:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint16t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20563:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "20574:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20586:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20594:6:80",
                "type": ""
              }
            ],
            "src": "20508:383:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21070:223:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21087:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21098:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21080:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21080:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21080:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21121:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21132:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21117:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21117:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21137:2:80",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21110:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21110:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21110:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21160:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21171:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21156:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21156:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21176:34:80",
                        "type": "",
                        "value": "_handleOutgoingTransfer insolven"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21149:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21149:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21149:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21231:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21242:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21227:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21227:18:80"
                      },
                      {
                        "hexValue": "74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21247:3:80",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21220:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21220:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21220:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21260:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21272:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21283:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21268:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21268:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21260:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9dffe34bf37f5f5456d5b06dc7a95307b7993514988baa141cd803d3b091f6e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21047:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21061:4:80",
                "type": ""
              }
            ],
            "src": "20896:397:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21489:14:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21491:10:80",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "21498:3:80"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21491:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21473:3:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21481:3:80",
                "type": ""
              }
            ],
            "src": "21298:205:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21607:103:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21617:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21629:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21640:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21625:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21625:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21617:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21659:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21674:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21686:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21691:10:80",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "21682:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21682:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "21670:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21670:33:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21652:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21652:52:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21652:52:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21576:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21587:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21598:4:80",
                "type": ""
              }
            ],
            "src": "21508:202:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21852:137:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "21862:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21882:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "21876:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21876:13:80"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "21866:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "21924:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21932:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21920:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21920:17:80"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21939:3:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21944:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "21898:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21898:53:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21898:53:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21960:23:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21971:3:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "21976:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21967:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21967:16:80"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21960:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21828:3:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21833:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21844:3:80",
                "type": ""
              }
            ],
            "src": "21715:274:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22168:232:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22185:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22196:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22178:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22178:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22178:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22219:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22230:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22215:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22215:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22235:2:80",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22208:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22208:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22208:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22258:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22269:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22254:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22254:18:80"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22274:34:80",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22247:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22247:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22247:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22329:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22340:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22325:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22325:18:80"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22345:12:80",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22318:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22318:40:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22318:40:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22367:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22379:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22390:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22375:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22375:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22367:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22145:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22159:4:80",
                "type": ""
              }
            ],
            "src": "21994:406:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22579:228:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22596:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22607:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22589:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22589:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22589:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22630:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22641:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22626:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22626:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22646:2:80",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22619:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22619:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22619:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22669:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22680:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22665:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22665:18:80"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22685:34:80",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22658:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22658:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22658:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22740:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22751:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22736:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22736:18:80"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22756:8:80",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22729:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22729:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22729:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22774:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22786:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22797:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22782:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22782:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22774:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22556:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22570:4:80",
                "type": ""
              }
            ],
            "src": "22405:402:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22986:179:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23003:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23014:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22996:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22996:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22996:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23037:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23048:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23033:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23033:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23053:2:80",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23026:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23026:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23026:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23076:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23087:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23072:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23072:18:80"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23092:31:80",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23065:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23065:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23065:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23133:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23145:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23156:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23141:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23141:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23133:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22963:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22977:4:80",
                "type": ""
              }
            ],
            "src": "22812:353:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint16_t_uint256__to_t_address_t_address_t_address_t_uint16_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xffff))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n    }\n    function abi_encode_tuple_t_contract$_ERC20TransferHelper_$16267__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_uint16(value)\n    {\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_addresst_uint16(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        let value_3 := calldataload(add(headStart, 160))\n        validator_revert_uint16(value_3)\n        value5 := value_3\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ERC721TransferHelper_$16334__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_180a23d5434c537ca84b1e47f534d18e25bd055e02a65ce20bae4afd9c835f59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"REENTRANCY\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"cancelAsk ask doesn't exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"cancelAsk must be token owner or\")\n        mstore(add(headStart, 96), \" operator\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"fillAsk must be active ask\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"fillAsk _fillCurrency must match\")\n        mstore(add(headStart, 96), \" ask currency\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"fillAsk _fillAmount must match a\")\n        mstore(add(headStart, 96), \"sk amount\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_struct_ExchangeDetails(value, pos)\n    {\n        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n    }\n    function abi_encode_tuple_t_struct$_ExchangeDetails_$8732_memory_ptr_t_struct$_ExchangeDetails_$8732_memory_ptr__to_t_struct$_ExchangeDetails_$8732_memory_ptr_t_struct$_ExchangeDetails_$8732_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        abi_encode_struct_ExchangeDetails(value0, headStart)\n        abi_encode_struct_ExchangeDetails(value1, add(headStart, 96))\n    }\n    function abi_encode_struct_Ask_storage_ptr(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(sload(value), _1))\n        mstore(add(pos, 0x20), and(sload(add(value, 0x01)), _1))\n        let slotValue := sload(add(value, 0x02))\n        mstore(add(pos, 0x40), and(slotValue, _1))\n        mstore(add(pos, 0x60), and(shr(160, slotValue), 0xffff))\n        mstore(add(pos, 0x80), sload(add(value, 0x03)))\n    }\n    function abi_encode_tuple_t_address_t_struct$_Ask_$9791_storage_ptr__to_t_address_t_struct$_Ask_$9791_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        abi_encode_struct_Ask_storage_ptr(value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_444d058793ff79cc791225f4d17e32ac57d05ee9a18813e601615cfd6c77a5e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"_handleRoyaltyEnginePayout only \")\n        mstore(add(headStart, 96), \"self callable\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_payable_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_payable_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_payable_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := mload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_081e2fa72c4e34011d3656bfe84745bd16318a4f9c6c6323843d390046b89502__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"insolvent\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"createAsk must be token owner or\")\n        mstore(add(headStart, 96), \" operator\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"createAsk must approve AsksV1 mo\")\n        mstore(add(headStart, 96), \"dule\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"createAsk must approve ERC721Tra\")\n        mstore(add(headStart, 96), \"nsferHelper as operator\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"createAsk finders fee bps must b\")\n        mstore(add(headStart, 96), \"e less than or equal to 10000\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"createAsk must specify _sellerFu\")\n        mstore(add(headStart, 96), \"ndsRecipient\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_Ask_$9791_storage__to_t_struct$_Ask_$9791_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        abi_encode_struct_Ask_storage_ptr(value0, headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"setAskPrice must be seller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_Ask_$9791_storage_ptr__to_t_struct$_Ask_$9791_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        abi_encode_struct_Ask_storage_ptr(value0, headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b05b4162d2b5d35bd4fc3f4069624371167f16d817ef10b51b2b726f9b1bcc3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"setRoyaltyEngineAddress only reg\")\n        mstore(add(headStart, 96), \"istrar\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_26f9ddf619fa8b63737e112dd69d7c055a02dff0013d77d5cdc77bc5ba30c241__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"setRoyaltyEngineAddress must mat\")\n        mstore(add(headStart, 96), \"ch IRoyaltyEngineV1 interface\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0a711e744101fa8eb9530b2ad457a5beb5398212856e071b8bc9b20ff8107dc2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"_handleIncomingTransfer msg valu\")\n        mstore(add(headStart, 96), \"e less than expected amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b65aa3af0e641ce457a9e84d8e0216edfc393ae83aa6421dd6a44678137ac33c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 76)\n        mstore(add(headStart, 64), \"_handleIncomingTransfer token tr\")\n        mstore(add(headStart, 96), \"ansfer call did not transfer exp\")\n        mstore(add(headStart, 128), \"ected amount\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint16t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint16(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_9dffe34bf37f5f5456d5b06dc7a95307b7993514988baa141cd803d3b091f6e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"_handleOutgoingTransfer insolven\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "947:16706:61:-:0;;;461:1:37;426:36;;3902:524:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:62:53;;;;;;;;;;;;;-1:-1:-1;;;376:62:53;;;4180:14:61;4196:20;4218:12;4253:21;-1:-1:-1;;;;;4232:47:61;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4232:59:61;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;690:63:52;;;;;552:26:55;;;;;1931:13:51::1;:48:::0;;-1:-1:-1;;;;;;1931:48:51::1;::::0;;::::1;::::0;;;::::1;::::0;;;1989:67;;::::1;;::::0;2066:29:::1;;::::0;419:12:53;;;;:4;;-1:-1:-1;419:12:53;;;;:::i;:::-;-1:-1:-1;;;;;;;;4353:66:61;;::::3;;::::0;-1:-1:-1;947:16706:61;;-1:-1:-1;;947:16706:61;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;947:16706:61;;;-1:-1:-1;947:16706:61;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:80;-1:-1:-1;;;;;89:31:80;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:789::-;256:6;264;272;280;288;341:3;329:9;320:7;316:23;312:33;309:53;;;358:1;355;348:12;309:53;390:9;384:16;409:31;434:5;409:31;:::i;:::-;509:2;494:18;;488:25;459:5;;-1:-1:-1;522:33:80;488:25;522:33;:::i;:::-;626:2;611:18;;605:25;574:7;;-1:-1:-1;639:33:80;605:25;639:33;:::i;:::-;743:2;728:18;;722:25;691:7;;-1:-1:-1;756:33:80;722:25;756:33;:::i;:::-;860:3;845:19;;839:26;808:7;;-1:-1:-1;874:33:80;839:26;874:33;:::i;:::-;926:7;916:17;;;150:789;;;;;;;;:::o;944:277::-;1040:6;1093:2;1081:9;1072:7;1068:23;1064:32;1061:52;;;1109:1;1106;1099:12;1061:52;1141:9;1135:16;1160:31;1185:5;1160:31;:::i;:::-;1210:5;944:277;-1:-1:-1;;;944:277:80:o;1482:380::-;1561:1;1557:12;;;;1604;;;1625:61;;1679:4;1671:6;1667:17;1657:27;;1625:61;1732:2;1724:6;1721:14;1701:18;1698:38;1695:161;;;1778:10;1773:3;1769:20;1766:1;1759:31;1813:4;1810:1;1803:15;1841:4;1838:1;1831:15;1695:161;;1482:380;;;:::o;:::-;947:16706:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "947:16706:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;265:18:53;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;792:34:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;829:32:80;;;811:51;;799:2;784:18;792:34:51;665:203:80;10333:506:61;;;;;;;;;;-1:-1:-1;10333:506:61;;;;;:::i;:::-;;:::i;:::-;;1449:60;;;;;;;;;;-1:-1:-1;1449:60:61;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1449:60:61;;;;;;;;;;;-1:-1:-1;;;1449:60:61;;;;;;;;;;;-1:-1:-1;;;;;1642:15:80;;;1624:34;;1694:15;;;1689:2;1674:18;;1667:43;1746:15;;;;1726:18;;;1719:43;;;;1810:6;1798:19;1793:2;1778:18;;1771:47;1849:3;1834:19;;1827:35;;;;1573:3;1558:19;1449:60:61;1329:539:80;15149:2115:61;;;;;;:::i;:::-;;:::i;575:56:52:-;;;;;;;;;;;;;;;5751:1742:51;;;;;;:::i;:::-;;:::i;:::-;;;3458:25:80;;;3446:2;3431:18;5751:1742:51;3312:177:80;6414:1504:61;;;;;;;;;;-1:-1:-1;6414:1504:61;;;;;:::i;:::-;;:::i;8984:445::-;;;;;;;;;;-1:-1:-1;8984:445:61;;;;;:::i;:::-;;:::i;2472:414:51:-;;;;;;;;;;-1:-1:-1;2472:414:51;;;;;:::i;:::-;;:::i;1266:58:61:-;;;;;;;;;;;;;;;265:18:53;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10333:506:61:-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;;;;;;;;;577:1;558:16;:20;;;-1:-1:-1;;;;;10434:25:61;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;:42;::::1;10426:96;;;::::0;-1:-1:-1;;;10426:96:61;;5844:2:80;10426:96:61::1;::::0;::::1;5826:21:80::0;5883:2;5863:18;;;5856:30;5922:29;5902:18;;;5895:57;5969:18;;10426:96:61::1;5642:351:80::0;10426:96:61::1;10554:41;::::0;-1:-1:-1;;;10554:41:61;;::::1;::::0;::::1;3458:25:80::0;;;10533:18:61::1;::::0;-1:-1:-1;;;;;10554:31:61;::::1;::::0;::::1;::::0;3431:18:80;;10554:41:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10533:62:::0;-1:-1:-1;10626:10:61::1;-1:-1:-1::0;;;;;10626:24:61;::::1;;::::0;:92:::1;;-1:-1:-1::0;10654:64:61::1;::::0;-1:-1:-1;;;10654:64:61;;-1:-1:-1;;;;;6484:15:80;;;10654:64:61::1;::::0;::::1;6466:34:80::0;10707:10:61::1;6516:18:80::0;;;6509:43;10654:40:61;::::1;::::0;::::1;::::0;6401:18:80;;10654:64:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10605:180;;;::::0;-1:-1:-1;;;10605:180:61;;7047:2:80;10605:180:61::1;::::0;::::1;7029:21:80::0;7086:2;7066:18;;;7059:30;7125:34;7105:18;;;7098:62;-1:-1:-1;;;7176:18:80;;;7169:39;7225:19;;10605:180:61::1;6845:405:80::0;10605:180:61::1;10796:36;10807:14;10823:8;10796:10;:36::i;:::-;-1:-1:-1::0;;620:1:37;601:16;:20;-1:-1:-1;10333:506:61:o;15149:2115::-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;577:1;558:16;:20;;;-1:-1:-1;;;;;15373:25:61;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;15427:10;;15373:35;;15427:10:::1;15419:63;;;::::0;-1:-1:-1;;;15419:63:61;;7457:2:80;15419:63:61::1;::::0;::::1;7439:21:80::0;7496:2;7476:18;;;7469:30;7535:28;7515:18;;;7508:56;7581:18;;15419:63:61::1;7255:350:80::0;15419:63:61::1;15500:15;::::0;::::1;::::0;-1:-1:-1;;;;;15500:32:61;;::::1;:15:::0;::::1;:32;15492:90;;;::::0;-1:-1:-1;;;15492:90:61;;7812:2:80;15492:90:61::1;::::0;::::1;7794:21:80::0;7851:2;7831:18;;;7824:30;7890:34;7870:18;;;7863:62;-1:-1:-1;;;7941:18:80;;;7934:43;7994:19;;15492:90:61::1;7610:409:80::0;15492:90:61::1;15616:11;15600:3;:12;;;:27;15592:81;;;::::0;-1:-1:-1;;;15592:81:61;;8226:2:80;15592:81:61::1;::::0;::::1;8208:21:80::0;8265:2;8245:18;;;8238:30;8304:34;8284:18;;;8277:62;-1:-1:-1;;;8355:18:80;;;8348:39;8404:19;;15592:81:61::1;8024:405:80::0;15592:81:61::1;15782:12;::::0;::::1;::::0;15796:15:::1;::::0;::::1;::::0;15758:54:::1;::::0;15782:12;-1:-1:-1;;;;;15796:15:61::1;15758:23;:54::i;:::-;15969:12;::::0;::::1;::::0;15983:15:::1;::::0;::::1;::::0;15893:23:::1;::::0;15922:95:::1;::::0;15943:14;;15959:8;;-1:-1:-1;;;;;15983:15:61::1;15893:23:::0;15922:20:::1;:95::i;:::-;-1:-1:-1::0;16128:15:61::1;::::0;::::1;::::0;15892:125;;-1:-1:-1;16086:58:61::1;::::0;15892:125;;-1:-1:-1;;;;;16128:15:61::1;16086:24;:58::i;:::-;16068:76:::0;-1:-1:-1;;;;;;16197:21:61;::::1;::::0;16193:272:::1;;16274:17;::::0;::::1;::::0;16234:18:::1;::::0;16295:5:::1;::::0;16256:35:::1;::::0;-1:-1:-1;;;16274:17:61;::::1;;;16256:15:::0;:35:::1;:::i;:::-;16255:45;;;;:::i;:::-;16359:15;::::0;::::1;::::0;16234:66;;-1:-1:-1;16314:79:61::1;::::0;16338:7;;16234:66;;-1:-1:-1;;;;;16359:15:61::1;;16314:23;:79::i;:::-;16426:28;16444:10:::0;16426:15;:28:::1;:::i;:::-;16408:46;;16220:245;16193:272;16550:24;::::0;::::1;::::0;16593:15:::1;::::0;::::1;::::0;16526:101:::1;::::0;-1:-1:-1;;;;;16550:24:61;;::::1;::::0;16576:15;;16593::::1;16550:24;16526:23;:101::i;:::-;16721:10:::0;;16671:83:::1;::::0;-1:-1:-1;;;16671:83:61;;-1:-1:-1;;;;;9378:15:80;;;16671:83:61::1;::::0;::::1;9360:34:80::0;16721:10:61;;::::1;9410:18:80::0;;;9403:43;16733:10:61::1;9462:18:80::0;;;9455:43;9514:18;;;9507:34;;;16671:20:61::1;:33:::0;;::::1;::::0;::::1;::::0;9294:19:80;;16671:83:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;16811:78:61::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;16811:78:61;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;16886:1:::1;16811:78:::0;;;;16945:83;;;;::::1;::::0;;16977:15:::1;::::0;::::1;::::0;;::::1;16945:83:::0;;16765:43:::1;16945:83:::0;;::::1;::::0;17014:12:::1;::::0;::::1;::::0;16945:83;;;;17061:10;;17044:84;;16811:78;;-1:-1:-1;16945:83:61;;-1:-1:-1;17073:10:61::1;::::0;17061::::1;::::0;17044:84:::1;::::0;::::1;::::0;16811:78;;16945:83;;17044:84:::1;:::i;:::-;;;;;;;;17179:10;-1:-1:-1::0;;;;;17143:61:61::1;17169:8;17153:14;-1:-1:-1::0;;;;;17143:61:61::1;;17191:7;17200:3;17143:61;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;;;;17222:25:61;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;17215:42;;-1:-1:-1;;;;;;17215:42:61;;::::1;::::0;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;17215:42:61;;;;::::1;::::0;;;601:20:37;;;;-1:-1:-1;;;;15149:2115:61:o;5751:1742:51:-;5935:7;6007:10;6029:4;6007:27;5999:85;;;;-1:-1:-1;;;5999:85:51;;11225:2:80;5999:85:51;;;11207:21:80;11264:2;11244:18;;;11237:30;11303:34;11283:18;;;11276:62;-1:-1:-1;;;11354:18:80;;;11347:43;11407:19;;5999:85:51;11023:409:80;5999:85:51;6228:13;;:59;;-1:-1:-1;;;6228:59:51;;-1:-1:-1;;;;;11657:32:80;;;6228:59:51;;;11639:51:80;11706:18;;;11699:34;;;11749:18;;;11742:34;;;6163:35:51;;;;6228:13;;;:24;;11612:18:80;;6228:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6228:59:51;;;;;;;;;;;;:::i;:::-;6364:17;;6162:125;;-1:-1:-1;6162:125:51;-1:-1:-1;6460:18:51;6456:38;;6487:7;6480:14;;;;;;;6456:38;6567:7;6541:23;;;6736:718;6760:13;6756:1;:17;6736:718;;;6849:10;6860:1;6849:13;;;;;;;;:::i;:::-;;;;;;;6837:25;;6885:7;6893:1;6885:10;;;;;;;;:::i;:::-;;;;;;;6876:19;;7011:6;6992:15;:25;;6984:47;;;;-1:-1:-1;;;6984:47:51;;14631:2:80;6984:47:51;;;14613:21:80;14670:1;14650:18;;;14643:29;-1:-1:-1;;;14688:18:80;;;14681:39;14737:18;;6984:47:51;14429:332:80;6984:47:51;7087:66;7111:9;7122:6;7130:15;7147:5;7087:23;:66::i;:::-;7173:58;;;-1:-1:-1;;;;;14958:32:80;;;14940:51;;15022:2;15007:18;;15000:34;;;7203:8:51;;7173:58;;;;;;14913:18:80;7173:58:51;;;;;;;7383:25;;;;;7426:3;;6736:718;;;-1:-1:-1;7471:15:51;;-1:-1:-1;;;;;;5751:1742:51;;;;;;;:::o;6414:1504:61:-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;577:1;558:16;:20;;;6677:41:61::1;::::0;-1:-1:-1;;;6677:41:61;;::::1;::::0;::::1;3458:25:80::0;;;-1:-1:-1;;;;;6677:31:61;::::1;::::0;::::1;::::0;3431:18:80;;6677:41:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6656:62:::0;-1:-1:-1;6750:10:61::1;-1:-1:-1::0;;;;;6750:24:61;::::1;;::::0;:92:::1;;-1:-1:-1::0;6778:64:61::1;::::0;-1:-1:-1;;;6778:64:61;;-1:-1:-1;;;;;6484:15:80;;;6778:64:61::1;::::0;::::1;6466:34:80::0;6831:10:61::1;6516:18:80::0;;;6509:43;6778:40:61;::::1;::::0;::::1;::::0;6401:18:80;;6778:64:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6729:180;;;::::0;-1:-1:-1;;;6729:180:61;;15247:2:80;6729:180:61::1;::::0;::::1;15229:21:80::0;15286:2;15266:18;;;15259:30;15325:34;15305:18;;;15298:62;-1:-1:-1;;;15376:18:80;;;15369:39;15425:19;;6729:180:61::1;15045:405:80::0;6729:180:61::1;6927:49;::::0;-1:-1:-1;;;6927:49:61;;6965:10:::1;6927:49;::::0;::::1;811:51:80::0;6927:20:61::1;-1:-1:-1::0;;;;;6927:37:61::1;::::0;::::1;::::0;784:18:80;;6927:49:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6919:98;;;::::0;-1:-1:-1;;;6919:98:61;;15657:2:80;6919:98:61::1;::::0;::::1;15639:21:80::0;15696:2;15676:18;;;15669:30;15735:34;15715:18;;;15708:62;-1:-1:-1;;;15786:18:80;;;15779:34;15830:19;;6919:98:61::1;15455:400:80::0;6919:98:61::1;7048:83;::::0;-1:-1:-1;;;7048:83:61;;-1:-1:-1;;;;;6484:15:80;;;7048:83:61::1;::::0;::::1;6466:34:80::0;7109:20:61::1;6536:15:80::0;;6516:18;;;6509:43;7048:40:61;::::1;::::0;::::1;::::0;6401:18:80;;7048:83:61::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7027:185;;;::::0;-1:-1:-1;;;7027:185:61;;16062:2:80;7027:185:61::1;::::0;::::1;16044:21:80::0;16101:2;16081:18;;;16074:30;16140:34;16120:18;;;16113:62;16211:25;16191:18;;;16184:53;16254:19;;7027:185:61::1;15860:419:80::0;7027:185:61::1;7248:5;7230:14;:23;;;;7222:97;;;::::0;-1:-1:-1;;;7222:97:61;;16486:2:80;7222:97:61::1;::::0;::::1;16468:21:80::0;16525:2;16505:18;;;16498:30;16564:34;16544:18;;;16537:62;16635:31;16615:18;;;16608:59;16684:19;;7222:97:61::1;16284:425:80::0;7222:97:61::1;-1:-1:-1::0;;;;;7337:35:61;::::1;7329:92;;;::::0;-1:-1:-1;;;7329:92:61;;16916:2:80;7329:92:61::1;::::0;::::1;16898:21:80::0;16955:2;16935:18;;;16928:30;16994:34;16974:18;;;16967:62;-1:-1:-1;;;17045:18:80;;;17038:42;17097:19;;7329:92:61::1;16714:408:80::0;7329:92:61::1;-1:-1:-1::0;;;;;7436:25:61;;::::1;7490:1;7436:25:::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;:42;::::1;:56:::0;7432:123:::1;;7508:36;7519:14;7535:8;7508:10;:36::i;:::-;7603:219;;;;;;;;7629:10;-1:-1:-1::0;;;;;7603:219:61::1;;;;;7675:21;-1:-1:-1::0;;;;;7603:219:61::1;;;;;7723:12;-1:-1:-1::0;;;;;7603:219:61::1;;;;;7764:14;7603:219;;;;;;7802:9;7603:219;;::::0;7565:9:::1;:25;7575:14;-1:-1:-1::0;;;;;7565:25:61::1;-1:-1:-1::0;;;;;7565:25:61::1;;;;;;;;;;;;:35;7591:8;7565:35;;;;;;;;;;;:257;;;;;;;;;;;;;-1:-1:-1::0;;;;;7565:257:61::1;;;;;-1:-1:-1::0;;;;;7565:257:61::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;7565:257:61::1;;;;;-1:-1:-1::0;;;;;7565:257:61::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;7565:257:61::1;;;;;-1:-1:-1::0;;;;;7565:257:61::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7865:8;7849:14;-1:-1:-1::0;;;;;7838:73:61::1;;7875:9;:25;7885:14;-1:-1:-1::0;;;;;7875:25:61::1;-1:-1:-1::0;;;;;7875:25:61::1;;;;;;;;;;;;:35;7901:8;7875:35;;;;;;;;;;;7838:73;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;620:1:37;601:16;:20;-1:-1:-1;;;;;6414:1504:61:o;8984:445::-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;577:1;558:16;:20;;;-1:-1:-1;;;;;9176:25:61;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;9230:10;;9176:35;;9230:10:::1;9244;9230:24;9222:63;;;::::0;-1:-1:-1;;;9222:63:61;;17578:2:80;9222:63:61::1;::::0;::::1;17560:21:80::0;17617:2;17597:18;;;17590:30;17656:28;17636:18;;;17629:56;17702:18;;9222:63:61::1;17376:350:80::0;9222:63:61::1;9296:12;::::0;::::1;:24:::0;;;9330:15:::1;::::0;::::1;:30:::0;;-1:-1:-1;;;;;;9330:30:61::1;-1:-1:-1::0;;;;;9330:30:61;;::::1;::::0;;;::::1;::::0;;;9376:46:::1;::::0;9408:8;;9376:46;::::1;::::0;::::1;::::0;::::1;::::0;9296:12;;9376:46:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;620:1:37;601:16;:20;-1:-1:-1;;;8984:445:61:o;2472:414:51:-;2554:10;-1:-1:-1;;;;;2568:9:51;2554:23;;2546:74;;;;-1:-1:-1;;;2546:74:51;;18186:2:80;2546:74:51;;;18168:21:80;18225:2;18205:18;;;18198:30;18264:34;18244:18;;;18237:62;-1:-1:-1;;;18315:18:80;;;18308:36;18361:19;;2546:74:51;17984:402:80;2546:74:51;2651:83;2683:14;-1:-1:-1;;;2651:31:51;:83::i;:::-;2630:191;;;;-1:-1:-1;;;2630:191:51;;18593:2:80;2630:191:51;;;18575:21:80;18632:2;18612:18;;;18605:30;18671:34;18651:18;;;18644:62;18742:31;18722:18;;;18715:59;18791:19;;2630:191:51;18391:425:80;2630:191:51;2831:13;:48;;-1:-1:-1;;;;;;2831:48:51;-1:-1:-1;;;;;2831:48:51;;;;;;;;;;2472:414::o;17432:219:61:-;-1:-1:-1;;;;;17517:74:61;;17555:25;;;;:9;:25;;;;;;;;:35;;;;;;;;;;17517:74;;17545:8;;17517:74;;;;;17555:35;17517:74;:::i;:::-;;;;;;;;-1:-1:-1;;;;;17609:25:61;;;;;;;:9;:25;;;;;;;;:35;;;;;;;;;17602:42;;-1:-1:-1;;;;;;17602:42:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17602:42:61;;;;;;;17432:219::o;1007:933:52:-;-1:-1:-1;;;;;1099:23:52;;1095:839;;1159:7;1146:9;:20;;1138:92;;;;-1:-1:-1;;;1138:92:52;;19023:2:80;1138:92:52;;;19005:21:80;19062:2;19042:18;;;19035:30;19101:34;19081:18;;;19074:62;19172:29;19152:18;;;19145:57;19219:19;;1138:92:52;18821:423:80;1138:92:52;1007:933;;:::o;1095:839::-;1587:30;;-1:-1:-1;;;1587:30:52;;1611:4;1587:30;;;811:51:80;1539:9:52;;1517:12;;-1:-1:-1;;;;;1587:15:52;;;;;784:18:80;;1587:30:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1631:83;;-1:-1:-1;;;1631:83:52;;-1:-1:-1;;;;;9378:15:80;;;1631:83:52;;;9360:34:80;1679:10:52;9410:18:80;;;9403:43;1699:4:52;9462:18:80;;;9455:43;9514:18;;;9507:34;;;1563:54:52;;-1:-1:-1;1631:19:52;:36;;;;;;9294:19:80;;1631:83:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1751:30:52;;-1:-1:-1;;;1751:30:52;;1775:4;1751:30;;;811:51:80;1728:20:52;;-1:-1:-1;;;;;;1751:15:52;;;-1:-1:-1;1751:15:52;;784:18:80;;1751:30:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:53;-1:-1:-1;1728:53:52;1803:23;1819:7;1803:13;:23;:::i;:::-;:39;1795:128;;;;-1:-1:-1;;;1795:128:52;;19773:2:80;1795:128:52;;;19755:21:80;19812:2;19792:18;;;19785:30;19851:34;19831:18;;;19824:62;19922:34;19902:18;;;19895:62;-1:-1:-1;;;19973:19:80;;;19966:43;20026:19;;1795:128:52;19571:480:80;1795:128:52;1247:687;;;1007:933;;:::o;4289:888:51:-;4486:7;;;4640:14;;;:39;;;4670:9;4658;:21;4640:39;4639:65;;4695:9;4639:65;;;4683:9;4639:65;4802:93;;-1:-1:-1;;;4802:93:51;;-1:-1:-1;;;;;20343:15:80;;;4802:93:51;;;20325:34:80;20375:18;;;20368:34;;;20418:18;;;20411:34;;;20481:15;;20461:18;;;20454:43;4625:79:51;;-1:-1:-1;4802:4:51;;:31;;4625:79;;20259:19:80;;4802:93:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4802:93:51;;;;;;;;-1:-1:-1;;4802:93:51;;;;;;;;;;;;:::i;:::-;;;4798:373;;5145:7;5154:5;5137:23;;;;;;;4798:373;5020:14;-1:-1:-1;5036:4:51;;-1:-1:-1;5012:29:51;;-1:-1:-1;5012:29:51;4289:888;;;;;;;;;:::o;3119:632::-;3289:56;;-1:-1:-1;;;3289:56:51;;3330:4;3289:56;;;14940:51:80;15007:18;;;15000:34;;;3213:7:51;;;;-1:-1:-1;;;;;3289:19:51;:32;;;;14913:18:80;;3289:56:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:78;-1:-1:-1;3404:16:51;3400:36;;3429:7;3422:14;;;;;3400:36;3503:51;;-1:-1:-1;;;3503:51:51;;3548:4;3503:51;;;811::80;3479:20:51;;3503:19;-1:-1:-1;;;;;3503:36:51;;;;784:18:80;;3503:51:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3476:78;;;3596:74;3620:12;3634:11;3647:15;3664:5;3596:23;:74::i;:::-;3723:21;3733:11;3723:7;:21;:::i;:::-;3716:28;;;;3119:632;;;;;:::o;1039:1016:55:-;1203:12;;;:35;;-1:-1:-1;;;;;;1219:19:55;;;1203:35;1199:72;;;1254:7;;1199:72;-1:-1:-1;;;;;1315:23:55;;1311:738;;1387:7;1362:21;:32;;1354:78;;;;-1:-1:-1;;;1354:78:55;;21098:2:80;1354:78:55;;;21080:21:80;21137:2;21117:18;;;21110:30;21176:34;21156:18;;;21149:62;-1:-1:-1;;;21227:18:80;;;21220:31;21268:19;;1354:78:55;20896:397:80;1354:78:55;1564:11;1579:14;;;:39;;;1609:9;1597;:21;1579:39;1578:65;;1634:9;1578:65;;;1622:9;1578:65;1564:79;;1658:12;1676:5;-1:-1:-1;;;;;1676:10:55;1694:7;1708:3;1676:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:59;;;1822:7;1817:145;;1849:4;-1:-1:-1;;;;;1849:12:55;;1869:7;1849:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1897:50:55;;-1:-1:-1;;;;;;;1912:4:55;1897:34;;-1:-1:-1;1932:5:55;;-1:-1:-1;1939:7:55;1897:34;:50::i;:::-;1340:632;;1311:738;;;1992:46;-1:-1:-1;;;;;1992:30:55;;2023:5;2030:7;1992:30;:46::i;:::-;1039:1016;;;;:::o;1318:274:35:-;1405:4;1512:23;1527:7;1512:14;:23::i;:::-;:73;;;;;1539:46;1564:7;1573:11;1539:24;:46::i;:::-;1505:80;1318:274;-1:-1:-1;;;1318:274:35:o;701:205:25:-;840:58;;;-1:-1:-1;;;;;14958:32:80;;840:58:25;;;14940:51:80;15007:18;;;;15000:34;;;840:58:25;;;;;;;;;;14913:18:80;;;;840:58:25;;;;;;;;-1:-1:-1;;;;;840:58:25;-1:-1:-1;;;840:58:25;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;689:411:35:-;753:4;960:60;985:7;-1:-1:-1;;;960:24:35;:60::i;:::-;:133;;;;-1:-1:-1;1037:56:35;1062:7;-1:-1:-1;;;;;;1037:24:35;:56::i;:::-;1036:57;941:152;689:411;-1:-1:-1;;689:411:35:o;4208:409::-;4346:71;;;-1:-1:-1;;;;;;21670:33:80;;4346:71:35;;;;21652:52:80;;;;4346:71:35;;;;;;;;;;21625:18:80;;;;4346:71:35;;;;;;;-1:-1:-1;;;;;4346:71:35;-1:-1:-1;;;4346:71:35;;;4465:45;;4301:4;;4346:71;4301:4;;;;-1:-1:-1;;;;;4465:18:35;;;4489:5;;4465:45;;4346:71;;4465:45;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4427:83;;;;4540:2;4524:6;:13;:18;4520:36;;;4551:5;4544:12;;;;;;;4520:36;4573:7;:37;;;;;4595:6;4584:26;;;;;;;;;;;;:::i;:::-;4566:44;4208:409;-1:-1:-1;;;;;;4208:409:35:o;3207:706:25:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:25;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:25;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:25;;22196:2:80;3811:85:25;;;22178:21:80;22235:2;22215:18;;;22208:30;22274:34;22254:18;;;22247:62;-1:-1:-1;;;22325:18:80;;;22318:40;22375:19;;3811:85:25;21994:406:80;3861:223:31;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;-1:-1:-1;;;;;1465:19:31;;;5228:60;;;;-1:-1:-1;;;5228:60:31;;23014:2:80;5228:60:31;;;22996:21:80;23053:2;23033:18;;;23026:30;23092:31;23072:18;;;23065:59;23141:18;;5228:60:31;22812:353:80;5228:60:31;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:31;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:31:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:31;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:31;;;;;;;;:::i;14:258:80:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:80;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:80;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:80:o;873:131::-;-1:-1:-1;;;;;948:31:80;;938:42;;928:70;;994:1;991;984:12;928:70;873:131;:::o;1009:315::-;1077:6;1085;1138:2;1126:9;1117:7;1113:23;1109:32;1106:52;;;1154:1;1151;1144:12;1106:52;1193:9;1180:23;1212:31;1237:5;1212:31;:::i;:::-;1262:5;1314:2;1299:18;;;;1286:32;;-1:-1:-1;;;1009:315:80:o;1873:667::-;1968:6;1976;1984;1992;2000;2053:3;2041:9;2032:7;2028:23;2024:33;2021:53;;;2070:1;2067;2060:12;2021:53;2109:9;2096:23;2128:31;2153:5;2128:31;:::i;:::-;2178:5;-1:-1:-1;2230:2:80;2215:18;;2202:32;;-1:-1:-1;2286:2:80;2271:18;;2258:32;2299:33;2258:32;2299:33;:::i;:::-;2351:7;-1:-1:-1;2405:2:80;2390:18;;2377:32;;-1:-1:-1;2461:3:80;2446:19;;2433:33;2475;2433;2475;:::i;:::-;2527:7;2517:17;;;1873:667;;;;;;;;:::o;2782:525::-;2868:6;2876;2884;2892;2945:3;2933:9;2924:7;2920:23;2916:33;2913:53;;;2962:1;2959;2952:12;2913:53;3001:9;2988:23;3020:31;3045:5;3020:31;:::i;:::-;3070:5;-1:-1:-1;3122:2:80;3107:18;;3094:32;;-1:-1:-1;3173:2:80;3158:18;;3145:32;;-1:-1:-1;3229:2:80;3214:18;;3201:32;3242:33;3201:32;3242:33;:::i;:::-;2782:525;;;;-1:-1:-1;2782:525:80;;-1:-1:-1;;2782:525:80:o;3494:117::-;3579:6;3572:5;3568:18;3561:5;3558:29;3548:57;;3601:1;3598;3591:12;3616:807;3719:6;3727;3735;3743;3751;3759;3812:3;3800:9;3791:7;3787:23;3783:33;3780:53;;;3829:1;3826;3819:12;3780:53;3868:9;3855:23;3887:31;3912:5;3887:31;:::i;:::-;3937:5;-1:-1:-1;3989:2:80;3974:18;;3961:32;;-1:-1:-1;4040:2:80;4025:18;;4012:32;;-1:-1:-1;4096:2:80;4081:18;;4068:32;4109:33;4068:32;4109:33;:::i;:::-;4161:7;-1:-1:-1;4220:3:80;4205:19;;4192:33;4234;4192;4234;:::i;:::-;4286:7;-1:-1:-1;4345:3:80;4330:19;;4317:33;4359:32;4317:33;4359:32;:::i;:::-;4410:7;4400:17;;;3616:807;;;;;;;;:::o;4428:247::-;4487:6;4540:2;4528:9;4519:7;4515:23;4511:32;4508:52;;;4556:1;4553;4546:12;4508:52;4595:9;4582:23;4614:31;4639:5;4614:31;:::i;4918:380::-;4997:1;4993:12;;;;5040;;;5061:61;;5115:4;5107:6;5103:17;5093:27;;5061:61;5168:2;5160:6;5157:14;5137:18;5134:38;5131:161;;;5214:10;5209:3;5205:20;5202:1;5195:31;5249:4;5246:1;5239:15;5277:4;5274:1;5267:15;5131:161;;4918:380;;;:::o;5303:334::-;5505:2;5487:21;;;5544:2;5524:18;;;5517:30;-1:-1:-1;;;5578:2:80;5563:18;;5556:40;5628:2;5613:18;;5303:334::o;5998:251::-;6068:6;6121:2;6109:9;6100:7;6096:23;6092:32;6089:52;;;6137:1;6134;6127:12;6089:52;6169:9;6163:16;6188:31;6213:5;6188:31;:::i;6563:277::-;6630:6;6683:2;6671:9;6662:7;6658:23;6654:32;6651:52;;;6699:1;6696;6689:12;6651:52;6731:9;6725:16;6784:5;6777:13;6770:21;6763:5;6760:32;6750:60;;6806:1;6803;6796:12;8434:127;8495:10;8490:3;8486:20;8483:1;8476:31;8526:4;8523:1;8516:15;8550:4;8547:1;8540:15;8566:168;8606:7;8672:1;8668;8664:6;8660:14;8657:1;8654:21;8649:1;8642:9;8635:17;8631:45;8628:71;;;8679:18;;:::i;:::-;-1:-1:-1;8719:9:80;;8566:168::o;8739:217::-;8779:1;8805;8795:132;;8849:10;8844:3;8840:20;8837:1;8830:31;8884:4;8881:1;8874:15;8912:4;8909:1;8902:15;8795:132;-1:-1:-1;8941:9:80;;8739:217::o;8961:125::-;9001:4;9029:1;9026;9023:8;9020:34;;;9034:18;;:::i;:::-;-1:-1:-1;9071:9:80;;8961:125::o;9795:435::-;9637:12;;-1:-1:-1;;;;;9633:38:80;9621:51;;9721:4;9710:16;;;9704:23;9688:14;;;9681:47;9777:4;9766:16;;;9760:23;9744:14;;;9737:47;10089:3;10074:19;;9637:12;;-1:-1:-1;;;;;9633:38:80;10220:2;10205:18;;9621:51;9721:4;9710:16;;9704:23;9688:14;;;9681:47;9777:4;9766:16;;9760:23;9744:14;;;9737:47;10163:61;9552:238;10235:433;10358:12;;-1:-1:-1;;;;;10354:21:80;;;10342:34;;10331:1;10418:16;;10412:23;10408:32;;10401:4;10392:14;;10385:56;10484:4;10473:16;;10467:23;10522:18;;;10515:4;10506:14;;10499:42;10322:3;10577:19;10598:6;10573:32;10566:4;10557:14;;10550:56;10655:4;10644:16;10638:23;10631:4;10622:14;;;10615:47;10235:433::o;10673:345::-;-1:-1:-1;;;;;10909:32:80;;10891:51;;10878:3;10863:19;;10951:61;11008:2;10993:18;;10985:6;10951:61;:::i;11787:127::-;11848:10;11843:3;11839:20;11836:1;11829:31;11879:4;11876:1;11869:15;11903:4;11900:1;11893:15;11919:275;11990:2;11984:9;12055:2;12036:13;;-1:-1:-1;;12032:27:80;12020:40;;12090:18;12075:34;;12111:22;;;12072:62;12069:88;;;12137:18;;:::i;:::-;12173:2;12166:22;11919:275;;-1:-1:-1;11919:275:80:o;12199:191::-;12267:4;12300:18;12292:6;12289:30;12286:56;;;12322:18;;:::i;:::-;-1:-1:-1;12367:1:80;12363:14;12379:4;12359:25;;12199:191::o;12395:667::-;12460:5;12513:3;12506:4;12498:6;12494:17;12490:27;12480:55;;12531:1;12528;12521:12;12480:55;12560:6;12554:13;12586:4;12610:68;12626:51;12674:2;12626:51;:::i;:::-;12610:68;:::i;:::-;12712:15;;;12798:1;12794:10;;;;12782:23;;12778:32;;;12743:12;;;;12822:15;;;12819:35;;;12850:1;12847;12840:12;12819:35;12886:2;12878:6;12874:15;12898:135;12914:6;12909:3;12906:15;12898:135;;;12980:10;;12968:23;;13011:12;;;;12931;;12898:135;;;-1:-1:-1;13051:5:80;12395:667;-1:-1:-1;;;;;;12395:667:80:o;13067:1225::-;13204:6;13212;13265:2;13253:9;13244:7;13240:23;13236:32;13233:52;;;13281:1;13278;13271:12;13233:52;13314:9;13308:16;13343:18;13384:2;13376:6;13373:14;13370:34;;;13400:1;13397;13390:12;13370:34;13438:6;13427:9;13423:22;13413:32;;13483:7;13476:4;13472:2;13468:13;13464:27;13454:55;;13505:1;13502;13495:12;13454:55;13534:2;13528:9;13556:4;13580:68;13596:51;13644:2;13596:51;:::i;13580:68::-;13682:15;;;13764:1;13760:10;;;;13752:19;;13748:28;;;13713:12;;;;13788:19;;;13785:39;;;13820:1;13817;13810:12;13785:39;13844:11;;;;13864:210;13880:6;13875:3;13872:15;13864:210;;;13953:3;13947:10;13970:31;13995:5;13970:31;:::i;:::-;14014:18;;13897:12;;;;14052;;;;13864:210;;;14129:18;;;14123:25;14093:5;;-1:-1:-1;14123:25:80;;-1:-1:-1;;;14160:16:80;;;14157:36;;;14189:1;14186;14179:12;14157:36;;14212:74;14278:7;14267:8;14256:9;14252:24;14212:74;:::i;:::-;14202:84;;;13067:1225;;;;;:::o;14297:127::-;14358:10;14353:3;14349:20;14346:1;14339:31;14389:4;14386:1;14379:15;14413:4;14410:1;14403:15;17127:244;17300:3;17285:19;;17313:52;17289:9;17347:6;17313:52;:::i;19249:184::-;19319:6;19372:2;19360:9;19351:7;19347:23;19343:32;19340:52;;;19388:1;19385;19378:12;19340:52;-1:-1:-1;19411:16:80;;19249:184;-1:-1:-1;19249:184:80:o;19438:128::-;19478:3;19509:1;19505:6;19502:1;19499:13;19496:39;;;19515:18;;:::i;:::-;-1:-1:-1;19551:9:80;;19438:128::o;20508:383::-;20586:6;20594;20647:2;20635:9;20626:7;20622:23;20618:32;20615:52;;;20663:1;20660;20653:12;20615:52;20695:9;20689:16;20714:30;20738:5;20714:30;:::i;:::-;20813:2;20798:18;;20792:25;20763:5;;-1:-1:-1;20826:33:80;20792:25;20826:33;:::i;:::-;20878:7;20868:17;;;20508:383;;;;;:::o;21715:274::-;21844:3;21882:6;21876:13;21898:53;21944:6;21939:3;21932:4;21924:6;21920:17;21898:53;:::i;:::-;21967:16;;;;;21715:274;-1:-1:-1;;21715:274:80:o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.10;\n\nimport {ReentrancyGuard} from \"@rari-capital/solmate/src/utils/ReentrancyGuard.sol\";\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {ERC721TransferHelper} from \"../../../transferHelpers/ERC721TransferHelper.sol\";\nimport {UniversalExchangeEventV1} from \"../../../common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol\";\nimport {IncomingTransferSupportV1} from \"../../../common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol\";\nimport {FeePayoutSupportV1} from \"../../../common/FeePayoutSupport/FeePayoutSupportV1.sol\";\nimport {ModuleNamingSupportV1} from \"../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol\";\n\n/// @title Asks V1.1\n/// @author tbtstl <t@zora.co>\n/// @notice This module allows sellers to list an owned ERC-721 token for sale for a given price in a given currency, and allows buyers to purchase from those asks\ncontract AsksV1_1 is ReentrancyGuard, UniversalExchangeEventV1, IncomingTransferSupportV1, FeePayoutSupportV1, ModuleNamingSupportV1 {\n    /// @dev The indicator to pass all remaining gas when paying out royalties\n    uint256 private constant USE_ALL_GAS_FLAG = 0;\n\n    /// @notice The ZORA ERC-721 Transfer Helper\n    ERC721TransferHelper public immutable erc721TransferHelper;\n\n    /// @notice The ask for a given NFT, if one exists\n    /// @dev ERC-721 token contract => ERC-721 token ID => Ask\n    mapping(address => mapping(uint256 => Ask)) public askForNFT;\n\n    /// @notice The metadata for an ask\n    /// @param seller The address of the seller placing the ask\n    /// @param sellerFundsRecipient The address to send funds after the ask is filled\n    /// @param askCurrency The address of the ERC-20, or address(0) for ETH, required to fill the ask\n    /// @param findersFeeBps The fee to the referrer of the ask\n    /// @param askPrice The price to fill the ask\n    struct Ask {\n        address seller;\n        address sellerFundsRecipient;\n        address askCurrency;\n        uint16 findersFeeBps;\n        uint256 askPrice;\n    }\n\n    /// @notice Emitted when an ask is created\n    /// @param tokenContract The ERC-721 token address of the created ask\n    /// @param tokenId The ERC-721 token ID of the created ask\n    /// @param ask The metadata of the created ask\n    event AskCreated(address indexed tokenContract, uint256 indexed tokenId, Ask ask);\n\n    /// @notice Emitted when an ask price is updated\n    /// @param tokenContract The ERC-721 token address of the updated ask\n    /// @param tokenId The ERC-721 token ID of the updated ask\n    /// @param ask The metadata of the updated ask\n    event AskPriceUpdated(address indexed tokenContract, uint256 indexed tokenId, Ask ask);\n\n    /// @notice Emitted when an ask is canceled\n    /// @param tokenContract The ERC-721 token address of the canceled ask\n    /// @param tokenId The ERC-721 token ID of the canceled ask\n    /// @param ask The metadata of the canceled ask\n    event AskCanceled(address indexed tokenContract, uint256 indexed tokenId, Ask ask);\n\n    /// @notice Emitted when an ask is filled\n    /// @param tokenContract The ERC-721 token address of the filled ask\n    /// @param tokenId The ERC-721 token ID of the filled ask\n    /// @param buyer The buyer address of the filled ask\n    /// @param finder The address of finder who referred the ask\n    /// @param ask The metadata of the filled ask\n    event AskFilled(address indexed tokenContract, uint256 indexed tokenId, address indexed buyer, address finder, Ask ask);\n\n    /// @param _erc20TransferHelper The ZORA ERC-20 Transfer Helper address\n    /// @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n    /// @param _royaltyEngine The Manifold Royalty Engine address\n    /// @param _protocolFeeSettings The ZoraProtocolFeeSettingsV1 address\n    /// @param _wethAddress The WETH token address\n    constructor(\n        address _erc20TransferHelper,\n        address _erc721TransferHelper,\n        address _royaltyEngine,\n        address _protocolFeeSettings,\n        address _wethAddress\n    )\n        IncomingTransferSupportV1(_erc20TransferHelper)\n        FeePayoutSupportV1(_royaltyEngine, _protocolFeeSettings, _wethAddress, ERC721TransferHelper(_erc721TransferHelper).ZMM().registrar())\n        ModuleNamingSupportV1(\"Asks: v1.1\")\n    {\n        erc721TransferHelper = ERC721TransferHelper(_erc721TransferHelper);\n    }\n\n    //        ,-.\n    //        `-'\n    //        /|\\\n    //         |             ,------.\n    //        / \\            |AsksV1|\n    //      Caller           `--+---'\n    //        |   createAsk()   |\n    //        | ---------------->\n    //        |                 |\n    //        |                 |\n    //        |    ____________________________________________________________\n    //        |    ! ALT  /  Ask already exists for this token?                !\n    //        |    !_____/      |                                              !\n    //        |    !            |----.                                         !\n    //        |    !            |    | _cancelAsk(_tokenContract, _tokenId)    !\n    //        |    !            |<---'                                         !\n    //        |    !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!\n    //        |    !~[noop]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!\n    //        |                 |\n    //        |                 |----.\n    //        |                 |    | create ask\n    //        |                 |<---'\n    //        |                 |\n    //        |                 |----.\n    //        |                 |    | emit AskCreated()\n    //        |                 |<---'\n    //      Caller           ,--+---.\n    //        ,-.            |AsksV1|\n    //        `-'            `------'\n    //        /|\\\n    //         |\n    //        / \\\n    /// @notice Creates the ask for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token to be sold\n    /// @param _tokenId The ID of the ERC-721 token to be sold\n    /// @param _askPrice The price to fill the ask\n    /// @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH\n    /// @param _sellerFundsRecipient The address to send funds once the ask is filled\n    /// @param _findersFeeBps The bps of the ask price (post-royalties) to be sent to the referrer of the sale\n    function createAsk(\n        address _tokenContract,\n        uint256 _tokenId,\n        uint256 _askPrice,\n        address _askCurrency,\n        address _sellerFundsRecipient,\n        uint16 _findersFeeBps\n    ) external nonReentrant {\n        address tokenOwner = IERC721(_tokenContract).ownerOf(_tokenId);\n\n        require(\n            msg.sender == tokenOwner || IERC721(_tokenContract).isApprovedForAll(tokenOwner, msg.sender),\n            \"createAsk must be token owner or operator\"\n        );\n        require(erc721TransferHelper.isModuleApproved(msg.sender), \"createAsk must approve AsksV1 module\");\n        require(\n            IERC721(_tokenContract).isApprovedForAll(tokenOwner, address(erc721TransferHelper)),\n            \"createAsk must approve ERC721TransferHelper as operator\"\n        );\n        require(_findersFeeBps <= 10000, \"createAsk finders fee bps must be less than or equal to 10000\");\n        require(_sellerFundsRecipient != address(0), \"createAsk must specify _sellerFundsRecipient\");\n\n        if (askForNFT[_tokenContract][_tokenId].seller != address(0)) {\n            _cancelAsk(_tokenContract, _tokenId);\n        }\n\n        askForNFT[_tokenContract][_tokenId] = Ask({\n            seller: tokenOwner,\n            sellerFundsRecipient: _sellerFundsRecipient,\n            askCurrency: _askCurrency,\n            findersFeeBps: _findersFeeBps,\n            askPrice: _askPrice\n        });\n\n        emit AskCreated(_tokenContract, _tokenId, askForNFT[_tokenContract][_tokenId]);\n    }\n\n    //        ,-.\n    //        `-'\n    //        /|\\\n    //         |             ,------.\n    //        / \\            |AsksV1|\n    //      Caller           `--+---'\n    //        |  setAskPrice()  |\n    //        | ---------------->\n    //        |                 |\n    //        |                 |----.\n    //        |                 |    | update ask price\n    //        |                 |<---'\n    //        |                 |\n    //        |                 |----.\n    //        |                 |    | emit AskPriceUpdated()\n    //        |                 |<---'\n    //      Caller           ,--+---.\n    //        ,-.            |AsksV1|\n    //        `-'            `------'\n    //        /|\\\n    //         |\n    //        / \\\n    /// @notice Updates the ask price for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The ID of the ERC-721 token\n    /// @param _askPrice The ask price to set\n    /// @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH\n    function setAskPrice(\n        address _tokenContract,\n        uint256 _tokenId,\n        uint256 _askPrice,\n        address _askCurrency\n    ) external nonReentrant {\n        Ask storage ask = askForNFT[_tokenContract][_tokenId];\n\n        require(ask.seller == msg.sender, \"setAskPrice must be seller\");\n\n        ask.askPrice = _askPrice;\n        ask.askCurrency = _askCurrency;\n\n        emit AskPriceUpdated(_tokenContract, _tokenId, ask);\n    }\n\n    //        ,-.\n    //        `-'\n    //        /|\\\n    //         |             ,------.\n    //        / \\            |AsksV1|\n    //      Caller           `--+---'\n    //        |   cancelAsk()   |\n    //        | ---------------->\n    //        |                 |\n    //        |                 |----.\n    //        |                 |    | emit AskCanceled()\n    //        |                 |<---'\n    //        |                 |\n    //        |                 |----.\n    //        |                 |    | delete ask\n    //        |                 |<---'\n    //      Caller           ,--+---.\n    //        ,-.            |AsksV1|\n    //        `-'            `------'\n    //        /|\\\n    //         |\n    //        / \\\n    /// @notice Cancels the ask for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The ID of the ERC-721 token\n    function cancelAsk(address _tokenContract, uint256 _tokenId) external nonReentrant {\n        require(askForNFT[_tokenContract][_tokenId].seller != address(0), \"cancelAsk ask doesn't exist\");\n\n        address tokenOwner = IERC721(_tokenContract).ownerOf(_tokenId);\n        require(\n            msg.sender == tokenOwner || IERC721(_tokenContract).isApprovedForAll(tokenOwner, msg.sender),\n            \"cancelAsk must be token owner or operator\"\n        );\n\n        _cancelAsk(_tokenContract, _tokenId);\n    }\n\n    //        ,-.\n    //        `-'\n    //        /|\\\n    //         |             ,------.                           ,--------------------.\n    //        / \\            |AsksV1|                           |ERC721TransferHelper|\n    //      Caller           `--+---'                           `---------+----------'\n    //        |    fillAsk()    |                                         |\n    //        | ---------------->                                         |\n    //        |                 |                                         |\n    //        |                 |----.                                    |\n    //        |                 |    | validate received funds            |\n    //        |                 |<---'                                    |\n    //        |                 |                                         |\n    //        |                 |----.                                    |\n    //        |                 |    | handle royalty payouts             |\n    //        |                 |<---'                                    |\n    //        |                 |                                         |\n    //        |                 |                                         |\n    //        |    _________________________________________________      |\n    //        |    ! ALT  /  finders fee configured for this ask?   !     |\n    //        |    !_____/      |                                   !     |\n    //        |    !            |----.                              !     |\n    //        |    !            |    | handle finders fee payout    !     |\n    //        |    !            |<---'                              !     |\n    //        |    !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!     |\n    //        |    !~[noop]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!     |\n    //        |                 |                                         |\n    //        |                 |----.\n    //        |                 |    | handle seller funds recipient payout\n    //        |                 |<---'\n    //        |                 |                                         |\n    //        |                 |              transferFrom()             |\n    //        |                 | ---------------------------------------->\n    //        |                 |                                         |\n    //        |                 |                                         |----.\n    //        |                 |                                         |    | transfer NFT from seller to buyer\n    //        |                 |                                         |<---'\n    //        |                 |                                         |\n    //        |                 |----.                                    |\n    //        |                 |    | emit ExchangeExecuted()            |\n    //        |                 |<---'                                    |\n    //        |                 |                                         |\n    //        |                 |----.                                    |\n    //        |                 |    | emit AskFilled()                   |\n    //        |                 |<---'                                    |\n    //        |                 |                                         |\n    //        |                 |----.                                    |\n    //        |                 |    | delete ask from contract           |\n    //        |                 |<---'                                    |\n    //      Caller           ,--+---.                           ,---------+----------.\n    //        ,-.            |AsksV1|                           |ERC721TransferHelper|\n    //        `-'            `------'                           `--------------------'\n    //        /|\\\n    //         |\n    //        / \\\n    /// @notice Fills the ask for a given NFT, transferring the ETH/ERC-20 to the seller and NFT to the buyer\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The ID of the ERC-721 token\n    /// @param _fillCurrency The address of the ERC-20 token using to fill, or address(0) for ETH\n    /// @param _fillAmount The amount to fill the ask\n    /// @param _finder The address of the ask referrer\n    function fillAsk(\n        address _tokenContract,\n        uint256 _tokenId,\n        address _fillCurrency,\n        uint256 _fillAmount,\n        address _finder\n    ) external payable nonReentrant {\n        Ask storage ask = askForNFT[_tokenContract][_tokenId];\n\n        require(ask.seller != address(0), \"fillAsk must be active ask\");\n        require(ask.askCurrency == _fillCurrency, \"fillAsk _fillCurrency must match ask currency\");\n        require(ask.askPrice == _fillAmount, \"fillAsk _fillAmount must match ask amount\");\n\n        // Ensure ETH/ERC-20 payment from buyer is valid and take custody\n        _handleIncomingTransfer(ask.askPrice, ask.askCurrency);\n\n        // Payout respective parties, ensuring royalties are honored\n        (uint256 remainingProfit, ) = _handleRoyaltyPayout(_tokenContract, _tokenId, ask.askPrice, ask.askCurrency, USE_ALL_GAS_FLAG);\n\n        // Payout optional protocol fee\n        remainingProfit = _handleProtocolFeePayout(remainingProfit, ask.askCurrency);\n\n        // Payout optional finder fee\n        if (_finder != address(0)) {\n            uint256 findersFee = (remainingProfit * ask.findersFeeBps) / 10000;\n            _handleOutgoingTransfer(_finder, findersFee, ask.askCurrency, USE_ALL_GAS_FLAG);\n\n            remainingProfit = remainingProfit - findersFee;\n        }\n\n        // Transfer remaining ETH/ERC-20 to seller\n        _handleOutgoingTransfer(ask.sellerFundsRecipient, remainingProfit, ask.askCurrency, USE_ALL_GAS_FLAG);\n\n        // Transfer NFT to buyer\n        erc721TransferHelper.transferFrom(_tokenContract, ask.seller, msg.sender, _tokenId);\n\n        ExchangeDetails memory userAExchangeDetails = ExchangeDetails({tokenContract: _tokenContract, tokenId: _tokenId, amount: 1});\n        ExchangeDetails memory userBExchangeDetails = ExchangeDetails({tokenContract: ask.askCurrency, tokenId: 0, amount: ask.askPrice});\n\n        emit ExchangeExecuted(ask.seller, msg.sender, userAExchangeDetails, userBExchangeDetails);\n        emit AskFilled(_tokenContract, _tokenId, msg.sender, _finder, ask);\n\n        delete askForNFT[_tokenContract][_tokenId];\n    }\n\n    /// @dev Deletes canceled and invalid asks\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The ID of the ERC-721 token\n    function _cancelAsk(address _tokenContract, uint256 _tokenId) private {\n        emit AskCanceled(_tokenContract, _tokenId, askForNFT[_tokenContract][_tokenId]);\n\n        delete askForNFT[_tokenContract][_tokenId];\n    }\n}\n",
  "sourcePath": "/Users/ds/Documents/rarible/scripts/contracts/modules/Asks/V1.1/AsksV1_1.sol",
  "ast": {
    "absolutePath": "project:/contracts/modules/Asks/V1.1/AsksV1_1.sol",
    "exportedSymbols": {
      "AsksV1_1": [
        10313
      ],
      "ERC721TransferHelper": [
        16334
      ],
      "FeePayoutSupportV1": [
        8453
      ],
      "IERC721": [
        5438
      ],
      "IncomingTransferSupportV1": [
        8558
      ],
      "ModuleNamingSupportV1": [
        8576
      ],
      "ReentrancyGuard": [
        6294
      ],
      "UniversalExchangeEventV1": [
        8746
      ]
    },
    "id": 10314,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9739,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:61"
      },
      {
        "absolutePath": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "id": 9741,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 6295,
        "src": "61:84:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9740,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 9743,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 5439,
        "src": "146:73:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9742,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../transferHelpers/ERC721TransferHelper.sol",
        "id": 9745,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 16335,
        "src": "220:87:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9744,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "228:20:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol",
        "file": "../../../common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol",
        "id": 9747,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 8747,
        "src": "308:112:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9746,
              "name": "UniversalExchangeEventV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "316:24:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "file": "../../../common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "id": 9749,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 8559,
        "src": "421:115:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9748,
              "name": "IncomingTransferSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "429:25:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "id": 9751,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 8454,
        "src": "537:91:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9750,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "545:18:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "id": 9753,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 8577,
        "src": "629:100:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9752,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "637:21:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9755,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6294,
              "src": "968:15:61"
            },
            "id": 9756,
            "nodeType": "InheritanceSpecifier",
            "src": "968:15:61"
          },
          {
            "baseName": {
              "id": 9757,
              "name": "UniversalExchangeEventV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8746,
              "src": "985:24:61"
            },
            "id": 9758,
            "nodeType": "InheritanceSpecifier",
            "src": "985:24:61"
          },
          {
            "baseName": {
              "id": 9759,
              "name": "IncomingTransferSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8558,
              "src": "1011:25:61"
            },
            "id": 9760,
            "nodeType": "InheritanceSpecifier",
            "src": "1011:25:61"
          },
          {
            "baseName": {
              "id": 9761,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8453,
              "src": "1038:18:61"
            },
            "id": 9762,
            "nodeType": "InheritanceSpecifier",
            "src": "1038:18:61"
          },
          {
            "baseName": {
              "id": 9763,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8576,
              "src": "1058:21:61"
            },
            "id": 9764,
            "nodeType": "InheritanceSpecifier",
            "src": "1058:21:61"
          }
        ],
        "canonicalName": "AsksV1_1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9754,
          "nodeType": "StructuredDocumentation",
          "src": "731:216:61",
          "text": "@title Asks V1.1\n @author tbtstl <t@zora.co>\n @notice This module allows sellers to list an owned ERC-721 token for sale for a given price in a given currency, and allows buyers to purchase from those asks"
        },
        "fullyImplemented": true,
        "id": 10313,
        "linearizedBaseContracts": [
          10313,
          8576,
          8453,
          8722,
          8558,
          8746,
          6294
        ],
        "name": "AsksV1_1",
        "nameLocation": "956:8:61",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 9765,
              "nodeType": "StructuredDocumentation",
              "src": "1086:74:61",
              "text": "@dev The indicator to pass all remaining gas when paying out royalties"
            },
            "id": 9768,
            "mutability": "constant",
            "name": "USE_ALL_GAS_FLAG",
            "nameLocation": "1190:16:61",
            "nodeType": "VariableDeclaration",
            "scope": 10313,
            "src": "1165:45:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9766,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1165:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 9767,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1209:1:61",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9769,
              "nodeType": "StructuredDocumentation",
              "src": "1217:44:61",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "id": 9772,
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1304:20:61",
            "nodeType": "VariableDeclaration",
            "scope": 10313,
            "src": "1266:58:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 9771,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9770,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16334,
                "src": "1266:20:61"
              },
              "referencedDeclaration": 16334,
              "src": "1266:20:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9773,
              "nodeType": "StructuredDocumentation",
              "src": "1331:113:61",
              "text": "@notice The ask for a given NFT, if one exists\n @dev ERC-721 token contract => ERC-721 token ID => Ask"
            },
            "functionSelector": "418f0656",
            "id": 9780,
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "1500:9:61",
            "nodeType": "VariableDeclaration",
            "scope": 10313,
            "src": "1449:60:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask))"
            },
            "typeName": {
              "id": 9779,
              "keyType": {
                "id": 9774,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1457:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1449:43:61",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask))"
              },
              "valueType": {
                "id": 9778,
                "keyType": {
                  "id": 9775,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1476:7:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1468:23:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                  "typeString": "mapping(uint256 => struct AsksV1_1.Ask)"
                },
                "valueType": {
                  "id": 9777,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9776,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9791,
                    "src": "1487:3:61"
                  },
                  "referencedDeclaration": 9791,
                  "src": "1487:3:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "AsksV1_1.Ask",
            "id": 9791,
            "members": [
              {
                "constant": false,
                "id": 9782,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "1951:6:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "1943:14:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9781,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1943:7:61",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9784,
                "mutability": "mutable",
                "name": "sellerFundsRecipient",
                "nameLocation": "1975:20:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "1967:28:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9783,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1967:7:61",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9786,
                "mutability": "mutable",
                "name": "askCurrency",
                "nameLocation": "2013:11:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "2005:19:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9785,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2005:7:61",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9788,
                "mutability": "mutable",
                "name": "findersFeeBps",
                "nameLocation": "2041:13:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "2034:20:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 9787,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2034:6:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9790,
                "mutability": "mutable",
                "name": "askPrice",
                "nameLocation": "2072:8:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "2064:16:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9789,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2064:7:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "1929:3:61",
            "nodeType": "StructDefinition",
            "scope": 10313,
            "src": "1922:165:61",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9792,
              "nodeType": "StructuredDocumentation",
              "src": "2093:230:61",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token ID of the created ask\n @param ask The metadata of the created ask"
            },
            "id": 9801,
            "name": "AskCreated",
            "nameLocation": "2334:10:61",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9794,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "2361:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9801,
                  "src": "2345:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2345:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9796,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2392:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9801,
                  "src": "2376:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9799,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "2405:3:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9801,
                  "src": "2401:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 9798,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9797,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9791,
                      "src": "2401:3:61"
                    },
                    "referencedDeclaration": 9791,
                    "src": "2401:3:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2344:65:61"
            },
            "src": "2328:82:61"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9802,
              "nodeType": "StructuredDocumentation",
              "src": "2416:236:61",
              "text": "@notice Emitted when an ask price is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token ID of the updated ask\n @param ask The metadata of the updated ask"
            },
            "id": 9811,
            "name": "AskPriceUpdated",
            "nameLocation": "2663:15:61",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9804,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "2695:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9811,
                  "src": "2679:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2679:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9806,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2726:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9811,
                  "src": "2710:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9809,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "2739:3:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9811,
                  "src": "2735:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 9808,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9807,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9791,
                      "src": "2735:3:61"
                    },
                    "referencedDeclaration": 9791,
                    "src": "2735:3:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2678:65:61"
            },
            "src": "2657:87:61"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9812,
              "nodeType": "StructuredDocumentation",
              "src": "2750:234:61",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token ID of the canceled ask\n @param ask The metadata of the canceled ask"
            },
            "id": 9821,
            "name": "AskCanceled",
            "nameLocation": "2995:11:61",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9814,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "3023:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9821,
                  "src": "3007:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9816,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3054:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9821,
                  "src": "3038:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9819,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "3067:3:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9821,
                  "src": "3063:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 9818,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9817,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9791,
                      "src": "3063:3:61"
                    },
                    "referencedDeclaration": 9791,
                    "src": "3063:3:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3006:65:61"
            },
            "src": "2989:83:61"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9822,
              "nodeType": "StructuredDocumentation",
              "src": "3078:348:61",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token ID of the filled ask\n @param buyer The buyer address of the filled ask\n @param finder The address of finder who referred the ask\n @param ask The metadata of the filled ask"
            },
            "id": 9835,
            "name": "AskFilled",
            "nameLocation": "3437:9:61",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9824,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "3463:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3447:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9826,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3494:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3478:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3478:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9828,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "3519:5:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3503:21:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9830,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finder",
                  "nameLocation": "3534:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3526:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3526:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9833,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "3546:3:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3542:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 9832,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9831,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9791,
                      "src": "3542:3:61"
                    },
                    "referencedDeclaration": 9791,
                    "src": "3542:3:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3446:104:61"
            },
            "src": "3431:120:61"
          },
          {
            "body": {
              "id": 9873,
              "nodeType": "Block",
              "src": "4343:83:61",
              "statements": [
                {
                  "expression": {
                    "id": 9871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9867,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9772,
                      "src": "4353:20:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9869,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9840,
                          "src": "4397:21:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9868,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16334,
                        "src": "4376:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 9870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4376:43:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "4353:66:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 9872,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:66:61"
                }
              ]
            },
            "documentation": {
              "id": 9836,
              "nodeType": "StructuredDocumentation",
              "src": "3557:340:61",
              "text": "@param _erc20TransferHelper The ZORA ERC-20 Transfer Helper address\n @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address\n @param _protocolFeeSettings The ZoraProtocolFeeSettingsV1 address\n @param _wethAddress The WETH token address"
            },
            "id": 9874,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9849,
                    "name": "_erc20TransferHelper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9838,
                    "src": "4131:20:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9850,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9848,
                  "name": "IncomingTransferSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8558,
                  "src": "4105:25:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "4105:47:61"
              },
              {
                "arguments": [
                  {
                    "id": 9852,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9842,
                    "src": "4180:14:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9853,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9844,
                    "src": "4196:20:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9854,
                    "name": "_wethAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9846,
                    "src": "4218:12:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9856,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9840,
                                "src": "4253:21:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9855,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16334,
                              "src": "4232:20:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 9857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4232:43:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 9858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16083,
                          "src": "4232:47:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$6707_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 9859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4232:49:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$6707",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 9860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6372,
                      "src": "4232:59:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 9861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4232:61:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9862,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9851,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8453,
                  "src": "4161:18:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "4161:133:61"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b733a2076312e31",
                    "id": 9864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4325:12:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2b85543abc64e3ede7d9f29fca8002c6858bcd6cd65cc034248bdc99d1add94e",
                      "typeString": "literal_string \"Asks: v1.1\""
                    },
                    "value": "Asks: v1.1"
                  }
                ],
                "id": 9865,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9863,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8576,
                  "src": "4303:21:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "4303:35:61"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9838,
                  "mutability": "mutable",
                  "name": "_erc20TransferHelper",
                  "nameLocation": "3931:20:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "3923:28:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3923:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9840,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "3969:21:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "3961:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3961:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9842,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "4008:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "4000:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9844,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "4040:20:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "4032:28:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4032:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9846,
                  "mutability": "mutable",
                  "name": "_wethAddress",
                  "nameLocation": "4078:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "4070:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4070:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3913:183:61"
            },
            "returnParameters": {
              "id": 9866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4343:0:61"
            },
            "scope": 10313,
            "src": "3902:524:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10000,
              "nodeType": "Block",
              "src": "6646:1272:61",
              "statements": [
                {
                  "assignments": [
                    9893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9893,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "6664:10:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10000,
                      "src": "6656:18:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9892,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6656:7:61",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9900,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9898,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9879,
                        "src": "6709:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9895,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9877,
                            "src": "6685:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9894,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "6677:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 9896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6677:23:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5438",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 9897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5371,
                      "src": "6677:31:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 9899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6677:41:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6656:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9902,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6750:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6750:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 9904,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9893,
                            "src": "6764:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6750:24:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 9910,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9893,
                              "src": "6819:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 9911,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6831:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6831:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 9907,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9877,
                                  "src": "6786:14:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 9906,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5438,
                                "src": "6778:7:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 9908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6778:23:61",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5438",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 9909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5425,
                            "src": "6778:40:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 9913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6778:64:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6750:92:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420626520746f6b656e206f776e6572206f72206f70657261746f72",
                        "id": 9915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6856:43:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8",
                          "typeString": "literal_string \"createAsk must be token owner or operator\""
                        },
                        "value": "createAsk must be token owner or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8",
                          "typeString": "literal_string \"createAsk must be token owner or operator\""
                        }
                      ],
                      "id": 9901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6729:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6729:180:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9917,
                  "nodeType": "ExpressionStatement",
                  "src": "6729:180:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 9921,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6965:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6965:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9919,
                            "name": "erc721TransferHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9772,
                            "src": "6927:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 9920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isModuleApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16136,
                          "src": "6927:37:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 9923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6927:49:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f76652041736b735631206d6f64756c65",
                        "id": 9924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6978:38:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d",
                          "typeString": "literal_string \"createAsk must approve AsksV1 module\""
                        },
                        "value": "createAsk must approve AsksV1 module"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d",
                          "typeString": "literal_string \"createAsk must approve AsksV1 module\""
                        }
                      ],
                      "id": 9918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6919:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6919:98:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9926,
                  "nodeType": "ExpressionStatement",
                  "src": "6919:98:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9932,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9893,
                            "src": "7089:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 9935,
                                "name": "erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9772,
                                "src": "7109:20:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                                  "typeString": "contract ERC721TransferHelper"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                                  "typeString": "contract ERC721TransferHelper"
                                }
                              ],
                              "id": 9934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7101:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9933,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7101:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7101:29:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9929,
                                "name": "_tokenContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9877,
                                "src": "7056:14:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9928,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5438,
                              "src": "7048:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 9930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7048:23:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$5438",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 9931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5425,
                          "src": "7048:40:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 9937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7048:83:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f7665204552433732315472616e7366657248656c706572206173206f70657261746f72",
                        "id": 9938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7145:57:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d",
                          "typeString": "literal_string \"createAsk must approve ERC721TransferHelper as operator\""
                        },
                        "value": "createAsk must approve ERC721TransferHelper as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d",
                          "typeString": "literal_string \"createAsk must approve ERC721TransferHelper as operator\""
                        }
                      ],
                      "id": 9927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7027:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7027:185:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9940,
                  "nodeType": "ExpressionStatement",
                  "src": "7027:185:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 9944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9942,
                          "name": "_findersFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9887,
                          "src": "7230:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 9943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7248:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "7230:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b2066696e646572732066656520627073206d757374206265206c657373207468616e206f7220657175616c20746f203130303030",
                        "id": 9945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7255:63:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b",
                          "typeString": "literal_string \"createAsk finders fee bps must be less than or equal to 10000\""
                        },
                        "value": "createAsk finders fee bps must be less than or equal to 10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b",
                          "typeString": "literal_string \"createAsk finders fee bps must be less than or equal to 10000\""
                        }
                      ],
                      "id": 9941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7222:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7222:97:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9947,
                  "nodeType": "ExpressionStatement",
                  "src": "7222:97:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9949,
                          "name": "_sellerFundsRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9885,
                          "src": "7337:21:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7370:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7362:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9950,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7362:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7362:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7337:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d7573742073706563696679205f73656c6c657246756e6473526563697069656e74",
                        "id": 9955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7374:46:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb",
                          "typeString": "literal_string \"createAsk must specify _sellerFundsRecipient\""
                        },
                        "value": "createAsk must specify _sellerFundsRecipient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb",
                          "typeString": "literal_string \"createAsk must specify _sellerFundsRecipient\""
                        }
                      ],
                      "id": 9948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7329:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7329:92:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9957,
                  "nodeType": "ExpressionStatement",
                  "src": "7329:92:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 9958,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9780,
                            "src": "7436:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 9960,
                          "indexExpression": {
                            "id": 9959,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9877,
                            "src": "7446:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7436:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 9962,
                        "indexExpression": {
                          "id": 9961,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9879,
                          "src": "7462:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7436:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      },
                      "id": 9963,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9782,
                      "src": "7436:42:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7490:1:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7482:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9964,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7482:7:61",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7482:10:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7436:56:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9975,
                  "nodeType": "IfStatement",
                  "src": "7432:123:61",
                  "trueBody": {
                    "id": 9974,
                    "nodeType": "Block",
                    "src": "7494:61:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9970,
                              "name": "_tokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9877,
                              "src": "7519:14:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9971,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9879,
                              "src": "7535:8:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9969,
                            "name": "_cancelAsk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10312,
                            "src": "7508:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 9972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7508:36:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9973,
                        "nodeType": "ExpressionStatement",
                        "src": "7508:36:61"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9976,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9780,
                          "src": "7565:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 9979,
                        "indexExpression": {
                          "id": 9977,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9877,
                          "src": "7575:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7565:25:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 9980,
                      "indexExpression": {
                        "id": 9978,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9879,
                        "src": "7591:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7565:35:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9982,
                          "name": "tokenOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9893,
                          "src": "7629:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 9983,
                          "name": "_sellerFundsRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9885,
                          "src": "7675:21:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 9984,
                          "name": "_askCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9883,
                          "src": "7723:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 9985,
                          "name": "_findersFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9887,
                          "src": "7764:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 9986,
                          "name": "_askPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9881,
                          "src": "7802:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9981,
                        "name": "Ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9791,
                        "src": "7603:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Ask_$9791_storage_ptr_$",
                          "typeString": "type(struct AsksV1_1.Ask storage pointer)"
                        }
                      },
                      "id": 9987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "seller",
                        "sellerFundsRecipient",
                        "askCurrency",
                        "findersFeeBps",
                        "askPrice"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7603:219:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                        "typeString": "struct AsksV1_1.Ask memory"
                      }
                    },
                    "src": "7565:257:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "id": 9989,
                  "nodeType": "ExpressionStatement",
                  "src": "7565:257:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9991,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9877,
                        "src": "7849:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9992,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9879,
                        "src": "7865:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 9993,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9780,
                            "src": "7875:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 9995,
                          "indexExpression": {
                            "id": 9994,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9877,
                            "src": "7885:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7875:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 9997,
                        "indexExpression": {
                          "id": 9996,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9879,
                          "src": "7901:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7875:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      ],
                      "id": 9990,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9801,
                      "src": "7838:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$9791_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 9998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:73:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9999,
                  "nodeType": "EmitStatement",
                  "src": "7833:78:61"
                }
              ]
            },
            "documentation": {
              "id": 9875,
              "nodeType": "StructuredDocumentation",
              "src": "5881:528:61",
              "text": "@notice Creates the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token to be sold\n @param _tokenId The ID of the ERC-721 token to be sold\n @param _askPrice The price to fill the ask\n @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH\n @param _sellerFundsRecipient The address to send funds once the ask is filled\n @param _findersFeeBps The bps of the ask price (post-royalties) to be sent to the referrer of the sale"
            },
            "functionSelector": "9e847108",
            "id": 10001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9890,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9889,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "6633:12:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "6633:12:61"
              }
            ],
            "name": "createAsk",
            "nameLocation": "6423:9:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9877,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "6450:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6442:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6442:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9879,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6482:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6474:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6474:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9881,
                  "mutability": "mutable",
                  "name": "_askPrice",
                  "nameLocation": "6508:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6500:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9883,
                  "mutability": "mutable",
                  "name": "_askCurrency",
                  "nameLocation": "6535:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6527:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6527:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9885,
                  "mutability": "mutable",
                  "name": "_sellerFundsRecipient",
                  "nameLocation": "6565:21:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6557:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6557:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9887,
                  "mutability": "mutable",
                  "name": "_findersFeeBps",
                  "nameLocation": "6603:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6596:21:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 9886,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6596:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6432:191:61"
            },
            "returnParameters": {
              "id": 9891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6646:0:61"
            },
            "scope": 10313,
            "src": "6414:1504:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10051,
              "nodeType": "Block",
              "src": "9148:281:61",
              "statements": [
                {
                  "assignments": [
                    10017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10017,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "9170:3:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10051,
                      "src": "9158:15:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                        "typeString": "struct AsksV1_1.Ask"
                      },
                      "typeName": {
                        "id": 10016,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10015,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9791,
                          "src": "9158:3:61"
                        },
                        "referencedDeclaration": 9791,
                        "src": "9158:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10023,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 10018,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9780,
                        "src": "9176:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                        }
                      },
                      "id": 10020,
                      "indexExpression": {
                        "id": 10019,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10004,
                        "src": "9186:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9176:25:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                        "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                      }
                    },
                    "id": 10022,
                    "indexExpression": {
                      "id": 10021,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10006,
                      "src": "9202:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9176:35:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9158:53:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10025,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10017,
                            "src": "9230:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10026,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9782,
                          "src": "9230:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 10027,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9244:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9244:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9230:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73657441736b5072696365206d7573742062652073656c6c6572",
                        "id": 10030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9256:28:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098",
                          "typeString": "literal_string \"setAskPrice must be seller\""
                        },
                        "value": "setAskPrice must be seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098",
                          "typeString": "literal_string \"setAskPrice must be seller\""
                        }
                      ],
                      "id": 10024,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9222:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9222:63:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10032,
                  "nodeType": "ExpressionStatement",
                  "src": "9222:63:61"
                },
                {
                  "expression": {
                    "id": 10037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10033,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10017,
                        "src": "9296:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      },
                      "id": 10035,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "askPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9790,
                      "src": "9296:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10036,
                      "name": "_askPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10008,
                      "src": "9311:9:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9296:24:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10038,
                  "nodeType": "ExpressionStatement",
                  "src": "9296:24:61"
                },
                {
                  "expression": {
                    "id": 10043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10039,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10017,
                        "src": "9330:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      },
                      "id": 10041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "askCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9786,
                      "src": "9330:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10042,
                      "name": "_askCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10010,
                      "src": "9348:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9330:30:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10044,
                  "nodeType": "ExpressionStatement",
                  "src": "9330:30:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10046,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10004,
                        "src": "9392:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10047,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10006,
                        "src": "9408:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10048,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10017,
                        "src": "9418:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      ],
                      "id": 10045,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9811,
                      "src": "9376:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$9791_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 10049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9376:46:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10050,
                  "nodeType": "EmitStatement",
                  "src": "9371:51:61"
                }
              ]
            },
            "documentation": {
              "id": 10002,
              "nodeType": "StructuredDocumentation",
              "src": "8669:310:61",
              "text": "@notice Updates the ask price for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token\n @param _askPrice The ask price to set\n @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH"
            },
            "functionSelector": "b2007533",
            "id": 10052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10012,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "9135:12:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "9135:12:61"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "8993:11:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10004,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "9022:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10052,
                  "src": "9014:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9014:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10006,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9054:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10052,
                  "src": "9046:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9046:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10008,
                  "mutability": "mutable",
                  "name": "_askPrice",
                  "nameLocation": "9080:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10052,
                  "src": "9072:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10010,
                  "mutability": "mutable",
                  "name": "_askCurrency",
                  "nameLocation": "9107:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10052,
                  "src": "9099:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9099:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9004:121:61"
            },
            "returnParameters": {
              "id": 10014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9148:0:61"
            },
            "scope": 10313,
            "src": "8984:445:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10108,
              "nodeType": "Block",
              "src": "10416:423:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 10063,
                                "name": "askForNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9780,
                                "src": "10434:9:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                                }
                              },
                              "id": 10065,
                              "indexExpression": {
                                "id": 10064,
                                "name": "_tokenContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10055,
                                "src": "10444:14:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10434:25:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                                "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                              }
                            },
                            "id": 10067,
                            "indexExpression": {
                              "id": 10066,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10057,
                              "src": "10460:8:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10434:35:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage",
                              "typeString": "struct AsksV1_1.Ask storage ref"
                            }
                          },
                          "id": 10068,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9782,
                          "src": "10434:42:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10488:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10480:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10069,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10480:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10480:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10434:56:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e63656c41736b2061736b20646f65736e2774206578697374",
                        "id": 10074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10492:29:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da",
                          "typeString": "literal_string \"cancelAsk ask doesn't exist\""
                        },
                        "value": "cancelAsk ask doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da",
                          "typeString": "literal_string \"cancelAsk ask doesn't exist\""
                        }
                      ],
                      "id": 10062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10426:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10426:96:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10076,
                  "nodeType": "ExpressionStatement",
                  "src": "10426:96:61"
                },
                {
                  "assignments": [
                    10078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10078,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "10541:10:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10108,
                      "src": "10533:18:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10077,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10533:7:61",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10085,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10083,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10057,
                        "src": "10586:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10080,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10055,
                            "src": "10562:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10079,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "10554:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 10081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10554:23:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5438",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 10082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5371,
                      "src": "10554:31:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 10084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10554:41:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10533:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10087,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "10626:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10626:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 10089,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10078,
                            "src": "10640:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10626:24:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10095,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10078,
                              "src": "10695:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 10096,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10707:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10707:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10092,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10055,
                                  "src": "10662:14:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10091,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5438,
                                "src": "10654:7:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 10093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10654:23:61",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5438",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 10094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5425,
                            "src": "10654:40:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 10098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10654:64:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10626:92:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f72206f70657261746f72",
                        "id": 10100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10732:43:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628",
                          "typeString": "literal_string \"cancelAsk must be token owner or operator\""
                        },
                        "value": "cancelAsk must be token owner or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628",
                          "typeString": "literal_string \"cancelAsk must be token owner or operator\""
                        }
                      ],
                      "id": 10086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10605:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10605:180:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10102,
                  "nodeType": "ExpressionStatement",
                  "src": "10605:180:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10104,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10055,
                        "src": "10807:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10105,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10057,
                        "src": "10823:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10103,
                      "name": "_cancelAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10312,
                      "src": "10796:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10796:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10107,
                  "nodeType": "ExpressionStatement",
                  "src": "10796:36:61"
                }
              ]
            },
            "documentation": {
              "id": 10053,
              "nodeType": "StructuredDocumentation",
              "src": "10170:158:61",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "id": 10109,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10060,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10059,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "10403:12:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "10403:12:61"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "10342:9:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10055,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "10360:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10109,
                  "src": "10352:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10057,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10384:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10109,
                  "src": "10376:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10376:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10351:42:61"
            },
            "returnParameters": {
              "id": 10061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10416:0:61"
            },
            "scope": 10313,
            "src": "10333:506:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10285,
              "nodeType": "Block",
              "src": "15345:1919:61",
              "statements": [
                {
                  "assignments": [
                    10127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10127,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "15367:3:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10285,
                      "src": "15355:15:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                        "typeString": "struct AsksV1_1.Ask"
                      },
                      "typeName": {
                        "id": 10126,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10125,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9791,
                          "src": "15355:3:61"
                        },
                        "referencedDeclaration": 9791,
                        "src": "15355:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10133,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 10128,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9780,
                        "src": "15373:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                        }
                      },
                      "id": 10130,
                      "indexExpression": {
                        "id": 10129,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "15383:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15373:25:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                        "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                      }
                    },
                    "id": 10132,
                    "indexExpression": {
                      "id": 10131,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10114,
                      "src": "15399:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15373:35:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15355:53:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10135,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "15427:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10136,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9782,
                          "src": "15427:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15449:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15441:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10137,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15441:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15441:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15427:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b206d757374206265206163746976652061736b",
                        "id": 10142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15453:28:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0",
                          "typeString": "literal_string \"fillAsk must be active ask\""
                        },
                        "value": "fillAsk must be active ask"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0",
                          "typeString": "literal_string \"fillAsk must be active ask\""
                        }
                      ],
                      "id": 10134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15419:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15419:63:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10144,
                  "nodeType": "ExpressionStatement",
                  "src": "15419:63:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10146,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "15500:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askCurrency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9786,
                          "src": "15500:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10148,
                          "name": "_fillCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10116,
                          "src": "15519:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15500:32:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c43757272656e6379206d757374206d617463682061736b2063757272656e6379",
                        "id": 10150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15534:47:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b",
                          "typeString": "literal_string \"fillAsk _fillCurrency must match ask currency\""
                        },
                        "value": "fillAsk _fillCurrency must match ask currency"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b",
                          "typeString": "literal_string \"fillAsk _fillCurrency must match ask currency\""
                        }
                      ],
                      "id": 10145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15492:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15492:90:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10152,
                  "nodeType": "ExpressionStatement",
                  "src": "15492:90:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10154,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "15600:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10155,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9790,
                          "src": "15600:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10156,
                          "name": "_fillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10118,
                          "src": "15616:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15600:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c416d6f756e74206d757374206d617463682061736b20616d6f756e74",
                        "id": 10158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15629:43:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e",
                          "typeString": "literal_string \"fillAsk _fillAmount must match ask amount\""
                        },
                        "value": "fillAsk _fillAmount must match ask amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e",
                          "typeString": "literal_string \"fillAsk _fillAmount must match ask amount\""
                        }
                      ],
                      "id": 10153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15592:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15592:81:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10160,
                  "nodeType": "ExpressionStatement",
                  "src": "15592:81:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10162,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "15782:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10163,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9790,
                        "src": "15782:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10164,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "15796:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10165,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9786,
                        "src": "15796:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10161,
                      "name": "_handleIncomingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8557,
                      "src": "15758:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 10166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15758:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10167,
                  "nodeType": "ExpressionStatement",
                  "src": "15758:54:61"
                },
                {
                  "assignments": [
                    10169,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10169,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "15901:15:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10285,
                      "src": "15893:23:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15893:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 10179,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10171,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "15943:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10172,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "15959:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10173,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "15969:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9790,
                        "src": "15969:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10175,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "15983:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10176,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9786,
                        "src": "15983:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10177,
                        "name": "USE_ALL_GAS_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9768,
                        "src": "16000:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10170,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "15922:20:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 10178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15922:95:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15892:125:61"
                },
                {
                  "expression": {
                    "id": 10186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10180,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10169,
                      "src": "16068:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10182,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10169,
                          "src": "16111:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 10183,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "16128:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10184,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askCurrency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9786,
                          "src": "16128:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10181,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8280,
                        "src": "16086:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 10185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16086:58:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16068:76:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10187,
                  "nodeType": "ExpressionStatement",
                  "src": "16068:76:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10188,
                      "name": "_finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10120,
                      "src": "16197:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 10191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16216:1:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 10190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16208:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10189,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16208:7:61",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16208:10:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16197:21:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10219,
                  "nodeType": "IfStatement",
                  "src": "16193:272:61",
                  "trueBody": {
                    "id": 10218,
                    "nodeType": "Block",
                    "src": "16220:245:61",
                    "statements": [
                      {
                        "assignments": [
                          10195
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10195,
                            "mutability": "mutable",
                            "name": "findersFee",
                            "nameLocation": "16242:10:61",
                            "nodeType": "VariableDeclaration",
                            "scope": 10218,
                            "src": "16234:18:61",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10194,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16234:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10203,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10196,
                                  "name": "remainingProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10169,
                                  "src": "16256:15:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "expression": {
                                    "id": 10197,
                                    "name": "ask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10127,
                                    "src": "16274:3:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                                      "typeString": "struct AsksV1_1.Ask storage pointer"
                                    }
                                  },
                                  "id": 10198,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "findersFeeBps",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9788,
                                  "src": "16274:17:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16256:35:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 10200,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16255:37:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 10201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16295:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "16255:45:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16234:66:61"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10205,
                              "name": "_finder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10120,
                              "src": "16338:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10206,
                              "name": "findersFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10195,
                              "src": "16347:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 10207,
                                "name": "ask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10127,
                                "src": "16359:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                                  "typeString": "struct AsksV1_1.Ask storage pointer"
                                }
                              },
                              "id": 10208,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "askCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9786,
                              "src": "16359:15:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10209,
                              "name": "USE_ALL_GAS_FLAG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9768,
                              "src": "16376:16:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10204,
                            "name": "_handleOutgoingTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8721,
                            "src": "16314:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256)"
                            }
                          },
                          "id": 10210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16314:79:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10211,
                        "nodeType": "ExpressionStatement",
                        "src": "16314:79:61"
                      },
                      {
                        "expression": {
                          "id": 10216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10212,
                            "name": "remainingProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10169,
                            "src": "16408:15:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10213,
                              "name": "remainingProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10169,
                              "src": "16426:15:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 10214,
                              "name": "findersFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10195,
                              "src": "16444:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16426:28:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16408:46:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10217,
                        "nodeType": "ExpressionStatement",
                        "src": "16408:46:61"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10221,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "16550:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10222,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellerFundsRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9784,
                        "src": "16550:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10223,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10169,
                        "src": "16576:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10224,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "16593:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10225,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9786,
                        "src": "16593:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10226,
                        "name": "USE_ALL_GAS_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9768,
                        "src": "16610:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10220,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8721,
                      "src": "16526:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 10227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16526:101:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10228,
                  "nodeType": "ExpressionStatement",
                  "src": "16526:101:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10232,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "16705:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10233,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "16721:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9782,
                        "src": "16721:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10235,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16733:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16733:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10237,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "16745:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10229,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9772,
                        "src": "16671:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 10231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16333,
                      "src": "16671:33:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 10238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16671:83:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10239,
                  "nodeType": "ExpressionStatement",
                  "src": "16671:83:61"
                },
                {
                  "assignments": [
                    10242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10242,
                      "mutability": "mutable",
                      "name": "userAExchangeDetails",
                      "nameLocation": "16788:20:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10285,
                      "src": "16765:43:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                        "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                      },
                      "typeName": {
                        "id": 10241,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10240,
                          "name": "ExchangeDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8732,
                          "src": "16765:15:61"
                        },
                        "referencedDeclaration": 8732,
                        "src": "16765:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_storage_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10248,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10244,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "16843:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10245,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "16868:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 10246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16886:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 10243,
                      "name": "ExchangeDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8732,
                      "src": "16811:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExchangeDetails_$8732_storage_ptr_$",
                        "typeString": "type(struct UniversalExchangeEventV1.ExchangeDetails storage pointer)"
                      }
                    },
                    "id": 10247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenContract",
                      "tokenId",
                      "amount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16811:78:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                      "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16765:124:61"
                },
                {
                  "assignments": [
                    10251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10251,
                      "mutability": "mutable",
                      "name": "userBExchangeDetails",
                      "nameLocation": "16922:20:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10285,
                      "src": "16899:43:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                        "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                      },
                      "typeName": {
                        "id": 10250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10249,
                          "name": "ExchangeDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8732,
                          "src": "16899:15:61"
                        },
                        "referencedDeclaration": 8732,
                        "src": "16899:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_storage_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10259,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10253,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "16977:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10254,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9786,
                        "src": "16977:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 10255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17003:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 10256,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "17014:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10257,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9790,
                        "src": "17014:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10252,
                      "name": "ExchangeDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8732,
                      "src": "16945:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExchangeDetails_$8732_storage_ptr_$",
                        "typeString": "type(struct UniversalExchangeEventV1.ExchangeDetails storage pointer)"
                      }
                    },
                    "id": 10258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenContract",
                      "tokenId",
                      "amount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16945:83:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                      "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16899:129:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10261,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "17061:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9782,
                        "src": "17061:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10263,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "17073:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17073:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10265,
                        "name": "userAExchangeDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10242,
                        "src": "17085:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      },
                      {
                        "id": 10266,
                        "name": "userBExchangeDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10251,
                        "src": "17107:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      ],
                      "id": 10260,
                      "name": "ExchangeExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8745,
                      "src": "17044:16:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_ExchangeDetails_$8732_memory_ptr_$_t_struct$_ExchangeDetails_$8732_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct UniversalExchangeEventV1.ExchangeDetails memory,struct UniversalExchangeEventV1.ExchangeDetails memory)"
                      }
                    },
                    "id": 10267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17044:84:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10268,
                  "nodeType": "EmitStatement",
                  "src": "17039:89:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10270,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "17153:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10271,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "17169:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10272,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "17179:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17179:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10274,
                        "name": "_finder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10120,
                        "src": "17191:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10275,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10127,
                        "src": "17200:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      ],
                      "id": 10269,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9835,
                      "src": "17143:9:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_struct$_Ask_$9791_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,address,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 10276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17143:61:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10277,
                  "nodeType": "EmitStatement",
                  "src": "17138:66:61"
                },
                {
                  "expression": {
                    "id": 10283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "17215:42:61",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10278,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9780,
                          "src": "17222:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 10280,
                        "indexExpression": {
                          "id": 10279,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10112,
                          "src": "17232:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17222:25:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 10282,
                      "indexExpression": {
                        "id": 10281,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "17248:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17222:35:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10284,
                  "nodeType": "ExpressionStatement",
                  "src": "17215:42:61"
                }
              ]
            },
            "documentation": {
              "id": 10110,
              "nodeType": "StructuredDocumentation",
              "src": "14717:427:61",
              "text": "@notice Fills the ask for a given NFT, transferring the ETH/ERC-20 to the seller and NFT to the buyer\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token\n @param _fillCurrency The address of the ERC-20 token using to fill, or address(0) for ETH\n @param _fillAmount The amount to fill the ask\n @param _finder The address of the ask referrer"
            },
            "functionSelector": "622dcbd7",
            "id": 10286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10122,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "15332:12:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "15332:12:61"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "15158:7:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10112,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "15183:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15175:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15175:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10114,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "15215:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15207:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15207:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10116,
                  "mutability": "mutable",
                  "name": "_fillCurrency",
                  "nameLocation": "15241:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15233:21:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15233:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10118,
                  "mutability": "mutable",
                  "name": "_fillAmount",
                  "nameLocation": "15272:11:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15264:19:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15264:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10120,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nameLocation": "15301:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15293:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15293:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15165:149:61"
            },
            "returnParameters": {
              "id": 10124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15345:0:61"
            },
            "scope": 10313,
            "src": "15149:2115:61",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10311,
              "nodeType": "Block",
              "src": "17502:149:61",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10295,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10289,
                        "src": "17529:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10296,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10291,
                        "src": "17545:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 10297,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9780,
                            "src": "17555:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 10299,
                          "indexExpression": {
                            "id": 10298,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10289,
                            "src": "17565:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17555:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 10301,
                        "indexExpression": {
                          "id": 10300,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10291,
                          "src": "17581:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17555:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      ],
                      "id": 10294,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9821,
                      "src": "17517:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$9791_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 10302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17517:74:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10303,
                  "nodeType": "EmitStatement",
                  "src": "17512:79:61"
                },
                {
                  "expression": {
                    "id": 10309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "17602:42:61",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10304,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9780,
                          "src": "17609:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 10306,
                        "indexExpression": {
                          "id": 10305,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10289,
                          "src": "17619:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17609:25:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 10308,
                      "indexExpression": {
                        "id": 10307,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10291,
                        "src": "17635:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17609:35:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10310,
                  "nodeType": "ExpressionStatement",
                  "src": "17602:42:61"
                }
              ]
            },
            "documentation": {
              "id": 10287,
              "nodeType": "StructuredDocumentation",
              "src": "17270:157:61",
              "text": "@dev Deletes canceled and invalid asks\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token"
            },
            "id": 10312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_cancelAsk",
            "nameLocation": "17441:10:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10289,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "17460:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10312,
                  "src": "17452:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17452:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10291,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "17484:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10312,
                  "src": "17476:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17476:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17451:42:61"
            },
            "returnParameters": {
              "id": 10293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17502:0:61"
            },
            "scope": 10313,
            "src": "17432:219:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 10314,
        "src": "947:16706:61",
        "usedErrors": []
      }
    ],
    "src": "36:17618:61"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/modules/Asks/V1.1/AsksV1_1.sol",
    "exportedSymbols": {
      "AsksV1_1": [
        10313
      ],
      "ERC721TransferHelper": [
        16334
      ],
      "FeePayoutSupportV1": [
        8453
      ],
      "IERC721": [
        5438
      ],
      "IncomingTransferSupportV1": [
        8558
      ],
      "ModuleNamingSupportV1": [
        8576
      ],
      "ReentrancyGuard": [
        6294
      ],
      "UniversalExchangeEventV1": [
        8746
      ]
    },
    "id": 10314,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9739,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:61"
      },
      {
        "absolutePath": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "id": 9741,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 6295,
        "src": "61:84:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9740,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 9743,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 5439,
        "src": "146:73:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9742,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../transferHelpers/ERC721TransferHelper.sol",
        "id": 9745,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 16335,
        "src": "220:87:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9744,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "228:20:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol",
        "file": "../../../common/UniversalExchangeEvent/V1/UniversalExchangeEventV1.sol",
        "id": 9747,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 8747,
        "src": "308:112:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9746,
              "name": "UniversalExchangeEventV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "316:24:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "file": "../../../common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "id": 9749,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 8559,
        "src": "421:115:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9748,
              "name": "IncomingTransferSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "429:25:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "id": 9751,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 8454,
        "src": "537:91:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9750,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "545:18:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "id": 9753,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10314,
        "sourceUnit": 8577,
        "src": "629:100:61",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9752,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "637:21:61",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9755,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6294,
              "src": "968:15:61"
            },
            "id": 9756,
            "nodeType": "InheritanceSpecifier",
            "src": "968:15:61"
          },
          {
            "baseName": {
              "id": 9757,
              "name": "UniversalExchangeEventV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8746,
              "src": "985:24:61"
            },
            "id": 9758,
            "nodeType": "InheritanceSpecifier",
            "src": "985:24:61"
          },
          {
            "baseName": {
              "id": 9759,
              "name": "IncomingTransferSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8558,
              "src": "1011:25:61"
            },
            "id": 9760,
            "nodeType": "InheritanceSpecifier",
            "src": "1011:25:61"
          },
          {
            "baseName": {
              "id": 9761,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8453,
              "src": "1038:18:61"
            },
            "id": 9762,
            "nodeType": "InheritanceSpecifier",
            "src": "1038:18:61"
          },
          {
            "baseName": {
              "id": 9763,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8576,
              "src": "1058:21:61"
            },
            "id": 9764,
            "nodeType": "InheritanceSpecifier",
            "src": "1058:21:61"
          }
        ],
        "canonicalName": "AsksV1_1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9754,
          "nodeType": "StructuredDocumentation",
          "src": "731:216:61",
          "text": "@title Asks V1.1\n @author tbtstl <t@zora.co>\n @notice This module allows sellers to list an owned ERC-721 token for sale for a given price in a given currency, and allows buyers to purchase from those asks"
        },
        "fullyImplemented": true,
        "id": 10313,
        "linearizedBaseContracts": [
          10313,
          8576,
          8453,
          8722,
          8558,
          8746,
          6294
        ],
        "name": "AsksV1_1",
        "nameLocation": "956:8:61",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 9765,
              "nodeType": "StructuredDocumentation",
              "src": "1086:74:61",
              "text": "@dev The indicator to pass all remaining gas when paying out royalties"
            },
            "id": 9768,
            "mutability": "constant",
            "name": "USE_ALL_GAS_FLAG",
            "nameLocation": "1190:16:61",
            "nodeType": "VariableDeclaration",
            "scope": 10313,
            "src": "1165:45:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9766,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1165:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 9767,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1209:1:61",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9769,
              "nodeType": "StructuredDocumentation",
              "src": "1217:44:61",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "id": 9772,
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1304:20:61",
            "nodeType": "VariableDeclaration",
            "scope": 10313,
            "src": "1266:58:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 9771,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9770,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16334,
                "src": "1266:20:61"
              },
              "referencedDeclaration": 16334,
              "src": "1266:20:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9773,
              "nodeType": "StructuredDocumentation",
              "src": "1331:113:61",
              "text": "@notice The ask for a given NFT, if one exists\n @dev ERC-721 token contract => ERC-721 token ID => Ask"
            },
            "functionSelector": "418f0656",
            "id": 9780,
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "1500:9:61",
            "nodeType": "VariableDeclaration",
            "scope": 10313,
            "src": "1449:60:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask))"
            },
            "typeName": {
              "id": 9779,
              "keyType": {
                "id": 9774,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1457:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1449:43:61",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask))"
              },
              "valueType": {
                "id": 9778,
                "keyType": {
                  "id": 9775,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1476:7:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1468:23:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                  "typeString": "mapping(uint256 => struct AsksV1_1.Ask)"
                },
                "valueType": {
                  "id": 9777,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9776,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9791,
                    "src": "1487:3:61"
                  },
                  "referencedDeclaration": 9791,
                  "src": "1487:3:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "AsksV1_1.Ask",
            "id": 9791,
            "members": [
              {
                "constant": false,
                "id": 9782,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "1951:6:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "1943:14:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9781,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1943:7:61",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9784,
                "mutability": "mutable",
                "name": "sellerFundsRecipient",
                "nameLocation": "1975:20:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "1967:28:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9783,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1967:7:61",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9786,
                "mutability": "mutable",
                "name": "askCurrency",
                "nameLocation": "2013:11:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "2005:19:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9785,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2005:7:61",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9788,
                "mutability": "mutable",
                "name": "findersFeeBps",
                "nameLocation": "2041:13:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "2034:20:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 9787,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2034:6:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9790,
                "mutability": "mutable",
                "name": "askPrice",
                "nameLocation": "2072:8:61",
                "nodeType": "VariableDeclaration",
                "scope": 9791,
                "src": "2064:16:61",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9789,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2064:7:61",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "1929:3:61",
            "nodeType": "StructDefinition",
            "scope": 10313,
            "src": "1922:165:61",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9792,
              "nodeType": "StructuredDocumentation",
              "src": "2093:230:61",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token ID of the created ask\n @param ask The metadata of the created ask"
            },
            "id": 9801,
            "name": "AskCreated",
            "nameLocation": "2334:10:61",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9794,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "2361:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9801,
                  "src": "2345:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2345:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9796,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2392:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9801,
                  "src": "2376:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9799,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "2405:3:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9801,
                  "src": "2401:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 9798,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9797,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9791,
                      "src": "2401:3:61"
                    },
                    "referencedDeclaration": 9791,
                    "src": "2401:3:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2344:65:61"
            },
            "src": "2328:82:61"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9802,
              "nodeType": "StructuredDocumentation",
              "src": "2416:236:61",
              "text": "@notice Emitted when an ask price is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token ID of the updated ask\n @param ask The metadata of the updated ask"
            },
            "id": 9811,
            "name": "AskPriceUpdated",
            "nameLocation": "2663:15:61",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9804,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "2695:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9811,
                  "src": "2679:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2679:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9806,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2726:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9811,
                  "src": "2710:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9809,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "2739:3:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9811,
                  "src": "2735:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 9808,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9807,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9791,
                      "src": "2735:3:61"
                    },
                    "referencedDeclaration": 9791,
                    "src": "2735:3:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2678:65:61"
            },
            "src": "2657:87:61"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9812,
              "nodeType": "StructuredDocumentation",
              "src": "2750:234:61",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token ID of the canceled ask\n @param ask The metadata of the canceled ask"
            },
            "id": 9821,
            "name": "AskCanceled",
            "nameLocation": "2995:11:61",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9814,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "3023:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9821,
                  "src": "3007:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9816,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3054:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9821,
                  "src": "3038:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9819,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "3067:3:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9821,
                  "src": "3063:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 9818,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9817,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9791,
                      "src": "3063:3:61"
                    },
                    "referencedDeclaration": 9791,
                    "src": "3063:3:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3006:65:61"
            },
            "src": "2989:83:61"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9822,
              "nodeType": "StructuredDocumentation",
              "src": "3078:348:61",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token ID of the filled ask\n @param buyer The buyer address of the filled ask\n @param finder The address of finder who referred the ask\n @param ask The metadata of the filled ask"
            },
            "id": 9835,
            "name": "AskFilled",
            "nameLocation": "3437:9:61",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9824,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "3463:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3447:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9826,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3494:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3478:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3478:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9828,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "3519:5:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3503:21:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9830,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finder",
                  "nameLocation": "3534:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3526:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3526:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9833,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "3546:3:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9835,
                  "src": "3542:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                    "typeString": "struct AsksV1_1.Ask"
                  },
                  "typeName": {
                    "id": 9832,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9831,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9791,
                      "src": "3542:3:61"
                    },
                    "referencedDeclaration": 9791,
                    "src": "3542:3:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                      "typeString": "struct AsksV1_1.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3446:104:61"
            },
            "src": "3431:120:61"
          },
          {
            "body": {
              "id": 9873,
              "nodeType": "Block",
              "src": "4343:83:61",
              "statements": [
                {
                  "expression": {
                    "id": 9871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9867,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9772,
                      "src": "4353:20:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9869,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9840,
                          "src": "4397:21:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9868,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16334,
                        "src": "4376:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 9870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4376:43:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "4353:66:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 9872,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:66:61"
                }
              ]
            },
            "documentation": {
              "id": 9836,
              "nodeType": "StructuredDocumentation",
              "src": "3557:340:61",
              "text": "@param _erc20TransferHelper The ZORA ERC-20 Transfer Helper address\n @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address\n @param _protocolFeeSettings The ZoraProtocolFeeSettingsV1 address\n @param _wethAddress The WETH token address"
            },
            "id": 9874,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9849,
                    "name": "_erc20TransferHelper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9838,
                    "src": "4131:20:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9850,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9848,
                  "name": "IncomingTransferSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8558,
                  "src": "4105:25:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "4105:47:61"
              },
              {
                "arguments": [
                  {
                    "id": 9852,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9842,
                    "src": "4180:14:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9853,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9844,
                    "src": "4196:20:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9854,
                    "name": "_wethAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9846,
                    "src": "4218:12:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9856,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9840,
                                "src": "4253:21:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9855,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16334,
                              "src": "4232:20:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 9857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4232:43:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 9858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16083,
                          "src": "4232:47:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$6707_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 9859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4232:49:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$6707",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 9860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6372,
                      "src": "4232:59:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 9861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4232:61:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9862,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9851,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8453,
                  "src": "4161:18:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "4161:133:61"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b733a2076312e31",
                    "id": 9864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4325:12:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2b85543abc64e3ede7d9f29fca8002c6858bcd6cd65cc034248bdc99d1add94e",
                      "typeString": "literal_string \"Asks: v1.1\""
                    },
                    "value": "Asks: v1.1"
                  }
                ],
                "id": 9865,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9863,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8576,
                  "src": "4303:21:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "4303:35:61"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9838,
                  "mutability": "mutable",
                  "name": "_erc20TransferHelper",
                  "nameLocation": "3931:20:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "3923:28:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3923:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9840,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "3969:21:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "3961:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3961:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9842,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "4008:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "4000:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9844,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "4040:20:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "4032:28:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4032:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9846,
                  "mutability": "mutable",
                  "name": "_wethAddress",
                  "nameLocation": "4078:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 9874,
                  "src": "4070:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4070:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3913:183:61"
            },
            "returnParameters": {
              "id": 9866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4343:0:61"
            },
            "scope": 10313,
            "src": "3902:524:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10000,
              "nodeType": "Block",
              "src": "6646:1272:61",
              "statements": [
                {
                  "assignments": [
                    9893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9893,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "6664:10:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10000,
                      "src": "6656:18:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9892,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6656:7:61",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9900,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9898,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9879,
                        "src": "6709:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 9895,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9877,
                            "src": "6685:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9894,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "6677:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 9896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6677:23:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5438",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 9897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5371,
                      "src": "6677:31:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 9899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6677:41:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6656:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9902,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6750:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6750:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 9904,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9893,
                            "src": "6764:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6750:24:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 9910,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9893,
                              "src": "6819:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 9911,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6831:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 9912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6831:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 9907,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9877,
                                  "src": "6786:14:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 9906,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5438,
                                "src": "6778:7:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 9908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6778:23:61",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5438",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 9909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5425,
                            "src": "6778:40:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 9913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6778:64:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6750:92:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420626520746f6b656e206f776e6572206f72206f70657261746f72",
                        "id": 9915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6856:43:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8",
                          "typeString": "literal_string \"createAsk must be token owner or operator\""
                        },
                        "value": "createAsk must be token owner or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76f3775302ef6a1b6072c43364ff9712358ff85c060c88bfeb761d00493b16c8",
                          "typeString": "literal_string \"createAsk must be token owner or operator\""
                        }
                      ],
                      "id": 9901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6729:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6729:180:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9917,
                  "nodeType": "ExpressionStatement",
                  "src": "6729:180:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 9921,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6965:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6965:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 9919,
                            "name": "erc721TransferHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9772,
                            "src": "6927:20:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 9920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isModuleApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16136,
                          "src": "6927:37:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 9923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6927:49:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f76652041736b735631206d6f64756c65",
                        "id": 9924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6978:38:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d",
                          "typeString": "literal_string \"createAsk must approve AsksV1 module\""
                        },
                        "value": "createAsk must approve AsksV1 module"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44fd9c8827e7f6000f5768e0c611c9eccb388ad62b44d91721f7f8a0d5c99b3d",
                          "typeString": "literal_string \"createAsk must approve AsksV1 module\""
                        }
                      ],
                      "id": 9918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6919:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6919:98:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9926,
                  "nodeType": "ExpressionStatement",
                  "src": "6919:98:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9932,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9893,
                            "src": "7089:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 9935,
                                "name": "erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9772,
                                "src": "7109:20:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                                  "typeString": "contract ERC721TransferHelper"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                                  "typeString": "contract ERC721TransferHelper"
                                }
                              ],
                              "id": 9934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7101:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9933,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7101:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7101:29:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 9929,
                                "name": "_tokenContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9877,
                                "src": "7056:14:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 9928,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5438,
                              "src": "7048:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 9930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7048:23:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$5438",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 9931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5425,
                          "src": "7048:40:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 9937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7048:83:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d75737420617070726f7665204552433732315472616e7366657248656c706572206173206f70657261746f72",
                        "id": 9938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7145:57:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d",
                          "typeString": "literal_string \"createAsk must approve ERC721TransferHelper as operator\""
                        },
                        "value": "createAsk must approve ERC721TransferHelper as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5eb361bfb7650ae7ad7a6075415b3c1749f8c40fbb7c6e8eafb9a0407c6653d",
                          "typeString": "literal_string \"createAsk must approve ERC721TransferHelper as operator\""
                        }
                      ],
                      "id": 9927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7027:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7027:185:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9940,
                  "nodeType": "ExpressionStatement",
                  "src": "7027:185:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 9944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9942,
                          "name": "_findersFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9887,
                          "src": "7230:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 9943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7248:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "7230:23:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b2066696e646572732066656520627073206d757374206265206c657373207468616e206f7220657175616c20746f203130303030",
                        "id": 9945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7255:63:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b",
                          "typeString": "literal_string \"createAsk finders fee bps must be less than or equal to 10000\""
                        },
                        "value": "createAsk finders fee bps must be less than or equal to 10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02d05c4af9eb1aaf1505f4524d7ee3aadf36d59a7834682bc51aeaf660de430b",
                          "typeString": "literal_string \"createAsk finders fee bps must be less than or equal to 10000\""
                        }
                      ],
                      "id": 9941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7222:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7222:97:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9947,
                  "nodeType": "ExpressionStatement",
                  "src": "7222:97:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9949,
                          "name": "_sellerFundsRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9885,
                          "src": "7337:21:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7370:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7362:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9950,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7362:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7362:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7337:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746541736b206d7573742073706563696679205f73656c6c657246756e6473526563697069656e74",
                        "id": 9955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7374:46:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb",
                          "typeString": "literal_string \"createAsk must specify _sellerFundsRecipient\""
                        },
                        "value": "createAsk must specify _sellerFundsRecipient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40ea1cf3f6e2a04a88c44fa3e6b208588ce3c59d3e4eca53fa7c318d3d8aabeb",
                          "typeString": "literal_string \"createAsk must specify _sellerFundsRecipient\""
                        }
                      ],
                      "id": 9948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7329:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7329:92:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9957,
                  "nodeType": "ExpressionStatement",
                  "src": "7329:92:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 9958,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9780,
                            "src": "7436:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 9960,
                          "indexExpression": {
                            "id": 9959,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9877,
                            "src": "7446:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7436:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 9962,
                        "indexExpression": {
                          "id": 9961,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9879,
                          "src": "7462:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7436:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      },
                      "id": 9963,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9782,
                      "src": "7436:42:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 9966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7490:1:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 9965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7482:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9964,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7482:7:61",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7482:10:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7436:56:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9975,
                  "nodeType": "IfStatement",
                  "src": "7432:123:61",
                  "trueBody": {
                    "id": 9974,
                    "nodeType": "Block",
                    "src": "7494:61:61",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9970,
                              "name": "_tokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9877,
                              "src": "7519:14:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9971,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9879,
                              "src": "7535:8:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9969,
                            "name": "_cancelAsk",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10312,
                            "src": "7508:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 9972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7508:36:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9973,
                        "nodeType": "ExpressionStatement",
                        "src": "7508:36:61"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9976,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9780,
                          "src": "7565:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 9979,
                        "indexExpression": {
                          "id": 9977,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9877,
                          "src": "7575:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7565:25:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 9980,
                      "indexExpression": {
                        "id": 9978,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9879,
                        "src": "7591:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7565:35:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9982,
                          "name": "tokenOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9893,
                          "src": "7629:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 9983,
                          "name": "_sellerFundsRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9885,
                          "src": "7675:21:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 9984,
                          "name": "_askCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9883,
                          "src": "7723:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 9985,
                          "name": "_findersFeeBps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9887,
                          "src": "7764:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 9986,
                          "name": "_askPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9881,
                          "src": "7802:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9981,
                        "name": "Ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9791,
                        "src": "7603:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Ask_$9791_storage_ptr_$",
                          "typeString": "type(struct AsksV1_1.Ask storage pointer)"
                        }
                      },
                      "id": 9987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "seller",
                        "sellerFundsRecipient",
                        "askCurrency",
                        "findersFeeBps",
                        "askPrice"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7603:219:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_memory_ptr",
                        "typeString": "struct AsksV1_1.Ask memory"
                      }
                    },
                    "src": "7565:257:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "id": 9989,
                  "nodeType": "ExpressionStatement",
                  "src": "7565:257:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9991,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9877,
                        "src": "7849:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9992,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9879,
                        "src": "7865:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 9993,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9780,
                            "src": "7875:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 9995,
                          "indexExpression": {
                            "id": 9994,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9877,
                            "src": "7885:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7875:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 9997,
                        "indexExpression": {
                          "id": 9996,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9879,
                          "src": "7901:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7875:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      ],
                      "id": 9990,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9801,
                      "src": "7838:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$9791_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 9998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:73:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9999,
                  "nodeType": "EmitStatement",
                  "src": "7833:78:61"
                }
              ]
            },
            "documentation": {
              "id": 9875,
              "nodeType": "StructuredDocumentation",
              "src": "5881:528:61",
              "text": "@notice Creates the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token to be sold\n @param _tokenId The ID of the ERC-721 token to be sold\n @param _askPrice The price to fill the ask\n @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH\n @param _sellerFundsRecipient The address to send funds once the ask is filled\n @param _findersFeeBps The bps of the ask price (post-royalties) to be sent to the referrer of the sale"
            },
            "functionSelector": "9e847108",
            "id": 10001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9890,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9889,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "6633:12:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "6633:12:61"
              }
            ],
            "name": "createAsk",
            "nameLocation": "6423:9:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9877,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "6450:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6442:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6442:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9879,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6482:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6474:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6474:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9881,
                  "mutability": "mutable",
                  "name": "_askPrice",
                  "nameLocation": "6508:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6500:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6500:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9883,
                  "mutability": "mutable",
                  "name": "_askCurrency",
                  "nameLocation": "6535:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6527:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6527:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9885,
                  "mutability": "mutable",
                  "name": "_sellerFundsRecipient",
                  "nameLocation": "6565:21:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6557:29:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6557:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9887,
                  "mutability": "mutable",
                  "name": "_findersFeeBps",
                  "nameLocation": "6603:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6596:21:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 9886,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6596:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6432:191:61"
            },
            "returnParameters": {
              "id": 9891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6646:0:61"
            },
            "scope": 10313,
            "src": "6414:1504:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10051,
              "nodeType": "Block",
              "src": "9148:281:61",
              "statements": [
                {
                  "assignments": [
                    10017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10017,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "9170:3:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10051,
                      "src": "9158:15:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                        "typeString": "struct AsksV1_1.Ask"
                      },
                      "typeName": {
                        "id": 10016,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10015,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9791,
                          "src": "9158:3:61"
                        },
                        "referencedDeclaration": 9791,
                        "src": "9158:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10023,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 10018,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9780,
                        "src": "9176:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                        }
                      },
                      "id": 10020,
                      "indexExpression": {
                        "id": 10019,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10004,
                        "src": "9186:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9176:25:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                        "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                      }
                    },
                    "id": 10022,
                    "indexExpression": {
                      "id": 10021,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10006,
                      "src": "9202:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9176:35:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9158:53:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10025,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10017,
                            "src": "9230:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10026,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9782,
                          "src": "9230:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 10027,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9244:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9244:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9230:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73657441736b5072696365206d7573742062652073656c6c6572",
                        "id": 10030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9256:28:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098",
                          "typeString": "literal_string \"setAskPrice must be seller\""
                        },
                        "value": "setAskPrice must be seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5aaa95eb37ed15cd92b36e33cf2aface92feb1b6b6405eecbe0db233e41b5098",
                          "typeString": "literal_string \"setAskPrice must be seller\""
                        }
                      ],
                      "id": 10024,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9222:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9222:63:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10032,
                  "nodeType": "ExpressionStatement",
                  "src": "9222:63:61"
                },
                {
                  "expression": {
                    "id": 10037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10033,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10017,
                        "src": "9296:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      },
                      "id": 10035,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "askPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9790,
                      "src": "9296:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10036,
                      "name": "_askPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10008,
                      "src": "9311:9:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9296:24:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10038,
                  "nodeType": "ExpressionStatement",
                  "src": "9296:24:61"
                },
                {
                  "expression": {
                    "id": 10043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10039,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10017,
                        "src": "9330:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      },
                      "id": 10041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "askCurrency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9786,
                      "src": "9330:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10042,
                      "name": "_askCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10010,
                      "src": "9348:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9330:30:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10044,
                  "nodeType": "ExpressionStatement",
                  "src": "9330:30:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10046,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10004,
                        "src": "9392:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10047,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10006,
                        "src": "9408:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10048,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10017,
                        "src": "9418:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      ],
                      "id": 10045,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9811,
                      "src": "9376:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$9791_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 10049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9376:46:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10050,
                  "nodeType": "EmitStatement",
                  "src": "9371:51:61"
                }
              ]
            },
            "documentation": {
              "id": 10002,
              "nodeType": "StructuredDocumentation",
              "src": "8669:310:61",
              "text": "@notice Updates the ask price for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token\n @param _askPrice The ask price to set\n @param _askCurrency The address of the ERC-20 token required to fill, or address(0) for ETH"
            },
            "functionSelector": "b2007533",
            "id": 10052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10012,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "9135:12:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "9135:12:61"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "8993:11:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10004,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "9022:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10052,
                  "src": "9014:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9014:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10006,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9054:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10052,
                  "src": "9046:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9046:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10008,
                  "mutability": "mutable",
                  "name": "_askPrice",
                  "nameLocation": "9080:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10052,
                  "src": "9072:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10010,
                  "mutability": "mutable",
                  "name": "_askCurrency",
                  "nameLocation": "9107:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10052,
                  "src": "9099:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9099:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9004:121:61"
            },
            "returnParameters": {
              "id": 10014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9148:0:61"
            },
            "scope": 10313,
            "src": "8984:445:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10108,
              "nodeType": "Block",
              "src": "10416:423:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 10063,
                                "name": "askForNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9780,
                                "src": "10434:9:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                                }
                              },
                              "id": 10065,
                              "indexExpression": {
                                "id": 10064,
                                "name": "_tokenContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10055,
                                "src": "10444:14:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10434:25:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                                "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                              }
                            },
                            "id": 10067,
                            "indexExpression": {
                              "id": 10066,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10057,
                              "src": "10460:8:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10434:35:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage",
                              "typeString": "struct AsksV1_1.Ask storage ref"
                            }
                          },
                          "id": 10068,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9782,
                          "src": "10434:42:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10488:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10480:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10069,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10480:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10480:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10434:56:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e63656c41736b2061736b20646f65736e2774206578697374",
                        "id": 10074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10492:29:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da",
                          "typeString": "literal_string \"cancelAsk ask doesn't exist\""
                        },
                        "value": "cancelAsk ask doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_572d1b2a2f7313fc2048acd6e7df42d3f8003c71eccd5406ada1f151f3ccb0da",
                          "typeString": "literal_string \"cancelAsk ask doesn't exist\""
                        }
                      ],
                      "id": 10062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10426:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10426:96:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10076,
                  "nodeType": "ExpressionStatement",
                  "src": "10426:96:61"
                },
                {
                  "assignments": [
                    10078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10078,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "10541:10:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10108,
                      "src": "10533:18:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10077,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10533:7:61",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10085,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10083,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10057,
                        "src": "10586:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 10080,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10055,
                            "src": "10562:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10079,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "10554:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 10081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10554:23:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5438",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 10082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5371,
                      "src": "10554:31:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 10084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10554:41:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10533:62:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 10087,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "10626:3:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10626:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 10089,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10078,
                            "src": "10640:10:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10626:24:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10095,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10078,
                              "src": "10695:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 10096,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10707:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10707:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10092,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10055,
                                  "src": "10662:14:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 10091,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5438,
                                "src": "10654:7:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 10093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10654:23:61",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5438",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 10094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5425,
                            "src": "10654:40:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 10098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10654:64:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10626:92:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e63656c41736b206d75737420626520746f6b656e206f776e6572206f72206f70657261746f72",
                        "id": 10100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10732:43:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628",
                          "typeString": "literal_string \"cancelAsk must be token owner or operator\""
                        },
                        "value": "cancelAsk must be token owner or operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2df7a268eecab82d8ba18e2eaaefbb525001a789bc8aa366ae71fed1a27cd628",
                          "typeString": "literal_string \"cancelAsk must be token owner or operator\""
                        }
                      ],
                      "id": 10086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10605:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10605:180:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10102,
                  "nodeType": "ExpressionStatement",
                  "src": "10605:180:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10104,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10055,
                        "src": "10807:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10105,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10057,
                        "src": "10823:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10103,
                      "name": "_cancelAsk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10312,
                      "src": "10796:10:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10796:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10107,
                  "nodeType": "ExpressionStatement",
                  "src": "10796:36:61"
                }
              ]
            },
            "documentation": {
              "id": 10053,
              "nodeType": "StructuredDocumentation",
              "src": "10170:158:61",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "id": 10109,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10060,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10059,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "10403:12:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "10403:12:61"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "10342:9:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10055,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "10360:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10109,
                  "src": "10352:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10057,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10384:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10109,
                  "src": "10376:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10376:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10351:42:61"
            },
            "returnParameters": {
              "id": 10061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10416:0:61"
            },
            "scope": 10313,
            "src": "10333:506:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10285,
              "nodeType": "Block",
              "src": "15345:1919:61",
              "statements": [
                {
                  "assignments": [
                    10127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10127,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "15367:3:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10285,
                      "src": "15355:15:61",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                        "typeString": "struct AsksV1_1.Ask"
                      },
                      "typeName": {
                        "id": 10126,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10125,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9791,
                          "src": "15355:3:61"
                        },
                        "referencedDeclaration": 9791,
                        "src": "15355:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10133,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 10128,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9780,
                        "src": "15373:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                        }
                      },
                      "id": 10130,
                      "indexExpression": {
                        "id": 10129,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "15383:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15373:25:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                        "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                      }
                    },
                    "id": 10132,
                    "indexExpression": {
                      "id": 10131,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10114,
                      "src": "15399:8:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15373:35:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$9791_storage",
                      "typeString": "struct AsksV1_1.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15355:53:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10135,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "15427:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10136,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9782,
                          "src": "15427:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15449:1:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15441:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10137,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15441:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15441:10:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15427:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b206d757374206265206163746976652061736b",
                        "id": 10142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15453:28:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0",
                          "typeString": "literal_string \"fillAsk must be active ask\""
                        },
                        "value": "fillAsk must be active ask"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b7525583ed2f05aae1b37c58ae4e40d6a563b291a62c0e8fdcc5fafc3c81cd0",
                          "typeString": "literal_string \"fillAsk must be active ask\""
                        }
                      ],
                      "id": 10134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15419:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15419:63:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10144,
                  "nodeType": "ExpressionStatement",
                  "src": "15419:63:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10146,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "15500:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askCurrency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9786,
                          "src": "15500:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10148,
                          "name": "_fillCurrency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10116,
                          "src": "15519:13:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15500:32:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c43757272656e6379206d757374206d617463682061736b2063757272656e6379",
                        "id": 10150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15534:47:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b",
                          "typeString": "literal_string \"fillAsk _fillCurrency must match ask currency\""
                        },
                        "value": "fillAsk _fillCurrency must match ask currency"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06f8528b7ab0a3721d2dd680d757991f9013f6273f2bf38719ce74b747b060b",
                          "typeString": "literal_string \"fillAsk _fillCurrency must match ask currency\""
                        }
                      ],
                      "id": 10145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15492:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15492:90:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10152,
                  "nodeType": "ExpressionStatement",
                  "src": "15492:90:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10154,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "15600:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10155,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9790,
                          "src": "15600:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10156,
                          "name": "_fillAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10118,
                          "src": "15616:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15600:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66696c6c41736b205f66696c6c416d6f756e74206d757374206d617463682061736b20616d6f756e74",
                        "id": 10158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15629:43:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e",
                          "typeString": "literal_string \"fillAsk _fillAmount must match ask amount\""
                        },
                        "value": "fillAsk _fillAmount must match ask amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a42b00d663c578f77a4b1cca60d3fbaedeae5be520116e7a7472cc3986a127e",
                          "typeString": "literal_string \"fillAsk _fillAmount must match ask amount\""
                        }
                      ],
                      "id": 10153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15592:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15592:81:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10160,
                  "nodeType": "ExpressionStatement",
                  "src": "15592:81:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10162,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "15782:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10163,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9790,
                        "src": "15782:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10164,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "15796:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10165,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9786,
                        "src": "15796:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10161,
                      "name": "_handleIncomingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8557,
                      "src": "15758:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 10166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15758:54:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10167,
                  "nodeType": "ExpressionStatement",
                  "src": "15758:54:61"
                },
                {
                  "assignments": [
                    10169,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10169,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "15901:15:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10285,
                      "src": "15893:23:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15893:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 10179,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10171,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "15943:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10172,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "15959:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10173,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "15969:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9790,
                        "src": "15969:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10175,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "15983:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10176,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9786,
                        "src": "15983:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10177,
                        "name": "USE_ALL_GAS_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9768,
                        "src": "16000:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10170,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "15922:20:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 10178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15922:95:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15892:125:61"
                },
                {
                  "expression": {
                    "id": 10186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10180,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10169,
                      "src": "16068:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10182,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10169,
                          "src": "16111:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 10183,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10127,
                            "src": "16128:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                              "typeString": "struct AsksV1_1.Ask storage pointer"
                            }
                          },
                          "id": 10184,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askCurrency",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9786,
                          "src": "16128:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10181,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8280,
                        "src": "16086:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 10185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16086:58:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16068:76:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10187,
                  "nodeType": "ExpressionStatement",
                  "src": "16068:76:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10188,
                      "name": "_finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10120,
                      "src": "16197:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 10191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16216:1:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 10190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16208:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10189,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16208:7:61",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16208:10:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16197:21:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10219,
                  "nodeType": "IfStatement",
                  "src": "16193:272:61",
                  "trueBody": {
                    "id": 10218,
                    "nodeType": "Block",
                    "src": "16220:245:61",
                    "statements": [
                      {
                        "assignments": [
                          10195
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10195,
                            "mutability": "mutable",
                            "name": "findersFee",
                            "nameLocation": "16242:10:61",
                            "nodeType": "VariableDeclaration",
                            "scope": 10218,
                            "src": "16234:18:61",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10194,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16234:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10203,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10196,
                                  "name": "remainingProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10169,
                                  "src": "16256:15:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "expression": {
                                    "id": 10197,
                                    "name": "ask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10127,
                                    "src": "16274:3:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                                      "typeString": "struct AsksV1_1.Ask storage pointer"
                                    }
                                  },
                                  "id": 10198,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "findersFeeBps",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9788,
                                  "src": "16274:17:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16256:35:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 10200,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16255:37:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 10201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16295:5:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "16255:45:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16234:66:61"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10205,
                              "name": "_finder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10120,
                              "src": "16338:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10206,
                              "name": "findersFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10195,
                              "src": "16347:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 10207,
                                "name": "ask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10127,
                                "src": "16359:3:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                                  "typeString": "struct AsksV1_1.Ask storage pointer"
                                }
                              },
                              "id": 10208,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "askCurrency",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9786,
                              "src": "16359:15:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10209,
                              "name": "USE_ALL_GAS_FLAG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9768,
                              "src": "16376:16:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10204,
                            "name": "_handleOutgoingTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8721,
                            "src": "16314:23:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256)"
                            }
                          },
                          "id": 10210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16314:79:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10211,
                        "nodeType": "ExpressionStatement",
                        "src": "16314:79:61"
                      },
                      {
                        "expression": {
                          "id": 10216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10212,
                            "name": "remainingProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10169,
                            "src": "16408:15:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10213,
                              "name": "remainingProfit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10169,
                              "src": "16426:15:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 10214,
                              "name": "findersFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10195,
                              "src": "16444:10:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16426:28:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16408:46:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10217,
                        "nodeType": "ExpressionStatement",
                        "src": "16408:46:61"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10221,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "16550:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10222,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sellerFundsRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9784,
                        "src": "16550:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10223,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10169,
                        "src": "16576:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10224,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "16593:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10225,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9786,
                        "src": "16593:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10226,
                        "name": "USE_ALL_GAS_FLAG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9768,
                        "src": "16610:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10220,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8721,
                      "src": "16526:23:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 10227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16526:101:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10228,
                  "nodeType": "ExpressionStatement",
                  "src": "16526:101:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10232,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "16705:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10233,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "16721:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9782,
                        "src": "16721:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10235,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16733:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16733:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10237,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "16745:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10229,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9772,
                        "src": "16671:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 10231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16333,
                      "src": "16671:33:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 10238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16671:83:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10239,
                  "nodeType": "ExpressionStatement",
                  "src": "16671:83:61"
                },
                {
                  "assignments": [
                    10242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10242,
                      "mutability": "mutable",
                      "name": "userAExchangeDetails",
                      "nameLocation": "16788:20:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10285,
                      "src": "16765:43:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                        "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                      },
                      "typeName": {
                        "id": 10241,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10240,
                          "name": "ExchangeDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8732,
                          "src": "16765:15:61"
                        },
                        "referencedDeclaration": 8732,
                        "src": "16765:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_storage_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10248,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10244,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "16843:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10245,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "16868:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 10246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16886:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 10243,
                      "name": "ExchangeDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8732,
                      "src": "16811:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExchangeDetails_$8732_storage_ptr_$",
                        "typeString": "type(struct UniversalExchangeEventV1.ExchangeDetails storage pointer)"
                      }
                    },
                    "id": 10247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenContract",
                      "tokenId",
                      "amount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16811:78:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                      "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16765:124:61"
                },
                {
                  "assignments": [
                    10251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10251,
                      "mutability": "mutable",
                      "name": "userBExchangeDetails",
                      "nameLocation": "16922:20:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 10285,
                      "src": "16899:43:61",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                        "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                      },
                      "typeName": {
                        "id": 10250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10249,
                          "name": "ExchangeDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8732,
                          "src": "16899:15:61"
                        },
                        "referencedDeclaration": 8732,
                        "src": "16899:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_storage_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10259,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10253,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "16977:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10254,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9786,
                        "src": "16977:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 10255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17003:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 10256,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "17014:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10257,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9790,
                        "src": "17014:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10252,
                      "name": "ExchangeDetails",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8732,
                      "src": "16945:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExchangeDetails_$8732_storage_ptr_$",
                        "typeString": "type(struct UniversalExchangeEventV1.ExchangeDetails storage pointer)"
                      }
                    },
                    "id": 10258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenContract",
                      "tokenId",
                      "amount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "16945:83:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                      "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16899:129:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10261,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10127,
                          "src": "17061:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                            "typeString": "struct AsksV1_1.Ask storage pointer"
                          }
                        },
                        "id": 10262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9782,
                        "src": "17061:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 10263,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "17073:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17073:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10265,
                        "name": "userAExchangeDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10242,
                        "src": "17085:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      },
                      {
                        "id": 10266,
                        "name": "userBExchangeDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10251,
                        "src": "17107:20:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_ExchangeDetails_$8732_memory_ptr",
                          "typeString": "struct UniversalExchangeEventV1.ExchangeDetails memory"
                        }
                      ],
                      "id": 10260,
                      "name": "ExchangeExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8745,
                      "src": "17044:16:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_ExchangeDetails_$8732_memory_ptr_$_t_struct$_ExchangeDetails_$8732_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct UniversalExchangeEventV1.ExchangeDetails memory,struct UniversalExchangeEventV1.ExchangeDetails memory)"
                      }
                    },
                    "id": 10267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17044:84:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10268,
                  "nodeType": "EmitStatement",
                  "src": "17039:89:61"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10270,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10112,
                        "src": "17153:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10271,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "17169:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 10272,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "17179:3:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17179:10:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10274,
                        "name": "_finder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10120,
                        "src": "17191:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10275,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10127,
                        "src": "17200:3:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage_ptr",
                          "typeString": "struct AsksV1_1.Ask storage pointer"
                        }
                      ],
                      "id": 10269,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9835,
                      "src": "17143:9:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_struct$_Ask_$9791_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,address,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 10276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17143:61:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10277,
                  "nodeType": "EmitStatement",
                  "src": "17138:66:61"
                },
                {
                  "expression": {
                    "id": 10283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "17215:42:61",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10278,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9780,
                          "src": "17222:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 10280,
                        "indexExpression": {
                          "id": 10279,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10112,
                          "src": "17232:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17222:25:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 10282,
                      "indexExpression": {
                        "id": 10281,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10114,
                        "src": "17248:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17222:35:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10284,
                  "nodeType": "ExpressionStatement",
                  "src": "17215:42:61"
                }
              ]
            },
            "documentation": {
              "id": 10110,
              "nodeType": "StructuredDocumentation",
              "src": "14717:427:61",
              "text": "@notice Fills the ask for a given NFT, transferring the ETH/ERC-20 to the seller and NFT to the buyer\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token\n @param _fillCurrency The address of the ERC-20 token using to fill, or address(0) for ETH\n @param _fillAmount The amount to fill the ask\n @param _finder The address of the ask referrer"
            },
            "functionSelector": "622dcbd7",
            "id": 10286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10122,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "15332:12:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "15332:12:61"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "15158:7:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10112,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "15183:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15175:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15175:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10114,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "15215:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15207:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15207:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10116,
                  "mutability": "mutable",
                  "name": "_fillCurrency",
                  "nameLocation": "15241:13:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15233:21:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15233:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10118,
                  "mutability": "mutable",
                  "name": "_fillAmount",
                  "nameLocation": "15272:11:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15264:19:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15264:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10120,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nameLocation": "15301:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10286,
                  "src": "15293:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15293:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15165:149:61"
            },
            "returnParameters": {
              "id": 10124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15345:0:61"
            },
            "scope": 10313,
            "src": "15149:2115:61",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10311,
              "nodeType": "Block",
              "src": "17502:149:61",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10295,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10289,
                        "src": "17529:14:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10296,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10291,
                        "src": "17545:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 10297,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9780,
                            "src": "17555:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                            }
                          },
                          "id": 10299,
                          "indexExpression": {
                            "id": 10298,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10289,
                            "src": "17565:14:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17555:25:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                            "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                          }
                        },
                        "id": 10301,
                        "indexExpression": {
                          "id": 10300,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10291,
                          "src": "17581:8:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17555:35:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$9791_storage",
                          "typeString": "struct AsksV1_1.Ask storage ref"
                        }
                      ],
                      "id": 10294,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9821,
                      "src": "17517:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$9791_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksV1_1.Ask memory)"
                      }
                    },
                    "id": 10302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17517:74:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10303,
                  "nodeType": "EmitStatement",
                  "src": "17512:79:61"
                },
                {
                  "expression": {
                    "id": 10309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "17602:42:61",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10304,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9780,
                          "src": "17609:9:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksV1_1.Ask storage ref))"
                          }
                        },
                        "id": 10306,
                        "indexExpression": {
                          "id": 10305,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10289,
                          "src": "17619:14:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17609:25:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$9791_storage_$",
                          "typeString": "mapping(uint256 => struct AsksV1_1.Ask storage ref)"
                        }
                      },
                      "id": 10308,
                      "indexExpression": {
                        "id": 10307,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10291,
                        "src": "17635:8:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17609:35:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$9791_storage",
                        "typeString": "struct AsksV1_1.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10310,
                  "nodeType": "ExpressionStatement",
                  "src": "17602:42:61"
                }
              ]
            },
            "documentation": {
              "id": 10287,
              "nodeType": "StructuredDocumentation",
              "src": "17270:157:61",
              "text": "@dev Deletes canceled and invalid asks\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The ID of the ERC-721 token"
            },
            "id": 10312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_cancelAsk",
            "nameLocation": "17441:10:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10289,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "17460:14:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10312,
                  "src": "17452:22:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17452:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10291,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "17484:8:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10312,
                  "src": "17476:16:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17476:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17451:42:61"
            },
            "returnParameters": {
              "id": 10293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17502:0:61"
            },
            "scope": 10313,
            "src": "17432:219:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 10314,
        "src": "947:16706:61",
        "usedErrors": []
      }
    ],
    "src": "36:17618:61"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-04-04T14:37:20.166Z",
  "devdoc": {
    "author": "tbtstl <t@zora.co>",
    "events": {
      "AskCanceled(address,uint256,(address,address,address,uint16,uint256))": {
        "params": {
          "ask": "The metadata of the canceled ask",
          "tokenContract": "The ERC-721 token address of the canceled ask",
          "tokenId": "The ERC-721 token ID of the canceled ask"
        }
      },
      "AskCreated(address,uint256,(address,address,address,uint16,uint256))": {
        "params": {
          "ask": "The metadata of the created ask",
          "tokenContract": "The ERC-721 token address of the created ask",
          "tokenId": "The ERC-721 token ID of the created ask"
        }
      },
      "AskFilled(address,uint256,address,address,(address,address,address,uint16,uint256))": {
        "params": {
          "ask": "The metadata of the filled ask",
          "buyer": "The buyer address of the filled ask",
          "finder": "The address of finder who referred the ask",
          "tokenContract": "The ERC-721 token address of the filled ask",
          "tokenId": "The ERC-721 token ID of the filled ask"
        }
      },
      "AskPriceUpdated(address,uint256,(address,address,address,uint16,uint256))": {
        "params": {
          "ask": "The metadata of the updated ask",
          "tokenContract": "The ERC-721 token address of the updated ask",
          "tokenId": "The ERC-721 token ID of the updated ask"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
        "details": "This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.",
        "params": {
          "_amount": "The total sale amount",
          "_payoutCurrency": "The ERC-20 token address to payout royalties in, or address(0) for ETH",
          "_tokenContract": "The NFT Contract to get royalty information from",
          "_tokenId": ", The Token ID to get royalty information from"
        },
        "returns": {
          "_0": "The remaining funds after paying out royalties"
        }
      },
      "cancelAsk(address,uint256)": {
        "params": {
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The ID of the ERC-721 token"
        }
      },
      "constructor": {
        "params": {
          "_erc20TransferHelper": "The ZORA ERC-20 Transfer Helper address",
          "_erc721TransferHelper": "The ZORA ERC-721 Transfer Helper address",
          "_protocolFeeSettings": "The ZoraProtocolFeeSettingsV1 address",
          "_royaltyEngine": "The Manifold Royalty Engine address",
          "_wethAddress": "The WETH token address"
        }
      },
      "createAsk(address,uint256,uint256,address,address,uint16)": {
        "params": {
          "_askCurrency": "The address of the ERC-20 token required to fill, or address(0) for ETH",
          "_askPrice": "The price to fill the ask",
          "_findersFeeBps": "The bps of the ask price (post-royalties) to be sent to the referrer of the sale",
          "_sellerFundsRecipient": "The address to send funds once the ask is filled",
          "_tokenContract": "The address of the ERC-721 token to be sold",
          "_tokenId": "The ID of the ERC-721 token to be sold"
        }
      },
      "fillAsk(address,uint256,address,uint256,address)": {
        "params": {
          "_fillAmount": "The amount to fill the ask",
          "_fillCurrency": "The address of the ERC-20 token using to fill, or address(0) for ETH",
          "_finder": "The address of the ask referrer",
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The ID of the ERC-721 token"
        }
      },
      "setAskPrice(address,uint256,uint256,address)": {
        "params": {
          "_askCurrency": "The address of the ERC-20 token required to fill, or address(0) for ETH",
          "_askPrice": "The ask price to set",
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The ID of the ERC-721 token"
        }
      },
      "setRoyaltyEngineAddress(address)": {
        "details": "emergency use only – requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI",
        "params": {
          "_royaltyEngine": "The address for the new royalty engine"
        }
      }
    },
    "stateVariables": {
      "USE_ALL_GAS_FLAG": {
        "details": "The indicator to pass all remaining gas when paying out royalties"
      },
      "askForNFT": {
        "details": "ERC-721 token contract => ERC-721 token ID => Ask"
      }
    },
    "title": "Asks V1.1",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AskCanceled(address,uint256,(address,address,address,uint16,uint256))": {
        "notice": "Emitted when an ask is canceled"
      },
      "AskCreated(address,uint256,(address,address,address,uint16,uint256))": {
        "notice": "Emitted when an ask is created"
      },
      "AskFilled(address,uint256,address,address,(address,address,address,uint16,uint256))": {
        "notice": "Emitted when an ask is filled"
      },
      "AskPriceUpdated(address,uint256,(address,address,address,uint16,uint256))": {
        "notice": "Emitted when an ask price is updated"
      },
      "ExchangeExecuted(address,address,(address,uint256,uint256),(address,uint256,uint256))": {
        "notice": "Emitted when a token exchange is executed"
      },
      "RoyaltyPayout(address,uint256,address,uint256)": {
        "notice": "Emitted when royalties are paid"
      }
    },
    "kind": "user",
    "methods": {
      "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
        "notice": "Pays out royalties for NFTs based on the information returned by the royalty engine"
      },
      "askForNFT(address,uint256)": {
        "notice": "The ask for a given NFT, if one exists"
      },
      "cancelAsk(address,uint256)": {
        "notice": "Cancels the ask for a given NFT"
      },
      "createAsk(address,uint256,uint256,address,address,uint16)": {
        "notice": "Creates the ask for a given NFT"
      },
      "erc20TransferHelper()": {
        "notice": "The ZORA ERC-20 Transfer Helper"
      },
      "erc721TransferHelper()": {
        "notice": "The ZORA ERC-721 Transfer Helper"
      },
      "fillAsk(address,uint256,address,uint256,address)": {
        "notice": "Fills the ask for a given NFT, transferring the ETH/ERC-20 to the seller and NFT to the buyer"
      },
      "name()": {
        "notice": "The module name"
      },
      "registrar()": {
        "notice": "The ZORA Module Registrar"
      },
      "setAskPrice(address,uint256,uint256,address)": {
        "notice": "Updates the ask price for a given NFT"
      },
      "setRoyaltyEngineAddress(address)": {
        "notice": "Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy"
      }
    },
    "notice": "This module allows sellers to list an owned ERC-721 token for sale for a given price in a given currency, and allows buyers to purchase from those asks",
    "version": 1
  }
}