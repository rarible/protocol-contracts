{
  "contractName": "AsksCoreErc20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc721TransferHelper",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolFeeSettings",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "price",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksCoreErc20.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "price",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksCoreErc20.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "price",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksCoreErc20.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "price",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct AsksCoreErc20.Ask",
          "name": "ask",
          "type": "tuple"
        }
      ],
      "name": "AskPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RoyaltyPayout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payoutCurrency",
          "type": "address"
        }
      ],
      "name": "_handleRoyaltyEnginePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "askForNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "price",
          "type": "uint96"
        },
        {
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC20TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc721TransferHelper",
      "outputs": [
        {
          "internalType": "contract ERC721TransferHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrar",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        }
      ],
      "name": "setRoyaltyEngineAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "createAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "setAskPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAsk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "fillAsk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20TransferHelper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc721TransferHelper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeSettings\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"price\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct AsksCoreErc20.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"price\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct AsksCoreErc20.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"price\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct AsksCoreErc20.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskFilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"price\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct AsksCoreErc20.Ask\",\"name\":\"ask\",\"type\":\"tuple\"}],\"name\":\"AskPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyPayout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payoutCurrency\",\"type\":\"address\"}],\"name\":\"_handleRoyaltyEnginePayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"askForNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"price\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"createAsk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20TransferHelper\",\"outputs\":[{\"internalType\":\"contract ERC20TransferHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc721TransferHelper\",\"outputs\":[{\"internalType\":\"contract ERC721TransferHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"fillAsk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registrar\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"setAskPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"}],\"name\":\"setRoyaltyEngineAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"kulkarohan\",\"events\":{\"AskCanceled(address,uint256,(address,uint96,address))\":{\"params\":{\"ask\":\"The metadata of the canceled ask\",\"tokenContract\":\"The ERC-721 token address of the canceled ask\",\"tokenId\":\"The ERC-721 token id of the canceled ask\"}},\"AskCreated(address,uint256,(address,uint96,address))\":{\"params\":{\"ask\":\"The metadata of the created ask\",\"tokenContract\":\"The ERC-721 token address of the created ask\",\"tokenId\":\"The ERC-721 token id of the created ask\"}},\"AskFilled(address,uint256,address,(address,uint96,address))\":{\"params\":{\"ask\":\"The metadata of the filled ask\",\"buyer\":\"The buyer address of the filled ask\",\"tokenContract\":\"The ERC-721 token address of the filled ask\",\"tokenId\":\"The ERC-721 token id of the filled ask\"}},\"AskPriceUpdated(address,uint256,(address,uint96,address))\":{\"params\":{\"ask\":\"The metadata of the updated the ask\",\"tokenContract\":\"The ERC-721 token address of the updated ask\",\"tokenId\":\"The ERC-721 token id of the updated ask\"}}},\"kind\":\"dev\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"details\":\"This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.\",\"params\":{\"_amount\":\"The total sale amount\",\"_payoutCurrency\":\"The ERC-20 token address to payout royalties in, or address(0) for ETH\",\"_tokenContract\":\"The NFT Contract to get royalty information from\",\"_tokenId\":\", The Token ID to get royalty information from\"},\"returns\":{\"_0\":\"The remaining funds after paying out royalties\"}},\"cancelAsk(address,uint256)\":{\"params\":{\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"constructor\":{\"params\":{\"_erc20TransferHelper\":\"The ZORA ERC-20 Transfer Helper address\",\"_erc721TransferHelper\":\"The ZORA ERC-721 Transfer Helper address\",\"_protocolFeeSettings\":\"The ZORA Protocol Fee Settings address\",\"_royaltyEngine\":\"The Manifold Royalty Engine address\",\"_weth\":\"The WETH token address\"}},\"createAsk(address,uint256,uint256,address)\":{\"params\":{\"_currency\":\"The currency of the ask price\",\"_price\":\"The price to fill the ask\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"fillAsk(address,uint256,uint256,address)\":{\"params\":{\"_currency\":\"The currency to fill the ask\",\"_price\":\"The price to fill the ask\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"setAskPrice(address,uint256,uint256,address)\":{\"params\":{\"_currency\":\"The currency of the ask price\",\"_price\":\"The price to fill the ask\",\"_tokenContract\":\"The address of the ERC-721 token\",\"_tokenId\":\"The id of the ERC-721 token\"}},\"setRoyaltyEngineAddress(address)\":{\"details\":\"emergency use only \\u2013 requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI\",\"params\":{\"_royaltyEngine\":\"The address for the new royalty engine\"}},\"supportsInterface(bytes4)\":{\"details\":\"`0x01ffc9a7` is the IERC165 interface id\",\"params\":{\"_interfaceId\":\"The identifier of a given interface\"},\"returns\":{\"_0\":\"If the given interface is supported\"}}},\"stateVariables\":{\"askForNFT\":{\"details\":\"ERC-721 token contract => ERC-721 token id => Ask\"}},\"title\":\"Asks Core ERC-20\",\"version\":1},\"userdoc\":{\"events\":{\"AskCanceled(address,uint256,(address,uint96,address))\":{\"notice\":\"Emitted when an ask is canceled\"},\"AskCreated(address,uint256,(address,uint96,address))\":{\"notice\":\"Emitted when an ask is created\"},\"AskFilled(address,uint256,address,(address,uint96,address))\":{\"notice\":\"Emitted when an ask is filled\"},\"AskPriceUpdated(address,uint256,(address,uint96,address))\":{\"notice\":\"Emitted when an ask price is updated\"},\"RoyaltyPayout(address,uint256,address,uint256)\":{\"notice\":\"Emitted when royalties are paid\"}},\"kind\":\"user\",\"methods\":{\"_handleRoyaltyEnginePayout(address,uint256,uint256,address)\":{\"notice\":\"Pays out royalties for NFTs based on the information returned by the royalty engine\"},\"askForNFT(address,uint256)\":{\"notice\":\"The ask for a given NFT, if one exists\"},\"cancelAsk(address,uint256)\":{\"notice\":\"Cancels the ask for a given NFT\"},\"createAsk(address,uint256,uint256,address)\":{\"notice\":\"Creates an ask for a given NFT\"},\"erc20TransferHelper()\":{\"notice\":\"The ZORA ERC-20 Transfer Helper\"},\"erc721TransferHelper()\":{\"notice\":\"The ZORA ERC-721 Transfer Helper\"},\"fillAsk(address,uint256,uint256,address)\":{\"notice\":\"Fills the ask for a given NFT\"},\"name()\":{\"notice\":\"The module name\"},\"registrar()\":{\"notice\":\"The ZORA Module Registrar\"},\"setAskPrice(address,uint256,uint256,address)\":{\"notice\":\"Updates the ask for a given NFT\"},\"setRoyaltyEngineAddress(address)\":{\"notice\":\"Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy\"},\"supportsInterface(bytes4)\":{\"notice\":\"Implements EIP-165 for standard interface detection\"}},\"notice\":\"Module for minimal ERC-20 asks for ERC-721 tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/modules/Asks/Core/ERC20/AsksCoreErc20.sol\":\"AsksCoreErc20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@manifoldxyz/royalty-registry-solidity/contracts/IRoyaltyEngineV1.sol\":{\"keccak256\":\"0x088b901b9fe87d03d237b5a0a84ba35c18933dafb9fc344bd4d17a8085ea0387\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa396e7cb04483aaffc2d50038d01a71816e5a3bc72021c5780e56a6437a1bcf\",\"dweb:/ipfs/QmUEawXCXimTSihzT2UBVvwVjmCa1ykFuwwQg9p6CapDzM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x11b84bb56dc112a6590bfe3e0efa118aa1b5891132342200d04c4ef544cb93de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbc4803332d45dff58f865ed21c942fe4668e47cc7196c8dfe84102040b1d70f\",\"dweb:/ipfs/QmXhZLsocznRWCSyhjo3vo66Z1VsuuNptAVb6ASPYsWtGx\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826\",\"dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@rari-capital/solmate/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x37da48458a348878d8db5b58367d734e340b9172ef947df430027638fc45a015\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://665cc22c86db049785843b49741e6c8f3356ec4c00c5e8a77a65f24238e1cfed\",\"dweb:/ipfs/QmVtU93ya9nFc23w5m2ADGo5np6zB3JCofT6GeV8r82Kw2\"]},\"project:/contracts/ZoraModuleManager.sol\":{\"keccak256\":\"0x516cbb1377511ada04fdd9bb12ef5ab7ec8694c7722f9252e7f7664dc274b435\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://888a20823cafe1044f8d902c340295ad1d0b4496f9115f1cce7d5a445eeac56f\",\"dweb:/ipfs/Qmcss7A3T7eDqtwvFS9azwXNeRbTGAHbwdcE1X4JivNZf6\"]},\"project:/contracts/auxiliary/ZoraProtocolFeeSettings/ZoraProtocolFeeSettings.sol\":{\"keccak256\":\"0xff7d072720136e7be2ee226a2dfc22a9cf60c2b4d9ecd96a732d89680cb7416d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://75331ba64befdf18ddae428cfbe4c211e0aaea97cc0427f43854561ab8761805\",\"dweb:/ipfs/QmWRbJd61RpfRNKmiyrEzJ4Z6KoJq4mUXNmBeUPKM8MC8t\"]},\"project:/contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol\":{\"keccak256\":\"0xa29ac2f5104fe554ccab7c1c1eac1a91c043064a8c571253177e8c707d3df8d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7335dcf58a8134289861c5dbe20e79bb7db28d131d065bc1e4c0dc0f79a99f27\",\"dweb:/ipfs/Qmdabk1co2w1LQzh4bmaniFXPogmVaPMDHP2WPcrRkmBFc\"]},\"project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol\":{\"keccak256\":\"0xc9fcd245467d24b64528581a38fcf0f07568f107f520edbb93c287c11f745bd3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2284e0522eff27797026547b2162ae656458d0c33f71cc1a98efe9117265e35f\",\"dweb:/ipfs/QmQbnLjat7YZro2Ko3XXn7Hi8BMgVnW6BTNj9aaMuMuKM6\"]},\"project:/contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol\":{\"keccak256\":\"0xe4496549a785f714d8b8edea0716aa0f9ac53152fc171d286b24ed35d6046481\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://86bf38b07ac5b62dac1889c23d6ffa72c41413c5b3e2c37518e3ef16724170d2\",\"dweb:/ipfs/QmdmpFLMTReVM6j49CPXkzgyS4qjGsAkM7LtFzszqTy3EL\"]},\"project:/contracts/common/OutgoingTransferSupport/V1/IWETH.sol\":{\"keccak256\":\"0xc95333328cada092ac242d36c205f984a69a22925f1d6ec4f3d26032006cd70a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ef55582164f1ad9ce2ba8ac25e49cd3e01a0e8383bdfbf9bac97c768b1e91f84\",\"dweb:/ipfs/QmXupdT8p88m5dNJuCGpQABoMLFs98AvRS4E1CDRkt7isM\"]},\"project:/contracts/common/OutgoingTransferSupport/V1/OutgoingTransferSupportV1.sol\":{\"keccak256\":\"0xe13614f0a2f5547fa1c97564ed26d843678aaaf245d7406d051ab8ad91115efe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://815cc7f0070d60dedfe610a7189aae87594383b8010d1df65342fd6fb67e1a21\",\"dweb:/ipfs/QmbU8yxSwYgV9A7L2FCnfHCHHyDntUaHKg5sCxfNwbBrDQ\"]},\"project:/contracts/modules/Asks/Core/ERC20/AsksCoreErc20.sol\":{\"keccak256\":\"0xd5276796364173b7b6d7788ac99c06f943af0fac78fbadff18a72ac46e6e6e29\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://293727d70fcf3ad2cfd99f80b353a0ed99e2b6e9676f6b18a578b230c1a76d17\",\"dweb:/ipfs/QmQNdppHHRxqZHQdKcdKioaG4ggRL2YNSZGDTdVg5pbmfb\"]},\"project:/contracts/modules/Asks/Core/ERC20/IAsksCoreErc20.sol\":{\"keccak256\":\"0x9973beee299fc3cf2ddda2aae0912861443225dcacea3d66efbff7aaa5b9d992\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://08fb8cb719f005a184089ed0268f2e5c9459ff39b889dc0ae8e4f13965c3728f\",\"dweb:/ipfs/QmW4VWtoUHqBPrFBvQJZZA2JWnM8u4yc56tuLVBDTbYpys\"]},\"project:/contracts/transferHelpers/BaseTransferHelper.sol\":{\"keccak256\":\"0xb06a76885ef1a8f1fbdd6c4472a846cdff7ebf7c92b03f5786a0f261798e3f46\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://62deee4eeb9f070b17ce7bf2ef7b0bb0c163f500a8c70f13eba35b010d640575\",\"dweb:/ipfs/QmRnQaTqJBMXW4Vgjz62N2YDAYKtj8xVwQ1WhiCyXwLpKp\"]},\"project:/contracts/transferHelpers/ERC20TransferHelper.sol\":{\"keccak256\":\"0xc859f86b8ab62e2b98840360995426c70171e74f68fd5ed63c7d34cdfee00623\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://33ecf220a30ac6a6b56a98d58fcca6ee38fc4bcde498e8e33750e675c5d77ab3\",\"dweb:/ipfs/QmVn2cxhEiQdD11f2b1vaQ1uGrXHKanxBXxjP5P3SWdsPz\"]},\"project:/contracts/transferHelpers/ERC721TransferHelper.sol\":{\"keccak256\":\"0x23fa0ddaac378c885fabf22e8d458e61f3ab8608b9937dfbf49ac82e25153761\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a5d75279b5ca309e35b184db7fefa69053dc58402be86aea1fc141bf55cf95d3\",\"dweb:/ipfs/QmXfoyWWAekkinQrzcSgkJJoKCRVg2dWqBtdLe6m2drDqW\"]}},\"version\":1}",
  "bytecode": "0x61012060405260016000553480156200001757600080fd5b50604051620021f1380380620021f18339810160408190526200003a9162000255565b6040518060400160405280601081526020016f041736b7320436f7265204552432d32360841b815250838383876001600160a01b031663e3e606f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cb9190620002d5565b6001600160a01b0316632b20e3976040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000109573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012f9190620002d5565b6001600160a01b038a811660805291821660a052600180546001600160a01b0319169483169490941790935590811660e0521660c05280516200017a90600290602084019062000196565b5050506001600160a01b03909216610100525062000339915050565b828054620001a490620002fc565b90600052602060002090601f016020900481019282620001c8576000855562000213565b82601f10620001e357805160ff191683800117855562000213565b8280016001018555821562000213579182015b8281111562000213578251825591602001919060010190620001f6565b506200022192915062000225565b5090565b5b8082111562000221576000815560010162000226565b6001600160a01b03811681146200025257600080fd5b50565b600080600080600060a086880312156200026e57600080fd5b85516200027b816200023c565b60208701519095506200028e816200023c565b6040870151909450620002a1816200023c565b6060870151909350620002b4816200023c565b6080870151909250620002c7816200023c565b809150509295509295909350565b600060208284031215620002e857600080fd5b8151620002f5816200023c565b9392505050565b600181811c908216806200031157607f821691505b602082108114156200033357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051611e50620003a1600039600081816102da0152610e5f0152600081816114af01526115420152600081816101150152610b6b01526000818161104801526110c6015260008181610232015261125f0152611e506000f3fe6080604052600436106100a75760003560e01c80638f9d3251116100645780638f9d3251146102205780639128c22c14610254578063b200753314610275578063b249bb3014610295578063d8606343146102b5578063f7cd1d9b146102c857600080fd5b806301ffc9a7146100ac57806306fdde03146100e15780632b20e397146101035780632b9f663e1461014f57806340b8074614610171578063418f065614610191575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004611931565b6102fc565b60405190151581526020015b60405180910390f35b3480156100ed57600080fd5b506100f6610332565b6040516100d89190611987565b34801561010f57600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d8565b34801561015b57600080fd5b5061016f61016a3660046119d2565b6103c0565b005b34801561017d57600080fd5b5061016f61018c366004611a1c565b61060f565b34801561019d57600080fd5b506101ee6101ac366004611a1c565b6003602090815260009283526040808420909152908252902080546001909101546001600160a01b0380831692600160a01b90046001600160601b0316911683565b604080516001600160a01b0394851681526001600160601b0390931660208401529216918101919091526060016100d8565b34801561022c57600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b6102676102623660046119d2565b6107e7565b6040519081526020016100d8565b34801561028157600080fd5b5061016f6102903660046119d2565b6109e3565b3480156102a157600080fd5b5061016f6102b0366004611a48565b610b60565b61016f6102c33660046119d2565b610c8c565b3480156102d457600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b031982166228eee160e31b148061032c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6002805461033f90611a65565b80601f016020809104026020016040519081016040528092919081815260200182805461036b90611a65565b80156103b85780601f1061038d576101008083540402835291602001916103b8565b820191906000526020600020905b81548152906001019060200180831161039b57829003601f168201915b505050505081565b6000546001146103eb5760405162461bcd60e51b81526004016103e290611aa0565b60405180910390fd5b600260009081556040516331a9108f60e11b8152600481018590526001600160a01b03861690636352211e90602401602060405180830381865afa158015610437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190611ac4565b9050336001600160a01b03821614806104df575060405163e985e9c560e01b81526001600160a01b03828116600483015233602483015286169063e985e9c590604401602060405180830381865afa1580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df9190611ae1565b61052b5760405162461bcd60e51b815260206004820152601c60248201527f4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f520000000060448201526064016103e2565b6001600160601b038311156105765760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f41534b5f505249434560781b60448201526064016103e2565b6001600160a01b03858116600081815260036020908152604080832089845290915290819020848416600160a01b6001600160601b038916021781556001810180546001600160a01b031916948716949094179093555186927fa5bd647f34fcbc80ec242a9c943441939ba9c241c90515e6c49bd8c3207a3147916105fb9190611b03565b60405180910390a350506001600055505050565b6000546001146106315760405162461bcd60e51b81526004016103e290611aa0565b600260009081556001600160a01b03838116825260036020908152604080842085855282529283902083516060810185528154808516808352600160a01b9091046001600160601b031693820193909352600190910154909216928201929092529033148061071957506040516331a9108f60e11b8152600481018390526001600160a01b03841690636352211e90602401602060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611ac4565b6001600160a01b0316336001600160a01b0316145b6107655760405162461bcd60e51b815260206004820152601a60248201527f4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e455200000000000060448201526064016103e2565b81836001600160a01b03167ffa3f57ecc148dff66af5b7988fd23bb7d42b7c6cf1ac1f4c611980667d8880078360405161079f9190611b31565b60405180910390a3506001600160a01b039091166000908152600360209081526040808320938352929052908120818155600190810180546001600160a01b03191690559055565b600033301461084e5760405162461bcd60e51b815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201526c73656c662063616c6c61626c6560981b60648201526084016103e2565b600154604051637a99dc0160e11b81526001600160a01b0387811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af11580156108ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108d49190810190611c3e565b81519193509150806108eb578593505050506109db565b85600080805b848110156109d15786818151811061090b5761090b611d03565b6020026020010151925085818151811061092757610927611d03565b602002602001015191508184101561096d5760405162461bcd60e51b81526020600482015260096024820152681a5b9cdbdb1d995b9d60ba1b60448201526064016103e2565b61097b83838b61c350610f46565b604080516001600160a01b038581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a392819003926001016108f1565b5091955050505050505b949350505050565b600054600114610a055760405162461bcd60e51b81526004016103e290611aa0565b600260009081556001600160a01b03858116825260036020908152604080842087855290915290912080549091163314610a6f5760405162461bcd60e51b815260206004820152600b60248201526a27a7262cafa9a2a62622a960a91b60448201526064016103e2565b8054600160a01b90046001600160601b03168314610af1576001600160601b03831115610ad25760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f41534b5f505249434560781b60448201526064016103e2565b80546001600160a01b0316600160a01b6001600160601b038516021781555b60018101546001600160a01b03838116911614610b26576001810180546001600160a01b0319166001600160a01b0384161790555b83856001600160a01b03167f0c294c0a739f71ec000739c4763bc46f863f09ca23f26cd9b293094e13e1be1e836040516105fb9190611b03565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610be75760405162461bcd60e51b815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201526534b9ba3930b960d11b60648201526084016103e2565b610bf881636591fc0b60e11b611112565b610c6a5760405162461bcd60e51b815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e7465726661636500000060648201526084016103e2565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600054600114610cae5760405162461bcd60e51b81526004016103e290611aa0565b600260009081556001600160a01b03858116825260036020908152604080842087855282529283902083516060810185528154808516808352600160a01b9091046001600160601b031693820193909352600190910154909216928201929092529080610d4c5760405162461bcd60e51b815260206004820152600c60248201526b494e4143544956455f41534b60a01b60448201526064016103e2565b60208201516001600160601b0316848114610d9c5760405162461bcd60e51b815260206004820152601060248201526f4d5553545f4d415443485f505249434560801b60448201526064016103e2565b60408301516001600160a01b0385811690821614610df25760405162461bcd60e51b81526020600482015260136024820152724d5553545f4d415443485f43555252454e435960681b60448201526064016103e2565b610dfc8282611135565b6000610e0e89898585620493e06113c4565b509050610e1b8183611486565b9050610e2b84828461c350610f46565b604051630aed65f560e11b81526001600160a01b038a811660048301528581166024830152336044830152606482018a90527f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90608401600060405180830381600087803b158015610ea357600080fd5b505af1158015610eb7573d6000803e3d6000fd5b5050505087896001600160a01b03167f4f241d819b27a0bbc6cc9667ecdfc0bb171d27659515e844c3442b203848d1423388604051610ef7929190611d19565b60405180910390a35050506001600160a01b039095166000908152600360209081526040808320968352959052938420848155600190810180546001600160a01b031916905590935550505050565b821580610f5a57506001600160a01b038416155b15610f645761110c565b6001600160a01b0382166110f85782471015610fcc5760405162461bcd60e51b815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e6044820152601d60fa1b60648201526084016103e2565b6000811580610fda57505a82115b610fe45781610fe6565b5a5b90506000856001600160a01b0316858390604051600060405180830381858888f193505050503d8060008114611038576040519150601f19603f3d011682016040523d82523d6000602084013e61103d565b606091505b50509050806110f1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b1580156110a157600080fd5b505af11580156110b5573d6000803e3d6000fd5b506110f19350506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150889050876115d8565b505061110c565b61110c6001600160a01b03831685856115d8565b50505050565b600061111d8361162f565b801561112e575061112e8383611662565b9392505050565b6001600160a01b0381166111bd57813410156111b95760405162461bcd60e51b815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e74000000000060648201526084016103e2565b5050565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122a9190611d5f565b60405163d9fc4b6160e01b81526001600160a01b038581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b1580156112a557600080fd5b505af11580156112b9573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03851691506370a0823190602401602060405180830381865afa158015611304573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113289190611d5f565b9050806113358684611d8e565b146113bd5760405162461bcd60e51b815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201526b1958dd195908185b5bdd5b9d60a21b608482015260a4016103e2565b5050505050565b600080808315806113d457505a84115b6113de57836113e0565b5a5b60405163244a308b60e21b81526001600160a01b03808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f19350505050801561145e575060408051601f3d908101601f1916820190925261145b91810190611d5f565b60015b61146f57856000925092505061147c565b92506001915061147c9050565b9550959350505050565b6040516330da42fb60e11b81523060048201526024810183905260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa1580156114f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a9190611d5f565b90508061152a578391505061032c565b6040516386ab6fb960e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906386ab6fb9906024016040805180830381865afa158015611590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b49190611da6565b9150506115c581838661c350610f46565b6115cf8286611de7565b95945050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261162a90849061174b565b505050565b6000611642826301ffc9a760e01b611662565b801561032c575061165b826001600160e01b0319611662565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b03871690617530906116c9908690611dfe565b6000604051808303818686fa925050503d8060008114611705576040519150601f19603f3d011682016040523d82523d6000602084013e61170a565b606091505b5091509150602081511015611725576000935050505061032c565b8180156117415750808060200190518101906117419190611ae1565b9695505050505050565b60006117a0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661181d9092919063ffffffff16565b80519091501561162a57808060200190518101906117be9190611ae1565b61162a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103e2565b60606109db8484600085856001600160a01b0385163b61187f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e2565b600080866001600160a01b0316858760405161189b9190611dfe565b60006040518083038185875af1925050503d80600081146118d8576040519150601f19603f3d011682016040523d82523d6000602084013e6118dd565b606091505b50915091506118ed8282866118f8565b979650505050505050565b6060831561190757508161112e565b8251156119175782518084602001fd5b8160405162461bcd60e51b81526004016103e29190611987565b60006020828403121561194357600080fd5b81356001600160e01b03198116811461112e57600080fd5b60005b8381101561197657818101518382015260200161195e565b8381111561110c5750506000910152565b60208152600082518060208401526119a681604085016020870161195b565b601f01601f19169190910160400192915050565b6001600160a01b03811681146119cf57600080fd5b50565b600080600080608085870312156119e857600080fd5b84356119f3816119ba565b935060208501359250604085013591506060850135611a11816119ba565b939692955090935050565b60008060408385031215611a2f57600080fd5b8235611a3a816119ba565b946020939093013593505050565b600060208284031215611a5a57600080fd5b813561112e816119ba565b600181811c90821680611a7957607f821691505b60208210811415611a9a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b600060208284031215611ad657600080fd5b815161112e816119ba565b600060208284031215611af357600080fd5b8151801515811461112e57600080fd5b81546001600160a01b03808216835260a09190911c602083015260018301541660408201526060810161032c565b6060810161032c828480516001600160a01b0390811683526020808301516001600160601b03169084015260409182015116910152565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ba757611ba7611b68565b604052919050565b600067ffffffffffffffff821115611bc957611bc9611b68565b5060051b60200190565b600082601f830112611be457600080fd5b81516020611bf9611bf483611baf565b611b7e565b82815260059290921b84018101918181019086841115611c1857600080fd5b8286015b84811015611c335780518352918301918301611c1c565b509695505050505050565b60008060408385031215611c5157600080fd5b825167ffffffffffffffff80821115611c6957600080fd5b818501915085601f830112611c7d57600080fd5b81516020611c8d611bf483611baf565b82815260059290921b84018101918181019089841115611cac57600080fd5b948201945b83861015611cd3578551611cc4816119ba565b82529482019490820190611cb1565b91880151919650909350505080821115611cec57600080fd5b50611cf985828601611bd3565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03831681526080810161112e602083018480516001600160a01b0390811683526020808301516001600160601b03169084015260409182015116910152565b600060208284031215611d7157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611da157611da1611d78565b500190565b60008060408385031215611db957600080fd5b825161ffff81168114611dcb57600080fd5b6020840151909250611ddc816119ba565b809150509250929050565b600082821015611df957611df9611d78565b500390565b60008251611e1081846020870161195b565b919091019291505056fea26469706673582212205112420a8759292aab133c92e9a32dd7e28d023d0382f01da008ac29ab01f80a64736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c80638f9d3251116100645780638f9d3251146102205780639128c22c14610254578063b200753314610275578063b249bb3014610295578063d8606343146102b5578063f7cd1d9b146102c857600080fd5b806301ffc9a7146100ac57806306fdde03146100e15780632b20e397146101035780632b9f663e1461014f57806340b8074614610171578063418f065614610191575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004611931565b6102fc565b60405190151581526020015b60405180910390f35b3480156100ed57600080fd5b506100f6610332565b6040516100d89190611987565b34801561010f57600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d8565b34801561015b57600080fd5b5061016f61016a3660046119d2565b6103c0565b005b34801561017d57600080fd5b5061016f61018c366004611a1c565b61060f565b34801561019d57600080fd5b506101ee6101ac366004611a1c565b6003602090815260009283526040808420909152908252902080546001909101546001600160a01b0380831692600160a01b90046001600160601b0316911683565b604080516001600160a01b0394851681526001600160601b0390931660208401529216918101919091526060016100d8565b34801561022c57600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b6102676102623660046119d2565b6107e7565b6040519081526020016100d8565b34801561028157600080fd5b5061016f6102903660046119d2565b6109e3565b3480156102a157600080fd5b5061016f6102b0366004611a48565b610b60565b61016f6102c33660046119d2565b610c8c565b3480156102d457600080fd5b506101377f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b031982166228eee160e31b148061032c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6002805461033f90611a65565b80601f016020809104026020016040519081016040528092919081815260200182805461036b90611a65565b80156103b85780601f1061038d576101008083540402835291602001916103b8565b820191906000526020600020905b81548152906001019060200180831161039b57829003601f168201915b505050505081565b6000546001146103eb5760405162461bcd60e51b81526004016103e290611aa0565b60405180910390fd5b600260009081556040516331a9108f60e11b8152600481018590526001600160a01b03861690636352211e90602401602060405180830381865afa158015610437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190611ac4565b9050336001600160a01b03821614806104df575060405163e985e9c560e01b81526001600160a01b03828116600483015233602483015286169063e985e9c590604401602060405180830381865afa1580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df9190611ae1565b61052b5760405162461bcd60e51b815260206004820152601c60248201527f4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f520000000060448201526064016103e2565b6001600160601b038311156105765760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f41534b5f505249434560781b60448201526064016103e2565b6001600160a01b03858116600081815260036020908152604080832089845290915290819020848416600160a01b6001600160601b038916021781556001810180546001600160a01b031916948716949094179093555186927fa5bd647f34fcbc80ec242a9c943441939ba9c241c90515e6c49bd8c3207a3147916105fb9190611b03565b60405180910390a350506001600055505050565b6000546001146106315760405162461bcd60e51b81526004016103e290611aa0565b600260009081556001600160a01b03838116825260036020908152604080842085855282529283902083516060810185528154808516808352600160a01b9091046001600160601b031693820193909352600190910154909216928201929092529033148061071957506040516331a9108f60e11b8152600481018390526001600160a01b03841690636352211e90602401602060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611ac4565b6001600160a01b0316336001600160a01b0316145b6107655760405162461bcd60e51b815260206004820152601a60248201527f4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e455200000000000060448201526064016103e2565b81836001600160a01b03167ffa3f57ecc148dff66af5b7988fd23bb7d42b7c6cf1ac1f4c611980667d8880078360405161079f9190611b31565b60405180910390a3506001600160a01b039091166000908152600360209081526040808320938352929052908120818155600190810180546001600160a01b03191690559055565b600033301461084e5760405162461bcd60e51b815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201526c73656c662063616c6c61626c6560981b60648201526084016103e2565b600154604051637a99dc0160e11b81526001600160a01b0387811660048301526024820187905260448201869052600092839291169063f533b802906064016000604051808303816000875af11580156108ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108d49190810190611c3e565b81519193509150806108eb578593505050506109db565b85600080805b848110156109d15786818151811061090b5761090b611d03565b6020026020010151925085818151811061092757610927611d03565b602002602001015191508184101561096d5760405162461bcd60e51b81526020600482015260096024820152681a5b9cdbdb1d995b9d60ba1b60448201526064016103e2565b61097b83838b61c350610f46565b604080516001600160a01b038581168252602082018590528d92908f16917f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c50910160405180910390a392819003926001016108f1565b5091955050505050505b949350505050565b600054600114610a055760405162461bcd60e51b81526004016103e290611aa0565b600260009081556001600160a01b03858116825260036020908152604080842087855290915290912080549091163314610a6f5760405162461bcd60e51b815260206004820152600b60248201526a27a7262cafa9a2a62622a960a91b60448201526064016103e2565b8054600160a01b90046001600160601b03168314610af1576001600160601b03831115610ad25760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f41534b5f505249434560781b60448201526064016103e2565b80546001600160a01b0316600160a01b6001600160601b038516021781555b60018101546001600160a01b03838116911614610b26576001810180546001600160a01b0319166001600160a01b0384161790555b83856001600160a01b03167f0c294c0a739f71ec000739c4763bc46f863f09ca23f26cd9b293094e13e1be1e836040516105fb9190611b03565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610be75760405162461bcd60e51b815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201526534b9ba3930b960d11b60648201526084016103e2565b610bf881636591fc0b60e11b611112565b610c6a5760405162461bcd60e51b815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e7465726661636500000060648201526084016103e2565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600054600114610cae5760405162461bcd60e51b81526004016103e290611aa0565b600260009081556001600160a01b03858116825260036020908152604080842087855282529283902083516060810185528154808516808352600160a01b9091046001600160601b031693820193909352600190910154909216928201929092529080610d4c5760405162461bcd60e51b815260206004820152600c60248201526b494e4143544956455f41534b60a01b60448201526064016103e2565b60208201516001600160601b0316848114610d9c5760405162461bcd60e51b815260206004820152601060248201526f4d5553545f4d415443485f505249434560801b60448201526064016103e2565b60408301516001600160a01b0385811690821614610df25760405162461bcd60e51b81526020600482015260136024820152724d5553545f4d415443485f43555252454e435960681b60448201526064016103e2565b610dfc8282611135565b6000610e0e89898585620493e06113c4565b509050610e1b8183611486565b9050610e2b84828461c350610f46565b604051630aed65f560e11b81526001600160a01b038a811660048301528581166024830152336044830152606482018a90527f000000000000000000000000000000000000000000000000000000000000000016906315dacbea90608401600060405180830381600087803b158015610ea357600080fd5b505af1158015610eb7573d6000803e3d6000fd5b5050505087896001600160a01b03167f4f241d819b27a0bbc6cc9667ecdfc0bb171d27659515e844c3442b203848d1423388604051610ef7929190611d19565b60405180910390a35050506001600160a01b039095166000908152600360209081526040808320968352959052938420848155600190810180546001600160a01b031916905590935550505050565b821580610f5a57506001600160a01b038416155b15610f645761110c565b6001600160a01b0382166110f85782471015610fcc5760405162461bcd60e51b815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e6044820152601d60fa1b60648201526084016103e2565b6000811580610fda57505a82115b610fe45781610fe6565b5a5b90506000856001600160a01b0316858390604051600060405180830381858888f193505050503d8060008114611038576040519150601f19603f3d011682016040523d82523d6000602084013e61103d565b606091505b50509050806110f1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b1580156110a157600080fd5b505af11580156110b5573d6000803e3d6000fd5b506110f19350506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150889050876115d8565b505061110c565b61110c6001600160a01b03831685856115d8565b50505050565b600061111d8361162f565b801561112e575061112e8383611662565b9392505050565b6001600160a01b0381166111bd57813410156111b95760405162461bcd60e51b815260206004820152603b60248201527f5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c7560448201527f65206c657373207468616e20657870656374656420616d6f756e74000000000060648201526084016103e2565b5050565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122a9190611d5f565b60405163d9fc4b6160e01b81526001600160a01b038581166004830152336024830152306044830152606482018790529192507f00000000000000000000000000000000000000000000000000000000000000009091169063d9fc4b6190608401600060405180830381600087803b1580156112a557600080fd5b505af11580156112b9573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03851691506370a0823190602401602060405180830381865afa158015611304573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113289190611d5f565b9050806113358684611d8e565b146113bd5760405162461bcd60e51b815260206004820152604c60248201527f5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e20747260448201527f616e736665722063616c6c20646964206e6f74207472616e736665722065787060648201526b1958dd195908185b5bdd5b9d60a21b608482015260a4016103e2565b5050505050565b600080808315806113d457505a84115b6113de57836113e0565b5a5b60405163244a308b60e21b81526001600160a01b03808b166004830152602482018a905260448201899052871660648201529091503090639128c22c90839060840160206040518083038160008887f19350505050801561145e575060408051601f3d908101601f1916820190925261145b91810190611d5f565b60015b61146f57856000925092505061147c565b92506001915061147c9050565b9550959350505050565b6040516330da42fb60e11b81523060048201526024810183905260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906361b485f690604401602060405180830381865afa1580156114f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a9190611d5f565b90508061152a578391505061032c565b6040516386ab6fb960e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906386ab6fb9906024016040805180830381865afa158015611590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b49190611da6565b9150506115c581838661c350610f46565b6115cf8286611de7565b95945050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261162a90849061174b565b505050565b6000611642826301ffc9a760e01b611662565b801561032c575061165b826001600160e01b0319611662565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b03871690617530906116c9908690611dfe565b6000604051808303818686fa925050503d8060008114611705576040519150601f19603f3d011682016040523d82523d6000602084013e61170a565b606091505b5091509150602081511015611725576000935050505061032c565b8180156117415750808060200190518101906117419190611ae1565b9695505050505050565b60006117a0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661181d9092919063ffffffff16565b80519091501561162a57808060200190518101906117be9190611ae1565b61162a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103e2565b60606109db8484600085856001600160a01b0385163b61187f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e2565b600080866001600160a01b0316858760405161189b9190611dfe565b60006040518083038185875af1925050503d80600081146118d8576040519150601f19603f3d011682016040523d82523d6000602084013e6118dd565b606091505b50915091506118ed8282866118f8565b979650505050505050565b6060831561190757508161112e565b8251156119175782518084602001fd5b8160405162461bcd60e51b81526004016103e29190611987565b60006020828403121561194357600080fd5b81356001600160e01b03198116811461112e57600080fd5b60005b8381101561197657818101518382015260200161195e565b8381111561110c5750506000910152565b60208152600082518060208401526119a681604085016020870161195b565b601f01601f19169190910160400192915050565b6001600160a01b03811681146119cf57600080fd5b50565b600080600080608085870312156119e857600080fd5b84356119f3816119ba565b935060208501359250604085013591506060850135611a11816119ba565b939692955090935050565b60008060408385031215611a2f57600080fd5b8235611a3a816119ba565b946020939093013593505050565b600060208284031215611a5a57600080fd5b813561112e816119ba565b600181811c90821680611a7957607f821691505b60208210811415611a9a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152695245454e5452414e435960b01b604082015260600190565b600060208284031215611ad657600080fd5b815161112e816119ba565b600060208284031215611af357600080fd5b8151801515811461112e57600080fd5b81546001600160a01b03808216835260a09190911c602083015260018301541660408201526060810161032c565b6060810161032c828480516001600160a01b0390811683526020808301516001600160601b03169084015260409182015116910152565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ba757611ba7611b68565b604052919050565b600067ffffffffffffffff821115611bc957611bc9611b68565b5060051b60200190565b600082601f830112611be457600080fd5b81516020611bf9611bf483611baf565b611b7e565b82815260059290921b84018101918181019086841115611c1857600080fd5b8286015b84811015611c335780518352918301918301611c1c565b509695505050505050565b60008060408385031215611c5157600080fd5b825167ffffffffffffffff80821115611c6957600080fd5b818501915085601f830112611c7d57600080fd5b81516020611c8d611bf483611baf565b82815260059290921b84018101918181019089841115611cac57600080fd5b948201945b83861015611cd3578551611cc4816119ba565b82529482019490820190611cb1565b91880151919650909350505080821115611cec57600080fd5b50611cf985828601611bd3565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03831681526080810161112e602083018480516001600160a01b0390811683526020808301516001600160601b03169084015260409182015116910152565b600060208284031215611d7157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611da157611da1611d78565b500190565b60008060408385031215611db957600080fd5b825161ffff81168114611dcb57600080fd5b6020840151909250611ddc816119ba565b809150509250929050565b600082821015611df957611df9611d78565b500390565b60008251611e1081846020870161195b565b919091019291505056fea26469706673582212205112420a8759292aab133c92e9a32dd7e28d023d0382f01da008ac29ab01f80a64736f6c634300080a0033",
  "immutableReferences": {
    "8147": [
      {
        "length": 32,
        "start": 277
      },
      {
        "length": 32,
        "start": 2923
      }
    ],
    "8151": [
      {
        "length": 32,
        "start": 5295
      },
      {
        "length": 32,
        "start": 5442
      }
    ],
    "8470": [
      {
        "length": 32,
        "start": 562
      },
      {
        "length": 32,
        "start": 4703
      }
    ],
    "8607": [
      {
        "length": 32,
        "start": 4168
      },
      {
        "length": 32,
        "start": 4294
      }
    ],
    "8775": [
      {
        "length": 32,
        "start": 730
      },
      {
        "length": 32,
        "start": 3679
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1864:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:80"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:80"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:80",
                "type": ""
              }
            ],
            "src": "14:131:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "299:640:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "346:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "355:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "358:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "348:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "348:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "348:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "320:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "329:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "316:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "316:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "341:3:80",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "312:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "312:33:80"
                  },
                  "nodeType": "YulIf",
                  "src": "309:53:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "371:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "390:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "384:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "375:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "434:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "409:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "409:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "409:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "449:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "459:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "449:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "473:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "498:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "509:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "494:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "494:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "488:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "477:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "547:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "522:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "522:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "522:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "564:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "574:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "564:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "590:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "615:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "626:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "611:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "611:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "605:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "605:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "594:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "664:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "639:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "639:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "639:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "681:17:80",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "691:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "707:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "732:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "743:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "728:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "728:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "722:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "722:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "711:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "781:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "756:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "756:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "798:17:80",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "808:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "798:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "824:41:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "849:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "860:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "845:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "845:19:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "839:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:26:80"
                  },
                  "variables": [
                    {
                      "name": "value_4",
                      "nodeType": "YulTypedName",
                      "src": "828:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_4",
                        "nodeType": "YulIdentifier",
                        "src": "899:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "874:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "874:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "874:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "916:17:80",
                  "value": {
                    "name": "value_4",
                    "nodeType": "YulIdentifier",
                    "src": "926:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "916:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "233:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "244:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "256:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "264:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "272:6:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "280:6:80",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "288:6:80",
                "type": ""
              }
            ],
            "src": "150:789:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1051:170:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1097:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1106:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1109:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1099:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1099:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1099:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1072:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1081:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1068:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1068:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1093:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1064:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1064:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1061:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1122:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1141:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1135:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1126:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1185:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1160:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1160:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1160:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1200:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1210:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ZoraModuleManager_$6707_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1017:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1028:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1040:6:80",
                "type": ""
              }
            ],
            "src": "944:277:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1307:170:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1353:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1362:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1365:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1355:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1355:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1355:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1328:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1337:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1324:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1324:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1349:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1320:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1320:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1317:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1378:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1397:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1391:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1391:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1382:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1441:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1416:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1416:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1456:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1466:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1456:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1273:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1284:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1296:6:80",
                "type": ""
              }
            ],
            "src": "1226:251:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1537:325:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1547:22:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1561:1:80",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1564:4:80"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1557:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1557:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1547:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1578:38:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1608:4:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1614:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1604:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:12:80"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1582:18:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1655:31:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1657:27:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1671:6:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1679:4:80",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1667:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1667:17:80"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1657:6:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1635:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1628:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:26:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1625:61:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1745:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1766:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1773:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1778:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1769:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1769:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1759:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1759:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1759:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1810:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1813:4:80",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1803:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1803:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1803:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1838:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1841:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1831:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1831:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1831:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1701:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1724:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1732:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1721:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:14:80"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1698:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1698:38:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1695:161:80"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1517:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1526:6:80",
                "type": ""
              }
            ],
            "src": "1482:380:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        let value_4 := mload(add(headStart, 128))\n        validator_revert_address(value_4)\n        value4 := value_4\n    }\n    function abi_decode_tuple_t_contract$_ZoraModuleManager_$6707_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:19282:80",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:80",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:80",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:80",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:80"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:80",
                "type": ""
              }
            ],
            "src": "14:286:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:80"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:80",
                "type": ""
              }
            ],
            "src": "305:187:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "550:205:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "560:10:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "569:1:80",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "564:1:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "629:63:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "654:3:80"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "659:1:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "650:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "650:11:80"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "673:3:80"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "678:1:80"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "669:3:80"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "669:11:80"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "663:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "663:18:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "643:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "643:39:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "643:39:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "590:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "593:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "587:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "587:13:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "601:19:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "603:15:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "612:1:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "615:2:80",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "608:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "608:10:80"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "603:1:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "583:3:80",
                    "statements": []
                  },
                  "src": "579:113:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "718:31:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "731:3:80"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "736:6:80"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "727:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "727:16:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "745:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "720:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "720:27:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "720:27:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "707:1:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "710:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "704:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:13:80"
                  },
                  "nodeType": "YulIf",
                  "src": "701:48:80"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "528:3:80",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "533:3:80",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "538:6:80",
                "type": ""
              }
            ],
            "src": "497:258:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "881:262:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "898:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "909:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "891:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "891:21:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "921:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "941:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "935:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:13:80"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "925:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "968:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "979:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "964:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "964:18:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "984:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "957:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "957:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1034:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1022:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1022:15:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1043:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1054:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1039:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1039:18:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1059:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1000:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:66:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1000:66:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1075:62:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1091:9:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1110:6:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1118:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1106:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1106:15:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1127:2:80",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1123:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1123:7:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1102:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1102:29:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1087:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1087:45:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1134:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1083:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:54:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1075:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "850:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "861:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "872:4:80",
                "type": ""
              }
            ],
            "src": "760:383:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1249:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1259:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1271:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1282:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1267:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1267:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1259:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1301:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1316:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1332:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1337:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1328:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1328:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1341:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1324:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1324:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1312:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1312:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1294:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1294:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1294:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1218:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1229:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1240:4:80",
                "type": ""
              }
            ],
            "src": "1148:203:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1401:86:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1465:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1474:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1477:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1467:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1467:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1467:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1424:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1435:5:80"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1450:3:80",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1455:1:80",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1446:3:80"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1446:11:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1459:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1442:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1442:19:80"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1431:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1431:31:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1421:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1421:42:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1414:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1414:50:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1411:70:80"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1390:5:80",
                "type": ""
              }
            ],
            "src": "1356:131:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1613:404:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1660:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1669:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1672:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1662:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1662:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1662:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1634:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1643:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1630:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1630:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1655:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1626:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:33:80"
                  },
                  "nodeType": "YulIf",
                  "src": "1623:53:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1685:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1711:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1698:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1698:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1689:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1755:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1730:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1730:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1730:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1770:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1780:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1770:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1794:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1821:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1832:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1817:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1817:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1804:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1804:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1794:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1845:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1872:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1883:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1868:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1855:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1845:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1896:47:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1928:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1939:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1924:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1911:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:32:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1900:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1977:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1952:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1952:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1952:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1994:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2004:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1994:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1555:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1566:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1578:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1586:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1594:6:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1602:6:80",
                "type": ""
              }
            ],
            "src": "1492:525:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2109:228:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2155:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2164:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2167:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2157:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2157:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2157:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2130:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2139:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2126:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2126:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2151:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2122:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2122:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "2119:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2180:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2206:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2193:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2193:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2184:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2250:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2225:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2225:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2225:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2265:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2275:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2265:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2289:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2316:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2327:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2312:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2312:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2299:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2299:32:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2289:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2067:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2078:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2090:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2098:6:80",
                "type": ""
              }
            ],
            "src": "2022:315:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2497:251:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2507:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2519:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2530:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2515:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2515:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2507:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2542:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2560:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2565:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2556:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2556:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2569:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2552:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2552:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2546:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2587:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2602:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2610:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2598:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2598:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2580:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2580:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2634:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2645:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2630:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2630:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2654:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2662:26:80",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2650:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2650:39:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2623:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2623:67:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2623:67:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2710:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2721:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2706:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2706:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2730:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2738:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2726:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2726:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2699:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2699:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2699:43:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint96_t_address__to_t_address_t_uint96_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2450:9:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2461:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2469:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2477:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2488:4:80",
                "type": ""
              }
            ],
            "src": "2342:406:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2883:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2893:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2905:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2916:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2901:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2893:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2935:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2950:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2966:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2971:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2962:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2962:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2975:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2958:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2958:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2946:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2946:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2928:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2928:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2928:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20TransferHelper_$16267__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2852:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2863:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2874:4:80",
                "type": ""
              }
            ],
            "src": "2753:232:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3091:76:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3101:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3113:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3124:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3109:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3109:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3101:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3143:9:80"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3154:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3136:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:25:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3136:25:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3060:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3071:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3082:4:80",
                "type": ""
              }
            ],
            "src": "2990:177:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3242:177:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3288:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3297:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3300:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3290:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3290:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3290:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3263:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3272:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3259:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3259:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3284:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3255:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3255:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3252:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3313:36:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3339:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3326:12:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:23:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3317:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3383:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3358:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3358:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3358:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3398:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3408:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3398:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3208:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3219:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3231:6:80",
                "type": ""
              }
            ],
            "src": "3172:247:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3555:102:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3565:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3577:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3588:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3573:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3573:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3565:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3607:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3622:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3638:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3643:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3634:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3634:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3647:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3630:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3630:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3618:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3618:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3600:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3600:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3600:51:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC721TransferHelper_$16334__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3524:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3535:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3546:4:80",
                "type": ""
              }
            ],
            "src": "3424:233:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3717:325:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3727:22:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3741:1:80",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3744:4:80"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3737:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3737:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3727:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3758:38:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3788:4:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3794:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3784:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3784:12:80"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3762:18:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3835:31:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3837:27:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3851:6:80"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3859:4:80",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3847:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3847:17:80"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3837:6:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3815:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3808:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3808:26:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3805:61:80"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3925:111:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3946:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3953:3:80",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3958:10:80",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3949:3:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3949:20:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3939:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3939:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3939:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3990:1:80",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3993:4:80",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3983:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3983:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3983:15:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4018:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4021:4:80",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4011:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4011:15:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4011:15:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3881:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3904:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3912:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3901:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3901:14:80"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3878:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3878:38:80"
                  },
                  "nodeType": "YulIf",
                  "src": "3875:161:80"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3697:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3706:6:80",
                "type": ""
              }
            ],
            "src": "3662:380:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4221:160:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4238:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4249:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4231:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4231:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4231:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4272:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4283:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4268:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4268:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4288:2:80",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4261:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4261:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4261:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4311:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4322:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4307:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4307:18:80"
                      },
                      {
                        "hexValue": "5245454e5452414e4359",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4327:12:80",
                        "type": "",
                        "value": "REENTRANCY"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4300:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4300:40:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4300:40:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4349:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4361:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4372:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4357:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4357:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4349:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_180a23d5434c537ca84b1e47f534d18e25bd055e02a65ce20bae4afd9c835f59__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4198:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4212:4:80",
                "type": ""
              }
            ],
            "src": "4047:334:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4467:170:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4513:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4522:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4525:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4515:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4515:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4515:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4488:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4497:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4484:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4484:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4509:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4480:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4480:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "4477:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4538:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4557:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4551:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4551:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4542:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4601:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4576:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4576:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4576:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4616:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4626:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4616:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4433:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4444:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4456:6:80",
                "type": ""
              }
            ],
            "src": "4386:251:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4771:175:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4781:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4793:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4804:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4789:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4789:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4781:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4816:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4834:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4839:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4830:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4830:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4843:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4826:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4826:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4820:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4861:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4876:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4884:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4872:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4872:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4854:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4854:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4854:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4908:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4919:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4904:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4904:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4928:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4936:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4924:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4924:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4897:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4897:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4897:43:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4732:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4743:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4751:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4762:4:80",
                "type": ""
              }
            ],
            "src": "4642:304:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5029:199:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5075:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5084:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5087:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5077:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5077:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5077:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5050:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5059:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5046:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5046:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5071:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5042:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5042:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "5039:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5100:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5119:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5113:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5113:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5104:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5182:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5191:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5194:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5184:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5184:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5184:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5151:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5172:5:80"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5165:6:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5165:13:80"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5158:6:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5158:21:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5148:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5148:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5141:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5141:40:80"
                  },
                  "nodeType": "YulIf",
                  "src": "5138:60:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5207:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5217:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5207:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4995:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5006:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5018:6:80",
                "type": ""
              }
            ],
            "src": "4951:277:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5407:178:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5424:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5435:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5417:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5417:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5417:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5458:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5469:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5454:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5454:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5474:2:80",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5447:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5447:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5447:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5497:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5508:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5493:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5493:18:80"
                      },
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5513:30:80",
                        "type": "",
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5486:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5486:58:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5486:58:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5553:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5565:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5576:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5561:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5561:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5553:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5384:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5398:4:80",
                "type": ""
              }
            ],
            "src": "5233:352:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5764:167:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5781:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5792:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5774:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5774:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5774:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5815:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5826:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5811:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5811:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5831:2:80",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5804:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5804:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5854:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5865:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5850:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5850:18:80"
                      },
                      {
                        "hexValue": "494e56414c49445f41534b5f5052494345",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5870:19:80",
                        "type": "",
                        "value": "INVALID_ASK_PRICE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5843:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5843:47:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5843:47:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5899:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5911:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5922:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5907:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5907:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5899:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5741:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5755:4:80",
                "type": ""
              }
            ],
            "src": "5590:341:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5991:240:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6001:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6024:5:80"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "6018:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6018:12:80"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "6005:9:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6039:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6057:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6062:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6053:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6053:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6066:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6049:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6049:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6043:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6084:3:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "6093:9:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6104:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6089:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6089:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6077:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6077:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6128:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6133:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6124:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6124:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6144:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "name": "slotValue",
                            "nodeType": "YulIdentifier",
                            "src": "6149:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "6140:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6140:19:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6117:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6117:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6117:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6180:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6185:4:80",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6176:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6176:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6206:5:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6213:4:80",
                                    "type": "",
                                    "value": "0x01"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6202:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6202:16:80"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "6196:5:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6196:23:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6221:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6192:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6192:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6169:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6169:56:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6169:56:80"
                }
              ]
            },
            "name": "abi_encode_struct_Ask_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5975:5:80",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5982:3:80",
                "type": ""
              }
            ],
            "src": "5936:295:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6376:99:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6386:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6398:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6409:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6394:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6394:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6386:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6451:6:80"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6459:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Ask_storage",
                      "nodeType": "YulIdentifier",
                      "src": "6421:29:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6421:48:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6421:48:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Ask_$8841_storage__to_t_struct$_Ask_$8841_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6345:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6356:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6367:4:80",
                "type": ""
              }
            ],
            "src": "6236:239:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6654:176:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6671:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6682:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6664:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6664:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6664:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6705:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6716:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6701:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6701:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6721:2:80",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6694:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6694:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6694:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6744:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6755:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6740:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6740:18:80"
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6760:28:80",
                        "type": "",
                        "value": "ONLY_SELLER_OR_TOKEN_OWNER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6733:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6733:56:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6733:56:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6798:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6810:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6821:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6806:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6806:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6798:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6631:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6645:4:80",
                "type": ""
              }
            ],
            "src": "6480:350:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6882:242:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6892:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6910:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6915:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6906:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6906:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6919:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6902:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6902:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6896:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6937:3:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6952:5:80"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "6946:5:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6946:12:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6960:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6942:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6942:21:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6930:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6930:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6930:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6984:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6989:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6980:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6980:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7010:5:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7017:4:80",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7006:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7006:16:80"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "7000:5:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7000:23:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7025:26:80",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6996:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6996:56:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6973:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6973:80:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6973:80:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7073:3:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7078:4:80",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7069:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7069:14:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7099:5:80"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7106:4:80",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7095:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7095:16:80"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "7089:5:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7089:23:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7114:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7085:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7085:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7062:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7062:56:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7062:56:80"
                }
              ]
            },
            "name": "abi_encode_struct_Ask",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6866:5:80",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6873:3:80",
                "type": ""
              }
            ],
            "src": "6835:289:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7272:91:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7282:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7294:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7305:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7290:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7290:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7282:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7339:6:80"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7347:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Ask",
                      "nodeType": "YulIdentifier",
                      "src": "7317:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7317:40:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7317:40:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Ask_$8841_memory_ptr__to_t_struct$_Ask_$8841_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7241:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7252:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7263:4:80",
                "type": ""
              }
            ],
            "src": "7129:234:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7542:235:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7559:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7570:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7552:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7552:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7552:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7593:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7604:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7589:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7589:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7609:2:80",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7582:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7582:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7582:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7632:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7643:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7628:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7628:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c7920",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7648:34:80",
                        "type": "",
                        "value": "_handleRoyaltyEnginePayout only "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7621:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7621:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7621:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7703:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7714:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7699:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7699:18:80"
                      },
                      {
                        "hexValue": "73656c662063616c6c61626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7719:15:80",
                        "type": "",
                        "value": "self callable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7692:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7692:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7692:43:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7744:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7756:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7767:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7752:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7752:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7744:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_444d058793ff79cc791225f4d17e32ac57d05ee9a18813e601615cfd6c77a5e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7519:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7533:4:80",
                "type": ""
              }
            ],
            "src": "7368:409:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7939:188:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7949:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7961:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7972:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7957:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7957:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7949:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7991:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8006:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8022:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8027:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8018:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8018:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8031:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8014:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8014:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8002:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8002:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7984:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7984:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7984:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8055:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8066:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8051:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8051:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8071:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8044:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8044:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8044:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8098:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8109:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8094:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8094:18:80"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8114:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8087:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8087:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8087:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7892:9:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7903:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7911:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7919:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7930:4:80",
                "type": ""
              }
            ],
            "src": "7782:345:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8164:95:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8181:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8188:3:80",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8193:10:80",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8184:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8184:20:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8174:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8174:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8174:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8221:1:80",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8224:4:80",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8214:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8214:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8214:15:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8245:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8248:4:80",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8238:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8238:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8238:15:80"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "8132:127:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8309:230:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8319:19:80",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8335:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8329:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8329:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "8319:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8347:58:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "8369:6:80"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "8385:4:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8391:2:80",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8381:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8381:13:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8400:2:80",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "8396:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8396:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8377:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8377:27:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8365:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8365:40:80"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "8351:10:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8480:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8482:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8482:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8482:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8423:10:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8435:18:80",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8420:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8420:34:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8459:10:80"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8471:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8456:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8456:22:80"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8417:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8417:62:80"
                  },
                  "nodeType": "YulIf",
                  "src": "8414:88:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8518:2:80",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8522:10:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8511:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8511:22:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8511:22:80"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "8289:4:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8298:6:80",
                "type": ""
              }
            ],
            "src": "8264:275:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8621:114:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8665:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8667:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8667:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8667:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8637:6:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8645:18:80",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8634:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8634:30:80"
                  },
                  "nodeType": "YulIf",
                  "src": "8631:56:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8696:33:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8712:1:80",
                            "type": "",
                            "value": "5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8715:6:80"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8708:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8708:14:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8724:4:80",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8704:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8704:25:80"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8696:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_array_address_payable_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8601:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "8612:4:80",
                "type": ""
              }
            ],
            "src": "8544:191:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8815:592:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8864:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8873:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8876:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8866:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8866:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8866:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8843:6:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8851:4:80",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8839:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8839:17:80"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "8858:3:80"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8835:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8835:27:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8828:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8828:35:80"
                  },
                  "nodeType": "YulIf",
                  "src": "8825:55:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8889:23:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8905:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8899:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8899:13:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8893:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8921:14:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8931:4:80",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "8925:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8944:79:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9019:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_payable_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "8971:47:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8971:51:80"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8955:15:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8955:68:80"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "8948:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9032:16:80",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "9045:3:80"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "9036:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "9064:3:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9069:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9057:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9057:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9057:15:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9081:19:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "9092:3:80"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "9097:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9088:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9088:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "9081:3:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9109:46:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9131:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9143:1:80",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "9146:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "9139:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9139:10:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9127:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9127:23:80"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "9152:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9123:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9123:32:80"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "9113:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9183:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9192:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9195:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9185:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9185:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9185:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9170:6:80"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "9178:3:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9167:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9167:15:80"
                  },
                  "nodeType": "YulIf",
                  "src": "9164:35:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9208:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9223:6:80"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "9231:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9219:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9219:15:80"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "9212:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9299:79:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "9320:3:80"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "9331:3:80"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9325:5:80"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9325:10:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9313:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9313:23:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9313:23:80"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9349:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "9360:3:80"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "9365:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9356:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9356:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "9349:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "9254:3:80"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9259:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9251:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9251:15:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9267:23:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9269:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "9280:3:80"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "9285:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9276:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9276:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "9269:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9247:3:80",
                    "statements": []
                  },
                  "src": "9243:135:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9387:14:80",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "9396:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "9387:5:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_array_uint256_dyn_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8789:6:80",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8797:3:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "8805:5:80",
                "type": ""
              }
            ],
            "src": "8740:667:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9568:1069:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9614:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9623:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9626:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9616:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9616:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9616:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9589:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9598:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9585:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9585:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9610:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9581:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9581:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "9578:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9639:30:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9659:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9653:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9653:16:80"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "9643:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9678:28:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9688:18:80",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9682:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9733:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9742:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9745:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9735:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9735:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9735:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9721:6:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9729:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9718:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9718:14:80"
                  },
                  "nodeType": "YulIf",
                  "src": "9715:34:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9758:32:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9772:9:80"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9783:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9768:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9768:22:80"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "9762:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9838:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9847:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9850:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9840:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9840:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9840:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9817:2:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9821:4:80",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9813:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9813:13:80"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9828:7:80"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "9809:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9809:27:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9802:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9802:35:80"
                  },
                  "nodeType": "YulIf",
                  "src": "9799:55:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9863:19:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "9879:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9873:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9873:9:80"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "9867:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9891:14:80",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9901:4:80",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "9895:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9914:79:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "9989:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_payable_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "9941:47:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9941:51:80"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9925:15:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9925:68:80"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "9918:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10002:16:80",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "10015:3:80"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "10006:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "10034:3:80"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "10039:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10027:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10027:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10027:15:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10051:19:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "10062:3:80"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "10067:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10058:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10058:12:80"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "10051:3:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10079:42:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "10101:2:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10109:1:80",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "10112:2:80"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10105:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10105:10:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10097:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10097:19:80"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "10118:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10093:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10093:28:80"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "10083:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10153:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10162:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10165:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10155:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10155:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10155:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10136:6:80"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10144:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10133:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10133:19:80"
                  },
                  "nodeType": "YulIf",
                  "src": "10130:39:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10178:22:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "10193:2:80"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "10197:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10189:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10189:11:80"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "10182:3:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10265:154:80",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10279:23:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "10298:3:80"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10292:5:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10292:10:80"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10283:5:80",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10340:5:80"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_address",
                            "nodeType": "YulIdentifier",
                            "src": "10315:24:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10315:31:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10315:31:80"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "10366:3:80"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10371:5:80"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10359:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10359:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10359:18:80"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10390:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "10401:3:80"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "10406:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10397:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10397:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "10390:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "10220:3:80"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10225:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10217:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10217:15:80"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10233:23:80",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10235:19:80",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "10246:3:80"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "10251:2:80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10242:3:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10242:12:80"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "10235:3:80"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10213:3:80",
                    "statements": []
                  },
                  "src": "10209:210:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10428:15:80",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "10438:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10428:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10452:41:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10478:9:80"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "10489:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10474:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10474:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10468:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10468:25:80"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "10456:8:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10522:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10531:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10534:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10524:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10524:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10524:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "10508:8:80"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10518:2:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10505:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10505:16:80"
                  },
                  "nodeType": "YulIf",
                  "src": "10502:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10547:84:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10601:9:80"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "10612:8:80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10597:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10597:24:80"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "10623:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_uint256_dyn_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "10557:39:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10557:74:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "10547:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9526:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9537:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9549:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9557:6:80",
                "type": ""
              }
            ],
            "src": "9412:1225:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10674:95:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10691:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10698:3:80",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10703:10:80",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10694:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10694:20:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10684:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10684:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10684:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10731:1:80",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10734:4:80",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10724:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10724:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10724:15:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10755:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10758:4:80",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10748:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10748:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10748:15:80"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10642:127:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10948:158:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10965:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10976:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10958:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10958:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10958:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10999:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11010:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10995:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10995:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11015:1:80",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10988:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10988:29:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10988:29:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11037:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11048:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11033:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11033:18:80"
                      },
                      {
                        "hexValue": "696e736f6c76656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11053:11:80",
                        "type": "",
                        "value": "insolvent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11026:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11026:39:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11026:39:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11074:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11086:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11097:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11082:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11082:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11074:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_081e2fa72c4e34011d3656bfe84745bd16318a4f9c6c6323843d390046b89502__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10925:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10939:4:80",
                "type": ""
              }
            ],
            "src": "10774:332:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11240:145:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11250:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11262:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11273:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11258:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11258:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11250:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11292:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11307:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11323:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11328:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11319:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11319:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11332:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11315:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11315:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11303:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11303:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11285:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11285:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11285:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11356:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11367:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11352:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11352:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11372:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11345:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11345:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11345:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11201:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11212:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11220:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11231:4:80",
                "type": ""
              }
            ],
            "src": "11111:274:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11564:161:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11581:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11592:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11574:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11574:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11574:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11615:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11626:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11611:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11611:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11631:2:80",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11604:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11604:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11604:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11654:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11665:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11650:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11650:18:80"
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c4552",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11670:13:80",
                        "type": "",
                        "value": "ONLY_SELLER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11643:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11643:41:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11643:41:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11693:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11705:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11716:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11701:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11701:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11693:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11541:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11555:4:80",
                "type": ""
              }
            ],
            "src": "11390:335:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11874:99:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11884:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11896:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11907:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11892:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11892:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11884:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11949:6:80"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11957:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Ask_storage",
                      "nodeType": "YulIdentifier",
                      "src": "11919:29:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11919:48:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11919:48:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Ask_$8841_storage_ptr__to_t_struct$_Ask_$8841_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11843:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11854:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11865:4:80",
                "type": ""
              }
            ],
            "src": "11730:243:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12152:228:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12169:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12180:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12162:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12162:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12162:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12203:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12214:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12199:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12199:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12219:2:80",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12192:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12192:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12192:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12242:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12253:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12238:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12238:18:80"
                      },
                      {
                        "hexValue": "736574526f79616c7479456e67696e6541646472657373206f6e6c7920726567",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12258:34:80",
                        "type": "",
                        "value": "setRoyaltyEngineAddress only reg"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12231:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12231:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12231:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12313:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12324:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12309:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12309:18:80"
                      },
                      {
                        "hexValue": "697374726172",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12329:8:80",
                        "type": "",
                        "value": "istrar"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12302:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12302:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12302:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12347:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12359:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12370:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12355:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12355:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12347:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b05b4162d2b5d35bd4fc3f4069624371167f16d817ef10b51b2b726f9b1bcc3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12129:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12143:4:80",
                "type": ""
              }
            ],
            "src": "11978:402:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12559:251:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12576:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12587:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12569:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12569:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12569:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12610:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12621:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12606:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12606:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12626:2:80",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12599:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12599:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12599:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12649:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12660:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12645:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12645:18:80"
                      },
                      {
                        "hexValue": "736574526f79616c7479456e67696e6541646472657373206d757374206d6174",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12665:34:80",
                        "type": "",
                        "value": "setRoyaltyEngineAddress must mat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12638:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12638:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12638:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12720:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12731:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12716:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12716:18:80"
                      },
                      {
                        "hexValue": "63682049526f79616c7479456e67696e65563120696e74657266616365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12736:31:80",
                        "type": "",
                        "value": "ch IRoyaltyEngineV1 interface"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12709:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12709:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12709:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12777:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12789:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12800:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12785:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12785:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12777:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26f9ddf619fa8b63737e112dd69d7c055a02dff0013d77d5cdc77bc5ba30c241__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12536:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12550:4:80",
                "type": ""
              }
            ],
            "src": "12385:425:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12989:162:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13006:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13017:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12999:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12999:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12999:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13040:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13051:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13036:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13036:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13056:2:80",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13029:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13029:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13029:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13079:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13090:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13075:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13075:18:80"
                      },
                      {
                        "hexValue": "494e4143544956455f41534b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13095:14:80",
                        "type": "",
                        "value": "INACTIVE_ASK"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13068:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13068:42:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13068:42:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13119:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13131:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13142:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13127:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13127:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13119:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12966:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12980:4:80",
                "type": ""
              }
            ],
            "src": "12815:336:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13330:166:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13347:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13358:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13340:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13340:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13340:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13381:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13392:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13377:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13377:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13397:2:80",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13370:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13370:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13370:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13420:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13431:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13416:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13416:18:80"
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f5052494345",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13436:18:80",
                        "type": "",
                        "value": "MUST_MATCH_PRICE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13409:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13409:46:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13409:46:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13464:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13476:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13487:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13472:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13472:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13464:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13307:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13321:4:80",
                "type": ""
              }
            ],
            "src": "13156:340:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13675:169:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13692:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13703:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13685:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13685:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13685:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13726:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13737:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13722:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13722:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13742:2:80",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13715:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13715:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13715:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13765:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13776:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13761:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13761:18:80"
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f43555252454e4359",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13781:21:80",
                        "type": "",
                        "value": "MUST_MATCH_CURRENCY"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13754:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13754:49:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13754:49:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13812:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13824:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13835:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13820:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13820:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13812:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3f4a4e33bc7f7847179428ccd22e21acb55f2b165452820a8994eefa5eed2099__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13652:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13666:4:80",
                "type": ""
              }
            ],
            "src": "13501:343:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14034:271:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14044:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14056:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14067:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14052:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14052:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14044:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14080:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14098:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14103:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "14094:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14094:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14107:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14090:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14090:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "14084:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14125:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14140:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14148:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14136:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14136:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14118:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14118:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14118:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14172:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14183:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14168:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14168:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14192:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14200:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14188:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14188:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14161:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14161:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14161:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14224:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14235:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14220:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14220:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "14244:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14252:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14240:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14240:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14213:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14213:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14213:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14276:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14287:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14272:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14272:18:80"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "14292:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14265:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14265:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14265:34:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13979:9:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "13990:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13998:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14006:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14014:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14025:4:80",
                "type": ""
              }
            ],
            "src": "13849:456:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14481:161:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14491:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14503:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14514:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14499:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14499:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14491:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14534:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14549:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14565:3:80",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14570:1:80",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "14561:3:80"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14561:11:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14574:1:80",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "14557:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14557:19:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14545:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14545:32:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14527:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14527:51:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14527:51:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14609:6:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14621:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14632:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14617:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14617:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_Ask",
                      "nodeType": "YulIdentifier",
                      "src": "14587:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14587:49:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14587:49:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_struct$_Ask_$8841_memory_ptr__to_t_address_t_struct$_Ask_$8841_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14442:9:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14453:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14461:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14472:4:80",
                "type": ""
              }
            ],
            "src": "14310:332:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14821:223:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14838:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14849:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14831:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14831:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14831:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14872:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14883:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14868:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14868:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14888:2:80",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14861:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14861:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14861:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14911:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14922:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14907:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14907:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14927:34:80",
                        "type": "",
                        "value": "_handleOutgoingTransfer insolven"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14900:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14900:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14900:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14982:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14993:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14978:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14978:18:80"
                      },
                      {
                        "hexValue": "74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14998:3:80",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14971:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14971:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14971:31:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15011:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15023:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15034:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15019:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15019:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15011:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9dffe34bf37f5f5456d5b06dc7a95307b7993514988baa141cd803d3b091f6e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14798:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14812:4:80",
                "type": ""
              }
            ],
            "src": "14647:397:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15240:14:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15242:10:80",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "15249:3:80"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15242:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15224:3:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15232:3:80",
                "type": ""
              }
            ],
            "src": "15049:205:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15433:249:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15450:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15461:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15443:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15443:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15443:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15484:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15495:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15480:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15480:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15500:2:80",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15473:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15473:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15473:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15523:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15534:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15519:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15519:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c65496e636f6d696e675472616e73666572206d73672076616c75",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15539:34:80",
                        "type": "",
                        "value": "_handleIncomingTransfer msg valu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15512:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15512:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15512:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15594:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15605:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15590:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15590:18:80"
                      },
                      {
                        "hexValue": "65206c657373207468616e20657870656374656420616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15610:29:80",
                        "type": "",
                        "value": "e less than expected amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15583:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15583:57:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15583:57:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15649:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15661:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15672:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15657:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15657:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15649:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0a711e744101fa8eb9530b2ad457a5beb5398212856e071b8bc9b20ff8107dc2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15410:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15424:4:80",
                "type": ""
              }
            ],
            "src": "15259:423:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15768:103:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15814:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15823:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15826:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15816:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15816:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15816:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15789:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15798:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15785:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15785:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15810:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "15781:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15781:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "15778:52:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15839:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15855:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15849:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15849:16:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "15839:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15734:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "15745:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15757:6:80",
                "type": ""
              }
            ],
            "src": "15687:184:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15908:95:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15925:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15932:3:80",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15937:10:80",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15928:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15928:20:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15918:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15918:31:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15918:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15965:1:80",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15968:4:80",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15958:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15958:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15958:15:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15989:1:80",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15992:4:80",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15982:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15982:15:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15982:15:80"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "15876:127:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16056:80:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16083:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16085:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16085:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16085:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16072:1:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "16079:1:80"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "16075:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16075:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16069:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16069:13:80"
                  },
                  "nodeType": "YulIf",
                  "src": "16066:39:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16114:16:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16125:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16128:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16121:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16121:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "16114:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16039:1:80",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16042:1:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "16048:3:80",
                "type": ""
              }
            ],
            "src": "16008:128:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16315:306:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16332:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16343:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16325:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16325:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16325:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16366:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16377:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16362:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16362:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16382:2:80",
                        "type": "",
                        "value": "76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16355:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16355:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16355:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16405:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16416:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16401:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16401:18:80"
                      },
                      {
                        "hexValue": "5f68616e646c65496e636f6d696e675472616e7366657220746f6b656e207472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16421:34:80",
                        "type": "",
                        "value": "_handleIncomingTransfer token tr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16394:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16394:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16394:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16476:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16487:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16472:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16472:18:80"
                      },
                      {
                        "hexValue": "616e736665722063616c6c20646964206e6f74207472616e7366657220657870",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16492:34:80",
                        "type": "",
                        "value": "ansfer call did not transfer exp"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16465:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16465:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16465:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16547:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16558:3:80",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16543:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16543:19:80"
                      },
                      {
                        "hexValue": "656374656420616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16564:14:80",
                        "type": "",
                        "value": "ected amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16536:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16536:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16536:43:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16588:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16600:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16611:3:80",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16596:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16596:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16588:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b65aa3af0e641ce457a9e84d8e0216edfc393ae83aa6421dd6a44678137ac33c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16292:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16306:4:80",
                "type": ""
              }
            ],
            "src": "16141:480:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16811:262:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16821:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16833:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16844:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16829:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16829:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16821:4:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16857:29:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16875:3:80",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16880:1:80",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "16871:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16871:11:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16884:1:80",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "16867:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16867:19:80"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16861:2:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16902:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16917:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16925:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16913:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16913:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16895:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16895:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16895:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16949:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16960:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16945:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16945:18:80"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16965:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16938:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16938:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16938:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16992:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17003:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16988:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16988:18:80"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "17008:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16981:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16981:34:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16981:34:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17035:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17046:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17031:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17031:18:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "17055:6:80"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17063:2:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17051:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17051:15:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17024:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17024:43:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17024:43:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16756:9:80",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16767:6:80",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16775:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16783:6:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16791:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16802:4:80",
                "type": ""
              }
            ],
            "src": "16626:447:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17175:313:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17221:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17230:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17233:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17223:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17223:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17223:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "17196:7:80"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17205:9:80"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17192:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17192:23:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17217:2:80",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "17188:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17188:32:80"
                  },
                  "nodeType": "YulIf",
                  "src": "17185:52:80"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17246:29:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17265:9:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17259:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17259:16:80"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "17250:5:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17325:16:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17334:1:80",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17337:1:80",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17327:6:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17327:12:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17327:12:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "17297:5:80"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17308:5:80"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17315:6:80",
                                "type": "",
                                "value": "0xffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "17304:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17304:18:80"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "17294:2:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17294:29:80"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17287:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17287:37:80"
                  },
                  "nodeType": "YulIf",
                  "src": "17284:57:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17350:15:80",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "17360:5:80"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "17350:6:80"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17374:40:80",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17399:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17410:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17395:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17395:18:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17389:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17389:25:80"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "17378:7:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "17448:7:80"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "17423:24:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17423:33:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17423:33:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17465:17:80",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "17475:7:80"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "17465:6:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint16t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17133:9:80",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "17144:7:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17156:6:80",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17164:6:80",
                "type": ""
              }
            ],
            "src": "17078:410:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17542:76:80",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17564:22:80",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17566:16:80"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17566:18:80"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17566:18:80"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17558:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17561:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17555:2:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17555:8:80"
                  },
                  "nodeType": "YulIf",
                  "src": "17552:34:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17595:17:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17607:1:80"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17610:1:80"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17603:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17603:9:80"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17595:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17524:1:80",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17527:1:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "17533:4:80",
                "type": ""
              }
            ],
            "src": "17493:125:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17722:103:80",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17732:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17744:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17755:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17740:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17740:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17732:4:80"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17774:9:80"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17789:6:80"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17801:3:80",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17806:10:80",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "17797:3:80"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17797:20:80"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17785:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17785:33:80"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17767:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17767:52:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17767:52:80"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17691:9:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17702:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17713:4:80",
                "type": ""
              }
            ],
            "src": "17623:202:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17967:137:80",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17977:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17997:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17991:5:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17991:13:80"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "17981:6:80",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "18039:6:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18047:4:80",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18035:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18035:17:80"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18054:3:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18059:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "18013:21:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18013:53:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18013:53:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18075:23:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18086:3:80"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "18091:6:80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18082:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18082:16:80"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18075:3:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17943:3:80",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17948:6:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17959:3:80",
                "type": ""
              }
            ],
            "src": "17830:274:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18283:232:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18300:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18311:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18293:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18293:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18293:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18334:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18345:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18330:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18330:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18350:2:80",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18323:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18323:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18323:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18373:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18384:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18369:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18369:18:80"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18389:34:80",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18362:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18362:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18362:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18444:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18455:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18440:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18440:18:80"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18460:12:80",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18433:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18433:40:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18433:40:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18482:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18494:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18505:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18490:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18490:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18482:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18260:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18274:4:80",
                "type": ""
              }
            ],
            "src": "18109:406:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18694:228:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18711:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18722:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18704:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18704:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18704:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18745:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18756:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18741:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18741:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18761:2:80",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18734:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18734:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18734:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18784:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18795:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18780:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18780:18:80"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18800:34:80",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18773:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18773:62:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18773:62:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18855:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18866:2:80",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18851:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18851:18:80"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18871:8:80",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18844:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18844:36:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18844:36:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18889:27:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18901:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18912:3:80",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18897:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18897:19:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18889:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18671:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18685:4:80",
                "type": ""
              }
            ],
            "src": "18520:402:80"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19101:179:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19118:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19129:2:80",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19111:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19111:21:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19111:21:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19152:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19163:2:80",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19148:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19148:18:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19168:2:80",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19141:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19141:30:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19141:30:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19191:9:80"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19202:2:80",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19187:3:80"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19187:18:80"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19207:31:80",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19180:6:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19180:59:80"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19180:59:80"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19248:26:80",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19260:9:80"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19271:2:80",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19256:3:80"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19256:18:80"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19248:4:80"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19078:9:80",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19092:4:80",
                "type": ""
              }
            ],
            "src": "18927:353:80"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint96_t_address__to_t_address_t_uint96_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_contract$_ERC20TransferHelper_$16267__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ERC721TransferHelper_$16334__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_180a23d5434c537ca84b1e47f534d18e25bd055e02a65ce20bae4afd9c835f59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"REENTRANCY\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ONLY_TOKEN_OWNER_OR_OPERATOR\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"INVALID_ASK_PRICE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_struct_Ask_storage(value, pos)\n    {\n        let slotValue := sload(value)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(slotValue, _1))\n        mstore(add(pos, 0x20), shr(160, slotValue))\n        mstore(add(pos, 0x40), and(sload(add(value, 0x01)), _1))\n    }\n    function abi_encode_tuple_t_struct$_Ask_$8841_storage__to_t_struct$_Ask_$8841_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_struct_Ask_storage(value0, headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ONLY_SELLER_OR_TOKEN_OWNER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_struct_Ask(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), 0xffffffffffffffffffffffff))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), _1))\n    }\n    function abi_encode_tuple_t_struct$_Ask_$8841_memory_ptr__to_t_struct$_Ask_$8841_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_struct_Ask(value0, headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_444d058793ff79cc791225f4d17e32ac57d05ee9a18813e601615cfd6c77a5e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"_handleRoyaltyEnginePayout only \")\n        mstore(add(headStart, 96), \"self callable\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_payable_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_payable_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_payable_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_payable_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := mload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_081e2fa72c4e34011d3656bfe84745bd16318a4f9c6c6323843d390046b89502__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"insolvent\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"ONLY_SELLER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_Ask_$8841_storage_ptr__to_t_struct$_Ask_$8841_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_struct_Ask_storage(value0, headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b05b4162d2b5d35bd4fc3f4069624371167f16d817ef10b51b2b726f9b1bcc3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"setRoyaltyEngineAddress only reg\")\n        mstore(add(headStart, 96), \"istrar\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_26f9ddf619fa8b63737e112dd69d7c055a02dff0013d77d5cdc77bc5ba30c241__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"setRoyaltyEngineAddress must mat\")\n        mstore(add(headStart, 96), \"ch IRoyaltyEngineV1 interface\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"INACTIVE_ASK\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"MUST_MATCH_PRICE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3f4a4e33bc7f7847179428ccd22e21acb55f2b165452820a8994eefa5eed2099__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"MUST_MATCH_CURRENCY\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_struct$_Ask_$8841_memory_ptr__to_t_address_t_struct$_Ask_$8841_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        abi_encode_struct_Ask(value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_9dffe34bf37f5f5456d5b06dc7a95307b7993514988baa141cd803d3b091f6e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"_handleOutgoingTransfer insolven\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_0a711e744101fa8eb9530b2ad457a5beb5398212856e071b8bc9b20ff8107dc2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"_handleIncomingTransfer msg valu\")\n        mstore(add(headStart, 96), \"e less than expected amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_b65aa3af0e641ce457a9e84d8e0216edfc393ae83aa6421dd6a44678137ac33c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 76)\n        mstore(add(headStart, 64), \"_handleIncomingTransfer token tr\")\n        mstore(add(headStart, 96), \"ansfer call did not transfer exp\")\n        mstore(add(headStart, 128), \"ected amount\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_decode_tuple_t_uint16t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 80,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "797:15589:57:-:0;;;461:1:37;426:36;;1576:516:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:62:53;;;;;;;;;;;;;-1:-1:-1;;;376:62:53;;;1847:14:57;1863:20;1885:5;1913:21;-1:-1:-1;;;;;1892:47:57;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1892:59:57;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;690:63:52;;;;;552:26:55;;;;;1931:13:51::1;:48:::0;;-1:-1:-1;;;;;;1931:48:51::1;::::0;;::::1;::::0;;;::::1;::::0;;;1989:67;;::::1;;::::0;2066:29:::1;;::::0;419:12:53;;;;:4;;-1:-1:-1;419:12:53;;;;:::i;:::-;-1:-1:-1;;;;;;;;2019:66:57;;::::3;;::::0;-1:-1:-1;797:15589:57;;-1:-1:-1;;797:15589:57;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;797:15589:57;;;-1:-1:-1;797:15589:57;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:80;-1:-1:-1;;;;;89:31:80;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:789::-;256:6;264;272;280;288;341:3;329:9;320:7;316:23;312:33;309:53;;;358:1;355;348:12;309:53;390:9;384:16;409:31;434:5;409:31;:::i;:::-;509:2;494:18;;488:25;459:5;;-1:-1:-1;522:33:80;488:25;522:33;:::i;:::-;626:2;611:18;;605:25;574:7;;-1:-1:-1;639:33:80;605:25;639:33;:::i;:::-;743:2;728:18;;722:25;691:7;;-1:-1:-1;756:33:80;722:25;756:33;:::i;:::-;860:3;845:19;;839:26;808:7;;-1:-1:-1;874:33:80;839:26;874:33;:::i;:::-;926:7;916:17;;;150:789;;;;;;;;:::o;944:277::-;1040:6;1093:2;1081:9;1072:7;1068:23;1064:32;1061:52;;;1109:1;1106;1099:12;1061:52;1141:9;1135:16;1160:31;1185:5;1160:31;:::i;:::-;1210:5;944:277;-1:-1:-1;;;944:277:80:o;1482:380::-;1561:1;1557:12;;;;1604;;;1625:61;;1679:4;1671:6;1667:17;1657:27;;1625:61;1732:2;1724:6;1721:14;1701:18;1698:38;1695:161;;;1778:10;1773:3;1769:20;1766:1;1759:31;1813:4;1810:1;1803:15;1841:4;1838:1;1831:15;1695:161;;1482:380;;;:::o;:::-;797:15589:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "797:15589:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2336:179;;;;;;;;;;-1:-1:-1;2336:179:57;;;;;:::i;:::-;;:::i;:::-;;;470:14:80;;463:22;445:41;;433:2;418:18;2336:179:57;;;;;;;;265:18:53;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;792:34:51:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1312:32:80;;;1294:51;;1282:2;1267:18;792:34:51;1148:203:80;4781:1017:57;;;;;;;;;;-1:-1:-1;4781:1017:57;;;;;:::i;:::-;;:::i;:::-;;10611:553;;;;;;;;;;-1:-1:-1;10611:553:57;;;;;:::i;:::-;;:::i;3165:60::-;;;;;;;;;;-1:-1:-1;3165:60:57;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3165:60:57;;;;-1:-1:-1;;;3165:60:57;;-1:-1:-1;;;;;3165:60:57;;;;;;;;;-1:-1:-1;;;;;2598:15:80;;;2580:34;;-1:-1:-1;;;;;2650:39:80;;;2645:2;2630:18;;2623:67;2726:15;;2706:18;;;2699:43;;;;2530:2;2515:18;3165:60:57;2342:406:80;575:56:52;;;;;;;;;;;;;;;5751:1742:51;;;;;;:::i;:::-;;:::i;:::-;;;3136:25:80;;;3124:2;3109:18;5751:1742:51;2990:177:80;8277:883:57;;;;;;;;;;-1:-1:-1;8277:883:57;;;;;:::i;:::-;;:::i;2472:414:51:-;;;;;;;;;;-1:-1:-1;2472:414:51;;;;;:::i;:::-;;:::i;14459:1925:57:-;;;;;;:::i;:::-;;:::i;1172:58::-;;;;;;;;;;;;;;;2336:179;2407:4;-1:-1:-1;;;;;;2430:48:57;;-1:-1:-1;;;2430:48:57;;:78;;-1:-1:-1;;;;;;;;;;2482:26:57;;;2430:78;2423:85;2336:179;-1:-1:-1;;2336:179:57:o;265:18:53:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4781:1017:57:-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;;;;;;;;;577:1;558:16;:20;;;5016:41:57::1;::::0;-1:-1:-1;;;5016:41:57;;::::1;::::0;::::1;3136:25:80::0;;;-1:-1:-1;;;;;5016:31:57;::::1;::::0;::::1;::::0;3109:18:80;;5016:41:57::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4995:62:::0;-1:-1:-1;5142:10:57::1;-1:-1:-1::0;;;;;5142:24:57;::::1;;::::0;:92:::1;;-1:-1:-1::0;5170:64:57::1;::::0;-1:-1:-1;;;5170:64:57;;-1:-1:-1;;;;;4872:15:80;;;5170:64:57::1;::::0;::::1;4854:34:80::0;5223:10:57::1;4904:18:80::0;;;4897:43;5170:40:57;::::1;::::0;::::1;::::0;4789:18:80;;5170:64:57::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5134:133;;;::::0;-1:-1:-1;;;5134:133:57;;5435:2:80;5134:133:57::1;::::0;::::1;5417:21:80::0;5474:2;5454:18;;;5447:30;5513;5493:18;;;5486:58;5561:18;;5134:133:57::1;5233:352:80::0;5134:133:57::1;-1:-1:-1::0;;;;;5420:26:57;::::1;;5412:56;;;::::0;-1:-1:-1;;;5412:56:57;;5792:2:80;5412:56:57::1;::::0;::::1;5774:21:80::0;5831:2;5811:18;;;5804:30;-1:-1:-1;;;5850:18:80;;;5843:47;5907:18;;5412:56:57::1;5590:341:80::0;5412:56:57::1;-1:-1:-1::0;;;;;5513:25:57;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;;:55;;::::1;-1:-1:-1::0;;;;;;;;5578:58:57;::::1;;;::::0;;5513:55;5646:44;::::1;:56:::0;;-1:-1:-1;;;;;;5646:56:57::1;::::0;;::::1;::::0;;;::::1;::::0;;;5718:73;5513:35;;5718:73:::1;::::0;::::1;::::0;5513:35;5718:73:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;;620:1:37;601:16;:20;-1:-1:-1;;;4781:1017:57:o;10611:553::-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;577:1;558:16;:20;;;-1:-1:-1;;;;;10768:25:57;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;10751:52;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;-1:-1:-1;;;10751:52:57;;::::1;-1:-1:-1::0;;;;;10751:52:57::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;;;;;;10893:10:::1;:24;::::0;:83:::1;;-1:-1:-1::0;10935:41:57::1;::::0;-1:-1:-1;;;10935:41:57;;::::1;::::0;::::1;3136:25:80::0;;;-1:-1:-1;;;;;10935:31:57;::::1;::::0;::::1;::::0;3109:18:80;;10935:41:57::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10921:55:57::1;:10;-1:-1:-1::0;;;;;10921:55:57::1;;10893:83;10885:122;;;::::0;-1:-1:-1;;;10885:122:57;;6682:2:80;10885:122:57::1;::::0;::::1;6664:21:80::0;6721:2;6701:18;;;6694:30;6760:28;6740:18;;;6733:56;6806:18;;10885:122:57::1;6480:350:80::0;10885:122:57::1;11051:8;11035:14;-1:-1:-1::0;;;;;11023:42:57::1;;11061:3;11023:42;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;;11122:25:57;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;11115:42;;;;;;::::1;::::0;;-1:-1:-1;;;;;;11115:42:57::1;::::0;;601:20:37;;10611:553:57:o;5751:1742:51:-;5935:7;6007:10;6029:4;6007:27;5999:85;;;;-1:-1:-1;;;5999:85:51;;7570:2:80;5999:85:51;;;7552:21:80;7609:2;7589:18;;;7582:30;7648:34;7628:18;;;7621:62;-1:-1:-1;;;7699:18:80;;;7692:43;7752:19;;5999:85:51;7368:409:80;5999:85:51;6228:13;;:59;;-1:-1:-1;;;6228:59:51;;-1:-1:-1;;;;;8002:32:80;;;6228:59:51;;;7984:51:80;8051:18;;;8044:34;;;8094:18;;;8087:34;;;6163:35:51;;;;6228:13;;;:24;;7957:18:80;;6228:59:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6228:59:51;;;;;;;;;;;;:::i;:::-;6364:17;;6162:125;;-1:-1:-1;6162:125:51;-1:-1:-1;6460:18:51;6456:38;;6487:7;6480:14;;;;;;;6456:38;6567:7;6541:23;;;6736:718;6760:13;6756:1;:17;6736:718;;;6849:10;6860:1;6849:13;;;;;;;;:::i;:::-;;;;;;;6837:25;;6885:7;6893:1;6885:10;;;;;;;;:::i;:::-;;;;;;;6876:19;;7011:6;6992:15;:25;;6984:47;;;;-1:-1:-1;;;6984:47:51;;10976:2:80;6984:47:51;;;10958:21:80;11015:1;10995:18;;;10988:29;-1:-1:-1;;;11033:18:80;;;11026:39;11082:18;;6984:47:51;10774:332:80;6984:47:51;7087:66;7111:9;7122:6;7130:15;7147:5;7087:23;:66::i;:::-;7173:58;;;-1:-1:-1;;;;;11303:32:80;;;11285:51;;11367:2;11352:18;;11345:34;;;7203:8:51;;7173:58;;;;;;11258:18:80;7173:58:51;;;;;;;7383:25;;;;;7426:3;;6736:718;;;-1:-1:-1;7471:15:51;;-1:-1:-1;;;;;;5751:1742:51;;;;;;;:::o;8277:883:57:-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;577:1;558:16;:20;;;-1:-1:-1;;;;;8510:25:57;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;8617:10;;8510:35;;8617:10:::1;8603;:24;8595:48;;;::::0;-1:-1:-1;;;8595:48:57;;11592:2:80;8595:48:57::1;::::0;::::1;11574:21:80::0;11631:2;11611:18;;;11604:30;-1:-1:-1;;;11650:18:80;;;11643:41;11701:18;;8595:48:57::1;11390:335:80::0;8595:48:57::1;8702:9:::0;;-1:-1:-1;;;8702:9:57;::::1;-1:-1:-1::0;;;;;8702:9:57::1;8692:19:::0;::::1;8688:239;;-1:-1:-1::0;;;;;8792:26:57;::::1;;8784:56;;;::::0;-1:-1:-1;;;8784:56:57;;5792:2:80;8784:56:57::1;::::0;::::1;5774:21:80::0;5831:2;5811:18;;;5804:30;-1:-1:-1;;;5850:18:80;;;5843:47;5907:18;;8784:56:57::1;5590:341:80::0;8784:56:57::1;8890:26:::0;;-1:-1:-1;;;;;8890:26:57::1;-1:-1:-1::0;;;;;;;;8890:26:57;::::1;;;::::0;;8688:239:::1;8991:12;::::0;::::1;::::0;-1:-1:-1;;;;;8978:25:57;;::::1;8991:12:::0;::::1;8978:25;8974:118;;9057:12;::::0;::::1;:24:::0;;-1:-1:-1;;;;;;9057:24:57::1;-1:-1:-1::0;;;;;9057:24:57;::::1;;::::0;;8974:118:::1;9139:8;9123:14;-1:-1:-1::0;;;;;9107:46:57::1;;9149:3;9107:46;;;;;;:::i;2472:414:51:-:0;2554:10;-1:-1:-1;;;;;2568:9:51;2554:23;;2546:74;;;;-1:-1:-1;;;2546:74:51;;12180:2:80;2546:74:51;;;12162:21:80;12219:2;12199:18;;;12192:30;12258:34;12238:18;;;12231:62;-1:-1:-1;;;12309:18:80;;;12302:36;12355:19;;2546:74:51;11978:402:80;2546:74:51;2651:83;2683:14;-1:-1:-1;;;2651:31:51;:83::i;:::-;2630:191;;;;-1:-1:-1;;;2630:191:51;;12587:2:80;2630:191:51;;;12569:21:80;12626:2;12606:18;;;12599:30;12665:34;12645:18;;;12638:62;12736:31;12716:18;;;12709:59;12785:19;;2630:191:51;12385:425:80;2630:191:51;2831:13;:48;;-1:-1:-1;;;;;;2831:48:51;-1:-1:-1;;;;;2831:48:51;;;;;;;;;;2472:414::o;14459:1925:57:-;511:16:37;;531:1;511:21;503:44;;;;-1:-1:-1;;;503:44:37;;;;;;;:::i;:::-;577:1;558:16;:20;;;-1:-1:-1;;;;;14695:25:57;;::::1;::::0;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;14678:52;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;-1:-1:-1;;;14678:52:57;;::::1;-1:-1:-1::0;;;;;14678:52:57::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;;;;;;;14843:45:::1;;;::::0;-1:-1:-1;;;14843:45:57;;13017:2:80;14843:45:57::1;::::0;::::1;12999:21:80::0;13056:2;13036:18;;;13029:30;-1:-1:-1;;;13075:18:80;;;13068:42;13127:18;;14843:45:57::1;12815:336:80::0;14843:45:57::1;14942:9;::::0;::::1;::::0;-1:-1:-1;;;;;14926:25:57::1;15030:15:::0;;::::1;15022:44;;;::::0;-1:-1:-1;;;15022:44:57;;13358:2:80;15022:44:57::1;::::0;::::1;13340:21:80::0;13397:2;13377:18;;;13370:30;-1:-1:-1;;;13416:18:80;;;13409:46;13472:18;;15022:44:57::1;13156:340:80::0;15022:44:57::1;15126:12;::::0;::::1;::::0;-1:-1:-1;;;;;15223:21:57;;::::1;::::0;;::::1;;15215:53;;;::::0;-1:-1:-1;;;15215:53:57;;13703:2:80;15215:53:57::1;::::0;::::1;13685:21:80::0;13742:2;13722:18;;;13715:30;-1:-1:-1;;;13761:18:80;;;13754:49;13820:18;;15215:53:57::1;13501:343:80::0;15215:53:57::1;15520:40;15544:5;15551:8;15520:23;:40::i;:::-;15625:23;15654:71;15675:14;15691:8;15701:5;15708:8;15718:6;15654:20;:71::i;:::-;15624:101;;;15802:51;15827:15;15844:8;15802:24;:51::i;:::-;15784:69;;15919:65;15943:6;15951:15;15968:8;15978:5;15919:23;:65::i;:::-;16138:79;::::0;-1:-1:-1;;;16138:79:57;;-1:-1:-1;;;;;14136:15:80;;;16138:79:57::1;::::0;::::1;14118:34:80::0;14188:15;;;14168:18;;;14161:43;16196:10:57::1;14220:18:80::0;;;14213:43;14272:18;;;14265:34;;;16138:20:57::1;:33;::::0;::::1;::::0;14052:19:80;;16138:79:57::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;16259:8;16243:14;-1:-1:-1::0;;;;;16233:52:57::1;;16269:10;16281:3;16233:52;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;;;;16342:25:57;;::::1;;::::0;;;:9:::1;:25;::::0;;;;;;;:35;;;;;;;;;16335:42;;;;;;::::1;::::0;;-1:-1:-1;;;;;;16335:42:57::1;::::0;;601:20:37;;;-1:-1:-1;;;;14459:1925:57:o;1039:1016:55:-;1203:12;;;:35;;-1:-1:-1;;;;;;1219:19:55;;;1203:35;1199:72;;;1254:7;;1199:72;-1:-1:-1;;;;;1315:23:55;;1311:738;;1387:7;1362:21;:32;;1354:78;;;;-1:-1:-1;;;1354:78:55;;14849:2:80;1354:78:55;;;14831:21:80;14888:2;14868:18;;;14861:30;14927:34;14907:18;;;14900:62;-1:-1:-1;;;14978:18:80;;;14971:31;15019:19;;1354:78:55;14647:397:80;1354:78:55;1564:11;1579:14;;;:39;;;1609:9;1597;:21;1579:39;1578:65;;1634:9;1578:65;;;1622:9;1578:65;1564:79;;1658:12;1676:5;-1:-1:-1;;;;;1676:10:55;1694:7;1708:3;1676:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1657:59;;;1822:7;1817:145;;1849:4;-1:-1:-1;;;;;1849:12:55;;1869:7;1849:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1897:50:55;;-1:-1:-1;;;;;;;1912:4:55;1897:34;;-1:-1:-1;1932:5:55;;-1:-1:-1;1939:7:55;1897:34;:50::i;:::-;1340:632;;1311:738;;;1992:46;-1:-1:-1;;;;;1992:30:55;;2023:5;2030:7;1992:30;:46::i;:::-;1039:1016;;;;:::o;1318:274:35:-;1405:4;1512:23;1527:7;1512:14;:23::i;:::-;:73;;;;;1539:46;1564:7;1573:11;1539:24;:46::i;:::-;1505:80;1318:274;-1:-1:-1;;;1318:274:35:o;1007:933:52:-;-1:-1:-1;;;;;1099:23:52;;1095:839;;1159:7;1146:9;:20;;1138:92;;;;-1:-1:-1;;;1138:92:52;;15461:2:80;1138:92:52;;;15443:21:80;15500:2;15480:18;;;15473:30;15539:34;15519:18;;;15512:62;15610:29;15590:18;;;15583:57;15657:19;;1138:92:52;15259:423:80;1138:92:52;1007:933;;:::o;1095:839::-;1587:30;;-1:-1:-1;;;1587:30:52;;1611:4;1587:30;;;1294:51:80;1539:9:52;;1517:12;;-1:-1:-1;;;;;1587:15:52;;;;;1267:18:80;;1587:30:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1631:83;;-1:-1:-1;;;1631:83:52;;-1:-1:-1;;;;;14136:15:80;;;1631:83:52;;;14118:34:80;1679:10:52;14168:18:80;;;14161:43;1699:4:52;14220:18:80;;;14213:43;14272:18;;;14265:34;;;1563:54:52;;-1:-1:-1;1631:19:52;:36;;;;;;14052:19:80;;1631:83:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1751:30:52;;-1:-1:-1;;;1751:30:52;;1775:4;1751:30;;;1294:51:80;1728:20:52;;-1:-1:-1;;;;;;1751:15:52;;;-1:-1:-1;1751:15:52;;1267:18:80;;1751:30:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:53;-1:-1:-1;1728:53:52;1803:23;1819:7;1803:13;:23;:::i;:::-;:39;1795:128;;;;-1:-1:-1;;;1795:128:52;;16343:2:80;1795:128:52;;;16325:21:80;16382:2;16362:18;;;16355:30;16421:34;16401:18;;;16394:62;16492:34;16472:18;;;16465:62;-1:-1:-1;;;16543:19:80;;;16536:43;16596:19;;1795:128:52;16141:480:80;1795:128:52;1247:687;;;1007:933;;:::o;4289:888:51:-;4486:7;;;4640:14;;;:39;;;4670:9;4658;:21;4640:39;4639:65;;4695:9;4639:65;;;4683:9;4639:65;4802:93;;-1:-1:-1;;;4802:93:51;;-1:-1:-1;;;;;16913:15:80;;;4802:93:51;;;16895:34:80;16945:18;;;16938:34;;;16988:18;;;16981:34;;;17051:15;;17031:18;;;17024:43;4625:79:51;;-1:-1:-1;4802:4:51;;:31;;4625:79;;16829:19:80;;4802:93:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4802:93:51;;;;;;;;-1:-1:-1;;4802:93:51;;;;;;;;;;;;:::i;:::-;;;4798:373;;5145:7;5154:5;5137:23;;;;;;;4798:373;5020:14;-1:-1:-1;5036:4:51;;-1:-1:-1;5012:29:51;;-1:-1:-1;5012:29:51;4289:888;;;;;;;;;:::o;3119:632::-;3289:56;;-1:-1:-1;;;3289:56:51;;3330:4;3289:56;;;11285:51:80;11352:18;;;11345:34;;;3213:7:51;;;;-1:-1:-1;;;;;3289:19:51;:32;;;;11258:18:80;;3289:56:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:78;-1:-1:-1;3404:16:51;3400:36;;3429:7;3422:14;;;;;3400:36;3503:51;;-1:-1:-1;;;3503:51:51;;3548:4;3503:51;;;1294::80;3479:20:51;;3503:19;-1:-1:-1;;;;;3503:36:51;;;;1267:18:80;;3503:51:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3476:78;;;3596:74;3620:12;3634:11;3647:15;3664:5;3596:23;:74::i;:::-;3723:21;3733:11;3723:7;:21;:::i;:::-;3716:28;3119:632;-1:-1:-1;;;;;3119:632:51:o;701:205:25:-;840:58;;;-1:-1:-1;;;;;11303:32:80;;840:58:25;;;11285:51:80;11352:18;;;;11345:34;;;840:58:25;;;;;;;;;;11258:18:80;;;;840:58:25;;;;;;;;-1:-1:-1;;;;;840:58:25;-1:-1:-1;;;840:58:25;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;689:411:35:-;753:4;960:60;985:7;-1:-1:-1;;;960:24:35;:60::i;:::-;:133;;;;-1:-1:-1;1037:56:35;1062:7;-1:-1:-1;;;;;;1037:24:35;:56::i;:::-;1036:57;941:152;689:411;-1:-1:-1;;689:411:35:o;4208:409::-;4346:71;;;-1:-1:-1;;;;;;17785:33:80;;4346:71:35;;;;17767:52:80;;;;4346:71:35;;;;;;;;;;17740:18:80;;;;4346:71:35;;;;;;;-1:-1:-1;;;;;4346:71:35;-1:-1:-1;;;4346:71:35;;;4465:45;;4301:4;;4346:71;4301:4;;;;-1:-1:-1;;;;;4465:18:35;;;4489:5;;4465:45;;4346:71;;4465:45;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4427:83;;;;4540:2;4524:6;:13;:18;4520:36;;;4551:5;4544:12;;;;;;;4520:36;4573:7;:37;;;;;4595:6;4584:26;;;;;;;;;;;;:::i;:::-;4566:44;4208:409;-1:-1:-1;;;;;;4208:409:35:o;3207:706:25:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:25;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:25;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:25;;18311:2:80;3811:85:25;;;18293:21:80;18350:2;18330:18;;;18323:30;18389:34;18369:18;;;18362:62;-1:-1:-1;;;18440:18:80;;;18433:40;18490:19;;3811:85:25;18109:406:80;3861:223:31;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;-1:-1:-1;;;;;1465:19:31;;;5228:60;;;;-1:-1:-1;;;5228:60:31;;19129:2:80;5228:60:31;;;19111:21:80;19168:2;19148:18;;;19141:30;19207:31;19187:18;;;19180:59;19256:18;;5228:60:31;18927:353:80;5228:60:31;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:31;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:31:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:31;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:31;;;;;;;;:::i;14:286:80:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:80;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;-1:-1:-1;;745:1:80;727:16;;720:27;497:258::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:80;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:80:o;1356:131::-;-1:-1:-1;;;;;1431:31:80;;1421:42;;1411:70;;1477:1;1474;1467:12;1411:70;1356:131;:::o;1492:525::-;1578:6;1586;1594;1602;1655:3;1643:9;1634:7;1630:23;1626:33;1623:53;;;1672:1;1669;1662:12;1623:53;1711:9;1698:23;1730:31;1755:5;1730:31;:::i;:::-;1780:5;-1:-1:-1;1832:2:80;1817:18;;1804:32;;-1:-1:-1;1883:2:80;1868:18;;1855:32;;-1:-1:-1;1939:2:80;1924:18;;1911:32;1952:33;1911:32;1952:33;:::i;:::-;1492:525;;;;-1:-1:-1;1492:525:80;;-1:-1:-1;;1492:525:80:o;2022:315::-;2090:6;2098;2151:2;2139:9;2130:7;2126:23;2122:32;2119:52;;;2167:1;2164;2157:12;2119:52;2206:9;2193:23;2225:31;2250:5;2225:31;:::i;:::-;2275:5;2327:2;2312:18;;;;2299:32;;-1:-1:-1;;;2022:315:80:o;3172:247::-;3231:6;3284:2;3272:9;3263:7;3259:23;3255:32;3252:52;;;3300:1;3297;3290:12;3252:52;3339:9;3326:23;3358:31;3383:5;3358:31;:::i;3662:380::-;3741:1;3737:12;;;;3784;;;3805:61;;3859:4;3851:6;3847:17;3837:27;;3805:61;3912:2;3904:6;3901:14;3881:18;3878:38;3875:161;;;3958:10;3953:3;3949:20;3946:1;3939:31;3993:4;3990:1;3983:15;4021:4;4018:1;4011:15;3875:161;;3662:380;;;:::o;4047:334::-;4249:2;4231:21;;;4288:2;4268:18;;;4261:30;-1:-1:-1;;;4322:2:80;4307:18;;4300:40;4372:2;4357:18;;4047:334::o;4386:251::-;4456:6;4509:2;4497:9;4488:7;4484:23;4480:32;4477:52;;;4525:1;4522;4515:12;4477:52;4557:9;4551:16;4576:31;4601:5;4576:31;:::i;4951:277::-;5018:6;5071:2;5059:9;5050:7;5046:23;5042:32;5039:52;;;5087:1;5084;5077:12;5039:52;5119:9;5113:16;5172:5;5165:13;5158:21;5151:5;5148:32;5138:60;;5194:1;5191;5184:12;6236:239;6018:12;;-1:-1:-1;;;;;6089:18:80;;;6077:31;;6057:3;6140:19;;;;6133:4;6124:14;;6117:43;6066:1;6202:16;;6196:23;6192:32;6185:4;6176:14;;6169:56;6409:2;6394:18;;6421:48;5936:295;7129:234;7305:2;7290:18;;7317:40;7294:9;7339:6;6946:12;;-1:-1:-1;;;;;6942:21:80;;;6930:34;;7017:4;7006:16;;;7000:23;-1:-1:-1;;;;;6996:56:80;6980:14;;;6973:80;7106:4;7095:16;;;7089:23;7085:32;7069:14;;7062:56;6835:289;8132:127;8193:10;8188:3;8184:20;8181:1;8174:31;8224:4;8221:1;8214:15;8248:4;8245:1;8238:15;8264:275;8335:2;8329:9;8400:2;8381:13;;-1:-1:-1;;8377:27:80;8365:40;;8435:18;8420:34;;8456:22;;;8417:62;8414:88;;;8482:18;;:::i;:::-;8518:2;8511:22;8264:275;;-1:-1:-1;8264:275:80:o;8544:191::-;8612:4;8645:18;8637:6;8634:30;8631:56;;;8667:18;;:::i;:::-;-1:-1:-1;8712:1:80;8708:14;8724:4;8704:25;;8544:191::o;8740:667::-;8805:5;8858:3;8851:4;8843:6;8839:17;8835:27;8825:55;;8876:1;8873;8866:12;8825:55;8905:6;8899:13;8931:4;8955:68;8971:51;9019:2;8971:51;:::i;:::-;8955:68;:::i;:::-;9057:15;;;9143:1;9139:10;;;;9127:23;;9123:32;;;9088:12;;;;9167:15;;;9164:35;;;9195:1;9192;9185:12;9164:35;9231:2;9223:6;9219:15;9243:135;9259:6;9254:3;9251:15;9243:135;;;9325:10;;9313:23;;9356:12;;;;9276;;9243:135;;;-1:-1:-1;9396:5:80;8740:667;-1:-1:-1;;;;;;8740:667:80:o;9412:1225::-;9549:6;9557;9610:2;9598:9;9589:7;9585:23;9581:32;9578:52;;;9626:1;9623;9616:12;9578:52;9659:9;9653:16;9688:18;9729:2;9721:6;9718:14;9715:34;;;9745:1;9742;9735:12;9715:34;9783:6;9772:9;9768:22;9758:32;;9828:7;9821:4;9817:2;9813:13;9809:27;9799:55;;9850:1;9847;9840:12;9799:55;9879:2;9873:9;9901:4;9925:68;9941:51;9989:2;9941:51;:::i;9925:68::-;10027:15;;;10109:1;10105:10;;;;10097:19;;10093:28;;;10058:12;;;;10133:19;;;10130:39;;;10165:1;10162;10155:12;10130:39;10189:11;;;;10209:210;10225:6;10220:3;10217:15;10209:210;;;10298:3;10292:10;10315:31;10340:5;10315:31;:::i;:::-;10359:18;;10242:12;;;;10397;;;;10209:210;;;10474:18;;;10468:25;10438:5;;-1:-1:-1;10468:25:80;;-1:-1:-1;;;10505:16:80;;;10502:36;;;10534:1;10531;10524:12;10502:36;;10557:74;10623:7;10612:8;10601:9;10597:24;10557:74;:::i;:::-;10547:84;;;9412:1225;;;;;:::o;10642:127::-;10703:10;10698:3;10694:20;10691:1;10684:31;10734:4;10731:1;10724:15;10758:4;10755:1;10748:15;14310:332;-1:-1:-1;;;;;14545:32:80;;14527:51;;14514:3;14499:19;;14587:49;14632:2;14617:18;;14609:6;6946:12;;-1:-1:-1;;;;;6942:21:80;;;6930:34;;7017:4;7006:16;;;7000:23;-1:-1:-1;;;;;6996:56:80;6980:14;;;6973:80;7106:4;7095:16;;;7089:23;7085:32;7069:14;;7062:56;6835:289;15687:184;15757:6;15810:2;15798:9;15789:7;15785:23;15781:32;15778:52;;;15826:1;15823;15816:12;15778:52;-1:-1:-1;15849:16:80;;15687:184;-1:-1:-1;15687:184:80:o;15876:127::-;15937:10;15932:3;15928:20;15925:1;15918:31;15968:4;15965:1;15958:15;15992:4;15989:1;15982:15;16008:128;16048:3;16079:1;16075:6;16072:1;16069:13;16066:39;;;16085:18;;:::i;:::-;-1:-1:-1;16121:9:80;;16008:128::o;17078:410::-;17156:6;17164;17217:2;17205:9;17196:7;17192:23;17188:32;17185:52;;;17233:1;17230;17223:12;17185:52;17265:9;17259:16;17315:6;17308:5;17304:18;17297:5;17294:29;17284:57;;17337:1;17334;17327:12;17284:57;17410:2;17395:18;;17389:25;17360:5;;-1:-1:-1;17423:33:80;17389:25;17423:33;:::i;:::-;17475:7;17465:17;;;17078:410;;;;;:::o;17493:125::-;17533:4;17561:1;17558;17555:8;17552:34;;;17566:18;;:::i;:::-;-1:-1:-1;17603:9:80;;17493:125::o;17830:274::-;17959:3;17997:6;17991:13;18013:53;18059:6;18054:3;18047:4;18039:6;18035:17;18013:53;:::i;:::-;18082:16;;;;;17830:274;-1:-1:-1;;17830:274:80:o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.10;\n\nimport {ReentrancyGuard} from \"@rari-capital/solmate/src/utils/ReentrancyGuard.sol\";\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nimport {ERC721TransferHelper} from \"../../../../transferHelpers/ERC721TransferHelper.sol\";\nimport {IncomingTransferSupportV1} from \"../../../../common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol\";\nimport {FeePayoutSupportV1} from \"../../../../common/FeePayoutSupport/FeePayoutSupportV1.sol\";\nimport {ModuleNamingSupportV1} from \"../../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol\";\nimport {IAsksCoreErc20} from \"./IAsksCoreErc20.sol\";\n\n/// @title Asks Core ERC-20\n/// @author kulkarohan\n/// @notice Module for minimal ERC-20 asks for ERC-721 tokens\ncontract AsksCoreErc20 is ReentrancyGuard, IncomingTransferSupportV1, FeePayoutSupportV1, ModuleNamingSupportV1 {\n    ///                                                          ///\n    ///                        IMMUTABLES                        ///\n    ///                                                          ///\n\n    /// @notice The ZORA ERC-721 Transfer Helper\n    ERC721TransferHelper public immutable erc721TransferHelper;\n\n    /// @param _erc20TransferHelper The ZORA ERC-20 Transfer Helper address\n    /// @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n    /// @param _royaltyEngine The Manifold Royalty Engine address\n    /// @param _protocolFeeSettings The ZORA Protocol Fee Settings address\n    /// @param _weth The WETH token address\n    constructor(\n        address _erc20TransferHelper,\n        address _erc721TransferHelper,\n        address _royaltyEngine,\n        address _protocolFeeSettings,\n        address _weth\n    )\n        IncomingTransferSupportV1(_erc20TransferHelper)\n        FeePayoutSupportV1(_royaltyEngine, _protocolFeeSettings, _weth, ERC721TransferHelper(_erc721TransferHelper).ZMM().registrar())\n        ModuleNamingSupportV1(\"Asks Core ERC-20\")\n    {\n        erc721TransferHelper = ERC721TransferHelper(_erc721TransferHelper);\n    }\n\n    /// @notice Implements EIP-165 for standard interface detection\n    /// @dev `0x01ffc9a7` is the IERC165 interface id\n    /// @param _interfaceId The identifier of a given interface\n    /// @return If the given interface is supported\n    function supportsInterface(bytes4 _interfaceId) external pure returns (bool) {\n        return _interfaceId == type(IAsksCoreErc20).interfaceId || _interfaceId == 0x01ffc9a7;\n    }\n\n    ///                                                          ///\n    ///                        ASK STORAGE                       ///\n    ///                                                          ///\n\n    /// @notice The metadata for a given ask\n    /// @param seller The address of the seller\n    /// @param price The price to fill the ask\n    /// @param currency The address of the ERC-20 currency, or address(0) for ETH\n    struct Ask {\n        address seller;\n        uint96 price;\n        address currency;\n    }\n\n    /// @notice The ask for a given NFT, if one exists\n    /// @dev ERC-721 token contract => ERC-721 token id => Ask\n    mapping(address => mapping(uint256 => Ask)) public askForNFT;\n\n    ///                                                          ///\n    ///                        CREATE ASK                        ///\n    ///                                                          ///\n\n    //     ,-.\n    //     `-'\n    //     /|\\\n    //      |             ,-------------.\n    //     / \\            |AsksCoreErc20|\n    //   Caller           `------+------'\n    //     |     createAsk()     |\n    //     | ------------------->|\n    //     |                     |\n    //     |                     ----.\n    //     |                         | store ask metadata\n    //     |                     <---'\n    //     |                     |\n    //     |                     ----.\n    //     |                         | emit AskCreated()\n    //     |                     <---'\n    //   Caller           ,------+------.\n    //     ,-.            |AsksCoreErc20|\n    //     `-'            `-------------'\n    //     /|\\\n    //      |\n    //     / \\\n\n    /// @notice Emitted when an ask is created\n    /// @param tokenContract The ERC-721 token address of the created ask\n    /// @param tokenId The ERC-721 token id of the created ask\n    /// @param ask The metadata of the created ask\n    event AskCreated(address indexed tokenContract, uint256 indexed tokenId, Ask ask);\n\n    /// @notice Creates an ask for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The id of the ERC-721 token\n    /// @param _price The price to fill the ask\n    /// @param _currency The currency of the ask price\n    function createAsk(\n        address _tokenContract,\n        uint256 _tokenId,\n        uint256 _price,\n        address _currency\n    ) external nonReentrant {\n        // Get the owner of the specified token\n        address tokenOwner = IERC721(_tokenContract).ownerOf(_tokenId);\n\n        // Ensure the caller is the owner or an approved operator\n        require(msg.sender == tokenOwner || IERC721(_tokenContract).isApprovedForAll(tokenOwner, msg.sender), \"ONLY_TOKEN_OWNER_OR_OPERATOR\");\n\n        // Ensure the price can be downcasted to 96 bits for this module\n        // For a higher ask price, use the supporting module\n        require(_price <= type(uint96).max, \"INVALID_ASK_PRICE\");\n\n        // Store the ask metadata\n        askForNFT[_tokenContract][_tokenId].seller = tokenOwner;\n        askForNFT[_tokenContract][_tokenId].price = uint96(_price);\n        askForNFT[_tokenContract][_tokenId].currency = _currency;\n\n        emit AskCreated(_tokenContract, _tokenId, askForNFT[_tokenContract][_tokenId]);\n    }\n\n    ///                                                          ///\n    ///                        UPDATE ASK                        ///\n    ///                                                          ///\n\n    //     ,-.\n    //     `-'\n    //     /|\\\n    //      |             ,-------------.\n    //     / \\            |AsksCoreErc20|\n    //   Caller           `------+------'\n    //     |    setAskPrice()    |\n    //     | ------------------->|\n    //     |                     |\n    //     |                     |\n    //     |    _______________________________________\n    //     |    ! ALT  /  price change?                !\n    //     |    !_____/          |                     !\n    //     |    !                ----.                 !\n    //     |    !                    | update price    !\n    //     |    !                <---'                 !\n    //     |    !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!\n    //     |    !~[noop]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!\n    //     |                     |\n    //     |                     |\n    //     |    __________________________________________\n    //     |    ! ALT  /  currency change?                !\n    //     |    !_____/          |                        !\n    //     |    !                ----.                    !\n    //     |    !                    | update currency    !\n    //     |    !                <---'                    !\n    //     |    !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!\n    //     |    !~[noop]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!\n    //     |                     |\n    //     |                     ----.\n    //     |                         | emit AskPriceUpdated()\n    //     |                     <---'\n    //   Caller           ,------+------.\n    //     ,-.            |AsksCoreErc20|\n    //     `-'            `-------------'\n    //     /|\\\n    //      |\n    //     / \\\n\n    /// @notice Emitted when an ask price is updated\n    /// @param tokenContract The ERC-721 token address of the updated ask\n    /// @param tokenId The ERC-721 token id of the updated ask\n    /// @param ask The metadata of the updated the ask\n    event AskPriceUpdated(address indexed tokenContract, uint256 indexed tokenId, Ask ask);\n\n    /// @notice Updates the ask for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The id of the ERC-721 token\n    /// @param _price The price to fill the ask\n    /// @param _currency The currency of the ask price\n    function setAskPrice(\n        address _tokenContract,\n        uint256 _tokenId,\n        uint256 _price,\n        address _currency\n    ) external nonReentrant {\n        // Get the ask for the specified token\n        Ask storage ask = askForNFT[_tokenContract][_tokenId];\n\n        // Ensure the caller is seller\n        require(msg.sender == ask.seller, \"ONLY_SELLER\");\n\n        // If updating the price,\n        if (_price != ask.price) {\n            // Ensure the price to set can be downcasted\n            require(_price <= type(uint96).max, \"INVALID_ASK_PRICE\");\n\n            // Store the new price\n            ask.price = uint96(_price);\n        }\n\n        // If updating the currency,\n        if (_currency != ask.currency) {\n            // Store the new currency\n            ask.currency = _currency;\n        }\n\n        emit AskPriceUpdated(_tokenContract, _tokenId, ask);\n    }\n\n    ///                                                          ///\n    ///                        CANCEL ASK                        ///\n    ///                                                          ///\n\n    //     ,-.\n    //     `-'\n    //     /|\\\n    //      |             ,-------------.\n    //     / \\            |AsksCoreErc20|\n    //   Caller           `------+------'\n    //     |     cancelAsk()     |\n    //     | ------------------->|\n    //     |                     |\n    //     |                     ----.\n    //     |                         | emit AskCanceled()\n    //     |                     <---'\n    //     |                     |\n    //     |                     ----.\n    //     |                         | delete ask\n    //     |                     <---'\n    //   Caller           ,------+------.\n    //     ,-.            |AsksCoreErc20|\n    //     `-'            `-------------'\n    //     /|\\\n    //      |\n    //     / \\\n\n    /// @notice Emitted when an ask is canceled\n    /// @param tokenContract The ERC-721 token address of the canceled ask\n    /// @param tokenId The ERC-721 token id of the canceled ask\n    /// @param ask The metadata of the canceled ask\n    event AskCanceled(address indexed tokenContract, uint256 indexed tokenId, Ask ask);\n\n    /// @notice Cancels the ask for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The id of the ERC-721 token\n    function cancelAsk(address _tokenContract, uint256 _tokenId) external nonReentrant {\n        // Get the ask for the specified token\n        Ask memory ask = askForNFT[_tokenContract][_tokenId];\n\n        // Ensure the caller is the seller or a new owner of the token\n        require(msg.sender == ask.seller || msg.sender == IERC721(_tokenContract).ownerOf(_tokenId), \"ONLY_SELLER_OR_TOKEN_OWNER\");\n\n        emit AskCanceled(_tokenContract, _tokenId, ask);\n\n        // Remove the ask from storage\n        delete askForNFT[_tokenContract][_tokenId];\n    }\n\n    ///                                                          ///\n    ///                         FILL ASK                         ///\n    ///                                                          ///\n\n    //     ,-.\n    //     `-'\n    //     /|\\\n    //      |             ,-------------.            ,--------------------.\n    //     / \\            |AsksCoreErc20|            |ERC721TransferHelper|\n    //   Caller           `------+------'            `---------+----------'\n    //     |      fillAsk()      |                             |\n    //     | ------------------->|                             |\n    //     |                     |                             |\n    //     |                     ----.\n    //     |                         | validate received payment\n    //     |                     <---'\n    //     |                     |                             |\n    //     |                     ----.                         |\n    //     |                         | handle royalty payouts  |\n    //     |                     <---'                         |\n    //     |                     |                             |\n    //     |                     ----.                         |\n    //     |                         | handle seller payout    |\n    //     |                     <---'                         |\n    //     |                     |                             |\n    //     |                     |       transferFrom()        |\n    //     |                     |----------------------------->\n    //     |                     |                             |\n    //     |                     |                             |----.\n    //     |                     |                             |    | transfer NFT from seller to buyer\n    //     |                     |                             |<---'\n    //     |                     |                             |\n    //     |                     ----.                         |\n    //     |                         | emit AskFilled()        |\n    //     |                     <---'                         |\n    //     |                     |                             |\n    //     |                     ----.                         |\n    //     |                         | delete ask from contract|\n    //     |                     <---'                         |\n    //   Caller           ,------+------.            ,---------+----------.\n    //     ,-.            |AsksCoreErc20|            |ERC721TransferHelper|\n    //     `-'            `-------------'            `--------------------'\n    //     /|\\\n    //      |\n    //     / \\\n\n    /// @notice Emitted when an ask is filled\n    /// @param tokenContract The ERC-721 token address of the filled ask\n    /// @param tokenId The ERC-721 token id of the filled ask\n    /// @param buyer The buyer address of the filled ask\n    /// @param ask The metadata of the filled ask\n    event AskFilled(address indexed tokenContract, uint256 indexed tokenId, address buyer, Ask ask);\n\n    /// @notice Fills the ask for a given NFT\n    /// @param _tokenContract The address of the ERC-721 token\n    /// @param _tokenId The id of the ERC-721 token\n    /// @param _price The price to fill the ask\n    /// @param _currency The currency to fill the ask\n    function fillAsk(\n        address _tokenContract,\n        uint256 _tokenId,\n        uint256 _price,\n        address _currency\n    ) external payable nonReentrant {\n        // Get the ask for the specified token\n        Ask memory ask = askForNFT[_tokenContract][_tokenId];\n\n        // Cache the seller\n        address seller = ask.seller;\n\n        // Ensure the ask is active\n        require(seller != address(0), \"INACTIVE_ASK\");\n\n        // Cache the price\n        uint256 price = ask.price;\n\n        // Ensure the specified price matches the ask price\n        require(_price == price, \"MUST_MATCH_PRICE\");\n\n        // Cache the currency\n        address currency = ask.currency;\n\n        // Ensure the specified currency matches the ask currency\n        require(_currency == currency, \"MUST_MATCH_CURRENCY\");\n\n        // Transfer the ask price from the buyer\n        // If ETH, this reverts if the buyer did not attach enough\n        // If ERC-20, this reverts if the buyer did not approve the ERC20TransferHelper or does not own the specified tokens\n        _handleIncomingTransfer(price, currency);\n\n        // Payout associated token royalties, if any\n        (uint256 remainingProfit, ) = _handleRoyaltyPayout(_tokenContract, _tokenId, price, currency, 300000);\n\n        // Payout the module fee, if configured\n        remainingProfit = _handleProtocolFeePayout(remainingProfit, currency);\n\n        // Transfer the remaining profit to the seller\n        _handleOutgoingTransfer(seller, remainingProfit, currency, 50000);\n\n        // Transfer the NFT to the buyer\n        // Reverts if the seller did not approve the ERC721TransferHelper or no longer owns the token\n        erc721TransferHelper.transferFrom(_tokenContract, seller, msg.sender, _tokenId);\n\n        emit AskFilled(_tokenContract, _tokenId, msg.sender, ask);\n\n        // Remove the ask from storage\n        delete askForNFT[_tokenContract][_tokenId];\n    }\n}\n",
  "sourcePath": "/Users/ds/Documents/rarible/scripts/contracts/modules/Asks/Core/ERC20/AsksCoreErc20.sol",
  "ast": {
    "absolutePath": "project:/contracts/modules/Asks/Core/ERC20/AsksCoreErc20.sol",
    "exportedSymbols": {
      "AsksCoreErc20": [
        9230
      ],
      "ERC721TransferHelper": [
        16334
      ],
      "FeePayoutSupportV1": [
        8453
      ],
      "IAsksCoreErc20": [
        9278
      ],
      "IERC721": [
        5438
      ],
      "IncomingTransferSupportV1": [
        8558
      ],
      "ModuleNamingSupportV1": [
        8576
      ],
      "ReentrancyGuard": [
        6294
      ]
    },
    "id": 9231,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8748,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:57"
      },
      {
        "absolutePath": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "id": 8750,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 6295,
        "src": "61:84:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8749,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8752,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 5439,
        "src": "146:73:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8751,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../../transferHelpers/ERC721TransferHelper.sol",
        "id": 8754,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 16335,
        "src": "221:90:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8753,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "229:20:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "file": "../../../../common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "id": 8756,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 8559,
        "src": "312:118:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8755,
              "name": "IncomingTransferSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "320:25:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "id": 8758,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 8454,
        "src": "431:94:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8757,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "439:18:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "id": 8760,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 8577,
        "src": "526:103:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8759,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "534:21:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/modules/Asks/Core/ERC20/IAsksCoreErc20.sol",
        "file": "./IAsksCoreErc20.sol",
        "id": 8762,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 9279,
        "src": "630:52:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8761,
              "name": "IAsksCoreErc20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "638:14:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8764,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6294,
              "src": "823:15:57"
            },
            "id": 8765,
            "nodeType": "InheritanceSpecifier",
            "src": "823:15:57"
          },
          {
            "baseName": {
              "id": 8766,
              "name": "IncomingTransferSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8558,
              "src": "840:25:57"
            },
            "id": 8767,
            "nodeType": "InheritanceSpecifier",
            "src": "840:25:57"
          },
          {
            "baseName": {
              "id": 8768,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8453,
              "src": "867:18:57"
            },
            "id": 8769,
            "nodeType": "InheritanceSpecifier",
            "src": "867:18:57"
          },
          {
            "baseName": {
              "id": 8770,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8576,
              "src": "887:21:57"
            },
            "id": 8771,
            "nodeType": "InheritanceSpecifier",
            "src": "887:21:57"
          }
        ],
        "canonicalName": "AsksCoreErc20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8763,
          "nodeType": "StructuredDocumentation",
          "src": "684:113:57",
          "text": "@title Asks Core ERC-20\n @author kulkarohan\n @notice Module for minimal ERC-20 asks for ERC-721 tokens"
        },
        "fullyImplemented": true,
        "id": 9230,
        "linearizedBaseContracts": [
          9230,
          8576,
          8453,
          8722,
          8558,
          6294
        ],
        "name": "AsksCoreErc20",
        "nameLocation": "806:13:57",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 8772,
              "nodeType": "StructuredDocumentation",
              "src": "1123:44:57",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "id": 8775,
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1210:20:57",
            "nodeType": "VariableDeclaration",
            "scope": 9230,
            "src": "1172:58:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 8774,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8773,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16334,
                "src": "1172:20:57"
              },
              "referencedDeclaration": 16334,
              "src": "1172:20:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8813,
              "nodeType": "Block",
              "src": "2009:83:57",
              "statements": [
                {
                  "expression": {
                    "id": 8811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8807,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8775,
                      "src": "2019:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8809,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8780,
                          "src": "2063:21:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8808,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16334,
                        "src": "2042:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 8810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2042:43:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "2019:66:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 8812,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:66:57"
                }
              ]
            },
            "documentation": {
              "id": 8776,
              "nodeType": "StructuredDocumentation",
              "src": "1237:334:57",
              "text": "@param _erc20TransferHelper The ZORA ERC-20 Transfer Helper address\n @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address\n @param _protocolFeeSettings The ZORA Protocol Fee Settings address\n @param _weth The WETH token address"
            },
            "id": 8814,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8789,
                    "name": "_erc20TransferHelper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8778,
                    "src": "1798:20:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8790,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8788,
                  "name": "IncomingTransferSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8558,
                  "src": "1772:25:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1772:47:57"
              },
              {
                "arguments": [
                  {
                    "id": 8792,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8782,
                    "src": "1847:14:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 8793,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8784,
                    "src": "1863:20:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 8794,
                    "name": "_weth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8786,
                    "src": "1885:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8796,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8780,
                                "src": "1913:21:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8795,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16334,
                              "src": "1892:20:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 8797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1892:43:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 8798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16083,
                          "src": "1892:47:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$6707_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 8799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1892:49:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$6707",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 8800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6372,
                      "src": "1892:59:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 8801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:61:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8802,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8791,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8453,
                  "src": "1828:18:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1828:126:57"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b7320436f7265204552432d3230",
                    "id": 8804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1985:18:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_957638827bb464e6b123c0171deaffb22d80c97ab19a1a4b92c35a73ed579925",
                      "typeString": "literal_string \"Asks Core ERC-20\""
                    },
                    "value": "Asks Core ERC-20"
                  }
                ],
                "id": 8805,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8803,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8576,
                  "src": "1963:21:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1963:41:57"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8778,
                  "mutability": "mutable",
                  "name": "_erc20TransferHelper",
                  "nameLocation": "1605:20:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1597:28:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8780,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "1643:21:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1635:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8782,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "1682:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1674:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8784,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "1714:20:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1706:28:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8786,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "1752:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1744:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1744:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:176:57"
            },
            "returnParameters": {
              "id": 8806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:0:57"
            },
            "scope": 9230,
            "src": "1576:516:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8833,
              "nodeType": "Block",
              "src": "2413:102:57",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 8827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8822,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8817,
                        "src": "2430:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8824,
                              "name": "IAsksCoreErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9278,
                              "src": "2451:14:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreErc20_$9278_$",
                                "typeString": "type(contract IAsksCoreErc20)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreErc20_$9278_$",
                                "typeString": "type(contract IAsksCoreErc20)"
                              }
                            ],
                            "id": 8823,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2446:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 8825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2446:20:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IAsksCoreErc20_$9278",
                            "typeString": "type(contract IAsksCoreErc20)"
                          }
                        },
                        "id": 8826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2446:32:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2430:48:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 8830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8828,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8817,
                        "src": "2482:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 8829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2498:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "src": "2482:26:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2430:78:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8821,
                  "id": 8832,
                  "nodeType": "Return",
                  "src": "2423:85:57"
                }
              ]
            },
            "documentation": {
              "id": 8815,
              "nodeType": "StructuredDocumentation",
              "src": "2098:233:57",
              "text": "@notice Implements EIP-165 for standard interface detection\n @dev `0x01ffc9a7` is the IERC165 interface id\n @param _interfaceId The identifier of a given interface\n @return If the given interface is supported"
            },
            "functionSelector": "01ffc9a7",
            "id": 8834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2345:17:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8817,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "2370:12:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8834,
                  "src": "2363:19:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8816,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2363:6:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2362:21:57"
            },
            "returnParameters": {
              "id": 8821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8820,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8834,
                  "src": "2407:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8819,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2407:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2406:6:57"
            },
            "scope": 9230,
            "src": "2336:179:57",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "AsksCoreErc20.Ask",
            "id": 8841,
            "members": [
              {
                "constant": false,
                "id": 8836,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2980:6:57",
                "nodeType": "VariableDeclaration",
                "scope": 8841,
                "src": "2972:14:57",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8835,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2972:7:57",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8838,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "3003:5:57",
                "nodeType": "VariableDeclaration",
                "scope": 8841,
                "src": "2996:12:57",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 8837,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2996:6:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8840,
                "mutability": "mutable",
                "name": "currency",
                "nameLocation": "3026:8:57",
                "nodeType": "VariableDeclaration",
                "scope": 8841,
                "src": "3018:16:57",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8839,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3018:7:57",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "2958:3:57",
            "nodeType": "StructDefinition",
            "scope": 9230,
            "src": "2951:90:57",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 8842,
              "nodeType": "StructuredDocumentation",
              "src": "3047:113:57",
              "text": "@notice The ask for a given NFT, if one exists\n @dev ERC-721 token contract => ERC-721 token id => Ask"
            },
            "functionSelector": "418f0656",
            "id": 8849,
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "3216:9:57",
            "nodeType": "VariableDeclaration",
            "scope": 9230,
            "src": "3165:60:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask))"
            },
            "typeName": {
              "id": 8848,
              "keyType": {
                "id": 8843,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3173:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3165:43:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask))"
              },
              "valueType": {
                "id": 8847,
                "keyType": {
                  "id": 8844,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3192:7:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "3184:23:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                  "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask)"
                },
                "valueType": {
                  "id": 8846,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8845,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8841,
                    "src": "3203:3:57"
                  },
                  "referencedDeclaration": 8841,
                  "src": "3203:3:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8850,
              "nodeType": "StructuredDocumentation",
              "src": "4193:230:57",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token id of the created ask\n @param ask The metadata of the created ask"
            },
            "id": 8859,
            "name": "AskCreated",
            "nameLocation": "4434:10:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8852,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "4461:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8859,
                  "src": "4445:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4445:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8854,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4492:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8859,
                  "src": "4476:23:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4476:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8857,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "4505:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8859,
                  "src": "4501:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 8856,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8855,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8841,
                      "src": "4501:3:57"
                    },
                    "referencedDeclaration": 8841,
                    "src": "4501:3:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4444:65:57"
            },
            "src": "4428:82:57"
          },
          {
            "body": {
              "id": 8950,
              "nodeType": "Block",
              "src": "4937:861:57",
              "statements": [
                {
                  "assignments": [
                    8874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8874,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "5003:10:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 8950,
                      "src": "4995:18:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8873,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4995:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8881,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8879,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8864,
                        "src": "5048:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8876,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5024:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8875,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "5016:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 8877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5016:23:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5438",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 8878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5371,
                      "src": "5016:31:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 8880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5016:41:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4995:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8883,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5142:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5142:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 8885,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8874,
                            "src": "5156:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5142:24:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 8891,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8874,
                              "src": "5211:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 8892,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5223:3:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5223:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8888,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8862,
                                  "src": "5178:14:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8887,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5438,
                                "src": "5170:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 8889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5170:23:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5438",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 8890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5425,
                            "src": "5170:40:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 8894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5170:64:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5142:92:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "id": 8896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5236:30:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        },
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        }
                      ],
                      "id": 8882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5134:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5134:133:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8898,
                  "nodeType": "ExpressionStatement",
                  "src": "5134:133:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8900,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8866,
                          "src": "5420:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5435:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": {
                                  "id": 8902,
                                  "name": "uint96",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5435:6:57",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                }
                              ],
                              "id": 8901,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "5430:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 8904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5430:12:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint96",
                              "typeString": "type(uint96)"
                            }
                          },
                          "id": 8905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "5430:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "5420:26:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c49445f41534b5f5052494345",
                        "id": 8907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5448:19:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                          "typeString": "literal_string \"INVALID_ASK_PRICE\""
                        },
                        "value": "INVALID_ASK_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                          "typeString": "literal_string \"INVALID_ASK_PRICE\""
                        }
                      ],
                      "id": 8899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5412:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5412:56:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8909,
                  "nodeType": "ExpressionStatement",
                  "src": "5412:56:57"
                },
                {
                  "expression": {
                    "id": 8917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8910,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "5513:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 8913,
                          "indexExpression": {
                            "id": 8911,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5523:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5513:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 8914,
                        "indexExpression": {
                          "id": 8912,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8864,
                          "src": "5539:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5513:35:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      },
                      "id": 8915,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8836,
                      "src": "5513:42:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8916,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8874,
                      "src": "5558:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5513:55:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8918,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:55:57"
                },
                {
                  "expression": {
                    "id": 8929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8919,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "5578:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 8922,
                          "indexExpression": {
                            "id": 8920,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5588:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5578:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 8923,
                        "indexExpression": {
                          "id": 8921,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8864,
                          "src": "5604:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5578:35:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      },
                      "id": 8924,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8838,
                      "src": "5578:41:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8927,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8866,
                          "src": "5629:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5622:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 8925,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5622:6:57",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5622:14:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "5578:58:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 8930,
                  "nodeType": "ExpressionStatement",
                  "src": "5578:58:57"
                },
                {
                  "expression": {
                    "id": 8938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8931,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "5646:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 8934,
                          "indexExpression": {
                            "id": 8932,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5656:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5646:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 8935,
                        "indexExpression": {
                          "id": 8933,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8864,
                          "src": "5672:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5646:35:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      },
                      "id": 8936,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8840,
                      "src": "5646:44:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8937,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8868,
                      "src": "5693:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5646:56:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8939,
                  "nodeType": "ExpressionStatement",
                  "src": "5646:56:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8941,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8862,
                        "src": "5729:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8942,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8864,
                        "src": "5745:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8943,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "5755:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 8945,
                          "indexExpression": {
                            "id": 8944,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5765:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5755:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 8947,
                        "indexExpression": {
                          "id": 8946,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8864,
                          "src": "5781:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5755:35:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      ],
                      "id": 8940,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8859,
                      "src": "5718:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$8841_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 8948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5718:73:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8949,
                  "nodeType": "EmitStatement",
                  "src": "5713:78:57"
                }
              ]
            },
            "documentation": {
              "id": 8860,
              "nodeType": "StructuredDocumentation",
              "src": "4516:260:57",
              "text": "@notice Creates an ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask\n @param _currency The currency of the ask price"
            },
            "functionSelector": "2b9f663e",
            "id": 8951,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8871,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8870,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "4924:12:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "4924:12:57"
              }
            ],
            "name": "createAsk",
            "nameLocation": "4790:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8862,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "4817:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8951,
                  "src": "4809:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4809:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8864,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4849:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8951,
                  "src": "4841:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4841:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8866,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4875:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8951,
                  "src": "4867:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8868,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "4899:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8951,
                  "src": "4891:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4891:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4799:115:57"
            },
            "returnParameters": {
              "id": 8872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4937:0:57"
            },
            "scope": 9230,
            "src": "4781:1017:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8952,
              "nodeType": "StructuredDocumentation",
              "src": "7673:240:57",
              "text": "@notice Emitted when an ask price is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token id of the updated ask\n @param ask The metadata of the updated the ask"
            },
            "id": 8961,
            "name": "AskPriceUpdated",
            "nameLocation": "7924:15:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8954,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "7956:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8961,
                  "src": "7940:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7940:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8956,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7987:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8961,
                  "src": "7971:23:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7971:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8959,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "8000:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8961,
                  "src": "7996:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 8958,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8957,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8841,
                      "src": "7996:3:57"
                    },
                    "referencedDeclaration": 8841,
                    "src": "7996:3:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7939:65:57"
            },
            "src": "7918:87:57"
          },
          {
            "body": {
              "id": 9037,
              "nodeType": "Block",
              "src": "8435:725:57",
              "statements": [
                {
                  "assignments": [
                    8977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8977,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "8504:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9037,
                      "src": "8492:15:57",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                        "typeString": "struct AsksCoreErc20.Ask"
                      },
                      "typeName": {
                        "id": 8976,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8975,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8841,
                          "src": "8492:3:57"
                        },
                        "referencedDeclaration": 8841,
                        "src": "8492:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8983,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 8978,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8849,
                        "src": "8510:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                        }
                      },
                      "id": 8980,
                      "indexExpression": {
                        "id": 8979,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8964,
                        "src": "8520:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8510:25:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                      }
                    },
                    "id": 8982,
                    "indexExpression": {
                      "id": 8981,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8966,
                      "src": "8536:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8510:35:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage",
                      "typeString": "struct AsksCoreErc20.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8492:53:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8985,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8603:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8603:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8987,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8977,
                            "src": "8617:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                              "typeString": "struct AsksCoreErc20.Ask storage pointer"
                            }
                          },
                          "id": 8988,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8836,
                          "src": "8617:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8603:24:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c4552",
                        "id": 8990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8629:13:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        },
                        "value": "ONLY_SELLER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        }
                      ],
                      "id": 8984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8595:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8595:48:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8992,
                  "nodeType": "ExpressionStatement",
                  "src": "8595:48:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8993,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8968,
                      "src": "8692:6:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 8994,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8977,
                        "src": "8702:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      },
                      "id": 8995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8838,
                      "src": "8702:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "8692:19:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9018,
                  "nodeType": "IfStatement",
                  "src": "8688:239:57",
                  "trueBody": {
                    "id": 9017,
                    "nodeType": "Block",
                    "src": "8713:214:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8998,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8968,
                                "src": "8792:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 9001,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8807:6:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint96_$",
                                        "typeString": "type(uint96)"
                                      },
                                      "typeName": {
                                        "id": 9000,
                                        "name": "uint96",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8807:6:57",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint96_$",
                                        "typeString": "type(uint96)"
                                      }
                                    ],
                                    "id": 8999,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967269,
                                    "src": "8802:4:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 9002,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8802:12:57",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint96",
                                    "typeString": "type(uint96)"
                                  }
                                },
                                "id": 9003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "8802:16:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "src": "8792:26:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e56414c49445f41534b5f5052494345",
                              "id": 9005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8820:19:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                                "typeString": "literal_string \"INVALID_ASK_PRICE\""
                              },
                              "value": "INVALID_ASK_PRICE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                                "typeString": "literal_string \"INVALID_ASK_PRICE\""
                              }
                            ],
                            "id": 8997,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "8784:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8784:56:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9007,
                        "nodeType": "ExpressionStatement",
                        "src": "8784:56:57"
                      },
                      {
                        "expression": {
                          "id": 9015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 9008,
                              "name": "ask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8977,
                              "src": "8890:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                                "typeString": "struct AsksCoreErc20.Ask storage pointer"
                              }
                            },
                            "id": 9010,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8838,
                            "src": "8890:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 9013,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8968,
                                "src": "8909:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 9012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8902:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": {
                                "id": 9011,
                                "name": "uint96",
                                "nodeType": "ElementaryTypeName",
                                "src": "8902:6:57",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8902:14:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "8890:26:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 9016,
                        "nodeType": "ExpressionStatement",
                        "src": "8890:26:57"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9019,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8970,
                      "src": "8978:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 9020,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8977,
                        "src": "8991:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      },
                      "id": 9021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8840,
                      "src": "8991:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8978:25:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9030,
                  "nodeType": "IfStatement",
                  "src": "8974:118:57",
                  "trueBody": {
                    "id": 9029,
                    "nodeType": "Block",
                    "src": "9005:87:57",
                    "statements": [
                      {
                        "expression": {
                          "id": 9027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 9023,
                              "name": "ask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8977,
                              "src": "9057:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                                "typeString": "struct AsksCoreErc20.Ask storage pointer"
                              }
                            },
                            "id": 9025,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "currency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8840,
                            "src": "9057:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 9026,
                            "name": "_currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8970,
                            "src": "9072:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9057:24:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 9028,
                        "nodeType": "ExpressionStatement",
                        "src": "9057:24:57"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9032,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8964,
                        "src": "9123:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9033,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8966,
                        "src": "9139:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9034,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8977,
                        "src": "9149:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      ],
                      "id": 9031,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8961,
                      "src": "9107:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$8841_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 9035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9107:46:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9036,
                  "nodeType": "EmitStatement",
                  "src": "9102:51:57"
                }
              ]
            },
            "documentation": {
              "id": 8962,
              "nodeType": "StructuredDocumentation",
              "src": "8011:261:57",
              "text": "@notice Updates the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask\n @param _currency The currency of the ask price"
            },
            "functionSelector": "b2007533",
            "id": 9038,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8973,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8972,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "8422:12:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "8422:12:57"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "8286:11:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8964,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "8315:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "8307:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8307:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8966,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8347:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "8339:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8339:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8968,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "8373:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "8365:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8365:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8970,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8397:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "8389:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8389:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8297:115:57"
            },
            "returnParameters": {
              "id": 8974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8435:0:57"
            },
            "scope": 9230,
            "src": "8277:883:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9039,
              "nodeType": "StructuredDocumentation",
              "src": "10120:234:57",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token id of the canceled ask\n @param ask The metadata of the canceled ask"
            },
            "id": 9048,
            "name": "AskCanceled",
            "nameLocation": "10365:11:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9041,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "10393:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9048,
                  "src": "10377:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10377:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9043,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10424:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9048,
                  "src": "10408:23:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10408:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9046,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "10437:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9048,
                  "src": "10433:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 9045,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9044,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8841,
                      "src": "10433:3:57"
                    },
                    "referencedDeclaration": 8841,
                    "src": "10433:3:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10376:65:57"
            },
            "src": "10359:83:57"
          },
          {
            "body": {
              "id": 9099,
              "nodeType": "Block",
              "src": "10694:470:57",
              "statements": [
                {
                  "assignments": [
                    9060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9060,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "10762:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9099,
                      "src": "10751:14:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask"
                      },
                      "typeName": {
                        "id": 9059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9058,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8841,
                          "src": "10751:3:57"
                        },
                        "referencedDeclaration": 8841,
                        "src": "10751:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9066,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9061,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8849,
                        "src": "10768:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                        }
                      },
                      "id": 9063,
                      "indexExpression": {
                        "id": 9062,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9051,
                        "src": "10778:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10768:25:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                      }
                    },
                    "id": 9065,
                    "indexExpression": {
                      "id": 9064,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9053,
                      "src": "10794:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10768:35:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage",
                      "typeString": "struct AsksCoreErc20.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10751:52:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9068,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "10893:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10893:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 9070,
                              "name": "ask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9060,
                              "src": "10907:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                                "typeString": "struct AsksCoreErc20.Ask memory"
                              }
                            },
                            "id": 9071,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8836,
                            "src": "10907:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10893:24:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9073,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "10921:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10921:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 9079,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9053,
                                "src": "10967:8:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 9076,
                                    "name": "_tokenContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9051,
                                    "src": "10943:14:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 9075,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5438,
                                  "src": "10935:7:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 9077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10935:23:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$5438",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 9078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5371,
                              "src": "10935:31:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 9080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10935:41:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10921:55:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10893:83:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552",
                        "id": 9083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10978:28:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        },
                        "value": "ONLY_SELLER_OR_TOKEN_OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        }
                      ],
                      "id": 9067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10885:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10885:122:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9085,
                  "nodeType": "ExpressionStatement",
                  "src": "10885:122:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9087,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9051,
                        "src": "11035:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9088,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9053,
                        "src": "11051:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9089,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9060,
                        "src": "11061:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      ],
                      "id": 9086,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9048,
                      "src": "11023:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$8841_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 9090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11023:42:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9091,
                  "nodeType": "EmitStatement",
                  "src": "11018:47:57"
                },
                {
                  "expression": {
                    "id": 9097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11115:42:57",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9092,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8849,
                          "src": "11122:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                          }
                        },
                        "id": 9094,
                        "indexExpression": {
                          "id": 9093,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9051,
                          "src": "11132:14:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11122:25:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                        }
                      },
                      "id": 9096,
                      "indexExpression": {
                        "id": 9095,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9053,
                        "src": "11148:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11122:35:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_storage",
                        "typeString": "struct AsksCoreErc20.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9098,
                  "nodeType": "ExpressionStatement",
                  "src": "11115:42:57"
                }
              ]
            },
            "documentation": {
              "id": 9049,
              "nodeType": "StructuredDocumentation",
              "src": "10448:158:57",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "id": 9100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9056,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9055,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "10681:12:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "10681:12:57"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "10620:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9051,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "10638:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9100,
                  "src": "10630:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10630:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9053,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10662:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9100,
                  "src": "10654:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10654:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10629:42:57"
            },
            "returnParameters": {
              "id": 9057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10694:0:57"
            },
            "scope": 9230,
            "src": "10611:553:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9101,
              "nodeType": "StructuredDocumentation",
              "src": "13806:283:57",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token id of the filled ask\n @param buyer The buyer address of the filled ask\n @param ask The metadata of the filled ask"
            },
            "id": 9112,
            "name": "AskFilled",
            "nameLocation": "14100:9:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "14126:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9112,
                  "src": "14110:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14110:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9105,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14157:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9112,
                  "src": "14141:23:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14141:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "14174:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9112,
                  "src": "14166:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14166:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "14185:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9112,
                  "src": "14181:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 9109,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9108,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8841,
                      "src": "14181:3:57"
                    },
                    "referencedDeclaration": 8841,
                    "src": "14181:3:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14109:80:57"
            },
            "src": "14094:96:57"
          },
          {
            "body": {
              "id": 9228,
              "nodeType": "Block",
              "src": "14621:1763:57",
              "statements": [
                {
                  "assignments": [
                    9128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9128,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "14689:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "14678:14:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask"
                      },
                      "typeName": {
                        "id": 9127,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9126,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8841,
                          "src": "14678:3:57"
                        },
                        "referencedDeclaration": 8841,
                        "src": "14678:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9134,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9129,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8849,
                        "src": "14695:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                        }
                      },
                      "id": 9131,
                      "indexExpression": {
                        "id": 9130,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9115,
                        "src": "14705:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14695:25:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                      }
                    },
                    "id": 9133,
                    "indexExpression": {
                      "id": 9132,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9117,
                      "src": "14721:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14695:35:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage",
                      "typeString": "struct AsksCoreErc20.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14678:52:57"
                },
                {
                  "assignments": [
                    9136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9136,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "14777:6:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "14769:14:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9135,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14769:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9139,
                  "initialValue": {
                    "expression": {
                      "id": 9137,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9128,
                      "src": "14786:3:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask memory"
                      }
                    },
                    "id": 9138,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8836,
                    "src": "14786:10:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14769:27:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9141,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9136,
                          "src": "14851:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14869:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14861:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9142,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14861:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14861:10:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14851:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e4143544956455f41534b",
                        "id": 9147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14873:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        },
                        "value": "INACTIVE_ASK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        }
                      ],
                      "id": 9140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14843:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14843:45:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9149,
                  "nodeType": "ExpressionStatement",
                  "src": "14843:45:57"
                },
                {
                  "assignments": [
                    9151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9151,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "14934:5:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "14926:13:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9150,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14926:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9154,
                  "initialValue": {
                    "expression": {
                      "id": 9152,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9128,
                      "src": "14942:3:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask memory"
                      }
                    },
                    "id": 9153,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8838,
                    "src": "14942:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14926:25:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9156,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9119,
                          "src": "15030:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 9157,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9151,
                          "src": "15040:5:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15030:15:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f5052494345",
                        "id": 9159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15047:18:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        },
                        "value": "MUST_MATCH_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        }
                      ],
                      "id": 9155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15022:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15022:44:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9161,
                  "nodeType": "ExpressionStatement",
                  "src": "15022:44:57"
                },
                {
                  "assignments": [
                    9163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9163,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "15115:8:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "15107:16:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9162,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15107:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9166,
                  "initialValue": {
                    "expression": {
                      "id": 9164,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9128,
                      "src": "15126:3:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask memory"
                      }
                    },
                    "id": 9165,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8840,
                    "src": "15126:12:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15107:31:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9168,
                          "name": "_currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9121,
                          "src": "15223:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 9169,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9163,
                          "src": "15236:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15223:21:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f43555252454e4359",
                        "id": 9171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15246:21:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f4a4e33bc7f7847179428ccd22e21acb55f2b165452820a8994eefa5eed2099",
                          "typeString": "literal_string \"MUST_MATCH_CURRENCY\""
                        },
                        "value": "MUST_MATCH_CURRENCY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f4a4e33bc7f7847179428ccd22e21acb55f2b165452820a8994eefa5eed2099",
                          "typeString": "literal_string \"MUST_MATCH_CURRENCY\""
                        }
                      ],
                      "id": 9167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15215:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15215:53:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9173,
                  "nodeType": "ExpressionStatement",
                  "src": "15215:53:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9175,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9151,
                        "src": "15544:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9176,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9163,
                        "src": "15551:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9174,
                      "name": "_handleIncomingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8557,
                      "src": "15520:23:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15520:40:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9178,
                  "nodeType": "ExpressionStatement",
                  "src": "15520:40:57"
                },
                {
                  "assignments": [
                    9180,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9180,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "15633:15:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "15625:23:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15625:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 9188,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9182,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9115,
                        "src": "15675:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9183,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9117,
                        "src": "15691:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9184,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9151,
                        "src": "15701:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9185,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9163,
                        "src": "15708:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "333030303030",
                        "id": 9186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15718:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        "value": "300000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        }
                      ],
                      "id": 9181,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "15654:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 9187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15654:71:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15624:101:57"
                },
                {
                  "expression": {
                    "id": 9194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9189,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9180,
                      "src": "15784:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9191,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9180,
                          "src": "15827:15:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9192,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9163,
                          "src": "15844:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9190,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8280,
                        "src": "15802:24:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 9193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15802:51:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15784:69:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9195,
                  "nodeType": "ExpressionStatement",
                  "src": "15784:69:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9197,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9136,
                        "src": "15943:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9198,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9180,
                        "src": "15951:15:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9199,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9163,
                        "src": "15968:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 9200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15978:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 9196,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8721,
                      "src": "15919:23:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15919:65:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9202,
                  "nodeType": "ExpressionStatement",
                  "src": "15919:65:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9206,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9115,
                        "src": "16172:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9207,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9136,
                        "src": "16188:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9208,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16196:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16196:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9210,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9117,
                        "src": "16208:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9203,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8775,
                        "src": "16138:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 9205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16333,
                      "src": "16138:33:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 9211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16138:79:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9212,
                  "nodeType": "ExpressionStatement",
                  "src": "16138:79:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9214,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9115,
                        "src": "16243:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9215,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9117,
                        "src": "16259:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16269:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16269:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9218,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9128,
                        "src": "16281:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      ],
                      "id": 9213,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9112,
                      "src": "16233:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_struct$_Ask_$8841_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 9219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16233:52:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9220,
                  "nodeType": "EmitStatement",
                  "src": "16228:57:57"
                },
                {
                  "expression": {
                    "id": 9226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "16335:42:57",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9221,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8849,
                          "src": "16342:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                          }
                        },
                        "id": 9223,
                        "indexExpression": {
                          "id": 9222,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9115,
                          "src": "16352:14:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16342:25:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                        }
                      },
                      "id": 9225,
                      "indexExpression": {
                        "id": 9224,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9117,
                        "src": "16368:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16342:35:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_storage",
                        "typeString": "struct AsksCoreErc20.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9227,
                  "nodeType": "ExpressionStatement",
                  "src": "16335:42:57"
                }
              ]
            },
            "documentation": {
              "id": 9113,
              "nodeType": "StructuredDocumentation",
              "src": "14196:258:57",
              "text": "@notice Fills the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask\n @param _currency The currency to fill the ask"
            },
            "functionSelector": "d8606343",
            "id": 9229,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9123,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "14608:12:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "14608:12:57"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "14468:7:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9115,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "14493:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9229,
                  "src": "14485:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14485:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9117,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "14525:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9229,
                  "src": "14517:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14517:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9119,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "14551:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9229,
                  "src": "14543:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14543:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9121,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "14575:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9229,
                  "src": "14567:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14567:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14475:115:57"
            },
            "returnParameters": {
              "id": 9125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14621:0:57"
            },
            "scope": 9230,
            "src": "14459:1925:57",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9231,
        "src": "797:15589:57",
        "usedErrors": []
      }
    ],
    "src": "36:16351:57"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/modules/Asks/Core/ERC20/AsksCoreErc20.sol",
    "exportedSymbols": {
      "AsksCoreErc20": [
        9230
      ],
      "ERC721TransferHelper": [
        16334
      ],
      "FeePayoutSupportV1": [
        8453
      ],
      "IAsksCoreErc20": [
        9278
      ],
      "IERC721": [
        5438
      ],
      "IncomingTransferSupportV1": [
        8558
      ],
      "ModuleNamingSupportV1": [
        8576
      ],
      "ReentrancyGuard": [
        6294
      ]
    },
    "id": 9231,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8748,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:57"
      },
      {
        "absolutePath": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "file": "@rari-capital/solmate/src/utils/ReentrancyGuard.sol",
        "id": 8750,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 6295,
        "src": "61:84:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8749,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:15:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8752,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 5439,
        "src": "146:73:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8751,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "154:7:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/transferHelpers/ERC721TransferHelper.sol",
        "file": "../../../../transferHelpers/ERC721TransferHelper.sol",
        "id": 8754,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 16335,
        "src": "221:90:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8753,
              "name": "ERC721TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "229:20:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "file": "../../../../common/IncomingTransferSupport/V1/IncomingTransferSupportV1.sol",
        "id": 8756,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 8559,
        "src": "312:118:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8755,
              "name": "IncomingTransferSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "320:25:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "file": "../../../../common/FeePayoutSupport/FeePayoutSupportV1.sol",
        "id": 8758,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 8454,
        "src": "431:94:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8757,
              "name": "FeePayoutSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "439:18:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "file": "../../../../common/ModuleNamingSupport/ModuleNamingSupportV1.sol",
        "id": 8760,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 8577,
        "src": "526:103:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8759,
              "name": "ModuleNamingSupportV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "534:21:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/modules/Asks/Core/ERC20/IAsksCoreErc20.sol",
        "file": "./IAsksCoreErc20.sol",
        "id": 8762,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9231,
        "sourceUnit": 9279,
        "src": "630:52:57",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8761,
              "name": "IAsksCoreErc20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "638:14:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8764,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6294,
              "src": "823:15:57"
            },
            "id": 8765,
            "nodeType": "InheritanceSpecifier",
            "src": "823:15:57"
          },
          {
            "baseName": {
              "id": 8766,
              "name": "IncomingTransferSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8558,
              "src": "840:25:57"
            },
            "id": 8767,
            "nodeType": "InheritanceSpecifier",
            "src": "840:25:57"
          },
          {
            "baseName": {
              "id": 8768,
              "name": "FeePayoutSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8453,
              "src": "867:18:57"
            },
            "id": 8769,
            "nodeType": "InheritanceSpecifier",
            "src": "867:18:57"
          },
          {
            "baseName": {
              "id": 8770,
              "name": "ModuleNamingSupportV1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8576,
              "src": "887:21:57"
            },
            "id": 8771,
            "nodeType": "InheritanceSpecifier",
            "src": "887:21:57"
          }
        ],
        "canonicalName": "AsksCoreErc20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8763,
          "nodeType": "StructuredDocumentation",
          "src": "684:113:57",
          "text": "@title Asks Core ERC-20\n @author kulkarohan\n @notice Module for minimal ERC-20 asks for ERC-721 tokens"
        },
        "fullyImplemented": true,
        "id": 9230,
        "linearizedBaseContracts": [
          9230,
          8576,
          8453,
          8722,
          8558,
          6294
        ],
        "name": "AsksCoreErc20",
        "nameLocation": "806:13:57",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 8772,
              "nodeType": "StructuredDocumentation",
              "src": "1123:44:57",
              "text": "@notice The ZORA ERC-721 Transfer Helper"
            },
            "functionSelector": "f7cd1d9b",
            "id": 8775,
            "mutability": "immutable",
            "name": "erc721TransferHelper",
            "nameLocation": "1210:20:57",
            "nodeType": "VariableDeclaration",
            "scope": 9230,
            "src": "1172:58:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
              "typeString": "contract ERC721TransferHelper"
            },
            "typeName": {
              "id": 8774,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8773,
                "name": "ERC721TransferHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16334,
                "src": "1172:20:57"
              },
              "referencedDeclaration": 16334,
              "src": "1172:20:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                "typeString": "contract ERC721TransferHelper"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8813,
              "nodeType": "Block",
              "src": "2009:83:57",
              "statements": [
                {
                  "expression": {
                    "id": 8811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8807,
                      "name": "erc721TransferHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8775,
                      "src": "2019:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8809,
                          "name": "_erc721TransferHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8780,
                          "src": "2063:21:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8808,
                        "name": "ERC721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16334,
                        "src": "2042:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                          "typeString": "type(contract ERC721TransferHelper)"
                        }
                      },
                      "id": 8810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2042:43:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                        "typeString": "contract ERC721TransferHelper"
                      }
                    },
                    "src": "2019:66:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                      "typeString": "contract ERC721TransferHelper"
                    }
                  },
                  "id": 8812,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:66:57"
                }
              ]
            },
            "documentation": {
              "id": 8776,
              "nodeType": "StructuredDocumentation",
              "src": "1237:334:57",
              "text": "@param _erc20TransferHelper The ZORA ERC-20 Transfer Helper address\n @param _erc721TransferHelper The ZORA ERC-721 Transfer Helper address\n @param _royaltyEngine The Manifold Royalty Engine address\n @param _protocolFeeSettings The ZORA Protocol Fee Settings address\n @param _weth The WETH token address"
            },
            "id": 8814,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8789,
                    "name": "_erc20TransferHelper",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8778,
                    "src": "1798:20:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8790,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8788,
                  "name": "IncomingTransferSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8558,
                  "src": "1772:25:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1772:47:57"
              },
              {
                "arguments": [
                  {
                    "id": 8792,
                    "name": "_royaltyEngine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8782,
                    "src": "1847:14:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 8793,
                    "name": "_protocolFeeSettings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8784,
                    "src": "1863:20:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 8794,
                    "name": "_weth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8786,
                    "src": "1885:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 8796,
                                "name": "_erc721TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8780,
                                "src": "1913:21:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8795,
                              "name": "ERC721TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16334,
                              "src": "1892:20:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721TransferHelper_$16334_$",
                                "typeString": "type(contract ERC721TransferHelper)"
                              }
                            },
                            "id": 8797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1892:43:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                              "typeString": "contract ERC721TransferHelper"
                            }
                          },
                          "id": 8798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ZMM",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16083,
                          "src": "1892:47:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ZoraModuleManager_$6707_$",
                            "typeString": "function () view external returns (contract ZoraModuleManager)"
                          }
                        },
                        "id": 8799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1892:49:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZoraModuleManager_$6707",
                          "typeString": "contract ZoraModuleManager"
                        }
                      },
                      "id": 8800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registrar",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6372,
                      "src": "1892:59:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 8801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:61:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8802,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8791,
                  "name": "FeePayoutSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8453,
                  "src": "1828:18:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1828:126:57"
              },
              {
                "arguments": [
                  {
                    "hexValue": "41736b7320436f7265204552432d3230",
                    "id": 8804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1985:18:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_957638827bb464e6b123c0171deaffb22d80c97ab19a1a4b92c35a73ed579925",
                      "typeString": "literal_string \"Asks Core ERC-20\""
                    },
                    "value": "Asks Core ERC-20"
                  }
                ],
                "id": 8805,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8803,
                  "name": "ModuleNamingSupportV1",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8576,
                  "src": "1963:21:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1963:41:57"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8778,
                  "mutability": "mutable",
                  "name": "_erc20TransferHelper",
                  "nameLocation": "1605:20:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1597:28:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8780,
                  "mutability": "mutable",
                  "name": "_erc721TransferHelper",
                  "nameLocation": "1643:21:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1635:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8782,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "1682:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1674:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8784,
                  "mutability": "mutable",
                  "name": "_protocolFeeSettings",
                  "nameLocation": "1714:20:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1706:28:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1706:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8786,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "1752:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8814,
                  "src": "1744:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1744:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1587:176:57"
            },
            "returnParameters": {
              "id": 8806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:0:57"
            },
            "scope": 9230,
            "src": "1576:516:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8833,
              "nodeType": "Block",
              "src": "2413:102:57",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 8827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8822,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8817,
                        "src": "2430:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8824,
                              "name": "IAsksCoreErc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9278,
                              "src": "2451:14:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreErc20_$9278_$",
                                "typeString": "type(contract IAsksCoreErc20)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IAsksCoreErc20_$9278_$",
                                "typeString": "type(contract IAsksCoreErc20)"
                              }
                            ],
                            "id": 8823,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2446:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 8825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2446:20:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IAsksCoreErc20_$9278",
                            "typeString": "type(contract IAsksCoreErc20)"
                          }
                        },
                        "id": 8826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2446:32:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2430:48:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 8830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8828,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8817,
                        "src": "2482:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30783031666663396137",
                        "id": 8829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2498:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33540519_by_1",
                          "typeString": "int_const 33540519"
                        },
                        "value": "0x01ffc9a7"
                      },
                      "src": "2482:26:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2430:78:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8821,
                  "id": 8832,
                  "nodeType": "Return",
                  "src": "2423:85:57"
                }
              ]
            },
            "documentation": {
              "id": 8815,
              "nodeType": "StructuredDocumentation",
              "src": "2098:233:57",
              "text": "@notice Implements EIP-165 for standard interface detection\n @dev `0x01ffc9a7` is the IERC165 interface id\n @param _interfaceId The identifier of a given interface\n @return If the given interface is supported"
            },
            "functionSelector": "01ffc9a7",
            "id": 8834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2345:17:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8817,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "2370:12:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8834,
                  "src": "2363:19:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8816,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2363:6:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2362:21:57"
            },
            "returnParameters": {
              "id": 8821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8820,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8834,
                  "src": "2407:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8819,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2407:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2406:6:57"
            },
            "scope": 9230,
            "src": "2336:179:57",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "AsksCoreErc20.Ask",
            "id": 8841,
            "members": [
              {
                "constant": false,
                "id": 8836,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2980:6:57",
                "nodeType": "VariableDeclaration",
                "scope": 8841,
                "src": "2972:14:57",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8835,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2972:7:57",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8838,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "3003:5:57",
                "nodeType": "VariableDeclaration",
                "scope": 8841,
                "src": "2996:12:57",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 8837,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2996:6:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8840,
                "mutability": "mutable",
                "name": "currency",
                "nameLocation": "3026:8:57",
                "nodeType": "VariableDeclaration",
                "scope": 8841,
                "src": "3018:16:57",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8839,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3018:7:57",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ask",
            "nameLocation": "2958:3:57",
            "nodeType": "StructDefinition",
            "scope": 9230,
            "src": "2951:90:57",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 8842,
              "nodeType": "StructuredDocumentation",
              "src": "3047:113:57",
              "text": "@notice The ask for a given NFT, if one exists\n @dev ERC-721 token contract => ERC-721 token id => Ask"
            },
            "functionSelector": "418f0656",
            "id": 8849,
            "mutability": "mutable",
            "name": "askForNFT",
            "nameLocation": "3216:9:57",
            "nodeType": "VariableDeclaration",
            "scope": 9230,
            "src": "3165:60:57",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask))"
            },
            "typeName": {
              "id": 8848,
              "keyType": {
                "id": 8843,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3173:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3165:43:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask))"
              },
              "valueType": {
                "id": 8847,
                "keyType": {
                  "id": 8844,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3192:7:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "3184:23:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                  "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask)"
                },
                "valueType": {
                  "id": 8846,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8845,
                    "name": "Ask",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8841,
                    "src": "3203:3:57"
                  },
                  "referencedDeclaration": 8841,
                  "src": "3203:3:57",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8850,
              "nodeType": "StructuredDocumentation",
              "src": "4193:230:57",
              "text": "@notice Emitted when an ask is created\n @param tokenContract The ERC-721 token address of the created ask\n @param tokenId The ERC-721 token id of the created ask\n @param ask The metadata of the created ask"
            },
            "id": 8859,
            "name": "AskCreated",
            "nameLocation": "4434:10:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8852,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "4461:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8859,
                  "src": "4445:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4445:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8854,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4492:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8859,
                  "src": "4476:23:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4476:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8857,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "4505:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8859,
                  "src": "4501:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 8856,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8855,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8841,
                      "src": "4501:3:57"
                    },
                    "referencedDeclaration": 8841,
                    "src": "4501:3:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4444:65:57"
            },
            "src": "4428:82:57"
          },
          {
            "body": {
              "id": 8950,
              "nodeType": "Block",
              "src": "4937:861:57",
              "statements": [
                {
                  "assignments": [
                    8874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8874,
                      "mutability": "mutable",
                      "name": "tokenOwner",
                      "nameLocation": "5003:10:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 8950,
                      "src": "4995:18:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8873,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4995:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8881,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8879,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8864,
                        "src": "5048:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8876,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5024:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8875,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5438,
                          "src": "5016:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 8877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5016:23:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$5438",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 8878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5371,
                      "src": "5016:31:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 8880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5016:41:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4995:62:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8883,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5142:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5142:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 8885,
                            "name": "tokenOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8874,
                            "src": "5156:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5142:24:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 8891,
                              "name": "tokenOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8874,
                              "src": "5211:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 8892,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5223:3:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 8893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5223:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 8888,
                                  "name": "_tokenContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8862,
                                  "src": "5178:14:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8887,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5438,
                                "src": "5170:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 8889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5170:23:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$5438",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 8890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isApprovedForAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5425,
                            "src": "5170:40:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 8894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5170:64:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5142:92:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f544f4b454e5f4f574e45525f4f525f4f50455241544f52",
                        "id": 8896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5236:30:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        },
                        "value": "ONLY_TOKEN_OWNER_OR_OPERATOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2fa99b77517d3ad92ccc1102a19a02c3a5eb91d2d38650b703e9fa10a22ea58",
                          "typeString": "literal_string \"ONLY_TOKEN_OWNER_OR_OPERATOR\""
                        }
                      ],
                      "id": 8882,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5134:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5134:133:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8898,
                  "nodeType": "ExpressionStatement",
                  "src": "5134:133:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8900,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8866,
                          "src": "5420:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 8903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5435:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": {
                                  "id": 8902,
                                  "name": "uint96",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5435:6:57",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                }
                              ],
                              "id": 8901,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "5430:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 8904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5430:12:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint96",
                              "typeString": "type(uint96)"
                            }
                          },
                          "id": 8905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "5430:16:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "5420:26:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c49445f41534b5f5052494345",
                        "id": 8907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5448:19:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                          "typeString": "literal_string \"INVALID_ASK_PRICE\""
                        },
                        "value": "INVALID_ASK_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                          "typeString": "literal_string \"INVALID_ASK_PRICE\""
                        }
                      ],
                      "id": 8899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5412:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5412:56:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8909,
                  "nodeType": "ExpressionStatement",
                  "src": "5412:56:57"
                },
                {
                  "expression": {
                    "id": 8917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8910,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "5513:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 8913,
                          "indexExpression": {
                            "id": 8911,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5523:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5513:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 8914,
                        "indexExpression": {
                          "id": 8912,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8864,
                          "src": "5539:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5513:35:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      },
                      "id": 8915,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8836,
                      "src": "5513:42:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8916,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8874,
                      "src": "5558:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5513:55:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8918,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:55:57"
                },
                {
                  "expression": {
                    "id": 8929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8919,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "5578:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 8922,
                          "indexExpression": {
                            "id": 8920,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5588:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5578:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 8923,
                        "indexExpression": {
                          "id": 8921,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8864,
                          "src": "5604:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5578:35:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      },
                      "id": 8924,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8838,
                      "src": "5578:41:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8927,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8866,
                          "src": "5629:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5622:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 8925,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5622:6:57",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5622:14:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "5578:58:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 8930,
                  "nodeType": "ExpressionStatement",
                  "src": "5578:58:57"
                },
                {
                  "expression": {
                    "id": 8938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8931,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "5646:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 8934,
                          "indexExpression": {
                            "id": 8932,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5656:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5646:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 8935,
                        "indexExpression": {
                          "id": 8933,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8864,
                          "src": "5672:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5646:35:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      },
                      "id": 8936,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8840,
                      "src": "5646:44:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8937,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8868,
                      "src": "5693:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5646:56:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8939,
                  "nodeType": "ExpressionStatement",
                  "src": "5646:56:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8941,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8862,
                        "src": "5729:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8942,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8864,
                        "src": "5745:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8943,
                            "name": "askForNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8849,
                            "src": "5755:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                            }
                          },
                          "id": 8945,
                          "indexExpression": {
                            "id": 8944,
                            "name": "_tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8862,
                            "src": "5765:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5755:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                            "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                          }
                        },
                        "id": 8947,
                        "indexExpression": {
                          "id": 8946,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8864,
                          "src": "5781:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5755:35:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage",
                          "typeString": "struct AsksCoreErc20.Ask storage ref"
                        }
                      ],
                      "id": 8940,
                      "name": "AskCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8859,
                      "src": "5718:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$8841_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 8948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5718:73:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8949,
                  "nodeType": "EmitStatement",
                  "src": "5713:78:57"
                }
              ]
            },
            "documentation": {
              "id": 8860,
              "nodeType": "StructuredDocumentation",
              "src": "4516:260:57",
              "text": "@notice Creates an ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask\n @param _currency The currency of the ask price"
            },
            "functionSelector": "2b9f663e",
            "id": 8951,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8871,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8870,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "4924:12:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "4924:12:57"
              }
            ],
            "name": "createAsk",
            "nameLocation": "4790:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8862,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "4817:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8951,
                  "src": "4809:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4809:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8864,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4849:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8951,
                  "src": "4841:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4841:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8866,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4875:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8951,
                  "src": "4867:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8868,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "4899:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8951,
                  "src": "4891:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4891:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4799:115:57"
            },
            "returnParameters": {
              "id": 8872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4937:0:57"
            },
            "scope": 9230,
            "src": "4781:1017:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8952,
              "nodeType": "StructuredDocumentation",
              "src": "7673:240:57",
              "text": "@notice Emitted when an ask price is updated\n @param tokenContract The ERC-721 token address of the updated ask\n @param tokenId The ERC-721 token id of the updated ask\n @param ask The metadata of the updated the ask"
            },
            "id": 8961,
            "name": "AskPriceUpdated",
            "nameLocation": "7924:15:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8954,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "7956:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8961,
                  "src": "7940:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7940:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8956,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7987:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8961,
                  "src": "7971:23:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7971:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8959,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "8000:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 8961,
                  "src": "7996:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 8958,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8957,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8841,
                      "src": "7996:3:57"
                    },
                    "referencedDeclaration": 8841,
                    "src": "7996:3:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7939:65:57"
            },
            "src": "7918:87:57"
          },
          {
            "body": {
              "id": 9037,
              "nodeType": "Block",
              "src": "8435:725:57",
              "statements": [
                {
                  "assignments": [
                    8977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8977,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "8504:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9037,
                      "src": "8492:15:57",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                        "typeString": "struct AsksCoreErc20.Ask"
                      },
                      "typeName": {
                        "id": 8976,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8975,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8841,
                          "src": "8492:3:57"
                        },
                        "referencedDeclaration": 8841,
                        "src": "8492:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8983,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 8978,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8849,
                        "src": "8510:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                        }
                      },
                      "id": 8980,
                      "indexExpression": {
                        "id": 8979,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8964,
                        "src": "8520:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8510:25:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                      }
                    },
                    "id": 8982,
                    "indexExpression": {
                      "id": 8981,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8966,
                      "src": "8536:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8510:35:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage",
                      "typeString": "struct AsksCoreErc20.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8492:53:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8985,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8603:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8603:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 8987,
                            "name": "ask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8977,
                            "src": "8617:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                              "typeString": "struct AsksCoreErc20.Ask storage pointer"
                            }
                          },
                          "id": 8988,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8836,
                          "src": "8617:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8603:24:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c4552",
                        "id": 8990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8629:13:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        },
                        "value": "ONLY_SELLER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66847e0e28fb73ecb24427c5c293d1abb5777b3ecc6b31b648640cd65df90556",
                          "typeString": "literal_string \"ONLY_SELLER\""
                        }
                      ],
                      "id": 8984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8595:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8595:48:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8992,
                  "nodeType": "ExpressionStatement",
                  "src": "8595:48:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8993,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8968,
                      "src": "8692:6:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 8994,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8977,
                        "src": "8702:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      },
                      "id": 8995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8838,
                      "src": "8702:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "8692:19:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9018,
                  "nodeType": "IfStatement",
                  "src": "8688:239:57",
                  "trueBody": {
                    "id": 9017,
                    "nodeType": "Block",
                    "src": "8713:214:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8998,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8968,
                                "src": "8792:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 9001,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8807:6:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint96_$",
                                        "typeString": "type(uint96)"
                                      },
                                      "typeName": {
                                        "id": 9000,
                                        "name": "uint96",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8807:6:57",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint96_$",
                                        "typeString": "type(uint96)"
                                      }
                                    ],
                                    "id": 8999,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967269,
                                    "src": "8802:4:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 9002,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8802:12:57",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint96",
                                    "typeString": "type(uint96)"
                                  }
                                },
                                "id": 9003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "8802:16:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "src": "8792:26:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "494e56414c49445f41534b5f5052494345",
                              "id": 9005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8820:19:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                                "typeString": "literal_string \"INVALID_ASK_PRICE\""
                              },
                              "value": "INVALID_ASK_PRICE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_184298fef00488001ddf912bba50739e9c38817ce3fc9ca3f83709e869046d74",
                                "typeString": "literal_string \"INVALID_ASK_PRICE\""
                              }
                            ],
                            "id": 8997,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "8784:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8784:56:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9007,
                        "nodeType": "ExpressionStatement",
                        "src": "8784:56:57"
                      },
                      {
                        "expression": {
                          "id": 9015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 9008,
                              "name": "ask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8977,
                              "src": "8890:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                                "typeString": "struct AsksCoreErc20.Ask storage pointer"
                              }
                            },
                            "id": 9010,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8838,
                            "src": "8890:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 9013,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8968,
                                "src": "8909:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 9012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8902:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": {
                                "id": 9011,
                                "name": "uint96",
                                "nodeType": "ElementaryTypeName",
                                "src": "8902:6:57",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8902:14:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "8890:26:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 9016,
                        "nodeType": "ExpressionStatement",
                        "src": "8890:26:57"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9019,
                      "name": "_currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8970,
                      "src": "8978:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 9020,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8977,
                        "src": "8991:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      },
                      "id": 9021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currency",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8840,
                      "src": "8991:12:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8978:25:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9030,
                  "nodeType": "IfStatement",
                  "src": "8974:118:57",
                  "trueBody": {
                    "id": 9029,
                    "nodeType": "Block",
                    "src": "9005:87:57",
                    "statements": [
                      {
                        "expression": {
                          "id": 9027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 9023,
                              "name": "ask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8977,
                              "src": "9057:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                                "typeString": "struct AsksCoreErc20.Ask storage pointer"
                              }
                            },
                            "id": 9025,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "currency",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8840,
                            "src": "9057:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 9026,
                            "name": "_currency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8970,
                            "src": "9072:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9057:24:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 9028,
                        "nodeType": "ExpressionStatement",
                        "src": "9057:24:57"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9032,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8964,
                        "src": "9123:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9033,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8966,
                        "src": "9139:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9034,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8977,
                        "src": "9149:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask storage pointer"
                        }
                      ],
                      "id": 9031,
                      "name": "AskPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8961,
                      "src": "9107:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$8841_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 9035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9107:46:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9036,
                  "nodeType": "EmitStatement",
                  "src": "9102:51:57"
                }
              ]
            },
            "documentation": {
              "id": 8962,
              "nodeType": "StructuredDocumentation",
              "src": "8011:261:57",
              "text": "@notice Updates the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask\n @param _currency The currency of the ask price"
            },
            "functionSelector": "b2007533",
            "id": 9038,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8973,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8972,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "8422:12:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "8422:12:57"
              }
            ],
            "name": "setAskPrice",
            "nameLocation": "8286:11:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8964,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "8315:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "8307:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8307:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8966,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8347:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "8339:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8339:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8968,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "8373:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "8365:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8365:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8970,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "8397:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9038,
                  "src": "8389:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8389:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8297:115:57"
            },
            "returnParameters": {
              "id": 8974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8435:0:57"
            },
            "scope": 9230,
            "src": "8277:883:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9039,
              "nodeType": "StructuredDocumentation",
              "src": "10120:234:57",
              "text": "@notice Emitted when an ask is canceled\n @param tokenContract The ERC-721 token address of the canceled ask\n @param tokenId The ERC-721 token id of the canceled ask\n @param ask The metadata of the canceled ask"
            },
            "id": 9048,
            "name": "AskCanceled",
            "nameLocation": "10365:11:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9041,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "10393:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9048,
                  "src": "10377:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10377:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9043,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10424:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9048,
                  "src": "10408:23:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10408:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9046,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "10437:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9048,
                  "src": "10433:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 9045,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9044,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8841,
                      "src": "10433:3:57"
                    },
                    "referencedDeclaration": 8841,
                    "src": "10433:3:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10376:65:57"
            },
            "src": "10359:83:57"
          },
          {
            "body": {
              "id": 9099,
              "nodeType": "Block",
              "src": "10694:470:57",
              "statements": [
                {
                  "assignments": [
                    9060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9060,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "10762:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9099,
                      "src": "10751:14:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask"
                      },
                      "typeName": {
                        "id": 9059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9058,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8841,
                          "src": "10751:3:57"
                        },
                        "referencedDeclaration": 8841,
                        "src": "10751:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9066,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9061,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8849,
                        "src": "10768:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                        }
                      },
                      "id": 9063,
                      "indexExpression": {
                        "id": 9062,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9051,
                        "src": "10778:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10768:25:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                      }
                    },
                    "id": 9065,
                    "indexExpression": {
                      "id": 9064,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9053,
                      "src": "10794:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10768:35:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage",
                      "typeString": "struct AsksCoreErc20.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10751:52:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9068,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "10893:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10893:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 9070,
                              "name": "ask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9060,
                              "src": "10907:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                                "typeString": "struct AsksCoreErc20.Ask memory"
                              }
                            },
                            "id": 9071,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8836,
                            "src": "10907:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10893:24:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 9081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 9073,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "10921:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10921:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 9079,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9053,
                                "src": "10967:8:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 9076,
                                    "name": "_tokenContract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9051,
                                    "src": "10943:14:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 9075,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5438,
                                  "src": "10935:7:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$5438_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 9077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10935:23:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$5438",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 9078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5371,
                              "src": "10935:31:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 9080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10935:41:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10921:55:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10893:83:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f4e4c595f53454c4c45525f4f525f544f4b454e5f4f574e4552",
                        "id": 9083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10978:28:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        },
                        "value": "ONLY_SELLER_OR_TOKEN_OWNER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb6ff6755886c6e5d82368a5048d7da63648e1b83ee37dde2d7cfd2fdfe46e11",
                          "typeString": "literal_string \"ONLY_SELLER_OR_TOKEN_OWNER\""
                        }
                      ],
                      "id": 9067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10885:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10885:122:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9085,
                  "nodeType": "ExpressionStatement",
                  "src": "10885:122:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9087,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9051,
                        "src": "11035:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9088,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9053,
                        "src": "11051:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9089,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9060,
                        "src": "11061:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      ],
                      "id": 9086,
                      "name": "AskCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9048,
                      "src": "11023:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_struct$_Ask_$8841_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 9090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11023:42:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9091,
                  "nodeType": "EmitStatement",
                  "src": "11018:47:57"
                },
                {
                  "expression": {
                    "id": 9097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11115:42:57",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9092,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8849,
                          "src": "11122:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                          }
                        },
                        "id": 9094,
                        "indexExpression": {
                          "id": 9093,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9051,
                          "src": "11132:14:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11122:25:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                        }
                      },
                      "id": 9096,
                      "indexExpression": {
                        "id": 9095,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9053,
                        "src": "11148:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11122:35:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_storage",
                        "typeString": "struct AsksCoreErc20.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9098,
                  "nodeType": "ExpressionStatement",
                  "src": "11115:42:57"
                }
              ]
            },
            "documentation": {
              "id": 9049,
              "nodeType": "StructuredDocumentation",
              "src": "10448:158:57",
              "text": "@notice Cancels the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token"
            },
            "functionSelector": "40b80746",
            "id": 9100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9056,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9055,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "10681:12:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "10681:12:57"
              }
            ],
            "name": "cancelAsk",
            "nameLocation": "10620:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9051,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "10638:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9100,
                  "src": "10630:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10630:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9053,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10662:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9100,
                  "src": "10654:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10654:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10629:42:57"
            },
            "returnParameters": {
              "id": 9057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10694:0:57"
            },
            "scope": 9230,
            "src": "10611:553:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9101,
              "nodeType": "StructuredDocumentation",
              "src": "13806:283:57",
              "text": "@notice Emitted when an ask is filled\n @param tokenContract The ERC-721 token address of the filled ask\n @param tokenId The ERC-721 token id of the filled ask\n @param buyer The buyer address of the filled ask\n @param ask The metadata of the filled ask"
            },
            "id": 9112,
            "name": "AskFilled",
            "nameLocation": "14100:9:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenContract",
                  "nameLocation": "14126:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9112,
                  "src": "14110:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14110:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9105,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14157:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9112,
                  "src": "14141:23:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14141:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "14174:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9112,
                  "src": "14166:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14166:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "14185:3:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9112,
                  "src": "14181:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                    "typeString": "struct AsksCoreErc20.Ask"
                  },
                  "typeName": {
                    "id": 9109,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9108,
                      "name": "Ask",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8841,
                      "src": "14181:3:57"
                    },
                    "referencedDeclaration": 8841,
                    "src": "14181:3:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                      "typeString": "struct AsksCoreErc20.Ask"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14109:80:57"
            },
            "src": "14094:96:57"
          },
          {
            "body": {
              "id": 9228,
              "nodeType": "Block",
              "src": "14621:1763:57",
              "statements": [
                {
                  "assignments": [
                    9128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9128,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "14689:3:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "14678:14:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask"
                      },
                      "typeName": {
                        "id": 9127,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9126,
                          "name": "Ask",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8841,
                          "src": "14678:3:57"
                        },
                        "referencedDeclaration": 8841,
                        "src": "14678:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_storage_ptr",
                          "typeString": "struct AsksCoreErc20.Ask"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9134,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 9129,
                        "name": "askForNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8849,
                        "src": "14695:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                        }
                      },
                      "id": 9131,
                      "indexExpression": {
                        "id": 9130,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9115,
                        "src": "14705:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14695:25:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                        "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                      }
                    },
                    "id": 9133,
                    "indexExpression": {
                      "id": 9132,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9117,
                      "src": "14721:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14695:35:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ask_$8841_storage",
                      "typeString": "struct AsksCoreErc20.Ask storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14678:52:57"
                },
                {
                  "assignments": [
                    9136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9136,
                      "mutability": "mutable",
                      "name": "seller",
                      "nameLocation": "14777:6:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "14769:14:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9135,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14769:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9139,
                  "initialValue": {
                    "expression": {
                      "id": 9137,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9128,
                      "src": "14786:3:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask memory"
                      }
                    },
                    "id": 9138,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "seller",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8836,
                    "src": "14786:10:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14769:27:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9141,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9136,
                          "src": "14851:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14869:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14861:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9142,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14861:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14861:10:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14851:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e4143544956455f41534b",
                        "id": 9147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14873:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        },
                        "value": "INACTIVE_ASK"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16f7585f8f5b838a2dff6cf219d071119a196a6de8a766a1062a07284b32e3a4",
                          "typeString": "literal_string \"INACTIVE_ASK\""
                        }
                      ],
                      "id": 9140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14843:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14843:45:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9149,
                  "nodeType": "ExpressionStatement",
                  "src": "14843:45:57"
                },
                {
                  "assignments": [
                    9151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9151,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "14934:5:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "14926:13:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9150,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14926:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9154,
                  "initialValue": {
                    "expression": {
                      "id": 9152,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9128,
                      "src": "14942:3:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask memory"
                      }
                    },
                    "id": 9153,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8838,
                    "src": "14942:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14926:25:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9156,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9119,
                          "src": "15030:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 9157,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9151,
                          "src": "15040:5:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15030:15:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f5052494345",
                        "id": 9159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15047:18:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        },
                        "value": "MUST_MATCH_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e43713645b8291ed751febde6f8010976eaeebb0f230cfa4cfe042628537e779",
                          "typeString": "literal_string \"MUST_MATCH_PRICE\""
                        }
                      ],
                      "id": 9155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15022:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15022:44:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9161,
                  "nodeType": "ExpressionStatement",
                  "src": "15022:44:57"
                },
                {
                  "assignments": [
                    9163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9163,
                      "mutability": "mutable",
                      "name": "currency",
                      "nameLocation": "15115:8:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "15107:16:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9162,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15107:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9166,
                  "initialValue": {
                    "expression": {
                      "id": 9164,
                      "name": "ask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9128,
                      "src": "15126:3:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                        "typeString": "struct AsksCoreErc20.Ask memory"
                      }
                    },
                    "id": 9165,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currency",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8840,
                    "src": "15126:12:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15107:31:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9168,
                          "name": "_currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9121,
                          "src": "15223:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 9169,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9163,
                          "src": "15236:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15223:21:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4d415443485f43555252454e4359",
                        "id": 9171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15246:21:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f4a4e33bc7f7847179428ccd22e21acb55f2b165452820a8994eefa5eed2099",
                          "typeString": "literal_string \"MUST_MATCH_CURRENCY\""
                        },
                        "value": "MUST_MATCH_CURRENCY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f4a4e33bc7f7847179428ccd22e21acb55f2b165452820a8994eefa5eed2099",
                          "typeString": "literal_string \"MUST_MATCH_CURRENCY\""
                        }
                      ],
                      "id": 9167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15215:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15215:53:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9173,
                  "nodeType": "ExpressionStatement",
                  "src": "15215:53:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9175,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9151,
                        "src": "15544:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9176,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9163,
                        "src": "15551:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9174,
                      "name": "_handleIncomingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8557,
                      "src": "15520:23:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 9177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15520:40:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9178,
                  "nodeType": "ExpressionStatement",
                  "src": "15520:40:57"
                },
                {
                  "assignments": [
                    9180,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9180,
                      "mutability": "mutable",
                      "name": "remainingProfit",
                      "nameLocation": "15633:15:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 9228,
                      "src": "15625:23:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15625:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 9188,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9182,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9115,
                        "src": "15675:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9183,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9117,
                        "src": "15691:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9184,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9151,
                        "src": "15701:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9185,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9163,
                        "src": "15708:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "333030303030",
                        "id": 9186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15718:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        "value": "300000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        }
                      ],
                      "id": 9181,
                      "name": "_handleRoyaltyPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "15654:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,address,uint256) returns (uint256,bool)"
                      }
                    },
                    "id": 9187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15654:71:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15624:101:57"
                },
                {
                  "expression": {
                    "id": 9194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9189,
                      "name": "remainingProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9180,
                      "src": "15784:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 9191,
                          "name": "remainingProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9180,
                          "src": "15827:15:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 9192,
                          "name": "currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9163,
                          "src": "15844:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9190,
                        "name": "_handleProtocolFeePayout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8280,
                        "src": "15802:24:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) returns (uint256)"
                        }
                      },
                      "id": 9193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15802:51:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15784:69:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9195,
                  "nodeType": "ExpressionStatement",
                  "src": "15784:69:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9197,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9136,
                        "src": "15943:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9198,
                        "name": "remainingProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9180,
                        "src": "15951:15:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9199,
                        "name": "currency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9163,
                        "src": "15968:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 9200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15978:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 9196,
                      "name": "_handleOutgoingTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8721,
                      "src": "15919:23:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 9201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15919:65:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9202,
                  "nodeType": "ExpressionStatement",
                  "src": "15919:65:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9206,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9115,
                        "src": "16172:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9207,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9136,
                        "src": "16188:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9208,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16196:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16196:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9210,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9117,
                        "src": "16208:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9203,
                        "name": "erc721TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8775,
                        "src": "16138:20:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721TransferHelper_$16334",
                          "typeString": "contract ERC721TransferHelper"
                        }
                      },
                      "id": 9205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16333,
                      "src": "16138:33:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 9211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16138:79:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9212,
                  "nodeType": "ExpressionStatement",
                  "src": "16138:79:57"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9214,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9115,
                        "src": "16243:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9215,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9117,
                        "src": "16259:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 9216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16269:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16269:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9218,
                        "name": "ask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9128,
                        "src": "16281:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Ask_$8841_memory_ptr",
                          "typeString": "struct AsksCoreErc20.Ask memory"
                        }
                      ],
                      "id": 9213,
                      "name": "AskFilled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9112,
                      "src": "16233:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_struct$_Ask_$8841_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,struct AsksCoreErc20.Ask memory)"
                      }
                    },
                    "id": 9219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16233:52:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9220,
                  "nodeType": "EmitStatement",
                  "src": "16228:57:57"
                },
                {
                  "expression": {
                    "id": 9226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "16335:42:57",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 9221,
                          "name": "askForNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8849,
                          "src": "16342:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => struct AsksCoreErc20.Ask storage ref))"
                          }
                        },
                        "id": 9223,
                        "indexExpression": {
                          "id": 9222,
                          "name": "_tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9115,
                          "src": "16352:14:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16342:25:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ask_$8841_storage_$",
                          "typeString": "mapping(uint256 => struct AsksCoreErc20.Ask storage ref)"
                        }
                      },
                      "id": 9225,
                      "indexExpression": {
                        "id": 9224,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9117,
                        "src": "16368:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16342:35:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ask_$8841_storage",
                        "typeString": "struct AsksCoreErc20.Ask storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9227,
                  "nodeType": "ExpressionStatement",
                  "src": "16335:42:57"
                }
              ]
            },
            "documentation": {
              "id": 9113,
              "nodeType": "StructuredDocumentation",
              "src": "14196:258:57",
              "text": "@notice Fills the ask for a given NFT\n @param _tokenContract The address of the ERC-721 token\n @param _tokenId The id of the ERC-721 token\n @param _price The price to fill the ask\n @param _currency The currency to fill the ask"
            },
            "functionSelector": "d8606343",
            "id": 9229,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9124,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9123,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6293,
                  "src": "14608:12:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "14608:12:57"
              }
            ],
            "name": "fillAsk",
            "nameLocation": "14468:7:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9115,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "14493:14:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9229,
                  "src": "14485:22:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14485:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9117,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "14525:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9229,
                  "src": "14517:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14517:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9119,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "14551:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9229,
                  "src": "14543:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14543:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9121,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "14575:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 9229,
                  "src": "14567:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14567:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14475:115:57"
            },
            "returnParameters": {
              "id": 9125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14621:0:57"
            },
            "scope": 9230,
            "src": "14459:1925:57",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9231,
        "src": "797:15589:57",
        "usedErrors": []
      }
    ],
    "src": "36:16351:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-04-04T14:37:20.145Z",
  "devdoc": {
    "author": "kulkarohan",
    "events": {
      "AskCanceled(address,uint256,(address,uint96,address))": {
        "params": {
          "ask": "The metadata of the canceled ask",
          "tokenContract": "The ERC-721 token address of the canceled ask",
          "tokenId": "The ERC-721 token id of the canceled ask"
        }
      },
      "AskCreated(address,uint256,(address,uint96,address))": {
        "params": {
          "ask": "The metadata of the created ask",
          "tokenContract": "The ERC-721 token address of the created ask",
          "tokenId": "The ERC-721 token id of the created ask"
        }
      },
      "AskFilled(address,uint256,address,(address,uint96,address))": {
        "params": {
          "ask": "The metadata of the filled ask",
          "buyer": "The buyer address of the filled ask",
          "tokenContract": "The ERC-721 token address of the filled ask",
          "tokenId": "The ERC-721 token id of the filled ask"
        }
      },
      "AskPriceUpdated(address,uint256,(address,uint96,address))": {
        "params": {
          "ask": "The metadata of the updated the ask",
          "tokenContract": "The ERC-721 token address of the updated ask",
          "tokenId": "The ERC-721 token id of the updated ask"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
        "details": "This method is external to enable setting a gas limit when called - see `_handleRoyaltyPayout`.",
        "params": {
          "_amount": "The total sale amount",
          "_payoutCurrency": "The ERC-20 token address to payout royalties in, or address(0) for ETH",
          "_tokenContract": "The NFT Contract to get royalty information from",
          "_tokenId": ", The Token ID to get royalty information from"
        },
        "returns": {
          "_0": "The remaining funds after paying out royalties"
        }
      },
      "cancelAsk(address,uint256)": {
        "params": {
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The id of the ERC-721 token"
        }
      },
      "constructor": {
        "params": {
          "_erc20TransferHelper": "The ZORA ERC-20 Transfer Helper address",
          "_erc721TransferHelper": "The ZORA ERC-721 Transfer Helper address",
          "_protocolFeeSettings": "The ZORA Protocol Fee Settings address",
          "_royaltyEngine": "The Manifold Royalty Engine address",
          "_weth": "The WETH token address"
        }
      },
      "createAsk(address,uint256,uint256,address)": {
        "params": {
          "_currency": "The currency of the ask price",
          "_price": "The price to fill the ask",
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The id of the ERC-721 token"
        }
      },
      "fillAsk(address,uint256,uint256,address)": {
        "params": {
          "_currency": "The currency to fill the ask",
          "_price": "The price to fill the ask",
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The id of the ERC-721 token"
        }
      },
      "setAskPrice(address,uint256,uint256,address)": {
        "params": {
          "_currency": "The currency of the ask price",
          "_price": "The price to fill the ask",
          "_tokenContract": "The address of the ERC-721 token",
          "_tokenId": "The id of the ERC-721 token"
        }
      },
      "setRoyaltyEngineAddress(address)": {
        "details": "emergency use only – requires a frozen RoyaltyEngineV1 at commit 4ae77a73a8a73a79d628352d206fadae7f8e0f74  to be deployed elsewhere, or a contract matching that ABI",
        "params": {
          "_royaltyEngine": "The address for the new royalty engine"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "`0x01ffc9a7` is the IERC165 interface id",
        "params": {
          "_interfaceId": "The identifier of a given interface"
        },
        "returns": {
          "_0": "If the given interface is supported"
        }
      }
    },
    "stateVariables": {
      "askForNFT": {
        "details": "ERC-721 token contract => ERC-721 token id => Ask"
      }
    },
    "title": "Asks Core ERC-20",
    "version": 1
  },
  "userdoc": {
    "events": {
      "AskCanceled(address,uint256,(address,uint96,address))": {
        "notice": "Emitted when an ask is canceled"
      },
      "AskCreated(address,uint256,(address,uint96,address))": {
        "notice": "Emitted when an ask is created"
      },
      "AskFilled(address,uint256,address,(address,uint96,address))": {
        "notice": "Emitted when an ask is filled"
      },
      "AskPriceUpdated(address,uint256,(address,uint96,address))": {
        "notice": "Emitted when an ask price is updated"
      },
      "RoyaltyPayout(address,uint256,address,uint256)": {
        "notice": "Emitted when royalties are paid"
      }
    },
    "kind": "user",
    "methods": {
      "_handleRoyaltyEnginePayout(address,uint256,uint256,address)": {
        "notice": "Pays out royalties for NFTs based on the information returned by the royalty engine"
      },
      "askForNFT(address,uint256)": {
        "notice": "The ask for a given NFT, if one exists"
      },
      "cancelAsk(address,uint256)": {
        "notice": "Cancels the ask for a given NFT"
      },
      "createAsk(address,uint256,uint256,address)": {
        "notice": "Creates an ask for a given NFT"
      },
      "erc20TransferHelper()": {
        "notice": "The ZORA ERC-20 Transfer Helper"
      },
      "erc721TransferHelper()": {
        "notice": "The ZORA ERC-721 Transfer Helper"
      },
      "fillAsk(address,uint256,uint256,address)": {
        "notice": "Fills the ask for a given NFT"
      },
      "name()": {
        "notice": "The module name"
      },
      "registrar()": {
        "notice": "The ZORA Module Registrar"
      },
      "setAskPrice(address,uint256,uint256,address)": {
        "notice": "Updates the ask for a given NFT"
      },
      "setRoyaltyEngineAddress(address)": {
        "notice": "Update the address of the Royalty Engine, in case of unexpected update on Manifold's Proxy"
      },
      "supportsInterface(bytes4)": {
        "notice": "Implements EIP-165 for standard interface detection"
      }
    },
    "notice": "Module for minimal ERC-20 asks for ERC-721 tokens",
    "version": 1
  }
}