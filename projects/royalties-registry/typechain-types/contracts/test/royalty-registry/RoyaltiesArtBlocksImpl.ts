/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface RoyaltiesArtBlocksImplInterface extends utils.Interface {
  functions: {
    "getRoyaltyData(uint256)": FunctionFragment;
    "updateProjectAdditionalPayeeInfo(uint256,address,uint256)": FunctionFragment;
    "updateProjectSecondaryMarketRoyaltyPercentage(uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getRoyaltyData"
      | "updateProjectAdditionalPayeeInfo"
      | "updateProjectSecondaryMarketRoyaltyPercentage"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getRoyaltyData",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateProjectAdditionalPayeeInfo",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateProjectSecondaryMarketRoyaltyPercentage",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "getRoyaltyData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateProjectAdditionalPayeeInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateProjectSecondaryMarketRoyaltyPercentage",
    data: BytesLike
  ): Result;

  events: {};
}

export interface RoyaltiesArtBlocksImpl extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: RoyaltiesArtBlocksImplInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getRoyaltyData(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, string, BigNumber, BigNumber] & {
        artistAddress: string;
        additionalPayee: string;
        additionalPayeePercentage: BigNumber;
        royaltyFeeByID: BigNumber;
      }
    >;

    updateProjectAdditionalPayeeInfo(
      _projectId: PromiseOrValue<BigNumberish>,
      _additionalPayee: PromiseOrValue<string>,
      _additionalPayeePercentage: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateProjectSecondaryMarketRoyaltyPercentage(
      _projectId: PromiseOrValue<BigNumberish>,
      _secondMarketRoyalty: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  getRoyaltyData(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [string, string, BigNumber, BigNumber] & {
      artistAddress: string;
      additionalPayee: string;
      additionalPayeePercentage: BigNumber;
      royaltyFeeByID: BigNumber;
    }
  >;

  updateProjectAdditionalPayeeInfo(
    _projectId: PromiseOrValue<BigNumberish>,
    _additionalPayee: PromiseOrValue<string>,
    _additionalPayeePercentage: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateProjectSecondaryMarketRoyaltyPercentage(
    _projectId: PromiseOrValue<BigNumberish>,
    _secondMarketRoyalty: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getRoyaltyData(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [string, string, BigNumber, BigNumber] & {
        artistAddress: string;
        additionalPayee: string;
        additionalPayeePercentage: BigNumber;
        royaltyFeeByID: BigNumber;
      }
    >;

    updateProjectAdditionalPayeeInfo(
      _projectId: PromiseOrValue<BigNumberish>,
      _additionalPayee: PromiseOrValue<string>,
      _additionalPayeePercentage: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    updateProjectSecondaryMarketRoyaltyPercentage(
      _projectId: PromiseOrValue<BigNumberish>,
      _secondMarketRoyalty: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getRoyaltyData(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateProjectAdditionalPayeeInfo(
      _projectId: PromiseOrValue<BigNumberish>,
      _additionalPayee: PromiseOrValue<string>,
      _additionalPayeePercentage: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateProjectSecondaryMarketRoyaltyPercentage(
      _projectId: PromiseOrValue<BigNumberish>,
      _secondMarketRoyalty: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getRoyaltyData(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateProjectAdditionalPayeeInfo(
      _projectId: PromiseOrValue<BigNumberish>,
      _additionalPayee: PromiseOrValue<string>,
      _additionalPayeePercentage: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateProjectSecondaryMarketRoyaltyPercentage(
      _projectId: PromiseOrValue<BigNumberish>,
      _secondMarketRoyalty: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
