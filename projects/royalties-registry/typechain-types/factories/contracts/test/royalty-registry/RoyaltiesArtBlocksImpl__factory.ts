/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RoyaltiesArtBlocksImpl,
  RoyaltiesArtBlocksImplInterface,
} from "../../../../contracts/test/royalty-registry/RoyaltiesArtBlocksImpl";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyData",
    outputs: [
      {
        internalType: "address",
        name: "artistAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "additionalPayee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "additionalPayeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royaltyFeeByID",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_additionalPayee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_additionalPayeePercentage",
        type: "uint256",
      },
    ],
    name: "updateProjectAdditionalPayeeInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_secondMarketRoyalty",
        type: "uint256",
      },
    ],
    name: "updateProjectSecondaryMarketRoyaltyPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101f5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a65ff74c14610046578063c34a03b514610072578063e13208b414610087575b600080fd5b61005961005436600461011b565b61009a565b6040516100699493929190610196565b60405180910390f35b610085610080366004610175565b6100ce565b005b610085610095366004610133565b6100e3565b60009081526020819052604090208054600182015460028301546003909301546001600160a01b0392831694929091169291565b60009182526020829052604090912060030155565b6000928352602083905260409092206001810180546001600160a01b0319166001600160a01b03939093169290921790915560020155565b60006020828403121561012c578081fd5b5035919050565b600080600060608486031215610147578182fd5b8335925060208401356001600160a01b0381168114610164578283fd5b929592945050506040919091013590565b60008060408385031215610187578182fd5b50508035926020909101359150565b6001600160a01b039485168152929093166020830152604082015260608101919091526080019056fea26469706673582212209a8048204a4f472a86253c3bc44da7da6f03e42b0bbc39407321ad5142fab14b64736f6c63430007060033";

type RoyaltiesArtBlocksImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltiesArtBlocksImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltiesArtBlocksImpl__factory extends ContractFactory {
  constructor(...args: RoyaltiesArtBlocksImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RoyaltiesArtBlocksImpl> {
    return super.deploy(overrides || {}) as Promise<RoyaltiesArtBlocksImpl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoyaltiesArtBlocksImpl {
    return super.attach(address) as RoyaltiesArtBlocksImpl;
  }
  override connect(signer: Signer): RoyaltiesArtBlocksImpl__factory {
    return super.connect(signer) as RoyaltiesArtBlocksImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltiesArtBlocksImplInterface {
    return new utils.Interface(_abi) as RoyaltiesArtBlocksImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltiesArtBlocksImpl {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RoyaltiesArtBlocksImpl;
  }
}
