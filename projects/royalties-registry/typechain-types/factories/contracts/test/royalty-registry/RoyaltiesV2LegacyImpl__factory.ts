/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RoyaltiesV2LegacyImpl,
  RoyaltiesV2LegacyImplInterface,
} from "../../../../contracts/test/royalty-registry/RoyaltiesV2LegacyImpl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "value",
            type: "uint96",
          },
        ],
        indexed: false,
        internalType: "struct LibPart.Part[]",
        name: "royalties",
        type: "tuple[]",
      },
    ],
    name: "RoyaltiesSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "value",
            type: "uint96",
          },
        ],
        internalType: "struct LibPart.Part[]",
        name: "_royalties",
        type: "tuple[]",
      },
    ],
    name: "_saveRoyalties",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getRoyalties",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "value",
            type: "uint96",
          },
        ],
        internalType: "struct LibPart.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610566806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063bb3bafd61461003b578063dfa5ce5d14610064575b600080fd5b61004e6100493660046102ae565b610079565b60405161005b9190610420565b60405180910390f35b6100776100723660046102c6565b6100ff565b005b600081815260208181526040808320805482518185028101850190935280835260609492939192909184015b828210156100f457600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b0316818301528252600190920191016100a5565b505050509050919050565b6000805b82518110156102405760006001600160a01b031683828151811061012357fe5b6020026020010151600001516001600160a01b0316141561015f5760405162461bcd60e51b8152600401610156906104b4565b60405180910390fd5b82818151811061016b57fe5b6020026020010151602001516001600160601b0316600014156101a05760405162461bcd60e51b81526004016101569061043a565b8281815181106101ac57fe5b6020026020010151602001516001600160601b0316820191506000808581526020019081526020016000208382815181106101e357fe5b60209081029190910181015182546001818101855560009485529383902082519101805492909301516001600160601b0316600160a01b026001600160a01b039182166001600160a01b0319909316929092171617905501610103565b5061271081106102625760405162461bcd60e51b81526004016101569061046f565b61026c8383610271565b505050565b7f3fa96d7b6bcbfe71ef171666d84db3cf52fa2d1c8afdb1cc8e486177f208b7df82826040516102a29291906104eb565b60405180910390a15050565b6000602082840312156102bf578081fd5b5035919050565b60008060408084860312156102d9578182fd5b8335925060208085013567ffffffffffffffff808211156102f8578485fd5b818701915087601f83011261030b578485fd5b81358181111561031757fe5b610324848583020161050c565b81815284810190848601878402860187018c1015610340578889fd5b8895505b838610156103b75787818d03121561035a578889fd5b8751888101818110878211171561036d57fe5b895281356001600160a01b0381168114610385578a8bfd5b8152818801356001600160601b038116811461039f578a8bfd5b81890152835260019590950194918601918701610344565b50809750505050505050509250929050565b6000815180845260208085019450808401835b8381101561041557815180516001600160a01b031688528301516001600160601b031683880152604090960195908201906001016103dc565b509495945050505050565b60006020825261043360208301846103c9565b9392505050565b6020808252818101527f526f79616c74792076616c75652073686f756c6420626520706f736974697665604082015260600190565b60208082526025908201527f526f79616c747920746f74616c2076616c75652073686f756c64206265203c20604082015264031303030360dc1b606082015260800190565b6020808252601b908201527f526563697069656e742073686f756c642062652070726573656e740000000000604082015260600190565b60008382526040602083015261050460408301846103c9565b949350505050565b60405181810167ffffffffffffffff8111828210171561052857fe5b60405291905056fea2646970667358221220da14010d4af25309da869cfffbce767fb52007cf92bdb3c6440266212e04248564736f6c63430007060033";

type RoyaltiesV2LegacyImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltiesV2LegacyImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltiesV2LegacyImpl__factory extends ContractFactory {
  constructor(...args: RoyaltiesV2LegacyImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RoyaltiesV2LegacyImpl> {
    return super.deploy(overrides || {}) as Promise<RoyaltiesV2LegacyImpl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoyaltiesV2LegacyImpl {
    return super.attach(address) as RoyaltiesV2LegacyImpl;
  }
  override connect(signer: Signer): RoyaltiesV2LegacyImpl__factory {
    return super.connect(signer) as RoyaltiesV2LegacyImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltiesV2LegacyImplInterface {
    return new utils.Interface(_abi) as RoyaltiesV2LegacyImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltiesV2LegacyImpl {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RoyaltiesV2LegacyImpl;
  }
}
