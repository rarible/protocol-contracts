/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestERC721ArtBlocks,
  TestERC721ArtBlocksInterface,
} from "../../../../contracts/test/royalty-registry/TestERC721ArtBlocks";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getRoyaltyData",
    outputs: [
      {
        internalType: "address",
        name: "artistAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "additionalPayee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "additionalPayeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royaltyFeeByID",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_additionalPayee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_additionalPayeePercentage",
        type: "uint256",
      },
    ],
    name: "updateProjectAdditionalPayeeInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_secondMarketRoyalty",
        type: "uint256",
      },
    ],
    name: "updateProjectSecondaryMarketRoyaltyPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611cc4806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b8578063a65ff74c1161007c578063a65ff74c1461026c578063b88d4fde1461028f578063c34a03b5146102a2578063c87b56dd146102b5578063e13208b4146102c8578063e985e9c5146102db57610137565b80636352211e146102235780636c0360eb1461023657806370a082311461023e57806395d89b4114610251578063a22cb4651461025957610137565b806323b872dd116100ff57806323b872dd146101c45780632f745c59146101d757806340c10f19146101ea57806342842e0e146101fd5780634f6ccce71461021057610137565b806301ffc9a71461013c57806306fdde0314610165578063081812fc1461017a578063095ea7b31461019a57806318160ddd146101af575b600080fd5b61014f61014a366004611924565b6102ee565b60405161015c91906119e8565b60405180910390f35b61016d610311565b60405161015c91906119f3565b61018d61018836600461194c565b6103a7565b60405161015c91906119ab565b6101ad6101a83660046118f9565b610409565b005b6101b76104df565b60405161015c9190611a46565b6101ad6101d23660046117c4565b6104f0565b6101b76101e53660046118f9565b610547565b6101ad6101f83660046118f9565b610572565b6101ad61020b3660046117c4565b6105a7565b6101b761021e36600461194c565b6105c2565b61018d61023136600461194c565b6105d8565b61016d610600565b6101b761024c366004611770565b610661565b61016d6106c9565b6101ad6102673660046118c8565b61072a565b61027f61027a36600461194c565b61082f565b60405161015c94939291906119bf565b6101ad61029d366004611804565b610863565b6101ad6102b036600461198a565b6108c1565b61016d6102c336600461194c565b6108d6565b6101ad6102d6366004611964565b610b57565b61014f6102e936600461178c565b610b8f565b6001600160e01b0319811660009081526033602052604090205460ff165b919050565b606a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b5050505050905090565b60006103b282610bbd565b6103ed5760405162461bcd60e51b815260040180806020018281038252602c815260200180611bb9602c913960400191505060405180910390fd5b506000908152606860205260409020546001600160a01b031690565b6000610414826105d8565b9050806001600160a01b0316836001600160a01b031614156104675760405162461bcd60e51b8152600401808060200182810382526021815260200180611c3d6021913960400191505060405180910390fd5b806001600160a01b0316610479610bca565b6001600160a01b031614806104955750610495816102e9610bca565b6104d05760405162461bcd60e51b8152600401808060200182810382526038815260200180611b0c6038913960400191505060405180910390fd5b6104da8383610bce565b505050565b60006104eb6066610c3c565b905090565b6105016104fb610bca565b82610c47565b61053c5760405162461bcd60e51b8152600401808060200182810382526031815260200180611c5e6031913960400191505060405180910390fd5b6104da838383610ceb565b6001600160a01b03821660009081526065602052604081206105699083610e37565b90505b92915050565b600081815260976020526040902080546001600160a01b0319166001600160a01b0384161790556105a38282610e43565b5050565b6104da83838360405180602001604052806000815250610863565b6000806105d0606684610f71565b509392505050565b600061056c82604051806060016040528060298152602001611b6e6029913960669190610f8d565b606d8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561039d5780601f106103725761010080835404028352916020019161039d565b60006001600160a01b0382166106a85760405162461bcd60e51b815260040180806020018281038252602a815260200180611b44602a913960400191505060405180910390fd5b6001600160a01b038216600090815260656020526040902061056c90610c3c565b606b8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561039d5780601f106103725761010080835404028352916020019161039d565b610732610bca565b6001600160a01b0316826001600160a01b03161415610798576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80606960006107a5610bca565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556107e9610bca565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b60009081526097602052604090208054600182015460028301546003909301546001600160a01b0392831694929091169291565b61087461086e610bca565b83610c47565b6108af5760405162461bcd60e51b8152600401808060200182810382526031815260200180611c5e6031913960400191505060405180910390fd5b6108bb84848484610fa4565b50505050565b60009182526097602052604090912060030155565b60606108e182610bbd565b61091c5760405162461bcd60e51b815260040180806020018281038252602f815260200180611c0e602f913960400191505060405180910390fd5b6000828152606c602090815260408083208054825160026001831615610100026000190190921691909104601f8101859004850282018501909352828152929091908301828280156109af5780601f10610984576101008083540402835291602001916109af565b820191906000526020600020905b81548152906001019060200180831161099257829003601f168201915b5050505050905060006109c0610600565b90508051600014156109d45750905061030c565b815115610a955780826040516020018083805190602001908083835b60208310610a0f5780518252601f1990920191602091820191016109f0565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610a575780518252601f199092019160209182019101610a38565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529250505061030c565b80610a9f85610ff6565b6040516020018083805190602001908083835b60208310610ad15780518252601f199092019160209182019101610ab2565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610b195780518252601f199092019160209182019101610afa565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050919050565b6000928352609760205260409092206001810180546001600160a01b0319166001600160a01b03939093169290921790915560020155565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205460ff1690565b600061056c6066836110d1565b3390565b600081815260686020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c03826105d8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061056c826110dd565b6000610c5282610bbd565b610c8d5760405162461bcd60e51b815260040180806020018281038252602c815260200180611ae0602c913960400191505060405180910390fd5b6000610c98836105d8565b9050806001600160a01b0316846001600160a01b03161480610cd35750836001600160a01b0316610cc8846103a7565b6001600160a01b0316145b80610ce35750610ce38185610b8f565b949350505050565b826001600160a01b0316610cfe826105d8565b6001600160a01b031614610d435760405162461bcd60e51b8152600401808060200182810382526029815260200180611be56029913960400191505060405180910390fd5b6001600160a01b038216610d885760405162461bcd60e51b8152600401808060200182810382526024815260200180611abc6024913960400191505060405180910390fd5b610d938383836104da565b610d9e600082610bce565b6001600160a01b0383166000908152606560205260409020610dc090826110e1565b506001600160a01b0382166000908152606560205260409020610de390826110ed565b50610df0606682846110f9565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610569838361110f565b6001600160a01b038216610e9e576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610ea781610bbd565b15610ef9576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b610f05600083836104da565b6001600160a01b0382166000908152606560205260409020610f2790826110ed565b50610f34606682846110f9565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000808080610f808686611173565b9097909650945050505050565b6000610f9a8484846111ee565b90505b9392505050565b610faf848484610ceb565b610fbb848484846112b8565b6108bb5760405162461bcd60e51b8152600401808060200182810382526032815260200180611a8a6032913960400191505060405180910390fd5b60608161101b57506040805180820190915260018152600360fc1b602082015261030c565b8160005b811561103357600101600a8204915061101f565b60008167ffffffffffffffff8111801561104c57600080fd5b506040519080825280601f01601f191660200182016040528015611077576020820181803683370190505b50859350905060001982015b83156110c857600a840660300160f81b828280600190039350815181106110a657fe5b60200101906001600160f81b031916908160001a905350600a84049350611083565b50949350505050565b60006105698383611420565b5490565b60006105698383611438565b600061056983836114fe565b6000610f9a84846001600160a01b038516611548565b815460009082106111515760405162461bcd60e51b8152600401808060200182810382526022815260200180611a686022913960400191505060405180910390fd5b82600001828154811061116057fe5b9060005260206000200154905092915050565b8154600090819083106111b75760405162461bcd60e51b8152600401808060200182810382526022815260200180611b976022913960400191505060405180910390fd5b60008460000184815481106111c857fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816112895760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561124e578181015183820152602001611236565b50505050905090810190601f16801561127b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061129c57fe5b9060005260206000209060020201600101549150509392505050565b60006112cc846001600160a01b03166115df565b6112d857506001610ce3565b60006113e6630a85bd0160e11b6112ed610bca565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561135457818101518382015260200161133c565b50505050905090810190601f1680156113815780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001611a8a603291396001600160a01b03881691906115e5565b905060008180602001905160208110156113ff57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156114f4578354600019808301919081019060009087908390811061146b57fe5b906000526020600020015490508087600001848154811061148857fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806114b857fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061056c565b600091505061056c565b600061150a8383611420565b6115405750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561056c565b50600061056c565b6000828152600184016020526040812054806115ad575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610f9d565b828560000160018303815481106115c057fe5b9060005260206000209060020201600101819055506000915050610f9d565b3b151590565b6060610f9a8484600085856115f9856115df565b61164a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106116885780518252601f199092019160209182019101611669565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146116ea576040519150601f19603f3d011682016040523d82523d6000602084013e6116ef565b606091505b50915091506116ff82828661170a565b979650505050505050565b60608315611719575081610f9d565b8251156117295782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561124e578181015183820152602001611236565b600060208284031215611781578081fd5b8135610f9d81611a4f565b6000806040838503121561179e578081fd5b82356117a981611a4f565b915060208301356117b981611a4f565b809150509250929050565b6000806000606084860312156117d8578081fd5b83356117e381611a4f565b925060208401356117f381611a4f565b929592945050506040919091013590565b60008060008060808587031215611819578081fd5b843561182481611a4f565b935060208581013561183581611a4f565b935060408601359250606086013567ffffffffffffffff80821115611858578384fd5b818801915088601f83011261186b578384fd5b81358181111561187757fe5b604051601f8201601f191681018501838111828210171561189457fe5b60405281815283820185018b10156118aa578586fd5b81858501868301379081019093019390935250939692955090935050565b600080604083850312156118da578182fd5b82356118e581611a4f565b9150602083013580151581146117b9578182fd5b6000806040838503121561190b578182fd5b823561191681611a4f565b946020939093013593505050565b600060208284031215611935578081fd5b81356001600160e01b031981168114610f9d578182fd5b60006020828403121561195d578081fd5b5035919050565b600080600060608486031215611978578283fd5b8335925060208401356117f381611a4f565b6000806040838503121561199c578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b901515815260200190565b6000602080835283518082850152825b81811015611a1f57858101830151858201604001528201611a03565b81811115611a305783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b6001600160a01b0381168114611a6457600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220ea8de959cb2ce6b2a531ef174be574a56e16827b4a33bba76aad236e9c83113464736f6c63430007060033";

type TestERC721ArtBlocksConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC721ArtBlocksConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC721ArtBlocks__factory extends ContractFactory {
  constructor(...args: TestERC721ArtBlocksConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestERC721ArtBlocks> {
    return super.deploy(overrides || {}) as Promise<TestERC721ArtBlocks>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC721ArtBlocks {
    return super.attach(address) as TestERC721ArtBlocks;
  }
  override connect(signer: Signer): TestERC721ArtBlocks__factory {
    return super.connect(signer) as TestERC721ArtBlocks__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721ArtBlocksInterface {
    return new utils.Interface(_abi) as TestERC721ArtBlocksInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC721ArtBlocks {
    return new Contract(address, _abi, signerOrProvider) as TestERC721ArtBlocks;
  }
}
