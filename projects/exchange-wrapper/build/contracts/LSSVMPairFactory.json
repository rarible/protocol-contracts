{
  "contractName": "LSSVMPairFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract LSSVMPairEnumerableETH",
          "name": "_enumerableETHTemplate",
          "type": "address"
        },
        {
          "internalType": "contract LSSVMPairMissingEnumerableETH",
          "name": "_missingEnumerableETHTemplate",
          "type": "address"
        },
        {
          "internalType": "contract LSSVMPairEnumerableERC20",
          "name": "_enumerableERC20Template",
          "type": "address"
        },
        {
          "internalType": "contract LSSVMPairMissingEnumerableERC20",
          "name": "_missingEnumerableERC20Template",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_protocolFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFeeMultiplier",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ICurve",
          "name": "bondingCurve",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "BondingCurveStatusUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "CallTargetStatusUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "NFTDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "NewPair",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMultiplier",
          "type": "uint256"
        }
      ],
      "name": "ProtocolFeeMultiplierUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipientAddress",
          "type": "address"
        }
      ],
      "name": "ProtocolFeeRecipientUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract LSSVMRouter",
          "name": "router",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "RouterStatusUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "TokenDeposit",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICurve",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bondingCurveAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "callAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "enumerableERC20Template",
      "outputs": [
        {
          "internalType": "contract LSSVMPairEnumerableERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "enumerableETHTemplate",
      "outputs": [
        {
          "internalType": "contract LSSVMPairEnumerableETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "missingEnumerableERC20Template",
      "outputs": [
        {
          "internalType": "contract LSSVMPairMissingEnumerableERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "missingEnumerableETHTemplate",
      "outputs": [
        {
          "internalType": "contract LSSVMPairMissingEnumerableETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "protocolFeeMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "protocolFeeRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract LSSVMRouter",
          "name": "",
          "type": "address"
        }
      ],
      "name": "routerStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "wasEverAllowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "contract ICurve",
          "name": "_bondingCurve",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_assetRecipient",
          "type": "address"
        },
        {
          "internalType": "enum LSSVMPair.PoolType",
          "name": "_poolType",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "_delta",
          "type": "uint128"
        },
        {
          "internalType": "uint96",
          "name": "_fee",
          "type": "uint96"
        },
        {
          "internalType": "uint128",
          "name": "_spotPrice",
          "type": "uint128"
        },
        {
          "internalType": "uint256[]",
          "name": "_initialNFTIDs",
          "type": "uint256[]"
        }
      ],
      "name": "createPairETH",
      "outputs": [
        {
          "internalType": "contract LSSVMPairETH",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "contract IERC721",
              "name": "nft",
              "type": "address"
            },
            {
              "internalType": "contract ICurve",
              "name": "bondingCurve",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "assetRecipient",
              "type": "address"
            },
            {
              "internalType": "enum LSSVMPair.PoolType",
              "name": "poolType",
              "type": "uint8"
            },
            {
              "internalType": "uint128",
              "name": "delta",
              "type": "uint128"
            },
            {
              "internalType": "uint96",
              "name": "fee",
              "type": "uint96"
            },
            {
              "internalType": "uint128",
              "name": "spotPrice",
              "type": "uint128"
            },
            {
              "internalType": "uint256[]",
              "name": "initialNFTIDs",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "initialTokenBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct LSSVMPairFactory.CreateERC20PairParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "createPairERC20",
      "outputs": [
        {
          "internalType": "contract LSSVMPairERC20",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "potentialPair",
          "type": "address"
        },
        {
          "internalType": "enum ILSSVMPairFactoryLike.PairVariant",
          "name": "variant",
          "type": "uint8"
        }
      ],
      "name": "isPair",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "withdrawETHProtocolFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC20ProtocolFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_protocolFeeRecipient",
          "type": "address"
        }
      ],
      "name": "changeProtocolFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_protocolFeeMultiplier",
          "type": "uint256"
        }
      ],
      "name": "changeProtocolFeeMultiplier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICurve",
          "name": "bondingCurve",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "setBondingCurveAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "setCallAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract LSSVMRouter",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "name": "setRouterAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "depositNFTs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract LSSVMPairEnumerableETH\",\"name\":\"_enumerableETHTemplate\",\"type\":\"address\"},{\"internalType\":\"contract LSSVMPairMissingEnumerableETH\",\"name\":\"_missingEnumerableETHTemplate\",\"type\":\"address\"},{\"internalType\":\"contract LSSVMPairEnumerableERC20\",\"name\":\"_enumerableERC20Template\",\"type\":\"address\"},{\"internalType\":\"contract LSSVMPairMissingEnumerableERC20\",\"name\":\"_missingEnumerableERC20Template\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_protocolFeeMultiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ICurve\",\"name\":\"bondingCurve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"BondingCurveStatusUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"CallTargetStatusUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"NFTDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"NewPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeMultiplierUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"}],\"name\":\"ProtocolFeeRecipientUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract LSSVMRouter\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"RouterStatusUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"TokenDeposit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ICurve\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bondingCurveAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"callAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_protocolFeeMultiplier\",\"type\":\"uint256\"}],\"name\":\"changeProtocolFeeMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"changeProtocolFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"contract ICurve\",\"name\":\"bondingCurve\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"assetRecipient\",\"type\":\"address\"},{\"internalType\":\"enum LSSVMPair.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"delta\",\"type\":\"uint128\"},{\"internalType\":\"uint96\",\"name\":\"fee\",\"type\":\"uint96\"},{\"internalType\":\"uint128\",\"name\":\"spotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint256[]\",\"name\":\"initialNFTIDs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"initialTokenBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct LSSVMPairFactory.CreateERC20PairParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"createPairERC20\",\"outputs\":[{\"internalType\":\"contract LSSVMPairERC20\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"contract ICurve\",\"name\":\"_bondingCurve\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_assetRecipient\",\"type\":\"address\"},{\"internalType\":\"enum LSSVMPair.PoolType\",\"name\":\"_poolType\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"_delta\",\"type\":\"uint128\"},{\"internalType\":\"uint96\",\"name\":\"_fee\",\"type\":\"uint96\"},{\"internalType\":\"uint128\",\"name\":\"_spotPrice\",\"type\":\"uint128\"},{\"internalType\":\"uint256[]\",\"name\":\"_initialNFTIDs\",\"type\":\"uint256[]\"}],\"name\":\"createPairETH\",\"outputs\":[{\"internalType\":\"contract LSSVMPairETH\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"depositNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enumerableERC20Template\",\"outputs\":[{\"internalType\":\"contract LSSVMPairEnumerableERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enumerableETHTemplate\",\"outputs\":[{\"internalType\":\"contract LSSVMPairEnumerableETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"potentialPair\",\"type\":\"address\"},{\"internalType\":\"enum ILSSVMPairFactoryLike.PairVariant\",\"name\":\"variant\",\"type\":\"uint8\"}],\"name\":\"isPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"missingEnumerableERC20Template\",\"outputs\":[{\"internalType\":\"contract LSSVMPairMissingEnumerableERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"missingEnumerableETHTemplate\",\"outputs\":[{\"internalType\":\"contract LSSVMPairMissingEnumerableETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract LSSVMRouter\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"routerStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"wasEverAllowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICurve\",\"name\":\"bondingCurve\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setBondingCurveAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setCallAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract LSSVMRouter\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"setRouterAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20ProtocolFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETHProtocolFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeProtocolFeeMultiplier(uint256)\":{\"params\":{\"_protocolFeeMultiplier\":\"The new fee multiplier, 18 decimals\"}},\"changeProtocolFeeRecipient(address)\":{\"params\":{\"_protocolFeeRecipient\":\"The new fee recipient\"}},\"createPairETH(address,address,address,uint8,uint128,uint96,uint128,uint256[])\":{\"params\":{\"_assetRecipient\":\"The address that will receive the assets traders give during trades. If set to address(0), assets will be sent to the pool address. Not available to TRADE pools. \",\"_bondingCurve\":\"The bonding curve for the pair to price NFTs, must be whitelisted\",\"_delta\":\"The delta value used by the bonding curve. The meaning of delta depends on the specific curve.\",\"_fee\":\"The fee taken by the LP in each trade. Can only be non-zero if _poolType is Trade.\",\"_initialNFTIDs\":\"The list of IDs of NFTs to transfer from the sender to the pair\",\"_nft\":\"The NFT contract of the collection the pair trades\",\"_poolType\":\"TOKEN, NFT, or TRADE\",\"_spotPrice\":\"The initial selling spot price\"},\"returns\":{\"pair\":\"The new pair\"}},\"depositERC20(address,address,uint256)\":{\"details\":\"Used to deposit ERC20s into a pair after creation and emit an event for indexing (if recipient is indeed an ERC20 pair and the token matches)\"},\"depositNFTs(address,uint256[],address)\":{\"details\":\"Used to deposit NFTs into a pair after creation and emit an event for indexing (if recipient is indeed a pair)\"},\"isPair(address,uint8)\":{\"params\":{\"potentialPair\":\"The address to check\",\"variant\":\"The pair variant (NFT is enumerable or not, pair uses ETH or ERC20)\"},\"returns\":{\"_0\":\"True if the address is the specified pair variant, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setBondingCurveAllowed(address,bool)\":{\"params\":{\"bondingCurve\":\"The bonding curve contract\",\"isAllowed\":\"True to whitelist, false to remove from whitelist\"}},\"setCallAllowed(address,bool)\":{\"params\":{\"isAllowed\":\"True to whitelist, false to remove from whitelist\",\"target\":\"The target contract\"}},\"setRouterAllowed(address,bool)\":{\"params\":{\"_router\":\"The router\",\"isAllowed\":\"True to whitelist, false to remove from whitelist\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawERC20ProtocolFees(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer\",\"token\":\"The token to transfer\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeProtocolFeeMultiplier(uint256)\":{\"notice\":\"Changes the protocol fee multiplier. Only callable by the owner.\"},\"changeProtocolFeeRecipient(address)\":{\"notice\":\"Changes the protocol fee recipient address. Only callable by the owner.\"},\"createPairETH(address,address,address,uint8,uint128,uint96,uint128,uint256[])\":{\"notice\":\"Creates a pair contract using EIP-1167.\"},\"isPair(address,uint8)\":{\"notice\":\"Checks if an address is a LSSVMPair. Uses the fact that the pairs are EIP-1167 minimal proxies.\"},\"setBondingCurveAllowed(address,bool)\":{\"notice\":\"Sets the whitelist status of a bonding curve contract. Only callable by the owner.\"},\"setCallAllowed(address,bool)\":{\"notice\":\"Sets the whitelist status of a contract to be called arbitrarily by a pair. Only callable by the owner.\"},\"setRouterAllowed(address,bool)\":{\"notice\":\"Updates the router whitelist. Only callable by the owner.\"},\"withdrawERC20ProtocolFees(address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens to the protocol fee recipient. Only callable by the owner.\"},\"withdrawETHProtocolFees()\":{\"notice\":\"Withdraws the ETH balance to the protocol fee recipient. Only callable by the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/lsvm/LSSVMPairFactory.sol\":\"LSSVMPairFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xf7291d7213336b00ee7edbf7cd5034778dd7b0bda2a7489e664f1e5cacc6c24e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3671a157cfdc73f334fc9e584862e1b3b48e8b771cde69d79834b03dc5c2826\",\"dweb:/ipfs/QmVJnMc3FLyYzJFktqwinaZes3pnRPuU1wKmBGvGRfh4rc\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31\",\"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS\"]},\"project:/contracts/lsvm/ILSSVMPairFactoryLike.sol\":{\"keccak256\":\"0x1cbba0c87aefdb0d4d4cc6b603baed5cbb500001a7841a58af5726428830b767\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://f47ee4c89604392e74d3737dc92b6a79bf437bf748fcabf841a14ecf98ce945c\",\"dweb:/ipfs/QmT9YKwhNzLkRSWFovyuCpYjYa7Z7y78iZrVXLU6GtvWQS\"]},\"project:/contracts/lsvm/LSSVMPair.sol\":{\"keccak256\":\"0x482be7d90f3e365ef0c4a4ec121327caa8e245d802c237e4a2249218cdac9675\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8480d68b5208aafd3401d14675adaed0cab6b8e764c8065ed5690a1fd696c234\",\"dweb:/ipfs/QmREgzsy8GM4XHZ49mdPxKvUyGKaUyujDiMySfeujwqdag\"]},\"project:/contracts/lsvm/LSSVMPairERC20.sol\":{\"keccak256\":\"0x60389023e0a3f18ebd7b64c97ce5cbd525f00ea07abf6990fc788f49a2632f1a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c136e188b5241555fa63d5612bac59f5558755fa1cfa94bebe69b5ac5b8305ba\",\"dweb:/ipfs/QmYREEtJXhEAoCKPr9koUPXuNCMcBCtgdfuChMaRBRrEw6\"]},\"project:/contracts/lsvm/LSSVMPairETH.sol\":{\"keccak256\":\"0x13840a360abb38208a8aa8f34e6ab5c4143922c1b93ede1d05203b0b3d628c8e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://aab941f00e2fa05df33215631f47c302760e1ae5a108000e4ece8ef8a70ffb92\",\"dweb:/ipfs/QmVA6dVtJtRfudnxCJMKgRosBXGJZk8hXNmqay4hkM3y1e\"]},\"project:/contracts/lsvm/LSSVMPairEnumerable.sol\":{\"keccak256\":\"0x77516fd07580ef3a945efcca14cb7d41db03ad0c1ab475f98f928d15b3896acd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1f2baabaeb3d37c03cab3a0537aba97cb7f6177ec00d153d9ff621d2137dc295\",\"dweb:/ipfs/QmQQJWHL8rN9yXSk2TZLZnBPvQ4sk1EFY5UaBq6jkA4FPo\"]},\"project:/contracts/lsvm/LSSVMPairEnumerableERC20.sol\":{\"keccak256\":\"0xf64d607db1766e196423886c118ca0849d6d4851a0abcbc25a47f02f1f0b3086\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1de7a05b6c5aef9e1fb0aabf2b4790d345602a17875cd95ad123974608245d41\",\"dweb:/ipfs/QmcCT7bH27aCXPCTxNFURWTBaRCBCWxXkok1j4nSrackRs\"]},\"project:/contracts/lsvm/LSSVMPairEnumerableETH.sol\":{\"keccak256\":\"0x2fc4cc2879ae82e797ce7be2ab3a95ad62d7393a907de8c92e18b7397fc334f8\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0310d329938bb2643cba015296e6bd6e37f7858c9999d94ac375cb52b8a39fcb\",\"dweb:/ipfs/QmXiuXF9nXKo8RTNuB7Q1vVgyNCyi3q9qyeTXv81kE72NY\"]},\"project:/contracts/lsvm/LSSVMPairFactory.sol\":{\"keccak256\":\"0x7db127ea05eeccfdfe87ae5495c330db648c96f92478d2bdca362ba8fe8198e3\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://7ae8aa46f4e0b0b964a5c0d512a2a0b1d9ebe1cf7f51197184036f0f7fe37d8b\",\"dweb:/ipfs/QmNjg8ADmBYRdUHrGKDWxVPysD2CFbTd17yPU1pEWs8cjc\"]},\"project:/contracts/lsvm/LSSVMPairMissingEnumerable.sol\":{\"keccak256\":\"0xc4cebdc64fe39fc9a2c953fdac50abe8a6a9e3ebf67a8b06efa29ed5cdc7b818\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://f950ad1ac509d707825cd958938e9c4aa7cf2ed32a6dbc8135bb08aff0370642\",\"dweb:/ipfs/QmRk8jxN49gYiWZ2JmvbSEBQVFQoTJKsasWXVNf4tWsDid\"]},\"project:/contracts/lsvm/LSSVMPairMissingEnumerableERC20.sol\":{\"keccak256\":\"0x3612d60463a7c4af6e3fc6813b39eda28142ea471c142ec510c926efcb95497e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://865b8e23524a40003c004eaf9bf69579907bafe75b44375c81553ab05f85d14c\",\"dweb:/ipfs/QmTC4nNp4GJBCHidwcU8txC1LyyYdwYUpqZumCVb9WBQy1\"]},\"project:/contracts/lsvm/LSSVMPairMissingEnumerableETH.sol\":{\"keccak256\":\"0xa625bbde572c406445543dd9b384fe7fbec4da04dff95d2cf7e35a8aae53221e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://667b4c28c1f07f8ca150560fc4355f6f91eca60c69f50e32d6ba4a5f8d33503f\",\"dweb:/ipfs/QmXz3283SdY96jSHL72NNnckxFXeVtNSvC8PDa9BXPhwta\"]},\"project:/contracts/lsvm/LSSVMRouter.sol\":{\"keccak256\":\"0x9c3fddb9b3e2ce92b222889d8393d7d951d65872570745ddc931f6ac5f308e66\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4eb02298cb74cd4b6a56d9753f6d823a4615033c50d26087429c25c0db521850\",\"dweb:/ipfs/QmeJMrffjpAbvg1qtCQGMRa85dCyu1pvwhvz4j69XQ27YE\"]},\"project:/contracts/lsvm/bonding-curves/CurveErrorCodes.sol\":{\"keccak256\":\"0x921fa756278ee39ea5e10c85933f1775ff4a412b700961837097b5da72e2c2ca\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8bc64cbcac649bcc4ea42df0c913dde0c7cb90cb2e724b8ed12e4d3f37e5436c\",\"dweb:/ipfs/Qmcyh8k4pbcDB9qSPMppbAYDYgbweH4sy4AaAEjFHYHBcZ\"]},\"project:/contracts/lsvm/bonding-curves/ICurve.sol\":{\"keccak256\":\"0xc845d2cb70966da8b2bd6f5d51abbfd459ae9c3f27449b8243aa5182bc174d24\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3338d5eea46a635ead3c390632dc4eaa0de0a870c784902c27c3c88359fce0d2\",\"dweb:/ipfs/QmWmELkig6wiKxEzuNRmf2PFjJbBJFnePSASh2DKBnCWfX\"]},\"project:/contracts/lsvm/lib/IOwnershipTransferCallback.sol\":{\"keccak256\":\"0xde525ebc5c03d56e223c7ec16436763e8432b0f90e040eac58eb0123c172c0f7\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://575c817eb62547db9d69cfca2978127bb458752d551f884039a81e67fc11c191\",\"dweb:/ipfs/QmX2Fco7R9DZq7swEdD7zDi2CxdDrFgDPPi2JrnNSuMN2U\"]},\"project:/contracts/lsvm/lib/LSSVMPairCloner.sol\":{\"keccak256\":\"0x87f01b17e4433dc8763c022e5588a51865a7185df8acbfb969cb08c69af58867\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840ff490074f0c17929fa9d5a7f9c522bd0b1438ec6a7793304e846ee0d40a31\",\"dweb:/ipfs/QmRPRWW9tSVT8qnJoJxEfd2L8qdxwChboycF6B2L2LoJxT\"]},\"project:/contracts/lsvm/lib/OwnableWithTransferCallback.sol\":{\"keccak256\":\"0x911a1d3248ba5771c4fec49a28a90bc77855eed016464b68de79ea4d79a76e66\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4062e6c217c523417acf136b4c9cbabcdb4ed1bd3fc57363434242effb8793b6\",\"dweb:/ipfs/QmQbHmySvEf9PGMTCfFh7yChxHu3TjD2woUC9QQfPrK2HT\"]},\"project:/contracts/lsvm/lib/ReentrancyGuard.sol\":{\"keccak256\":\"0x879a738e470b63aac602ec990d8fd3384d8ad7fafb0be3ef4c4230ed01681374\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfbe7f77e24de9701c62fdd1a56a53de050a1bdb063833e1e413a16bc0885655\",\"dweb:/ipfs/QmTEnFQbNU2ziqtVKWNBiPZEfeEroowNj1pFAmuGYW7oHn\"]},\"solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b5060405162001f3738038062001f3783398101604081905262000035916200013c565b6200004033620000d3565b6001600160a01b0386811660805285811660a05284811660c05283811660e052600180546001600160a01b03191691841691909117905567016345785d8a0000811115620000c45760405162461bcd60e51b815260206004820152600d60248201526c46656520746f6f206c6172676560981b604482015260640160405180910390fd5b60025550620001c49350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200013957600080fd5b50565b60008060008060008060c087890312156200015657600080fd5b8651620001638162000123565b6020880151909650620001768162000123565b6040880151909550620001898162000123565b60608801519094506200019c8162000123565b6080880151909350620001af8162000123565b8092505060a087015190509295509295509295565b60805160a05160c05160e051611cf362000244600039600081816102a30152818161057601528181610aab0152610ad60152600081816103aa0152818161052a0152610afc01526000818161016c0152818161060001528181610f970152610fc201526000818161045e015281816105bb0152610fe80152611cf36000f3fe60806040526004361061014e5760003560e01c8063715018a6116100b6578063ad2e57701161006f578063ad2e57701461044c578063b483eddc14610480578063cc5bc20b14610495578063ce9c095d146104b5578063ebd0f693146104c8578063f2fde38b146104e857600080fd5b8063715018a6146103455780638da5cb5b1461035a5780639c3c11d214610378578063a427f1ad14610398578063a82719c8146103cc578063a93ec68b146103fc57600080fd5b80634bf107c1116101085780634bf107c1146102715780634c6bc43314610291578063514f0330146102c557806359722caa146102e557806364df049e146103055780636cc88edb1461032557600080fd5b80624885ea1461015a57806308f25a8f146101ab5780631cad5a40146101db5780631ce4c78b146101fd5780631fba95e8146102215780632cdb394b1461025157600080fd5b3661015557005b600080fd5b34801561016657600080fd5b5061018e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101b757600080fd5b506101cb6101c6366004611825565b610508565b60405190151581526020016101a2565b3480156101e757600080fd5b506101fb6101f6366004611862565b61062f565b005b34801561020957600080fd5b5061021360025481565b6040519081526020016101a2565b34801561022d57600080fd5b506101cb61023c3660046118a3565b60046020526000908152604090205460ff1681565b34801561025d57600080fd5b506101fb61026c366004611913565b610722565b34801561027d57600080fd5b506101fb61028c366004611989565b610853565b34801561029d57600080fd5b5061018e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d157600080fd5b506101fb6102e03660046118a3565b6108ea565b3480156102f157600080fd5b5061018e6103003660046119b7565b6109ab565b34801561031157600080fd5b5060015461018e906001600160a01b031681565b34801561033157600080fd5b506101fb610340366004611989565b610c45565b34801561035157600080fd5b506101fb610d59565b34801561036657600080fd5b506000546001600160a01b031661018e565b34801561038457600080fd5b506101fb6103933660046119f3565b610d8f565b3480156103a457600080fd5b5061018e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103d857600080fd5b506101cb6103e73660046118a3565b60036020526000908152604090205460ff1681565b34801561040857600080fd5b506104356104173660046118a3565b60056020526000908152604090205460ff8082169161010090041682565b6040805192151583529015156020830152016101a2565b34801561045857600080fd5b5061018e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561048c57600080fd5b506101fb610e36565b3480156104a157600080fd5b506101fb6104b0366004611a0c565b610e76565b61018e6104c3366004611a7f565b610ebe565b3480156104d457600080fd5b506101fb6104e3366004611989565b611093565b3480156104f457600080fd5b506101fb6105033660046118a3565b611181565b6000600282600381111561051e5761051e611b40565b14156105565761054f307f00000000000000000000000000000000000000000000000000000000000000008561121c565b9050610629565b600382600381111561056a5761056a611b40565b141561059b5761054f307f00000000000000000000000000000000000000000000000000000000000000008561121c565b60008260038111156105af576105af611b40565b14156105e05761054f307f000000000000000000000000000000000000000000000000000000000000000085611296565b60018260038111156105f4576105f4611b40565b14156106255761054f307f000000000000000000000000000000000000000000000000000000000000000085611296565b5060005b92915050565b6106446001600160a01b038416338484611310565b61064f826002610508565b806106605750610660826003610508565b1561071d57816001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190611b56565b6001600160a01b0316836001600160a01b0316141561071d576040516001600160a01b03831681527f831faf3fbb75c9fc66e318de7e95905d24c0430822da168c1c06fd49cba8f5f79060200160405180910390a15b505050565b8160005b818110156107cb57856001600160a01b03166342842e0e338588888681811061075157610751611b73565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156107a857600080fd5b505af11580156107bc573d6000803e3d6000fd5b50505050806001019050610726565b506107d7826002610508565b806107e857506107e8826000610508565b806107f957506107f9826003610508565b8061080a575061080a826001610508565b1561084c576040516001600160a01b03831681527f4fd0cd7c14badac45ff0bee670a9d8dd80e87907afcf2c121e0fd4b8b4b0047f9060200160405180910390a15b5050505050565b6000546001600160a01b031633146108865760405162461bcd60e51b815260040161087d90611b89565b60405180910390fd5b6001600160a01b038216600081815260036020908152604091829020805460ff19168515159081179091558251938452908301527f1da28d127ec72d2dde6a533c98857664b25cd827680fb1f39f57394c2b444d9191015b60405180910390a15050565b6000546001600160a01b031633146109145760405162461bcd60e51b815260040161087d90611b89565b6001600160a01b0381166109565760405162461bcd60e51b815260206004820152600960248201526830206164647265737360b81b604482015260640161087d565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fceec08a75d1f3b12c14c6cdc16c081aec1c401c2eac1d8c6ea91e9d73b929211906020015b60405180910390a150565b60006003816109c060608501604086016118a3565b6001600160a01b0316815260208101919091526040016000205460ff16610a295760405162461bcd60e51b815260206004820152601d60248201527f426f6e64696e67206375727665206e6f742077686974656c6973746564000000604482015260640161087d565b6000610a3b60408401602085016118a3565b6040516301ffc9a760e01b815263780e9d6360e01b60048201526001600160a01b0391909116906301ffc9a790602401602060405180830381865afa925050508015610aa4575060408051601f3d908101601f19168201909252610aa191810190611bbe565b60015b610acf57507f0000000000000000000000000000000000000000000000000000000000000000610b20565b80610afa577f0000000000000000000000000000000000000000000000000000000000000000610b1c565b7f00000000000000000000000000000000000000000000000000000000000000005b9150505b610b8630610b3460608601604087016118a3565b610b4460408701602088016118a3565b610b5460a0880160808901611bdb565b6002811115610b6557610b65611b40565b610b7260208901896118a3565b6001600160a01b0387169493929190611393565b9150610c0382610b9960208601866118a3565b610ba960408701602088016118a3565b610bb960808801606089016118a3565b610bc960c0890160a08a01611bf6565b610bd960e08a0160c08b01611c11565b610bea6101008b0160e08c01611bf6565b610bf86101008c018c611c2c565b8c6101200135611416565b6040516001600160a01b03831681527ff5bdc103c3e68a20d5f97d2d46792d3fdddfa4efeb6761f8141e6a7b936ca66c9060200160405180910390a150919050565b6000546001600160a01b03163314610c6f5760405162461bcd60e51b815260040161087d90611b89565b8015610cd2576001600160a01b03821660009081526004602052604090205460ff1615610cd25760405162461bcd60e51b815260206004820152601160248201527021b0b713ba1031b0b636103937baba32b960791b604482015260640161087d565b604080518082018252821515808252600160208084019182526001600160a01b03871660008181526005835286902094518554935161ffff1990941690151561ff0019161761010093151593909302929092179093558351908152918201527f24e274cfd23919da24a57044266685f5474338837aecdcca3136b2102f78fee591016108de565b6000546001600160a01b03163314610d835760405162461bcd60e51b815260040161087d90611b89565b610d8d6000611549565b565b6000546001600160a01b03163314610db95760405162461bcd60e51b815260040161087d90611b89565b67016345785d8a0000811115610e015760405162461bcd60e51b815260206004820152600d60248201526c46656520746f6f206c6172676560981b604482015260640161087d565b60028190556040518181527f7c5d30e0df5c540841a598b27bd89807223a2e6348125bb4aa74f1a8cb9ce768906020016109a0565b6000546001600160a01b03163314610e605760405162461bcd60e51b815260040161087d90611b89565b600154610d8d906001600160a01b031647611599565b6000546001600160a01b03163314610ea05760405162461bcd60e51b815260040161087d90611b89565b600154610eba906001600160a01b038481169116836115ea565b5050565b6001600160a01b03881660009081526003602052604081205460ff16610f265760405162461bcd60e51b815260206004820152601d60248201527f426f6e64696e67206375727665206e6f742077686974656c6973746564000000604482015260640161087d565b6040516301ffc9a760e01b815263780e9d6360e01b60048201526000906001600160a01b038c16906301ffc9a790602401602060405180830381865afa925050508015610f90575060408051601f3d908101601f19168201909252610f8d91810190611bbe565b60015b610fbb57507f000000000000000000000000000000000000000000000000000000000000000061100c565b80610fe6577f0000000000000000000000000000000000000000000000000000000000000000611008565b7f00000000000000000000000000000000000000000000000000000000000000005b9150505b611037308b8d8b600281111561102457611024611b40565b6001600160a01b03861693929190611668565b9150611049828c8b8a8a8a8a8a6116e1565b6040516001600160a01b03831681527ff5bdc103c3e68a20d5f97d2d46792d3fdddfa4efeb6761f8141e6a7b936ca66c9060200160405180910390a1509998505050505050505050565b6000546001600160a01b031633146110bd5760405162461bcd60e51b815260040161087d90611b89565b8015611125576001600160a01b038216600090815260056020526040902054610100900460ff16156111255760405162461bcd60e51b815260206004820152601160248201527021b0b713ba1031b0b636103937baba32b960791b604482015260640161087d565b6001600160a01b038216600081815260046020908152604091829020805460ff19168515159081179091558251938452908301527fab2e2e8d21d5efbffb30945e9b6ee1fb43620ef65a228f871f5028bf8a6e004a91016108de565b6000546001600160a01b031633146111ab5760405162461bcd60e51b815260040161087d90611b89565b6001600160a01b0381166112105760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161087d565b61121981611549565b50565b6000604051733d3d3d3d363d3d37605160353639366051013d7360601b81528360601b60148201526c5af43d3d93803e603357fd5bf360981b60288201528460601b6035820152604981016049600082863c6029810151602983015114602082015160208401511416815183511416925050509392505050565b6000604051733d3d3d3d363d3d37603d6035363936603d013d7360601b81528360601b60148201526c5af43d3d93803e603357fd5bf360981b60288201528460601b6035820152604981016049600082863c6029810151602983015114602082015160208401511416815183511416925050509392505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061084c5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b604482015260640161087d565b60006040517f60863d8160093d39f33d3d3d3d363d3d37605160353639366051013d7300000081528760601b601d8201526c5af43d3d93803e603357fd5bf360981b60318201528660601b603e8201528560601b60528201528460601b606682015283607a8201538260601b607b820152608f816000f098975050505050505050565b60405163fd17aef960e01b81526001600160a01b038b169063fd17aef99061144a9033908b908b908b908b90600401611c76565b600060405180830381600087803b15801561146457600080fd5b505af1158015611478573d6000803e3d6000fd5b50611492925050506001600160a01b038a16338c84611310565b8160005b8181101561153b57896001600160a01b03166342842e0e338e8888868181106114c1576114c1611b73565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561151857600080fd5b505af115801561152c573d6000803e3d6000fd5b50505050806001019050611496565b505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080600085875af190508061071d5760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b604482015260640161087d565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806116625760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161087d565b50505050565b60006040517f60723d8160093d39f33d3d3d3d363d3d37603d6035363936603d013d7300000081528660601b601d8201526c5af43d3d93803e603357fd5bf360981b60318201528560601b603e8201528460601b60528201528360601b606682015282607a820153607b816000f0979650505050505050565b60405163fd17aef960e01b81526001600160a01b0389169063fd17aef9906117159033908a908a908a908a90600401611c76565b600060405180830381600087803b15801561172f57600080fd5b505af1158015611743573d6000803e3d6000fd5b5061175b925050506001600160a01b03891634611599565b8060005b8181101561180457886001600160a01b03166342842e0e338c87878681811061178a5761178a611b73565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156117e157600080fd5b505af11580156117f5573d6000803e3d6000fd5b5050505080600101905061175f565b50505050505050505050565b6001600160a01b038116811461121957600080fd5b6000806040838503121561183857600080fd5b823561184381611810565b915060208301356004811061185757600080fd5b809150509250929050565b60008060006060848603121561187757600080fd5b833561188281611810565b9250602084013561189281611810565b929592945050506040919091013590565b6000602082840312156118b557600080fd5b81356118c081611810565b9392505050565b60008083601f8401126118d957600080fd5b50813567ffffffffffffffff8111156118f157600080fd5b6020830191508360208260051b850101111561190c57600080fd5b9250929050565b6000806000806060858703121561192957600080fd5b843561193481611810565b9350602085013567ffffffffffffffff81111561195057600080fd5b61195c878288016118c7565b909450925050604085013561197081611810565b939692955090935050565b801515811461121957600080fd5b6000806040838503121561199c57600080fd5b82356119a781611810565b915060208301356118578161197b565b6000602082840312156119c957600080fd5b813567ffffffffffffffff8111156119e057600080fd5b820161014081850312156118c057600080fd5b600060208284031215611a0557600080fd5b5035919050565b60008060408385031215611a1f57600080fd5b8235611a2a81611810565b946020939093013593505050565b803560038110611a4757600080fd5b919050565b80356001600160801b0381168114611a4757600080fd5b80356bffffffffffffffffffffffff81168114611a4757600080fd5b60008060008060008060008060006101008a8c031215611a9e57600080fd5b8935611aa981611810565b985060208a0135611ab981611810565b975060408a0135611ac981611810565b9650611ad760608b01611a38565b9550611ae560808b01611a4c565b9450611af360a08b01611a63565b9350611b0160c08b01611a4c565b925060e08a013567ffffffffffffffff811115611b1d57600080fd5b611b298c828d016118c7565b915080935050809150509295985092959850929598565b634e487b7160e01b600052602160045260246000fd5b600060208284031215611b6857600080fd5b81516118c081611810565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611bd057600080fd5b81516118c08161197b565b600060208284031215611bed57600080fd5b6118c082611a38565b600060208284031215611c0857600080fd5b6118c082611a4c565b600060208284031215611c2357600080fd5b6118c082611a63565b6000808335601e19843603018112611c4357600080fd5b83018035915067ffffffffffffffff821115611c5e57600080fd5b6020019150600581901b360382131561190c57600080fd5b6001600160a01b0395861681529390941660208401526001600160801b0391821660408401526bffffffffffffffffffffffff166060830152909116608082015260a0019056fea2646970667358221220d9cc814f76bb304b3aecbb515c7a4d606ee1e84dc583416f44aeef6996b9057664736f6c634300080b0033",
  "deployedBytecode": "",
  "immutableReferences": {
    "7009": [
      {
        "length": 32,
        "start": 1118
      },
      {
        "length": 32,
        "start": 1467
      },
      {
        "length": 32,
        "start": 4072
      }
    ],
    "7012": [
      {
        "length": 32,
        "start": 364
      },
      {
        "length": 32,
        "start": 1536
      },
      {
        "length": 32,
        "start": 3991
      },
      {
        "length": 32,
        "start": 4034
      }
    ],
    "7015": [
      {
        "length": 32,
        "start": 938
      },
      {
        "length": 32,
        "start": 1322
      },
      {
        "length": 32,
        "start": 2812
      }
    ],
    "7018": [
      {
        "length": 32,
        "start": 675
      },
      {
        "length": 32,
        "start": 1398
      },
      {
        "length": 32,
        "start": 2731
      },
      {
        "length": 32,
        "start": 2774
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1639:49",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:49",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:86:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "147:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "156:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "159:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "149:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "149:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "149:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "106:5:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "117:5:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "132:3:49",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "137:1:49",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "128:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "128:11:49"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "141:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "124:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "124:19:49"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "113:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "113:31:49"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "103:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "103:42:49"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:50:49"
                  },
                  "nodeType": "YulIf",
                  "src": "93:70:49"
                }
              ]
            },
            "name": "validator_revert_contract_LSSVMPairEnumerableETH",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "72:5:49",
                "type": ""
              }
            ],
            "src": "14:155:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "490:805:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "537:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "546:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "549:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "539:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "539:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "539:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "511:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "520:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "507:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "532:3:49",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "503:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "503:33:49"
                  },
                  "nodeType": "YulIf",
                  "src": "500:53:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "562:29:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "581:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "575:5:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:16:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "566:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "649:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_LSSVMPairEnumerableETH",
                      "nodeType": "YulIdentifier",
                      "src": "600:48:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:55:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "600:55:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "664:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "674:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "664:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "688:40:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "713:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "724:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "709:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "709:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "703:5:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "703:25:49"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "692:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "786:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_LSSVMPairEnumerableETH",
                      "nodeType": "YulIdentifier",
                      "src": "737:48:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:57:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "737:57:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "803:17:49",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "813:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "803:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "829:40:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "854:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "865:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "850:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "850:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "844:5:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "844:25:49"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "833:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "927:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_LSSVMPairEnumerableETH",
                      "nodeType": "YulIdentifier",
                      "src": "878:48:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:57:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "878:57:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "944:17:49",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "954:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "944:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "970:40:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "995:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1006:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "991:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "991:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "985:5:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "985:25:49"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "974:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "1068:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_LSSVMPairEnumerableETH",
                      "nodeType": "YulIdentifier",
                      "src": "1019:48:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:57:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1019:57:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1085:17:49",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "1095:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1085:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1111:41:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1136:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1147:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1132:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:19:49"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1126:5:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1126:26:49"
                  },
                  "variables": [
                    {
                      "name": "value_4",
                      "nodeType": "YulTypedName",
                      "src": "1115:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_4",
                        "nodeType": "YulIdentifier",
                        "src": "1210:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_LSSVMPairEnumerableETH",
                      "nodeType": "YulIdentifier",
                      "src": "1161:48:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1161:57:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1161:57:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1227:17:49",
                  "value": {
                    "name": "value_4",
                    "nodeType": "YulIdentifier",
                    "src": "1237:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1253:36:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1273:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1284:3:49",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1269:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1269:19:49"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1263:5:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1263:26:49"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1253:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_LSSVMPairEnumerableETH_$6945t_contract$_LSSVMPairMissingEnumerableETH_$8307t_contract$_LSSVMPairEnumerableERC20_$6918t_contract$_LSSVMPairMissingEnumerableERC20_$8282t_address_payablet_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "416:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "427:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "439:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "447:6:49",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "455:6:49",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "463:6:49",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "471:6:49",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "479:6:49",
                "type": ""
              }
            ],
            "src": "174:1121:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1474:163:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1491:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1502:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1484:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1484:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1484:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1525:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1536:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1521:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1521:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1541:2:49",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1514:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1514:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1514:30:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1564:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1575:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1560:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1560:18:49"
                      },
                      {
                        "hexValue": "46656520746f6f206c61726765",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1580:15:49",
                        "type": "",
                        "value": "Fee too large"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1553:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1553:43:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1553:43:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1605:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1617:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1628:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1613:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1613:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1605:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1451:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1465:4:49",
                "type": ""
              }
            ],
            "src": "1300:337:49"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_LSSVMPairEnumerableETH(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_LSSVMPairEnumerableETH_$6945t_contract$_LSSVMPairMissingEnumerableETH_$8307t_contract$_LSSVMPairEnumerableERC20_$6918t_contract$_LSSVMPairMissingEnumerableERC20_$8282t_address_payablet_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_LSSVMPairEnumerableETH(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_LSSVMPairEnumerableETH(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_LSSVMPairEnumerableETH(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_contract_LSSVMPairEnumerableETH(value_3)\n        value3 := value_3\n        let value_4 := mload(add(headStart, 128))\n        validator_revert_contract_LSSVMPairEnumerableETH(value_4)\n        value4 := value_4\n        value5 := mload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Fee too large\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 49,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:17757:49",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:49",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "161:102:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "171:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "183:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "179:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "171:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "213:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "228:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "244:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "249:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "240:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "240:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "253:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "236:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "236:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "224:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "206:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "206:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "206:51:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_LSSVMPairMissingEnumerableETH_$8307__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "130:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "141:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "152:4:49",
                "type": ""
              }
            ],
            "src": "14:249:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "313:86:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "377:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "386:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "389:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "379:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "379:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "379:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "336:5:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "347:5:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "362:3:49",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "367:1:49",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "358:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "358:11:49"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "371:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "354:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "354:19:49"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "343:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "343:31:49"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "333:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "333:42:49"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "326:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "326:50:49"
                  },
                  "nodeType": "YulIf",
                  "src": "323:70:49"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "302:5:49",
                "type": ""
              }
            ],
            "src": "268:131:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "507:310:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "553:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "562:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "565:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "555:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "555:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "555:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "528:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "537:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "524:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "524:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "549:2:49",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "520:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "520:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "517:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "578:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "604:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "591:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "582:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "648:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "623:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "623:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "623:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "663:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "673:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "663:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "687:47:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "719:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "730:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "715:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "715:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "702:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "702:32:49"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "691:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "769:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "778:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "781:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "771:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "771:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "771:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "756:7:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "765:1:49",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "753:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "753:14:49"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "746:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:22:49"
                  },
                  "nodeType": "YulIf",
                  "src": "743:42:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "794:17:49",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "804:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "794:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_enum$_PairVariant_$4514",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "465:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "476:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "488:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "496:6:49",
                "type": ""
              }
            ],
            "src": "404:413:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:92:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "927:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "939:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "950:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "927:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "969:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "994:6:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "987:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "987:14:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "980:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "980:22:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "962:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:41:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "962:41:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "886:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "897:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "908:4:49",
                "type": ""
              }
            ],
            "src": "822:187:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1133:352:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1179:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1188:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1191:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1181:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1181:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1181:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1154:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1163:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1150:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1150:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1175:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1146:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1146:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "1143:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1204:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1230:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1217:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1217:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1208:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1274:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1249:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1249:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1289:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1299:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1289:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1313:47:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1345:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1356:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1341:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1341:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1328:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1328:32:49"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1317:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1394:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1369:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1369:33:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1369:33:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1411:17:49",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1421:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1411:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1437:42:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1464:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1475:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1460:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1460:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1447:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1447:32:49"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1437:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$12652t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1083:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1094:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1106:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1114:6:49",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1122:6:49",
                "type": ""
              }
            ],
            "src": "1014:471:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1591:76:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1601:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1613:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1624:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1609:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1609:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1601:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1643:9:49"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1654:6:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1636:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1636:25:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1636:25:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1560:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1571:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1582:4:49",
                "type": ""
              }
            ],
            "src": "1490:177:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1742:177:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1788:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1797:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1800:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1790:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1790:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1790:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1763:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1772:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1759:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1784:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1755:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "1752:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1813:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1839:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1826:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1817:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1883:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1858:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1858:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1858:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1898:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1908:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1898:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1708:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1719:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1731:6:49",
                "type": ""
              }
            ],
            "src": "1672:247:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2008:283:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2057:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2066:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2069:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2059:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2059:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2059:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2036:6:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2044:4:49",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2032:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2032:17:49"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2051:3:49"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2028:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2028:27:49"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2021:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:35:49"
                  },
                  "nodeType": "YulIf",
                  "src": "2018:55:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2082:30:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2105:6:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2092:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2092:20:49"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2082:6:49"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2155:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2164:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2167:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2157:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2157:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2157:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2127:6:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2135:18:49",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2124:2:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2124:30:49"
                  },
                  "nodeType": "YulIf",
                  "src": "2121:50:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2180:29:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2196:6:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2204:4:49",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2192:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2192:17:49"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "2180:8:49"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2269:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2278:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2281:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2271:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2271:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2271:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2232:6:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2244:1:49",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2247:6:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2240:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2240:14:49"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2228:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2228:27:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2257:4:49",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2224:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2224:38:49"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2264:3:49"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2221:2:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2221:47:49"
                  },
                  "nodeType": "YulIf",
                  "src": "2218:67:49"
                }
              ]
            },
            "name": "abi_decode_array_uint256_dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1971:6:49",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1979:3:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1987:8:49",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1997:6:49",
                "type": ""
              }
            ],
            "src": "1924:367:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2451:574:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2497:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2506:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2509:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2499:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2499:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2499:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2472:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2481:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2468:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2468:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2493:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2464:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2464:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "2461:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2522:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2548:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2535:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2535:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2526:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2592:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2567:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2567:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2567:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2607:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2617:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2607:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2631:46:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2662:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2673:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2658:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2658:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2645:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2645:32:49"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2635:6:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2720:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2729:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2732:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2722:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2722:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2722:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2692:6:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2700:18:49",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2689:2:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2689:30:49"
                  },
                  "nodeType": "YulIf",
                  "src": "2686:50:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2745:96:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2813:9:49"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2824:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2809:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2809:22:49"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2833:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_uint256_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2771:37:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2771:70:49"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "2749:8:49",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "2759:8:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2850:18:49",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "2860:8:49"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2850:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2877:18:49",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2887:8:49"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2877:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2904:47:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2936:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2947:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2932:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2932:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2919:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2919:32:49"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2908:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2985:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2960:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2960:33:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2960:33:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3002:17:49",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3012:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3002:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC721_$2445t_array$_t_uint256_$dyn_calldata_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2393:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2404:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2416:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2424:6:49",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2432:6:49",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2440:6:49",
                "type": ""
              }
            ],
            "src": "2296:729:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3072:76:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3126:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3135:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3138:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3128:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3128:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3128:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3095:5:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3116:5:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3109:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3109:13:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3102:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3102:21:49"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3092:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3092:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3085:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:40:49"
                  },
                  "nodeType": "YulIf",
                  "src": "3082:60:49"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3061:5:49",
                "type": ""
              }
            ],
            "src": "3030:118:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3253:298:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3299:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3308:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3311:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3301:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3301:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3301:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3274:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3283:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3270:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3270:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3295:2:49",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3266:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "3263:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3324:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3350:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3337:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3337:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3328:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3394:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3369:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3369:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3369:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3409:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3419:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3409:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3433:47:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3465:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3476:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3461:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3461:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3448:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3448:32:49"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3437:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3511:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3489:21:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3489:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3489:30:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3528:17:49",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3538:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3528:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ICurve_$11580t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3211:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3222:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3234:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3242:6:49",
                "type": ""
              }
            ],
            "src": "3153:398:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3697:102:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3707:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3719:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3730:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3715:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3715:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3707:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3749:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3764:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3780:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3785:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3776:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3776:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3789:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3772:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3772:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3760:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3760:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3742:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3742:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3742:51:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_LSSVMPairMissingEnumerableERC20_$8282__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3666:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3677:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3688:4:49",
                "type": ""
              }
            ],
            "src": "3556:243:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3882:177:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3928:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3937:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3940:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3930:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3930:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3930:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3903:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3912:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3899:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3899:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3924:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3895:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3895:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "3892:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3953:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3979:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3966:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3966:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3957:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4023:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3998:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3998:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3998:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4038:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4048:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4038:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3848:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3859:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3871:6:49",
                "type": ""
              }
            ],
            "src": "3804:255:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4175:290:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4221:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4230:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4233:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4223:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4223:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4223:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4196:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4205:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4192:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4192:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4217:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4188:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4188:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "4185:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4246:37:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4273:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4260:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4260:23:49"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4250:6:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4326:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4335:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4338:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4328:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4328:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4328:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4298:6:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4306:18:49",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4295:2:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4295:30:49"
                  },
                  "nodeType": "YulIf",
                  "src": "4292:50:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4351:32:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4365:9:49"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4376:6:49"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4361:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4361:22:49"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4355:2:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4422:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4431:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4434:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4424:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4424:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4424:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4403:7:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4412:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4399:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4399:16:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4417:3:49",
                        "type": "",
                        "value": "320"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4395:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4395:26:49"
                  },
                  "nodeType": "YulIf",
                  "src": "4392:46:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4447:12:49",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "4457:2:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4447:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4141:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4152:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4164:6:49",
                "type": ""
              }
            ],
            "src": "4064:401:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4594:102:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4604:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4616:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4627:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4612:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4612:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4604:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4646:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4661:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4677:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4682:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4673:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4673:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4686:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4669:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4669:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4657:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4657:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4639:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4639:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4639:51:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_LSSVMPairERC20_$6324__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4563:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4574:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4585:4:49",
                "type": ""
              }
            ],
            "src": "4470:226:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4818:102:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4828:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4840:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4851:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4836:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4836:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4828:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4870:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4885:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4901:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4906:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4897:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4897:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4910:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4893:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4893:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4881:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4881:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4863:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4863:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4863:51:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4787:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4798:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4809:4:49",
                "type": ""
              }
            ],
            "src": "4701:219:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5030:298:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5076:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5085:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5088:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5078:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5078:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5078:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5051:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5060:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5047:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5047:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5072:2:49",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5043:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5043:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "5040:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5101:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5127:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5114:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5114:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5105:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5171:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5146:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5146:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5146:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5186:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5196:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5186:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5210:47:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5242:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5253:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5238:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5238:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5225:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5225:32:49"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "5214:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5288:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5266:21:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5266:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5266:30:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5305:17:49",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "5315:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5305:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_LSSVMRouter_$10184t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4988:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4999:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5011:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5019:6:49",
                "type": ""
              }
            ],
            "src": "4925:403:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5434:102:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5444:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5456:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5467:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5452:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5452:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5444:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5486:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5501:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5517:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5522:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5513:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5513:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5526:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5509:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5509:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5497:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5497:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5479:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5479:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5479:51:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5403:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5414:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5425:4:49",
                "type": ""
              }
            ],
            "src": "5333:203:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5611:110:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5657:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5666:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5669:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5659:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5659:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5659:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5632:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5641:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5628:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5628:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5653:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5624:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5624:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "5621:52:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5682:33:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5705:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5692:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5692:23:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5682:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5577:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5588:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5600:6:49",
                "type": ""
              }
            ],
            "src": "5541:180:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5860:102:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5870:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5882:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5893:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5878:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5878:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5870:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5912:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5927:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5943:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5948:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5939:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5939:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5952:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5935:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5935:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5923:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5923:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5905:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5905:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5905:51:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_LSSVMPairEnumerableERC20_$6918__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5829:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5840:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5851:4:49",
                "type": ""
              }
            ],
            "src": "5726:236:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6053:177:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6099:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6108:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6111:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6101:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6101:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6101:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6074:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6083:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6070:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6070:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6095:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6066:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6066:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "6063:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6124:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6150:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6137:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6137:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6128:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6194:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6169:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6169:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6169:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6209:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6219:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6209:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ICurve_$11580",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6019:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6030:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6042:6:49",
                "type": ""
              }
            ],
            "src": "5967:263:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6326:177:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6372:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6381:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6384:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6374:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6374:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6374:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6347:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6356:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6343:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6343:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6368:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6339:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6339:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "6336:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6397:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6423:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6410:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6410:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6401:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6467:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "6442:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6442:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6442:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6482:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6492:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6482:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_LSSVMRouter_$10184",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6292:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6303:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6315:6:49",
                "type": ""
              }
            ],
            "src": "6235:268:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6625:151:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6635:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6647:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6658:2:49",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6643:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6643:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6635:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6677:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6702:6:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6695:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6695:14:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6688:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6688:22:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6670:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6670:41:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6670:41:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6731:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6742:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6727:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6727:18:49"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6761:6:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6754:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6754:14:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6747:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6747:22:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6720:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6720:50:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6720:50:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6586:9:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6597:6:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6605:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6616:4:49",
                "type": ""
              }
            ],
            "src": "6508:268:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6921:102:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6931:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6943:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6954:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6939:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6939:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6931:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6973:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6988:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7004:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7009:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7000:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7000:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7013:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6996:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6996:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6984:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6984:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6966:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6966:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6966:51:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_LSSVMPairEnumerableETH_$6945__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6890:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6901:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6912:4:49",
                "type": ""
              }
            ],
            "src": "6781:242:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7130:228:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7176:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7185:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7188:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7178:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7178:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7178:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7151:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7160:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7147:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7147:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7172:2:49",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7143:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7143:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "7140:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7201:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7227:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7214:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7214:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7205:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7271:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7246:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7246:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7246:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7286:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7296:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7286:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7310:42:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7337:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7348:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7333:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7333:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7320:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7320:32:49"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7310:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$12652t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7088:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7099:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7111:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7119:6:49",
                "type": ""
              }
            ],
            "src": "7028:330:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7418:94:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7428:29:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7450:6:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7437:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7437:20:49"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7428:5:49"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7490:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7499:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7502:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7492:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7492:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7492:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7479:5:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7486:1:49",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7476:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7476:12:49"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7469:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7469:20:49"
                  },
                  "nodeType": "YulIf",
                  "src": "7466:40:49"
                }
              ]
            },
            "name": "abi_decode_enum_PoolType",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7397:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7408:5:49",
                "type": ""
              }
            ],
            "src": "7363:149:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7566:139:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7576:29:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7598:6:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7585:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7585:20:49"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7576:5:49"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7683:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7692:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7695:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7685:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7685:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7685:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7627:5:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7638:5:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7645:34:49",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7634:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7634:46:49"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7624:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7624:57:49"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7617:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7617:65:49"
                  },
                  "nodeType": "YulIf",
                  "src": "7614:85:49"
                }
              ]
            },
            "name": "abi_decode_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7545:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7556:5:49",
                "type": ""
              }
            ],
            "src": "7517:188:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7758:131:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7768:29:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7790:6:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7777:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7777:20:49"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7768:5:49"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7867:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7876:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7879:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7869:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7869:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7869:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7819:5:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7830:5:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7837:26:49",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7826:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7826:38:49"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7816:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7816:49:49"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7809:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7809:57:49"
                  },
                  "nodeType": "YulIf",
                  "src": "7806:77:49"
                }
              ]
            },
            "name": "abi_decode_uint96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7737:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7748:5:49",
                "type": ""
              }
            ],
            "src": "7710:179:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8170:936:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8217:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8226:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8229:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8219:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8219:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8219:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8191:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8200:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8187:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8187:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8212:3:49",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8183:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8183:33:49"
                  },
                  "nodeType": "YulIf",
                  "src": "8180:53:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8242:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8268:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8255:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8255:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8246:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8312:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8287:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8287:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8287:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8327:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8337:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8327:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8351:47:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8383:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8394:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8379:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8379:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8366:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8366:32:49"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "8355:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "8432:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8407:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8407:33:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8407:33:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8449:17:49",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "8459:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8449:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8475:47:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8507:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8518:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8503:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8503:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8490:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8490:32:49"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "8479:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "8556:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8531:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8531:33:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8531:33:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8573:17:49",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "8583:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8573:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8599:54:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8638:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8649:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8634:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8634:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_enum_PoolType",
                      "nodeType": "YulIdentifier",
                      "src": "8609:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8609:44:49"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "8599:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8662:49:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8695:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8706:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8691:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8691:19:49"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "8672:18:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8672:39:49"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "8662:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8720:48:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8752:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8763:3:49",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8748:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8748:19:49"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint96",
                      "nodeType": "YulIdentifier",
                      "src": "8730:17:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8730:38:49"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "8720:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8777:49:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8810:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8821:3:49",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8806:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8806:19:49"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "8787:18:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8787:39:49"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "8777:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8835:47:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8866:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8877:3:49",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8862:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8862:19:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8849:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8849:33:49"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "8839:6:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8925:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8934:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8937:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8927:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8927:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8927:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8897:6:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8905:18:49",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8894:2:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8894:30:49"
                  },
                  "nodeType": "YulIf",
                  "src": "8891:50:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8950:96:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9018:9:49"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "9029:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9014:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9014:22:49"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "9038:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_uint256_dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "8976:37:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8976:70:49"
                  },
                  "variables": [
                    {
                      "name": "value7_1",
                      "nodeType": "YulTypedName",
                      "src": "8954:8:49",
                      "type": ""
                    },
                    {
                      "name": "value8_1",
                      "nodeType": "YulTypedName",
                      "src": "8964:8:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9055:18:49",
                  "value": {
                    "name": "value7_1",
                    "nodeType": "YulIdentifier",
                    "src": "9065:8:49"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "9055:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9082:18:49",
                  "value": {
                    "name": "value8_1",
                    "nodeType": "YulIdentifier",
                    "src": "9092:8:49"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "9082:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC721_$2445t_contract$_ICurve_$11580t_address_payablet_enum$_PoolType_$4585t_uint128t_uint96t_uint128t_array$_t_uint256_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8072:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8083:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8095:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8103:6:49",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8111:6:49",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8119:6:49",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8127:6:49",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8135:6:49",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "8143:6:49",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "8151:6:49",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "8159:6:49",
                "type": ""
              }
            ],
            "src": "7894:1212:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9241:102:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9251:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9263:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9274:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9259:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9259:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9251:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9293:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9308:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9324:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9329:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9320:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9320:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9333:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9316:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9316:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9304:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9304:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9286:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9286:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9286:51:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_LSSVMPairETH_$6629__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9210:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9221:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9232:4:49",
                "type": ""
              }
            ],
            "src": "9111:232:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9440:298:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9486:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9495:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9498:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9488:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9488:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9488:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9461:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9470:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9457:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9457:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9482:2:49",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9453:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9453:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "9450:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9511:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9537:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9524:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9524:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9515:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9581:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9556:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9556:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9556:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9596:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9606:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9596:6:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9620:47:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9652:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9663:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9648:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9648:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "9635:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9635:32:49"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "9624:7:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "9698:7:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "9676:21:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9676:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9676:30:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9715:17:49",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "9725:7:49"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9715:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9398:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9409:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9421:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9429:6:49",
                "type": ""
              }
            ],
            "src": "9348:390:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9775:95:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9792:1:49",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9799:3:49",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9804:10:49",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9795:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9795:20:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9785:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9785:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9785:31:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9832:1:49",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9835:4:49",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9825:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9825:15:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9825:15:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9856:1:49",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9859:4:49",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9849:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9849:15:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9849:15:49"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "9743:127:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9971:170:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10017:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10026:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10029:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10019:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10019:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10019:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9992:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10001:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9988:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9988:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10013:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9984:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9984:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "9981:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10042:29:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10061:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10055:5:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10055:16:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10046:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10105:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "10080:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10080:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10080:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10120:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10130:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10120:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$12652_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9937:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9948:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9960:6:49",
                "type": ""
              }
            ],
            "src": "9875:266:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10178:95:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10195:1:49",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10202:3:49",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10207:10:49",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10198:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10198:20:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10188:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10188:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10188:31:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10235:1:49",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10238:4:49",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10228:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10228:15:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10228:15:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10259:1:49",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10262:4:49",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10252:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10252:15:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10252:15:49"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10146:127:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10435:218:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10445:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10457:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10468:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10453:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10453:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10445:4:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10480:29:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10498:3:49",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10503:1:49",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10494:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10494:11:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10507:1:49",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10490:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10490:19:49"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10484:2:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10525:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10540:6:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10548:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10536:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10536:15:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10518:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10518:34:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10518:34:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10572:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10583:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10568:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10568:18:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10592:6:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10600:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10588:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10588:15:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10561:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10561:43:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10561:43:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10624:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10635:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10620:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10620:18:49"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10640:6:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10613:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10613:34:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10613:34:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10388:9:49",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10399:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10407:6:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10415:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10426:4:49",
                "type": ""
              }
            ],
            "src": "10278:375:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10832:182:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10849:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10860:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10842:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10842:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10842:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10883:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10894:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10879:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10879:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10899:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10872:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10872:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10872:30:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10922:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10933:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10918:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10918:18:49"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10938:34:49",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10911:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10911:62:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10911:62:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10982:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10994:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11005:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10990:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10990:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10982:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10809:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10823:4:49",
                "type": ""
              }
            ],
            "src": "10658:356:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11158:161:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11168:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11180:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11191:2:49",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11176:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11176:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11168:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11210:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11225:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11241:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11246:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11237:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11237:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11250:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11233:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11233:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11221:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11221:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11203:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11203:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11203:51:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11274:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11285:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11270:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11270:18:49"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "11304:6:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11297:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11297:14:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11290:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11290:22:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11263:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11263:50:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11263:50:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ICurve_$11580_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11119:9:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11130:6:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11138:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11149:4:49",
                "type": ""
              }
            ],
            "src": "11019:300:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11498:158:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11515:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11526:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11508:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11508:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11508:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11549:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11560:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11545:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11545:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11565:1:49",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11538:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11538:29:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11538:29:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11587:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11598:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11583:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11583:18:49"
                      },
                      {
                        "hexValue": "302061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11603:11:49",
                        "type": "",
                        "value": "0 address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11576:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11576:39:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11576:39:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11624:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11636:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11647:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11632:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11632:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11624:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74a398fb97c73fe516416e1dc2b2d1c836807b00191a179b39968d0a8eea7be9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11475:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11489:4:49",
                "type": ""
              }
            ],
            "src": "11324:332:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11770:102:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11780:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11792:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11803:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11788:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11788:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11780:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11822:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11837:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11853:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11858:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11849:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11849:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11862:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11845:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11845:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11833:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11833:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11815:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11815:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11815:51:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11739:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11750:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11761:4:49",
                "type": ""
              }
            ],
            "src": "11661:211:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12051:179:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12068:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12079:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12061:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12061:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12061:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12102:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12113:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12098:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12098:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12118:2:49",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12091:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12091:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12091:30:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12141:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12152:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12137:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12137:18:49"
                      },
                      {
                        "hexValue": "426f6e64696e67206375727665206e6f742077686974656c6973746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12157:31:49",
                        "type": "",
                        "value": "Bonding curve not whitelisted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12130:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12130:59:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12130:59:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12198:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12210:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12221:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12206:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12206:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12198:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12028:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12042:4:49",
                "type": ""
              }
            ],
            "src": "11877:353:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12321:177:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12367:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12376:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12379:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12369:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12369:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12369:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12342:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12351:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12338:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12338:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12363:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12334:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12334:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "12331:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12392:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12418:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12405:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12405:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12396:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12462:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "12437:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12437:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12437:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12477:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12487:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12477:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC721_$2445",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12287:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12298:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12310:6:49",
                "type": ""
              }
            ],
            "src": "12235:263:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12602:103:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12612:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12624:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12635:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12620:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12620:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12612:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12654:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12669:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12681:3:49",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12686:10:49",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "12677:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12677:20:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12665:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12665:33:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12647:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12647:52:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12647:52:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12571:9:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12582:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12593:4:49",
                "type": ""
              }
            ],
            "src": "12503:202:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12788:167:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12834:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12843:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12846:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12836:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12836:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12836:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12809:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12818:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12805:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12805:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12830:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12801:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12801:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "12798:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12859:29:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12878:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12872:5:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12872:16:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12863:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12919:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12897:21:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12897:28:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12897:28:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12934:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12944:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12934:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12754:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12765:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12777:6:49",
                "type": ""
              }
            ],
            "src": "12710:245:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13043:122:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13089:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13098:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13101:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13091:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13091:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13091:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13064:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13073:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13060:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13060:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13085:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13056:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13056:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "13053:52:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13114:45:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13149:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_enum_PoolType",
                      "nodeType": "YulIdentifier",
                      "src": "13124:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13124:35:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13114:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_PoolType_$4585",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13009:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13020:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13032:6:49",
                "type": ""
              }
            ],
            "src": "12960:205:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13255:177:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13301:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13310:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13313:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13303:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13303:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13303:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13276:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13285:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13272:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13272:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13297:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13268:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13268:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "13265:52:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13326:36:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13352:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13339:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13339:23:49"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13330:5:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13396:5:49"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "13371:24:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13371:31:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13371:31:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13411:15:49",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13421:5:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13411:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$12652",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13221:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13232:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13244:6:49",
                "type": ""
              }
            ],
            "src": "13170:262:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13507:116:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13553:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13562:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13565:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13555:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13555:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13555:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13528:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13537:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13524:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13524:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13549:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13520:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13520:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "13517:52:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13578:39:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13607:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint128",
                      "nodeType": "YulIdentifier",
                      "src": "13588:18:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13588:29:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13578:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13473:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13484:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13496:6:49",
                "type": ""
              }
            ],
            "src": "13437:186:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13697:115:49",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13743:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13752:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13755:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13745:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13745:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13745:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13718:7:49"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13727:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13714:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13714:23:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13739:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13710:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13710:32:49"
                  },
                  "nodeType": "YulIf",
                  "src": "13707:52:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13768:38:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13796:9:49"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint96",
                      "nodeType": "YulIdentifier",
                      "src": "13778:17:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13778:28:49"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13768:6:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13663:9:49",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13674:7:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13686:6:49",
                "type": ""
              }
            ],
            "src": "13628:184:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13927:435:49",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13937:51:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr_to_tail",
                        "nodeType": "YulIdentifier",
                        "src": "13976:11:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "13963:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13963:25:49"
                  },
                  "variables": [
                    {
                      "name": "rel_offset_of_tail",
                      "nodeType": "YulTypedName",
                      "src": "13941:18:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14077:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14086:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14089:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14079:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14079:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14079:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "rel_offset_of_tail",
                            "nodeType": "YulIdentifier",
                            "src": "14011:18:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "14039:12:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14039:14:49"
                                  },
                                  {
                                    "name": "base_ref",
                                    "nodeType": "YulIdentifier",
                                    "src": "14055:8:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "14035:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14035:29:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14070:2:49",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14066:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14066:7:49"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14031:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14031:43:49"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "14007:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14007:68:49"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14000:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14000:76:49"
                  },
                  "nodeType": "YulIf",
                  "src": "13997:96:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14102:47:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "base_ref",
                        "nodeType": "YulIdentifier",
                        "src": "14120:8:49"
                      },
                      {
                        "name": "rel_offset_of_tail",
                        "nodeType": "YulIdentifier",
                        "src": "14130:18:49"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14116:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14116:33:49"
                  },
                  "variables": [
                    {
                      "name": "addr_1",
                      "nodeType": "YulTypedName",
                      "src": "14106:6:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14158:30:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "addr_1",
                        "nodeType": "YulIdentifier",
                        "src": "14181:6:49"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "14168:12:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14168:20:49"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14158:6:49"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14231:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14240:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14243:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14233:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14233:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14233:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14203:6:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14211:18:49",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14200:2:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14200:30:49"
                  },
                  "nodeType": "YulIf",
                  "src": "14197:50:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14256:25:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "addr_1",
                        "nodeType": "YulIdentifier",
                        "src": "14268:6:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14276:4:49",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14264:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14264:17:49"
                  },
                  "variableNames": [
                    {
                      "name": "addr",
                      "nodeType": "YulIdentifier",
                      "src": "14256:4:49"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14340:16:49",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14349:1:49",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14352:1:49",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14342:6:49"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14342:12:49"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14342:12:49"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "addr",
                        "nodeType": "YulIdentifier",
                        "src": "14297:4:49"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "calldatasize",
                              "nodeType": "YulIdentifier",
                              "src": "14307:12:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14307:14:49"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14327:1:49",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "14330:6:49"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "14323:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14323:14:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14303:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14303:35:49"
                      }
                    ],
                    "functionName": {
                      "name": "sgt",
                      "nodeType": "YulIdentifier",
                      "src": "14293:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14293:46:49"
                  },
                  "nodeType": "YulIf",
                  "src": "14290:66:49"
                }
              ]
            },
            "name": "access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base_ref",
                "nodeType": "YulTypedName",
                "src": "13884:8:49",
                "type": ""
              },
              {
                "name": "ptr_to_tail",
                "nodeType": "YulTypedName",
                "src": "13894:11:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "addr",
                "nodeType": "YulTypedName",
                "src": "13910:4:49",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13916:6:49",
                "type": ""
              }
            ],
            "src": "13817:545:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14541:167:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14558:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14569:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14551:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14551:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14551:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14592:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14603:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14588:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14588:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14608:2:49",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14581:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14581:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14581:30:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14631:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14642:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14627:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14627:18:49"
                      },
                      {
                        "hexValue": "43616e27742063616c6c20726f75746572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14647:19:49",
                        "type": "",
                        "value": "Can't call router"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14620:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14620:47:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14620:47:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14676:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14688:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14699:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14684:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14684:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14676:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14518:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14532:4:49",
                "type": ""
              }
            ],
            "src": "14367:341:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14865:161:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14875:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14887:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14898:2:49",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14883:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14883:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14875:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14917:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14932:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14948:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14953:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "14944:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14944:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14957:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "14940:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14940:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14928:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14928:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14910:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14910:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14910:51:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14981:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14992:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14977:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14977:18:49"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "15011:6:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "15004:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15004:14:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14997:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14997:22:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14970:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14970:50:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14970:50:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_LSSVMRouter_$10184_t_bool__to_t_address_payable_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14826:9:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14837:6:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14845:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14856:4:49",
                "type": ""
              }
            ],
            "src": "14713:313:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15205:163:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15222:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15233:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15215:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15215:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15215:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15256:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15267:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15252:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15252:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15272:2:49",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15245:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15245:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15245:30:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15295:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15306:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15291:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15291:18:49"
                      },
                      {
                        "hexValue": "46656520746f6f206c61726765",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15311:15:49",
                        "type": "",
                        "value": "Fee too large"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15284:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15284:43:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15284:43:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15336:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15348:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15359:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15344:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15344:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15336:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15182:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15196:4:49",
                "type": ""
              }
            ],
            "src": "15031:337:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15504:161:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15514:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15526:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15537:2:49",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15522:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15522:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15514:4:49"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15556:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15571:6:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15587:3:49",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15592:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "15583:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15583:11:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15596:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "15579:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15579:19:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15567:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15567:32:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15549:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15549:51:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15549:51:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15620:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15631:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15616:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15616:18:49"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "15650:6:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "15643:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15643:14:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15636:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15636:22:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15609:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15609:50:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15609:50:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15465:9:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15476:6:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15484:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15495:4:49",
                "type": ""
              }
            ],
            "src": "15373:292:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15844:228:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15861:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15872:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15854:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15854:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15854:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15895:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15906:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15891:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15891:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15911:2:49",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15884:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15884:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15884:30:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15934:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15945:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15930:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15930:18:49"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15950:34:49",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15923:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15923:62:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15923:62:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16005:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16016:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16001:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16001:18:49"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16021:8:49",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15994:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15994:36:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15994:36:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16039:27:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16051:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16062:3:49",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16047:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16047:19:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16039:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15821:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15835:4:49",
                "type": ""
              }
            ],
            "src": "15670:402:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16251:170:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16268:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16279:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16261:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16261:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16261:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16302:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16313:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16298:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16298:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16318:2:49",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16291:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16291:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16291:30:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16341:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16352:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16337:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16337:18:49"
                      },
                      {
                        "hexValue": "5452414e534645525f46524f4d5f4641494c4544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16357:22:49",
                        "type": "",
                        "value": "TRANSFER_FROM_FAILED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16330:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16330:50:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16330:50:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16389:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16401:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16412:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16397:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16397:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16389:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16228:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16242:4:49",
                "type": ""
              }
            ],
            "src": "16077:344:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16653:410:49",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16663:27:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16675:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16686:3:49",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16671:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16671:19:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16663:4:49"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16699:29:49",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16717:3:49",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16722:1:49",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "16713:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16713:11:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16726:1:49",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "16709:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16709:19:49"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16703:2:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16744:9:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16759:6:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16767:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16755:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16755:15:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16737:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16737:34:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16737:34:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16791:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16802:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16787:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16787:18:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "16811:6:49"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16819:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16807:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16807:15:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16780:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16780:43:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16780:43:49"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16832:44:49",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16842:34:49",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "16836:2:49",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16896:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16907:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16892:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16892:18:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "16916:6:49"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "16924:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16912:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16912:15:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16885:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16885:43:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16885:43:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16948:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16959:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16944:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16944:18:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "16968:6:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16976:26:49",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16964:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16964:39:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16937:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16937:67:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16937:67:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17024:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17035:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17020:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17020:19:49"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "17045:6:49"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "17053:2:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17041:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17041:15:49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17013:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17013:44:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17013:44:49"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint128_t_uint96_t_uint128__to_t_address_t_address_payable_t_uint128_t_uint96_t_uint128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16590:9:49",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "16601:6:49",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16609:6:49",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16617:6:49",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16625:6:49",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16633:6:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16644:4:49",
                "type": ""
              }
            ],
            "src": "16426:637:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17242:169:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17259:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17270:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17252:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17252:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17252:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17293:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17304:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17289:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17289:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17309:2:49",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17282:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17282:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17282:30:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17332:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17343:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17328:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17328:18:49"
                      },
                      {
                        "hexValue": "4554485f5452414e534645525f4641494c4544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17348:21:49",
                        "type": "",
                        "value": "ETH_TRANSFER_FAILED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17321:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17321:49:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17321:49:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17379:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17391:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17402:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17387:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17387:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17379:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17219:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17233:4:49",
                "type": ""
              }
            ],
            "src": "17068:343:49"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17590:165:49",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17607:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17618:2:49",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17600:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17600:21:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17600:21:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17641:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17652:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17637:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17637:18:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17657:2:49",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17630:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17630:30:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17630:30:49"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17680:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17691:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17676:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17676:18:49"
                      },
                      {
                        "hexValue": "5452414e534645525f4641494c4544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17696:17:49",
                        "type": "",
                        "value": "TRANSFER_FAILED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17669:6:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17669:45:49"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17669:45:49"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17723:26:49",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17735:9:49"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17746:2:49",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17731:3:49"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17731:18:49"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17723:4:49"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17567:9:49",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17581:4:49",
                "type": ""
              }
            ],
            "src": "17416:339:49"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_LSSVMPairMissingEnumerableETH_$8307__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_enum$_PairVariant_$4514(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(lt(value_1, 4)) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_contract$_ERC20_$12652t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC721_$2445t_array$_t_uint256_$dyn_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ICurve_$11580t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_LSSVMPairMissingEnumerableERC20_$8282__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_CreateERC20PairParams_$7273_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 320) { revert(0, 0) }\n        value0 := _1\n    }\n    function abi_encode_tuple_t_contract$_LSSVMPairERC20_$6324__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_LSSVMRouter_$10184t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_LSSVMPairEnumerableERC20_$6918__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_ICurve_$11580(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_LSSVMRouter_$10184(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_contract$_LSSVMPairEnumerableETH_$6945__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_ERC20_$12652t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_enum_PoolType(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_uint128(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint96(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC721_$2445t_contract$_ICurve_$11580t_address_payablet_enum$_PoolType_$4585t_uint128t_uint96t_uint128t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := abi_decode_enum_PoolType(add(headStart, 96))\n        value4 := abi_decode_uint128(add(headStart, 128))\n        value5 := abi_decode_uint96(add(headStart, 160))\n        value6 := abi_decode_uint128(add(headStart, 192))\n        let offset := calldataload(add(headStart, 224))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n    }\n    function abi_encode_tuple_t_contract$_LSSVMPairETH_$6629__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address_payablet_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_bool(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_contract$_ERC20_$12652_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_contract$_ICurve_$11580_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_74a398fb97c73fe516416e1dc2b2d1c836807b00191a179b39968d0a8eea7be9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"0 address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Bonding curve not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_contract$_IERC721_$2445(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_PoolType_$4585(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_enum_PoolType(headStart)\n    }\n    function abi_decode_tuple_t_contract$_ERC20_$12652(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint128(headStart)\n    }\n    function abi_decode_tuple_t_uint96(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint96(headStart)\n    }\n    function access_calldata_tail_t_array$_t_uint256_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Can't call router\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_contract$_LSSVMRouter_$10184_t_bool__to_t_address_payable_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Fee too large\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_payable_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_77631768048ee92f9dcf4b9b9d762877d6b9723214862c733f0596708fc219b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"TRANSFER_FROM_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint128_t_uint96_t_uint128__to_t_address_t_address_payable_t_uint128_t_uint96_t_uint128__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        let _2 := 0xffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(value2, _2))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 128), and(value4, _2))\n    }\n    function abi_encode_tuple_t_stringliteral_d383913ea1996930a2623a0d739b8fc033c734c1d71d4759d3ccba1d3a719c29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"ETH_TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 49,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1429:16183:28:-:0;;;2995:817;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:14;921:18:0;:32::i;:::-;-1:-1:-1;;;;;3366:46:28;;;;;3422:60;;;;;3492:50;;;;;3552:64;;;;;3626:20;:44;;-1:-1:-1;;;;;;3626:44:28;;;;;;;;;;1771:7;3689:42;;;3681:68;;;;-1:-1:-1;;;3681:68:28;;1502:2:49;3681:68:28;;;1484:21:49;1541:2;1521:18;;;1514:30;-1:-1:-1;;;1560:18:49;;;1553:43;1613:18;;3681:68:28;;;;;;;;3759:21;:46;-1:-1:-1;1429:16183:28;;-1:-1:-1;;;;1429:16183:28;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:155:49:-;-1:-1:-1;;;;;113:31:49;;103:42;;93:70;;159:1;156;149:12;93:70;14:155;:::o;174:1121::-;439:6;447;455;463;471;479;532:3;520:9;511:7;507:23;503:33;500:53;;;549:1;546;539:12;500:53;581:9;575:16;600:55;649:5;600:55;:::i;:::-;724:2;709:18;;703:25;674:5;;-1:-1:-1;737:57:49;703:25;737:57;:::i;:::-;865:2;850:18;;844:25;813:7;;-1:-1:-1;878:57:49;844:25;878:57;:::i;:::-;1006:2;991:18;;985:25;954:7;;-1:-1:-1;1019:57:49;985:25;1019:57;:::i;:::-;1147:3;1132:19;;1126:26;1095:7;;-1:-1:-1;1161:57:49;1126:26;1161:57;:::i;:::-;1237:7;1227:17;;;1284:3;1273:9;1269:19;1263:26;1253:36;;174:1121;;;;;;;;:::o;1300:337::-;1429:16183:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1429:16183:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1880:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;224:32:49;;;206:51;;194:2;179:18;1880:75:28;;;;;;;;9307:1324;;;;;;;;;;-1:-1:-1;9307:1324:28;;;;;:::i;:::-;;:::i;:::-;;;987:14:49;;980:22;962:41;;950:2;935:18;9307:1324:28;822:187:49;17143:467:28;;;;;;;;;;-1:-1:-1;17143:467:28;;;;;:::i;:::-;;:::i;:::-;;2214:45;;;;;;;;;;;;;;;;;;;1636:25:49;;;1624:2;1609:18;2214:45:28;1490:177:49;2322:52:28;;;;;;;;;;-1:-1:-1;2322:52:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;16243:725;;;;;;;;;;-1:-1:-1;16243:725:28;;;;;:::i;:::-;;:::i;12658:234::-;;;;;;;;;;-1:-1:-1;12658:234:28;;;;;:::i;:::-;;:::i;2032:87::-;;;;;;;;;;;;;;;11609:306;;;;;;;;;;-1:-1:-1;11609:306:28;;;;;:::i;:::-;;:::i;7593:1356::-;;;;;;;;;;-1:-1:-1;7593:1356:28;;;;;:::i;:::-;;:::i;2125:52::-;;;;;;;;;;-1:-1:-1;2125:52:28;;;;-1:-1:-1;;;;;2125:52:28;;;13802:458;;;;;;;;;;-1:-1:-1;13802:458:28;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;12092:315:28;;;;;;;;;;-1:-1:-1;12092:315:28;;;;;:::i;:::-;;:::i;1961:65::-;;;;;;;;;;;;;;;2266:50;;;;;;;;;;-1:-1:-1;2266:50:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;2463:65;;;;;;;;;;-1:-1:-1;2463:65:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6695:14:49;;6688:22;6670:41;;6754:14;;6747:22;6742:2;6727:18;;6720:50;6643:18;2463:65:28;6508:268:49;1813:61:28;;;;;;;;;;;;;;;10924:130;;;;;;;;;;;;;:::i;11272:168::-;;;;;;;;;;-1:-1:-1;11272:168:28;;;;;:::i;:::-;;:::i;4812:1384::-;;;;;;:::i;:::-;;:::i;13159:438::-;;;;;;;;;;-1:-1:-1;13159:438:28;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;9307:1324:28:-;9429:4;9464:28;9453:7;:39;;;;;;;;:::i;:::-;;9449:1176;;;9531:174;9593:4;9628:23;9674:13;9531:32;:174::i;:::-;9508:197;;;;9449:1176;9737:36;9726:7;:47;;;;;;;;:::i;:::-;;9722:903;;;9812:181;9874:4;9909:30;9962:13;9812:32;:181::i;9722:903::-;10025:26;10014:7;:37;;;;;;;;:::i;:::-;;10010:615;;;10090:170;10150:4;10185:21;10229:13;10090:30;:170::i;10010:615::-;10292:34;10281:7;:45;;;;;;;;:::i;:::-;;10277:348;;;10365:177;10425:4;10460:28;10511:13;10365:30;:177::i;10277:348::-;-1:-1:-1;10609:5:28;10277:348;9307:1324;;;;:::o;17143:467::-;17262:53;-1:-1:-1;;;;;17262:22:28;;17285:10;17297:9;17308:6;17262:22;:53::i;:::-;17342:47;17349:9;17360:28;17342:6;:47::i;:::-;:118;;;;17405:55;17412:9;17423:36;17405:6;:55::i;:::-;17325:279;;;17513:9;-1:-1:-1;;;;;17498:31:28;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17489:42:28;:5;-1:-1:-1;;;;;17489:42:28;;17485:109;;;17556:23;;-1:-1:-1;;;;;224:32:49;;206:51;;17556:23:28;;194:2:49;179:18;17556:23:28;;;;;;;17485:109;17143:467;;;:::o;16243:725::-;16438:3;16420:15;16458:168;16478:7;16474:1;:11;16458:168;;;16503:4;-1:-1:-1;;;;;16503:21:28;;16525:10;16537:9;16548:3;;16552:1;16548:6;;;;;;;:::i;:::-;16503:52;;-1:-1:-1;;;;;;16503:52:28;;;;;;;-1:-1:-1;;;;;10536:15:49;;;16503:52:28;;;10518:34:49;10588:15;;;;10568:18;;;10561:43;-1:-1:-1;16548:6:28;;;;;;10620:18:49;;;10613:34;10453:18;;16503:52:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16598:3;;;;;16458:168;;;;16652:47;16659:9;16670:28;16652:6;:47::i;:::-;:108;;;;16715:45;16722:9;16733:26;16715:6;:45::i;:::-;16652:179;;;;16776:55;16783:9;16794:36;16776:6;:55::i;:::-;16652:248;;;;16847:53;16854:9;16865:34;16847:6;:53::i;:::-;16635:327;;;16930:21;;-1:-1:-1;;;;;224:32:49;;206:51;;16930:21:28;;194:2:49;179:18;16930:21:28;;;;;;;16635:327;16360:608;16243:725;;;;:::o;12658:234::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:14;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;12776:33:28;::::1;;::::0;;;:19:::1;:33;::::0;;;;;;;;:45;;-1:-1:-1;;12776:45:28::1;::::0;::::1;;::::0;;::::1;::::0;;;12836:49;;11203:51:49;;;11270:18;;;11263:50;12836:49:28::1;::::0;11176:18:49;12836:49:28::1;;;;;;;;12658:234:::0;;:::o;11609:306::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:14;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;11741:35:28;::::1;11733:57;;;::::0;-1:-1:-1;;;11733:57:28;;11526:2:49;11733:57:28::1;::::0;::::1;11508:21:49::0;11565:1;11545:18;;;11538:29;-1:-1:-1;;;11583:18:49;;;11576:39;11632:18;;11733:57:28::1;11324:332:49::0;11733:57:28::1;11800:20;:44:::0;;-1:-1:-1;;;;;;11800:44:28::1;-1:-1:-1::0;;;;;11800:44:28;::::1;::::0;;::::1;::::0;;;11859:49:::1;::::0;206:51:49;;;11859:49:28::1;::::0;194:2:49;179:18;11859:49:28::1;;;;;;;;11609:306:::0;:::o;7593:1356::-;7691:19;7747;7691;7767;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7747:40:28;;;;;;;;;;;;-1:-1:-1;7747:40:28;;;;7726:116;;;;-1:-1:-1;;;7726:116:28;;12079:2:49;7726:116:28;;;12061:21:49;12118:2;12098:18;;;12091:30;12157:31;12137:18;;;12130:59;12206:18;;7726:116:28;11877:353:49;7726:116:28;7943:16;7989:10;;;;;;;;:::i;:::-;7973:78;;-1:-1:-1;;;7973:78:28;;-1:-1:-1;;;7973:78:28;;;12647:52:49;-1:-1:-1;;;;;7973:46:28;;;;;;;12620:18:49;;7973:78:28;;;;;;;;;;;;;;;;;;-1:-1:-1;7973:78:28;;;;;;;;-1:-1:-1;;7973:78:28;;;;;;;;;;;;:::i;:::-;;;7969:326;;-1:-1:-1;8253:30:28;7969:326;;;8103:12;:101;;8173:30;8103:101;;;8126:23;8103:101;8092:112;;8052:163;7969:326;8365:218;8410:4;8436:19;;;;;;;;:::i;:::-;8477:10;;;;;;;;:::i;:::-;8515:15;;;;;;;;:::i;:::-;8509:22;;;;;;;;:::i;:::-;8553:12;;;;:6;:12;:::i;:::-;-1:-1:-1;;;;;8365:23:28;;;:218;;;;:23;:218::i;:::-;8305:302;-1:-1:-1;8618:287:28;8305:302;8670:12;;;;:6;:12;:::i;:::-;8696:10;;;;;;;;:::i;:::-;8720:21;;;;;;;;:::i;:::-;8755:12;;;;;;;;:::i;:::-;8781:10;;;;;;;;:::i;:::-;8805:16;;;;;;;;:::i;:::-;8835:20;;;;:6;:20;:::i;:::-;8869:6;:26;;;8618:20;:287::i;:::-;8920:22;;-1:-1:-1;;;;;224:32:49;;206:51;;8920:22:28;;194:2:49;179:18;8920:22:28;;;;;;;7716:1233;7593:1356;;;:::o;13802:458::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:14;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;13980:9:28::1;13976:100;;;-1:-1:-1::0;;;;;14014:29:28;::::1;;::::0;;;:11:::1;:29;::::0;;;;;::::1;;14013:30;14005:60;;;::::0;-1:-1:-1;;;14005:60:28;;14569:2:49;14005:60:28::1;::::0;::::1;14551:21:49::0;14608:2;14588:18;;;14581:30;-1:-1:-1;;;14627:18:49;;;14620:47;14684:18;;14005:60:28::1;14367:341:49::0;14005:60:28::1;14109:90;::::0;;;;::::1;::::0;;;::::1;;::::0;;;14184:4:::1;14109:90;::::0;;::::1;::::0;;;-1:-1:-1;;;;;14085:21:28;::::1;-1:-1:-1::0;14085:21:28;;;:12:::1;:21:::0;;;;;:114;;;;;;-1:-1:-1;;14085:114:28;;;;::::1;;-1:-1:-1::0;;14085:114:28;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;14215:38;;11203:51:49;;;11270:18;;;11263:50;14215:38:28::1;::::0;11176:18:49;14215:38:28::1;11019:300:49::0;1668:101:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:14;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;12092:315:28:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:14;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1771:7:28::1;12218:22;:42;;12210:68;;;::::0;-1:-1:-1;;;12210:68:28;;15233:2:49;12210:68:28::1;::::0;::::1;15215:21:49::0;15272:2;15252:18;;;15245:30;-1:-1:-1;;;15291:18:49;;;15284:43;15344:18;;12210:68:28::1;15031:337:49::0;12210:68:28::1;12288:21;:46:::0;;;12349:51:::1;::::0;1636:25:49;;;12349:51:28::1;::::0;1624:2:49;1609:18;12349:51:28::1;1490:177:49::0;10924:130:28;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:14;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;10988:20:28::1;::::0;:59:::1;::::0;-1:-1:-1;;;;;10988:20:28::1;11025:21;10988:36;:59::i;11272:168::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:14;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;11404:20:28::1;::::0;11385:48:::1;::::0;-1:-1:-1;;;;;11385:18:28;;::::1;::::0;11404:20:::1;11426:6:::0;11385:18:::1;:48::i;:::-;11272:168:::0;;:::o;4812:1384::-;-1:-1:-1;;;;;5164:34:28;;5114:17;5164:34;;;:19;:34;;;;;;;;5143:110;;;;-1:-1:-1;;;5143:110:28;;12079:2:49;5143:110:28;;;12061:21:49;12118:2;12098:18;;;12091:30;12157:31;12137:18;;;12130:59;12206:18;;5143:110:28;11877:353:49;5143:110:28;5392:72;;-1:-1:-1;;;5392:72:28;;-1:-1:-1;;;5392:72:28;;;12647:52:49;5362:16:28;;-1:-1:-1;;;;;5392:40:28;;;;;12620:18:49;;5392:72:28;;;;;;;;;;;;;;;;;;-1:-1:-1;5392:72:28;;;;;;;;-1:-1:-1;;5392:72:28;;;;;;;;;;;;:::i;:::-;;;5388:314;;-1:-1:-1;5662:28:28;5388:314;;;5516:12;:97;;5584:28;5516:97;;;5539:21;5516:97;5505:108;;5465:159;5388:314;5770:164;5813:4;5839:13;5874:4;5906:9;5900:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5770:21:28;;;:164;;;:21;:164::i;:::-;5712:246;;5969:183;6001:4;6019;6037:15;6066:6;6086:4;6104:10;6128:14;;5969:18;:183::i;:::-;6167:22;;-1:-1:-1;;;;;224:32:49;;206:51;;6167:22:28;;194:2:49;179:18;6167:22:28;;;;;;;5133:1063;4812:1384;;;;;;;;;;;:::o;13159:438::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:14;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;13332:9:28::1;13328:165;;;-1:-1:-1::0;;;;;13383:33:28;::::1;;::::0;;;:12:::1;:33;::::0;;;;:48;::::1;::::0;::::1;;;13382:49;13357:125;;;::::0;-1:-1:-1;;;13357:125:28;;14569:2:49;13357:125:28::1;::::0;::::1;14551:21:49::0;14608:2;14588:18;;;14581:30;-1:-1:-1;;;14627:18:49;;;14620:47;14684:18;;13357:125:28::1;14367:341:49::0;13357:125:28::1;-1:-1:-1::0;;;;;13503:19:28;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;;:31;;-1:-1:-1;;13503:31:28::1;::::0;::::1;;::::0;;::::1;::::0;;;13549:41;;11203:51:49;;;11270:18;;;11263:50;13549:41:28::1;::::0;11176:18:49;13549:41:28::1;11019:300:49::0;1918:198:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:14;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;15872:2:49;1998:73:0::1;::::0;::::1;15854:21:49::0;15911:2;15891:18;;;15884:30;15950:34;15930:18;;;15923:62;-1:-1:-1;;;16001:18:49;;;15994:36;16047:19;;1998:73:0::1;15670:402:49::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;14731:1179:39:-;14866:11;14985:4;14979:11;-1:-1:-1;;;15027:3:39;15003:159;15208:14;15202:4;15198:25;15191:4;15186:3;15182:14;15175:49;-1:-1:-1;;;15270:4:39;15265:3;15261:14;15237:170;15453:7;15447:4;15443:18;15436:4;15431:3;15427:14;15420:42;15573:4;15568:3;15564:14;15620:4;15617:1;15610:5;15603;15591:34;15855:4;15848:5;15844:16;15838:23;15830:4;15825:3;15821:14;15815:21;15812:50;15783:4;15776:5;15772:16;15766:23;15758:4;15753:3;15749:14;15743:21;15740:50;15715:165;15690:5;15684:12;15678:3;15672:10;15669:28;15648:246;15638:256;;;;14731:1179;;;;;:::o;13202:1177::-;13335:11;13454:4;13448:11;-1:-1:-1;;;13496:3:39;13472:159;13677:14;13671:4;13667:25;13660:4;13655:3;13651:14;13644:49;-1:-1:-1;;;13739:4:39;13734:3;13730:14;13706:170;13922:7;13916:4;13912:18;13905:4;13900:3;13896:14;13889:42;14042:4;14037:3;14033:14;14089:4;14086:1;14079:5;14072;14060:34;14324:4;14317:5;14313:16;14307:23;14299:4;14294:3;14290:14;14284:21;14281:50;14252:4;14245:5;14241:16;14235:23;14227:4;14222:3;14218:14;14212:21;14209:50;14184:165;14159:5;14153:12;14147:3;14141:10;14138:28;14117:246;14107:256;;;;13202:1177;;;;;:::o;1285:1573:48:-;1423:12;1550:4;1544:11;-1:-1:-1;;;1673:17:48;1666:93;1806:4;1802:1;1783:17;1779:25;1772:39;1890:2;1885;1866:17;1862:26;1855:38;1970:6;1965:2;1946:17;1942:26;1935:42;2774:2;2771:1;2766:3;2747:17;2744:1;2737:5;2730;2725:52;2293:16;2286:24;2280:2;2262:16;2259:24;2255:1;2251;2245:8;2242:15;2238:46;2235:76;2035:756;2024:767;;;2819:7;2811:40;;;;-1:-1:-1;;;2811:40:48;;16279:2:49;2811:40:48;;;16261:21:49;16318:2;16298:18;;;16291:30;-1:-1:-1;;;16337:18:49;;;16330:50;16397:18;;2811:40:48;16077:344:49;6874:5922:39;7088:16;7156:4;7150:11;10347:100;10326:3;10302:159;10507:14;10501:4;10497:25;10490:4;10485:3;10481:14;10474:49;-1:-1:-1;;;12043:4:39;12038:3;12034:14;12010:170;12515:7;12509:4;12505:18;12498:4;12493:3;12489:14;12482:42;12570:12;12564:4;12560:23;12553:4;12548:3;12544:14;12537:47;12630:3;12624:4;12620:14;12613:4;12608:3;12604:14;12597:38;12672:8;12665:4;12660:3;12656:14;12648:33;12727:5;12721:4;12717:16;12710:4;12705:3;12701:14;12694:40;12775:4;12770:3;12767:1;12760:20;12748:32;6874:5922;-1:-1:-1;;;;;;;;6874:5922:39:o;15139:960:28:-;15490:71;;-1:-1:-1;;;15490:71:28;;-1:-1:-1;;;;;15490:16:28;;;;;:71;;15507:10;;15519:15;;15536:6;;15544:4;;15550:10;;15490:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15615:119:28;;-1:-1:-1;;;;;;;;15615:23:28;;15652:10;15684:5;15704:20;15615:23;:119::i;:::-;15816:14;15798:15;15847:246;15867:7;15863:1;:11;15847:246;;;15892:4;-1:-1:-1;;;;;15892:21:28;;15931:10;15967:5;15991:14;;16006:1;15991:17;;;;;;;:::i;:::-;15892:130;;-1:-1:-1;;;;;;15892:130:28;;;;;;;-1:-1:-1;;;;;10536:15:49;;;15892:130:28;;;10518:34:49;10588:15;;;;10568:18;;;10561:43;-1:-1:-1;15991:17:28;;;;;;10620:18:49;;;10613:34;10453:18;;15892:130:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16065:3;;;;;15847:246;;;;15453:646;15139:960;;;;;;;;;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;799:296:48:-;871:12;1027:1;1024;1021;1018;1010:6;1006:2;999:5;994:35;983:46;;1057:7;1049:39;;;;-1:-1:-1;;;1049:39:48;;17270:2:49;1049:39:48;;;17252:21:49;17309:2;17289:18;;;17282:30;-1:-1:-1;;;17328:18:49;;;17321:49;17387:18;;1049:39:48;17068:343:49;2864:1456:48;2976:12;3103:4;3097:11;-1:-1:-1;;;3226:17:48;3219:93;3359:2;3355:1;3336:17;3332:25;3325:37;3439:6;3434:2;3415:17;3411:26;3404:42;4241:2;4238:1;4234:2;4215:17;4212:1;4205:5;4198;4193:51;3762:16;3755:24;3749:2;3731:16;3728:24;3724:1;3720;3714:8;3711:15;3707:46;3704:76;3504:754;3493:765;;;4286:7;4278:35;;;;-1:-1:-1;;;4278:35:48;;17618:2:49;4278:35:48;;;17600:21:49;17657:2;17637:18;;;17630:30;-1:-1:-1;;;17676:18:49;;;17669:45;17731:18;;4278:35:48;17416:339:49;4278:35:48;2966:1354;2864:1456;;;:::o;680:5846:39:-;871:16;939:4;933:11;4130:100;4109:3;4085:159;4290:14;4284:4;4280:25;4273:4;4268:3;4264:14;4257:49;-1:-1:-1;;;5826:4:39;5821:3;5817:14;5793:170;6298:7;6292:4;6288:18;6281:4;6276:3;6272:14;6265:42;6353:12;6347:4;6343:23;6336:4;6331:3;6327:14;6320:47;6413:3;6407:4;6403:14;6396:4;6391:3;6387:14;6380:38;6455:8;6448:4;6443:3;6439:14;6431:33;6505:4;6500:3;6497:1;6490:20;6478:32;680:5846;-1:-1:-1;;;;;;;680:5846:39:o;14309:824:28:-;14596:71;;-1:-1:-1;;;14596:71:28;;-1:-1:-1;;;;;14596:16:28;;;;;:71;;14613:10;;14625:15;;14642:6;;14650:4;;14656:10;;14596:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14718:50:28;;-1:-1:-1;;;;;;;;14718:39:28;;14758:9;14718:39;:50::i;:::-;14850:14;14832:15;14881:246;14901:7;14897:1;:11;14881:246;;;14926:4;-1:-1:-1;;;;;14926:21:28;;14965:10;15001:5;15025:14;;15040:1;15025:17;;;;;;;:::i;:::-;14926:130;;-1:-1:-1;;;;;;14926:130:28;;;;;;;-1:-1:-1;;;;;10536:15:49;;;14926:130:28;;;10518:34:49;10588:15;;;;10568:18;;;10561:43;-1:-1:-1;15025:17:28;;;;;;10620:18:49;;;10613:34;10453:18;;14926:130:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15099:3;;;;;14881:246;;;;14559:574;14309:824;;;;;;;;:::o;268:131:49:-;-1:-1:-1;;;;;343:31:49;;333:42;;323:70;;389:1;386;379:12;404:413;488:6;496;549:2;537:9;528:7;524:23;520:32;517:52;;;565:1;562;555:12;517:52;604:9;591:23;623:31;648:5;623:31;:::i;:::-;673:5;-1:-1:-1;730:2:49;715:18;;702:32;765:1;753:14;;743:42;;781:1;778;771:12;743:42;804:7;794:17;;;404:413;;;;;:::o;1014:471::-;1106:6;1114;1122;1175:2;1163:9;1154:7;1150:23;1146:32;1143:52;;;1191:1;1188;1181:12;1143:52;1230:9;1217:23;1249:31;1274:5;1249:31;:::i;:::-;1299:5;-1:-1:-1;1356:2:49;1341:18;;1328:32;1369:33;1328:32;1369:33;:::i;:::-;1014:471;;1421:7;;-1:-1:-1;;;1475:2:49;1460:18;;;;1447:32;;1014:471::o;1672:247::-;1731:6;1784:2;1772:9;1763:7;1759:23;1755:32;1752:52;;;1800:1;1797;1790:12;1752:52;1839:9;1826:23;1858:31;1883:5;1858:31;:::i;:::-;1908:5;1672:247;-1:-1:-1;;;1672:247:49:o;1924:367::-;1987:8;1997:6;2051:3;2044:4;2036:6;2032:17;2028:27;2018:55;;2069:1;2066;2059:12;2018:55;-1:-1:-1;2092:20:49;;2135:18;2124:30;;2121:50;;;2167:1;2164;2157:12;2121:50;2204:4;2196:6;2192:17;2180:29;;2264:3;2257:4;2247:6;2244:1;2240:14;2232:6;2228:27;2224:38;2221:47;2218:67;;;2281:1;2278;2271:12;2218:67;1924:367;;;;;:::o;2296:729::-;2416:6;2424;2432;2440;2493:2;2481:9;2472:7;2468:23;2464:32;2461:52;;;2509:1;2506;2499:12;2461:52;2548:9;2535:23;2567:31;2592:5;2567:31;:::i;:::-;2617:5;-1:-1:-1;2673:2:49;2658:18;;2645:32;2700:18;2689:30;;2686:50;;;2732:1;2729;2722:12;2686:50;2771:70;2833:7;2824:6;2813:9;2809:22;2771:70;:::i;:::-;2860:8;;-1:-1:-1;2745:96:49;-1:-1:-1;;2947:2:49;2932:18;;2919:32;2960:33;2919:32;2960:33;:::i;:::-;2296:729;;;;-1:-1:-1;2296:729:49;;-1:-1:-1;;2296:729:49:o;3030:118::-;3116:5;3109:13;3102:21;3095:5;3092:32;3082:60;;3138:1;3135;3128:12;3153:398;3234:6;3242;3295:2;3283:9;3274:7;3270:23;3266:32;3263:52;;;3311:1;3308;3301:12;3263:52;3350:9;3337:23;3369:31;3394:5;3369:31;:::i;:::-;3419:5;-1:-1:-1;3476:2:49;3461:18;;3448:32;3489:30;3448:32;3489:30;:::i;4064:401::-;4164:6;4217:2;4205:9;4196:7;4192:23;4188:32;4185:52;;;4233:1;4230;4223:12;4185:52;4273:9;4260:23;4306:18;4298:6;4295:30;4292:50;;;4338:1;4335;4328:12;4292:50;4361:22;;4417:3;4399:16;;;4395:26;4392:46;;;4434:1;4431;4424:12;5541:180;5600:6;5653:2;5641:9;5632:7;5628:23;5624:32;5621:52;;;5669:1;5666;5659:12;5621:52;-1:-1:-1;5692:23:49;;5541:180;-1:-1:-1;5541:180:49:o;7028:330::-;7111:6;7119;7172:2;7160:9;7151:7;7147:23;7143:32;7140:52;;;7188:1;7185;7178:12;7140:52;7227:9;7214:23;7246:31;7271:5;7246:31;:::i;:::-;7296:5;7348:2;7333:18;;;;7320:32;;-1:-1:-1;;;7028:330:49:o;7363:149::-;7437:20;;7486:1;7476:12;;7466:40;;7502:1;7499;7492:12;7466:40;7363:149;;;:::o;7517:188::-;7585:20;;-1:-1:-1;;;;;7634:46:49;;7624:57;;7614:85;;7695:1;7692;7685:12;7710:179;7777:20;;7837:26;7826:38;;7816:49;;7806:77;;7879:1;7876;7869:12;7894:1212;8095:6;8103;8111;8119;8127;8135;8143;8151;8159;8212:3;8200:9;8191:7;8187:23;8183:33;8180:53;;;8229:1;8226;8219:12;8180:53;8268:9;8255:23;8287:31;8312:5;8287:31;:::i;:::-;8337:5;-1:-1:-1;8394:2:49;8379:18;;8366:32;8407:33;8366:32;8407:33;:::i;:::-;8459:7;-1:-1:-1;8518:2:49;8503:18;;8490:32;8531:33;8490:32;8531:33;:::i;:::-;8583:7;-1:-1:-1;8609:44:49;8649:2;8634:18;;8609:44;:::i;:::-;8599:54;;8672:39;8706:3;8695:9;8691:19;8672:39;:::i;:::-;8662:49;;8730:38;8763:3;8752:9;8748:19;8730:38;:::i;:::-;8720:48;;8787:39;8821:3;8810:9;8806:19;8787:39;:::i;:::-;8777:49;;8877:3;8866:9;8862:19;8849:33;8905:18;8897:6;8894:30;8891:50;;;8937:1;8934;8927:12;8891:50;8976:70;9038:7;9029:6;9018:9;9014:22;8976:70;:::i;:::-;8950:96;;9065:8;9055:18;;;9092:8;9082:18;;;7894:1212;;;;;;;;;;;:::o;9743:127::-;9804:10;9799:3;9795:20;9792:1;9785:31;9835:4;9832:1;9825:15;9859:4;9856:1;9849:15;9875:266;9960:6;10013:2;10001:9;9992:7;9988:23;9984:32;9981:52;;;10029:1;10026;10019:12;9981:52;10061:9;10055:16;10080:31;10105:5;10080:31;:::i;10146:127::-;10207:10;10202:3;10198:20;10195:1;10188:31;10238:4;10235:1;10228:15;10262:4;10259:1;10252:15;10658:356;10860:2;10842:21;;;10879:18;;;10872:30;10938:34;10933:2;10918:18;;10911:62;11005:2;10990:18;;10658:356::o;12710:245::-;12777:6;12830:2;12818:9;12809:7;12805:23;12801:32;12798:52;;;12846:1;12843;12836:12;12798:52;12878:9;12872:16;12897:28;12919:5;12897:28;:::i;12960:205::-;13032:6;13085:2;13073:9;13064:7;13060:23;13056:32;13053:52;;;13101:1;13098;13091:12;13053:52;13124:35;13149:9;13124:35;:::i;13437:186::-;13496:6;13549:2;13537:9;13528:7;13524:23;13520:32;13517:52;;;13565:1;13562;13555:12;13517:52;13588:29;13607:9;13588:29;:::i;13628:184::-;13686:6;13739:2;13727:9;13718:7;13714:23;13710:32;13707:52;;;13755:1;13752;13745:12;13707:52;13778:28;13796:9;13778:28;:::i;13817:545::-;13910:4;13916:6;13976:11;13963:25;14070:2;14066:7;14055:8;14039:14;14035:29;14031:43;14011:18;14007:68;13997:96;;14089:1;14086;14079:12;13997:96;14116:33;;14168:20;;;-1:-1:-1;14211:18:49;14200:30;;14197:50;;;14243:1;14240;14233:12;14197:50;14276:4;14264:17;;-1:-1:-1;14327:1:49;14323:14;;;14307;14303:35;14293:46;;14290:66;;;14352:1;14349;14342:12;16426:637;-1:-1:-1;;;;;16755:15:49;;;16737:34;;16807:15;;;;16802:2;16787:18;;16780:43;-1:-1:-1;;;;;16912:15:49;;;16907:2;16892:18;;16885:43;16976:26;16964:39;16959:2;16944:18;;16937:67;17041:15;;;17035:3;17020:19;;17013:44;16686:3;16671:19;;16426:637::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {ERC165Checker} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {IERC721Enumerable} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\n\n// @dev Solmate's ERC20 is used instead of OZ's ERC20 so we can use safeTransferLib for cheaper safeTransfers for\n// ETH and ERC20 tokens\nimport {ERC20} from \"solmate/src/tokens/ERC20.sol\";\nimport {SafeTransferLib} from \"solmate/src/utils/SafeTransferLib.sol\";\n\nimport {LSSVMPair} from \"./LSSVMPair.sol\";\nimport {LSSVMRouter} from \"./LSSVMRouter.sol\";\nimport {LSSVMPairETH} from \"./LSSVMPairETH.sol\";\nimport {ICurve} from \"./bonding-curves/ICurve.sol\";\nimport {LSSVMPairERC20} from \"./LSSVMPairERC20.sol\";\nimport {LSSVMPairCloner} from \"./lib/LSSVMPairCloner.sol\";\nimport {ILSSVMPairFactoryLike} from \"./ILSSVMPairFactoryLike.sol\";\nimport {LSSVMPairEnumerableETH} from \"./LSSVMPairEnumerableETH.sol\";\nimport {LSSVMPairEnumerableERC20} from \"./LSSVMPairEnumerableERC20.sol\";\nimport {LSSVMPairMissingEnumerableETH} from \"./LSSVMPairMissingEnumerableETH.sol\";\nimport {LSSVMPairMissingEnumerableERC20} from \"./LSSVMPairMissingEnumerableERC20.sol\";\n\ncontract LSSVMPairFactory is Ownable, ILSSVMPairFactoryLike {\n    using LSSVMPairCloner for address;\n    using SafeTransferLib for address payable;\n    using SafeTransferLib for ERC20;\n\n    bytes4 private constant INTERFACE_ID_ERC721_ENUMERABLE =\n        type(IERC721Enumerable).interfaceId;\n\n    uint256 internal constant MAX_PROTOCOL_FEE = 0.10e18; // 10%, must <= 1 - MAX_FEE\n\n    LSSVMPairEnumerableETH public immutable enumerableETHTemplate;\n    LSSVMPairMissingEnumerableETH public immutable missingEnumerableETHTemplate;\n    LSSVMPairEnumerableERC20 public immutable enumerableERC20Template;\n    LSSVMPairMissingEnumerableERC20\n        public immutable missingEnumerableERC20Template;\n    address payable public override protocolFeeRecipient;\n\n    // Units are in base 1e18\n    uint256 public override protocolFeeMultiplier;\n\n    mapping(ICurve => bool) public bondingCurveAllowed;\n    mapping(address => bool) public override callAllowed;\n    struct RouterStatus {\n        bool allowed;\n        bool wasEverAllowed;\n    }\n    mapping(LSSVMRouter => RouterStatus) public override routerStatus;\n\n    event NewPair(address poolAddress);\n    event TokenDeposit(address poolAddress);\n    event NFTDeposit(address poolAddress);\n    event ProtocolFeeRecipientUpdate(address recipientAddress);\n    event ProtocolFeeMultiplierUpdate(uint256 newMultiplier);\n    event BondingCurveStatusUpdate(ICurve bondingCurve, bool isAllowed);\n    event CallTargetStatusUpdate(address target, bool isAllowed);\n    event RouterStatusUpdate(LSSVMRouter router, bool isAllowed);\n\n    constructor(\n        LSSVMPairEnumerableETH _enumerableETHTemplate,\n        LSSVMPairMissingEnumerableETH _missingEnumerableETHTemplate,\n        LSSVMPairEnumerableERC20 _enumerableERC20Template,\n        LSSVMPairMissingEnumerableERC20 _missingEnumerableERC20Template,\n        address payable _protocolFeeRecipient,\n        uint256 _protocolFeeMultiplier\n    ) {\n        enumerableETHTemplate = _enumerableETHTemplate;\n        missingEnumerableETHTemplate = _missingEnumerableETHTemplate;\n        enumerableERC20Template = _enumerableERC20Template;\n        missingEnumerableERC20Template = _missingEnumerableERC20Template;\n        protocolFeeRecipient = _protocolFeeRecipient;\n\n        require(_protocolFeeMultiplier <= MAX_PROTOCOL_FEE, \"Fee too large\");\n        protocolFeeMultiplier = _protocolFeeMultiplier;\n    }\n\n    /**\n     * External functions\n     */\n\n    /**\n        @notice Creates a pair contract using EIP-1167.\n        @param _nft The NFT contract of the collection the pair trades\n        @param _bondingCurve The bonding curve for the pair to price NFTs, must be whitelisted\n        @param _assetRecipient The address that will receive the assets traders give during trades.\n                              If set to address(0), assets will be sent to the pool address.\n                              Not available to TRADE pools. \n        @param _poolType TOKEN, NFT, or TRADE\n        @param _delta The delta value used by the bonding curve. The meaning of delta depends\n        on the specific curve.\n        @param _fee The fee taken by the LP in each trade. Can only be non-zero if _poolType is Trade.\n        @param _spotPrice The initial selling spot price\n        @param _initialNFTIDs The list of IDs of NFTs to transfer from the sender to the pair\n        @return pair The new pair\n     */\n    function createPairETH(\n        IERC721 _nft,\n        ICurve _bondingCurve,\n        address payable _assetRecipient,\n        LSSVMPair.PoolType _poolType,\n        uint128 _delta,\n        uint96 _fee,\n        uint128 _spotPrice,\n        uint256[] calldata _initialNFTIDs\n    ) external payable returns (LSSVMPairETH pair) {\n        require(\n            bondingCurveAllowed[_bondingCurve],\n            \"Bonding curve not whitelisted\"\n        );\n        \n        // Check to see if the NFT supports Enumerable to determine which template to use\n        address template;\n        try IERC165(address(_nft)).supportsInterface(INTERFACE_ID_ERC721_ENUMERABLE) returns (bool isEnumerable) {\n          template = isEnumerable ? address(enumerableETHTemplate)\n            : address(missingEnumerableETHTemplate);\n        } catch {\n          template = address(missingEnumerableETHTemplate);\n        }\n\n        pair = LSSVMPairETH(\n            payable(\n                template.cloneETHPair(\n                    this,\n                    _bondingCurve,\n                    _nft,\n                    uint8(_poolType)\n                )\n            )\n        );\n\n        _initializePairETH(\n            pair,\n            _nft,\n            _assetRecipient,\n            _delta,\n            _fee,\n            _spotPrice,\n            _initialNFTIDs\n        );\n        emit NewPair(address(pair));\n    }\n\n    /**\n        @notice Creates a pair contract using EIP-1167.\n        @param _nft The NFT contract of the collection the pair trades\n        @param _bondingCurve The bonding curve for the pair to price NFTs, must be whitelisted\n        @param _assetRecipient The address that will receive the assets traders give during trades.\n                                If set to address(0), assets will be sent to the pool address.\n                                Not available to TRADE pools.\n        @param _poolType TOKEN, NFT, or TRADE\n        @param _delta The delta value used by the bonding curve. The meaning of delta depends\n        on the specific curve.\n        @param _fee The fee taken by the LP in each trade. Can only be non-zero if _poolType is Trade.\n        @param _spotPrice The initial selling spot price, in ETH\n        @param _initialNFTIDs The list of IDs of NFTs to transfer from the sender to the pair\n        @param _initialTokenBalance The initial token balance sent from the sender to the new pair\n        @return pair The new pair\n     */\n    struct CreateERC20PairParams {\n        ERC20 token;\n        IERC721 nft;\n        ICurve bondingCurve;\n        address payable assetRecipient;\n        LSSVMPair.PoolType poolType;\n        uint128 delta;\n        uint96 fee;\n        uint128 spotPrice;\n        uint256[] initialNFTIDs;\n        uint256 initialTokenBalance;\n    }\n\n    function createPairERC20(CreateERC20PairParams calldata params)\n        external\n        returns (LSSVMPairERC20 pair)\n    {\n        require(\n            bondingCurveAllowed[params.bondingCurve],\n            \"Bonding curve not whitelisted\"\n        );\n\n        // Check to see if the NFT supports Enumerable to determine which template to use\n        address template;\n        try IERC165(address(params.nft)).supportsInterface(INTERFACE_ID_ERC721_ENUMERABLE) returns (bool isEnumerable) {\n          template = isEnumerable ? address(enumerableERC20Template)\n            : address(missingEnumerableERC20Template);\n        } catch {\n          template = address(missingEnumerableERC20Template);\n        }\n\n        pair = LSSVMPairERC20(\n            payable(\n                template.cloneERC20Pair(\n                    this,\n                    params.bondingCurve,\n                    params.nft,\n                    uint8(params.poolType),\n                    params.token\n                )\n            )\n        );\n\n        _initializePairERC20(\n            pair,\n            params.token,\n            params.nft,\n            params.assetRecipient,\n            params.delta,\n            params.fee,\n            params.spotPrice,\n            params.initialNFTIDs,\n            params.initialTokenBalance\n        );\n        emit NewPair(address(pair));\n    }\n\n    /**\n        @notice Checks if an address is a LSSVMPair. Uses the fact that the pairs are EIP-1167 minimal proxies.\n        @param potentialPair The address to check\n        @param variant The pair variant (NFT is enumerable or not, pair uses ETH or ERC20)\n        @return True if the address is the specified pair variant, false otherwise\n     */\n    function isPair(address potentialPair, PairVariant variant)\n        public\n        view\n        override\n        returns (bool)\n    {\n        if (variant == PairVariant.ENUMERABLE_ERC20) {\n            return\n                LSSVMPairCloner.isERC20PairClone(\n                    address(this),\n                    address(enumerableERC20Template),\n                    potentialPair\n                );\n        } else if (variant == PairVariant.MISSING_ENUMERABLE_ERC20) {\n            return\n                LSSVMPairCloner.isERC20PairClone(\n                    address(this),\n                    address(missingEnumerableERC20Template),\n                    potentialPair\n                );\n        } else if (variant == PairVariant.ENUMERABLE_ETH) {\n            return\n                LSSVMPairCloner.isETHPairClone(\n                    address(this),\n                    address(enumerableETHTemplate),\n                    potentialPair\n                );\n        } else if (variant == PairVariant.MISSING_ENUMERABLE_ETH) {\n            return\n                LSSVMPairCloner.isETHPairClone(\n                    address(this),\n                    address(missingEnumerableETHTemplate),\n                    potentialPair\n                );\n        } else {\n            // invalid input\n            return false;\n        }\n    }\n\n    /**\n        @notice Allows receiving ETH in order to receive protocol fees\n     */\n    receive() external payable {}\n\n    /**\n     * Admin functions\n     */\n\n    /**\n        @notice Withdraws the ETH balance to the protocol fee recipient.\n        Only callable by the owner.\n     */\n    function withdrawETHProtocolFees() external onlyOwner {\n        protocolFeeRecipient.safeTransferETH(address(this).balance);\n    }\n\n    /**\n        @notice Withdraws ERC20 tokens to the protocol fee recipient. Only callable by the owner.\n        @param token The token to transfer\n        @param amount The amount of tokens to transfer\n     */\n    function withdrawERC20ProtocolFees(ERC20 token, uint256 amount)\n        external\n        onlyOwner\n    {\n        token.safeTransfer(protocolFeeRecipient, amount);\n    }\n\n    /**\n        @notice Changes the protocol fee recipient address. Only callable by the owner.\n        @param _protocolFeeRecipient The new fee recipient\n     */\n    function changeProtocolFeeRecipient(address payable _protocolFeeRecipient)\n        external\n        onlyOwner\n    {\n        require(_protocolFeeRecipient != address(0), \"0 address\");\n        protocolFeeRecipient = _protocolFeeRecipient;\n        emit ProtocolFeeRecipientUpdate(_protocolFeeRecipient);\n    }\n\n    /**\n        @notice Changes the protocol fee multiplier. Only callable by the owner.\n        @param _protocolFeeMultiplier The new fee multiplier, 18 decimals\n     */\n    function changeProtocolFeeMultiplier(uint256 _protocolFeeMultiplier)\n        external\n        onlyOwner\n    {\n        require(_protocolFeeMultiplier <= MAX_PROTOCOL_FEE, \"Fee too large\");\n        protocolFeeMultiplier = _protocolFeeMultiplier;\n        emit ProtocolFeeMultiplierUpdate(_protocolFeeMultiplier);\n    }\n\n    /**\n        @notice Sets the whitelist status of a bonding curve contract. Only callable by the owner.\n        @param bondingCurve The bonding curve contract\n        @param isAllowed True to whitelist, false to remove from whitelist\n     */\n    function setBondingCurveAllowed(ICurve bondingCurve, bool isAllowed)\n        external\n        onlyOwner\n    {\n        bondingCurveAllowed[bondingCurve] = isAllowed;\n        emit BondingCurveStatusUpdate(bondingCurve, isAllowed);\n    }\n\n    /**\n        @notice Sets the whitelist status of a contract to be called arbitrarily by a pair.\n        Only callable by the owner.\n        @param target The target contract\n        @param isAllowed True to whitelist, false to remove from whitelist\n     */\n    function setCallAllowed(address payable target, bool isAllowed)\n        external\n        onlyOwner\n    {\n        // ensure target is not / was not ever a router\n        if (isAllowed) {\n            require(\n                !routerStatus[LSSVMRouter(target)].wasEverAllowed,\n                \"Can't call router\"\n            );\n        }\n\n        callAllowed[target] = isAllowed;\n        emit CallTargetStatusUpdate(target, isAllowed);\n    }\n\n    /**\n        @notice Updates the router whitelist. Only callable by the owner.\n        @param _router The router\n        @param isAllowed True to whitelist, false to remove from whitelist\n     */\n    function setRouterAllowed(LSSVMRouter _router, bool isAllowed)\n        external\n        onlyOwner\n    {\n        // ensure target is not arbitrarily callable by pairs\n        if (isAllowed) {\n            require(!callAllowed[address(_router)], \"Can't call router\");\n        }\n        routerStatus[_router] = RouterStatus({\n            allowed: isAllowed,\n            wasEverAllowed: true\n        });\n\n        emit RouterStatusUpdate(_router, isAllowed);\n    }\n\n    /**\n     * Internal functions\n     */\n\n    function _initializePairETH(\n        LSSVMPairETH _pair,\n        IERC721 _nft,\n        address payable _assetRecipient,\n        uint128 _delta,\n        uint96 _fee,\n        uint128 _spotPrice,\n        uint256[] calldata _initialNFTIDs\n    ) internal {\n        // initialize pair\n        _pair.initialize(msg.sender, _assetRecipient, _delta, _fee, _spotPrice);\n\n        // transfer initial ETH to pair\n        payable(address(_pair)).safeTransferETH(msg.value);\n\n        // transfer initial NFTs from sender to pair\n        uint256 numNFTs = _initialNFTIDs.length;\n        for (uint256 i; i < numNFTs; ) {\n            _nft.safeTransferFrom(\n                msg.sender,\n                address(_pair),\n                _initialNFTIDs[i]\n            );\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    function _initializePairERC20(\n        LSSVMPairERC20 _pair,\n        ERC20 _token,\n        IERC721 _nft,\n        address payable _assetRecipient,\n        uint128 _delta,\n        uint96 _fee,\n        uint128 _spotPrice,\n        uint256[] calldata _initialNFTIDs,\n        uint256 _initialTokenBalance\n    ) internal {\n        // initialize pair\n        _pair.initialize(msg.sender, _assetRecipient, _delta, _fee, _spotPrice);\n\n        // transfer initial tokens to pair\n        _token.safeTransferFrom(\n            msg.sender,\n            address(_pair),\n            _initialTokenBalance\n        );\n\n        // transfer initial NFTs from sender to pair\n        uint256 numNFTs = _initialNFTIDs.length;\n        for (uint256 i; i < numNFTs; ) {\n            _nft.safeTransferFrom(\n                msg.sender,\n                address(_pair),\n                _initialNFTIDs[i]\n            );\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /** \n      @dev Used to deposit NFTs into a pair after creation and emit an event for indexing (if recipient is indeed a pair)\n    */\n    function depositNFTs(\n        IERC721 _nft,\n        uint256[] calldata ids,\n        address recipient\n    ) external {\n        // transfer NFTs from caller to recipient\n        uint256 numNFTs = ids.length;\n        for (uint256 i; i < numNFTs; ) {\n            _nft.safeTransferFrom(msg.sender, recipient, ids[i]);\n\n            unchecked {\n                ++i;\n            }\n        }\n        if (\n            isPair(recipient, PairVariant.ENUMERABLE_ERC20) ||\n            isPair(recipient, PairVariant.ENUMERABLE_ETH) ||\n            isPair(recipient, PairVariant.MISSING_ENUMERABLE_ERC20) ||\n            isPair(recipient, PairVariant.MISSING_ENUMERABLE_ETH)\n        ) {\n            emit NFTDeposit(recipient);\n        }\n    }\n\n    /**\n      @dev Used to deposit ERC20s into a pair after creation and emit an event for indexing (if recipient is indeed an ERC20 pair and the token matches)\n     */\n    function depositERC20(\n        ERC20 token,\n        address recipient,\n        uint256 amount\n    ) external {\n        token.safeTransferFrom(msg.sender, recipient, amount);\n        if (\n            isPair(recipient, PairVariant.ENUMERABLE_ERC20) ||\n            isPair(recipient, PairVariant.MISSING_ENUMERABLE_ERC20)\n        ) {\n            if (token == LSSVMPairERC20(recipient).token()) {\n                emit TokenDeposit(recipient);\n            }\n        }\n    }\n}\n",
  "sourcePath": "/Users/ds/Documents/rarible/scripts/contracts/lsvm/LSSVMPairFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/lsvm/LSSVMPairFactory.sol",
    "exportedSymbols": {
      "ERC165Checker": [
        3605
      ],
      "ERC20": [
        12652
      ],
      "ICurve": [
        11580
      ],
      "IERC165": [
        3617
      ],
      "IERC721": [
        2445
      ],
      "IERC721Enumerable": [
        2832
      ],
      "ILSSVMPairFactoryLike": [
        4552
      ],
      "LSSVMPair": [
        6014
      ],
      "LSSVMPairCloner": [
        11965
      ],
      "LSSVMPairERC20": [
        6324
      ],
      "LSSVMPairETH": [
        6629
      ],
      "LSSVMPairEnumerableERC20": [
        6918
      ],
      "LSSVMPairEnumerableETH": [
        6945
      ],
      "LSSVMPairFactory": [
        7939
      ],
      "LSSVMPairMissingEnumerableERC20": [
        8282
      ],
      "LSSVMPairMissingEnumerableETH": [
        8307
      ],
      "LSSVMRouter": [
        10184
      ],
      "Ownable": [
        104
      ],
      "SafeTransferLib": [
        12737
      ]
    },
    "id": 7940,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6947,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6949,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 105,
        "src": "62:67:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6948,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "70:7:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 6951,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 2446,
        "src": "130:73:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6950,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "138:7:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "id": 6953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 3606,
        "src": "204:92:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6952,
              "name": "ERC165Checker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "212:13:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "id": 6955,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 3618,
        "src": "297:80:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6954,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "305:7:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "id": 6957,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 2833,
        "src": "378:104:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6956,
              "name": "IERC721Enumerable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "386:17:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "solmate/src/tokens/ERC20.sol",
        "file": "solmate/src/tokens/ERC20.sol",
        "id": 6959,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 12653,
        "src": "622:51:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6958,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "630:5:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/src/utils/SafeTransferLib.sol",
        "id": 6961,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 12738,
        "src": "674:70:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6960,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "682:15:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPair.sol",
        "file": "./LSSVMPair.sol",
        "id": 6963,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6015,
        "src": "746:42:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6962,
              "name": "LSSVMPair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "754:9:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMRouter.sol",
        "file": "./LSSVMRouter.sol",
        "id": 6965,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 10185,
        "src": "789:46:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6964,
              "name": "LSSVMRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "797:11:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairETH.sol",
        "file": "./LSSVMPairETH.sol",
        "id": 6967,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6630,
        "src": "836:48:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6966,
              "name": "LSSVMPairETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "844:12:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/bonding-curves/ICurve.sol",
        "file": "./bonding-curves/ICurve.sol",
        "id": 6969,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 11581,
        "src": "885:51:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6968,
              "name": "ICurve",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "893:6:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairERC20.sol",
        "file": "./LSSVMPairERC20.sol",
        "id": 6971,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6325,
        "src": "937:52:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6970,
              "name": "LSSVMPairERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "945:14:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/lib/LSSVMPairCloner.sol",
        "file": "./lib/LSSVMPairCloner.sol",
        "id": 6973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 11966,
        "src": "990:58:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6972,
              "name": "LSSVMPairCloner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "998:15:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/ILSSVMPairFactoryLike.sol",
        "file": "./ILSSVMPairFactoryLike.sol",
        "id": 6975,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 4553,
        "src": "1049:66:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6974,
              "name": "ILSSVMPairFactoryLike",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1057:21:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairEnumerableETH.sol",
        "file": "./LSSVMPairEnumerableETH.sol",
        "id": 6977,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6946,
        "src": "1116:68:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6976,
              "name": "LSSVMPairEnumerableETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1124:22:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairEnumerableERC20.sol",
        "file": "./LSSVMPairEnumerableERC20.sol",
        "id": 6979,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6919,
        "src": "1185:72:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6978,
              "name": "LSSVMPairEnumerableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1193:24:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairMissingEnumerableETH.sol",
        "file": "./LSSVMPairMissingEnumerableETH.sol",
        "id": 6981,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 8308,
        "src": "1258:82:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6980,
              "name": "LSSVMPairMissingEnumerableETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1266:29:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairMissingEnumerableERC20.sol",
        "file": "./LSSVMPairMissingEnumerableERC20.sol",
        "id": 6983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 8283,
        "src": "1341:86:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6982,
              "name": "LSSVMPairMissingEnumerableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1349:31:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6984,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "1458:7:28"
            },
            "id": 6985,
            "nodeType": "InheritanceSpecifier",
            "src": "1458:7:28"
          },
          {
            "baseName": {
              "id": 6986,
              "name": "ILSSVMPairFactoryLike",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4552,
              "src": "1467:21:28"
            },
            "id": 6987,
            "nodeType": "InheritanceSpecifier",
            "src": "1467:21:28"
          }
        ],
        "canonicalName": "LSSVMPairFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7939,
        "linearizedBaseContracts": [
          7939,
          4552,
          104,
          3176
        ],
        "name": "LSSVMPairFactory",
        "nameLocation": "1438:16:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6990,
            "libraryName": {
              "id": 6988,
              "name": "LSSVMPairCloner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11965,
              "src": "1501:15:28"
            },
            "nodeType": "UsingForDirective",
            "src": "1495:34:28",
            "typeName": {
              "id": 6989,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1521:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 6993,
            "libraryName": {
              "id": 6991,
              "name": "SafeTransferLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12737,
              "src": "1540:15:28"
            },
            "nodeType": "UsingForDirective",
            "src": "1534:42:28",
            "typeName": {
              "id": 6992,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1560:15:28",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 6997,
            "libraryName": {
              "id": 6994,
              "name": "SafeTransferLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12737,
              "src": "1587:15:28"
            },
            "nodeType": "UsingForDirective",
            "src": "1581:32:28",
            "typeName": {
              "id": 6996,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6995,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12652,
                "src": "1607:5:28"
              },
              "referencedDeclaration": 12652,
              "src": "1607:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$12652",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 7003,
            "mutability": "constant",
            "name": "INTERFACE_ID_ERC721_ENUMERABLE",
            "nameLocation": "1643:30:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1619:100:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 6998,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1619:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 7000,
                    "name": "IERC721Enumerable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2832,
                    "src": "1689:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2832_$",
                      "typeString": "type(contract IERC721Enumerable)"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2832_$",
                      "typeString": "type(contract IERC721Enumerable)"
                    }
                  ],
                  "id": 6999,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4294967269,
                  "src": "1684:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 7001,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1684:23:28",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$2832",
                  "typeString": "type(contract IERC721Enumerable)"
                }
              },
              "id": 7002,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "interfaceId",
              "nodeType": "MemberAccess",
              "src": "1684:35:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 7006,
            "mutability": "constant",
            "name": "MAX_PROTOCOL_FEE",
            "nameLocation": "1752:16:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1726:52:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7004,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1726:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3130653138",
              "id": 7005,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1771:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.10e18"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ad2e5770",
            "id": 7009,
            "mutability": "immutable",
            "name": "enumerableETHTemplate",
            "nameLocation": "1853:21:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1813:61:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
              "typeString": "contract LSSVMPairEnumerableETH"
            },
            "typeName": {
              "id": 7008,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7007,
                "name": "LSSVMPairEnumerableETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6945,
                "src": "1813:22:28"
              },
              "referencedDeclaration": 6945,
              "src": "1813:22:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                "typeString": "contract LSSVMPairEnumerableETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "004885ea",
            "id": 7012,
            "mutability": "immutable",
            "name": "missingEnumerableETHTemplate",
            "nameLocation": "1927:28:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1880:75:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
              "typeString": "contract LSSVMPairMissingEnumerableETH"
            },
            "typeName": {
              "id": 7011,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7010,
                "name": "LSSVMPairMissingEnumerableETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8307,
                "src": "1880:29:28"
              },
              "referencedDeclaration": 8307,
              "src": "1880:29:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                "typeString": "contract LSSVMPairMissingEnumerableETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a427f1ad",
            "id": 7015,
            "mutability": "immutable",
            "name": "enumerableERC20Template",
            "nameLocation": "2003:23:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1961:65:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
              "typeString": "contract LSSVMPairEnumerableERC20"
            },
            "typeName": {
              "id": 7014,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7013,
                "name": "LSSVMPairEnumerableERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6918,
                "src": "1961:24:28"
              },
              "referencedDeclaration": 6918,
              "src": "1961:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                "typeString": "contract LSSVMPairEnumerableERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4c6bc433",
            "id": 7018,
            "mutability": "immutable",
            "name": "missingEnumerableERC20Template",
            "nameLocation": "2089:30:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "2032:87:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
              "typeString": "contract LSSVMPairMissingEnumerableERC20"
            },
            "typeName": {
              "id": 7017,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7016,
                "name": "LSSVMPairMissingEnumerableERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8282,
                "src": "2032:31:28"
              },
              "referencedDeclaration": 8282,
              "src": "2032:31:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                "typeString": "contract LSSVMPairMissingEnumerableERC20"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4524
            ],
            "constant": false,
            "functionSelector": "64df049e",
            "id": 7021,
            "mutability": "mutable",
            "name": "protocolFeeRecipient",
            "nameLocation": "2157:20:28",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7020,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2148:8:28"
            },
            "scope": 7939,
            "src": "2125:52:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 7019,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2125:15:28",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4519
            ],
            "constant": false,
            "functionSelector": "1ce4c78b",
            "id": 7024,
            "mutability": "mutable",
            "name": "protocolFeeMultiplier",
            "nameLocation": "2238:21:28",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2229:8:28"
            },
            "scope": 7939,
            "src": "2214:45:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7022,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2214:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a82719c8",
            "id": 7029,
            "mutability": "mutable",
            "name": "bondingCurveAllowed",
            "nameLocation": "2297:19:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "2266:50:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
              "typeString": "mapping(contract ICurve => bool)"
            },
            "typeName": {
              "id": 7028,
              "keyType": {
                "id": 7026,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7025,
                  "name": "ICurve",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11580,
                  "src": "2274:6:28"
                },
                "referencedDeclaration": 11580,
                "src": "2274:6:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ICurve_$11580",
                  "typeString": "contract ICurve"
                }
              },
              "nodeType": "Mapping",
              "src": "2266:23:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
                "typeString": "mapping(contract ICurve => bool)"
              },
              "valueType": {
                "id": 7027,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2284:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4531
            ],
            "constant": false,
            "functionSelector": "1fba95e8",
            "id": 7034,
            "mutability": "mutable",
            "name": "callAllowed",
            "nameLocation": "2363:11:28",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7033,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2354:8:28"
            },
            "scope": 7939,
            "src": "2322:52:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7032,
              "keyType": {
                "id": 7030,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2330:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2322:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7031,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2341:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "LSSVMPairFactory.RouterStatus",
            "id": 7039,
            "members": [
              {
                "constant": false,
                "id": 7036,
                "mutability": "mutable",
                "name": "allowed",
                "nameLocation": "2415:7:28",
                "nodeType": "VariableDeclaration",
                "scope": 7039,
                "src": "2410:12:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7035,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2410:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7038,
                "mutability": "mutable",
                "name": "wasEverAllowed",
                "nameLocation": "2437:14:28",
                "nodeType": "VariableDeclaration",
                "scope": 7039,
                "src": "2432:19:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7037,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2432:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RouterStatus",
            "nameLocation": "2387:12:28",
            "nodeType": "StructDefinition",
            "scope": 7939,
            "src": "2380:78:28",
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4541
            ],
            "constant": false,
            "functionSelector": "a93ec68b",
            "id": 7046,
            "mutability": "mutable",
            "name": "routerStatus",
            "nameLocation": "2516:12:28",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7045,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2507:8:28"
            },
            "scope": 7939,
            "src": "2463:65:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_LSSVMRouter_$10184_$_t_struct$_RouterStatus_$7039_storage_$",
              "typeString": "mapping(contract LSSVMRouter => struct LSSVMPairFactory.RouterStatus)"
            },
            "typeName": {
              "id": 7044,
              "keyType": {
                "id": 7041,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7040,
                  "name": "LSSVMRouter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10184,
                  "src": "2471:11:28"
                },
                "referencedDeclaration": 10184,
                "src": "2471:11:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                  "typeString": "contract LSSVMRouter"
                }
              },
              "nodeType": "Mapping",
              "src": "2463:36:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_LSSVMRouter_$10184_$_t_struct$_RouterStatus_$7039_storage_$",
                "typeString": "mapping(contract LSSVMRouter => struct LSSVMPairFactory.RouterStatus)"
              },
              "valueType": {
                "id": 7043,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7042,
                  "name": "RouterStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7039,
                  "src": "2486:12:28"
                },
                "referencedDeclaration": 7039,
                "src": "2486:12:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RouterStatus_$7039_storage_ptr",
                  "typeString": "struct LSSVMPairFactory.RouterStatus"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 7050,
            "name": "NewPair",
            "nameLocation": "2541:7:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7048,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "2557:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7050,
                  "src": "2549:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2549:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2548:21:28"
            },
            "src": "2535:35:28"
          },
          {
            "anonymous": false,
            "id": 7054,
            "name": "TokenDeposit",
            "nameLocation": "2581:12:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7052,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "2602:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7054,
                  "src": "2594:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2593:21:28"
            },
            "src": "2575:40:28"
          },
          {
            "anonymous": false,
            "id": 7058,
            "name": "NFTDeposit",
            "nameLocation": "2626:10:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7056,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "2645:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7058,
                  "src": "2637:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2636:21:28"
            },
            "src": "2620:38:28"
          },
          {
            "anonymous": false,
            "id": 7062,
            "name": "ProtocolFeeRecipientUpdate",
            "nameLocation": "2669:26:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipientAddress",
                  "nameLocation": "2704:16:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7062,
                  "src": "2696:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2696:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2695:26:28"
            },
            "src": "2663:59:28"
          },
          {
            "anonymous": false,
            "id": 7066,
            "name": "ProtocolFeeMultiplierUpdate",
            "nameLocation": "2733:27:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7064,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMultiplier",
                  "nameLocation": "2769:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7066,
                  "src": "2761:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2760:23:28"
            },
            "src": "2727:57:28"
          },
          {
            "anonymous": false,
            "id": 7073,
            "name": "BondingCurveStatusUpdate",
            "nameLocation": "2795:24:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7069,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bondingCurve",
                  "nameLocation": "2827:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7073,
                  "src": "2820:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$11580",
                    "typeString": "contract ICurve"
                  },
                  "typeName": {
                    "id": 7068,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7067,
                      "name": "ICurve",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11580,
                      "src": "2820:6:28"
                    },
                    "referencedDeclaration": 11580,
                    "src": "2820:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$11580",
                      "typeString": "contract ICurve"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7071,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "2846:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7073,
                  "src": "2841:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7070,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2841:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2819:37:28"
            },
            "src": "2789:68:28"
          },
          {
            "anonymous": false,
            "id": 7079,
            "name": "CallTargetStatusUpdate",
            "nameLocation": "2868:22:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7075,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2899:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7079,
                  "src": "2891:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7077,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "2912:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7079,
                  "src": "2907:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7076,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2890:32:28"
            },
            "src": "2862:61:28"
          },
          {
            "anonymous": false,
            "id": 7086,
            "name": "RouterStatusUpdate",
            "nameLocation": "2934:18:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "2965:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7086,
                  "src": "2953:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                    "typeString": "contract LSSVMRouter"
                  },
                  "typeName": {
                    "id": 7081,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7080,
                      "name": "LSSVMRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10184,
                      "src": "2953:11:28"
                    },
                    "referencedDeclaration": 10184,
                    "src": "2953:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                      "typeString": "contract LSSVMRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7084,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "2978:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7086,
                  "src": "2973:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7083,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2952:36:28"
            },
            "src": "2928:61:28"
          },
          {
            "body": {
              "id": 7136,
              "nodeType": "Block",
              "src": "3356:456:28",
              "statements": [
                {
                  "expression": {
                    "id": 7107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7105,
                      "name": "enumerableETHTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7009,
                      "src": "3366:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                        "typeString": "contract LSSVMPairEnumerableETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7106,
                      "name": "_enumerableETHTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7089,
                      "src": "3390:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                        "typeString": "contract LSSVMPairEnumerableETH"
                      }
                    },
                    "src": "3366:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                      "typeString": "contract LSSVMPairEnumerableETH"
                    }
                  },
                  "id": 7108,
                  "nodeType": "ExpressionStatement",
                  "src": "3366:46:28"
                },
                {
                  "expression": {
                    "id": 7111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7109,
                      "name": "missingEnumerableETHTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7012,
                      "src": "3422:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                        "typeString": "contract LSSVMPairMissingEnumerableETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7110,
                      "name": "_missingEnumerableETHTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7092,
                      "src": "3453:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                        "typeString": "contract LSSVMPairMissingEnumerableETH"
                      }
                    },
                    "src": "3422:60:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                      "typeString": "contract LSSVMPairMissingEnumerableETH"
                    }
                  },
                  "id": 7112,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:60:28"
                },
                {
                  "expression": {
                    "id": 7115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7113,
                      "name": "enumerableERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7015,
                      "src": "3492:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                        "typeString": "contract LSSVMPairEnumerableERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7114,
                      "name": "_enumerableERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7095,
                      "src": "3518:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                        "typeString": "contract LSSVMPairEnumerableERC20"
                      }
                    },
                    "src": "3492:50:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                      "typeString": "contract LSSVMPairEnumerableERC20"
                    }
                  },
                  "id": 7116,
                  "nodeType": "ExpressionStatement",
                  "src": "3492:50:28"
                },
                {
                  "expression": {
                    "id": 7119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7117,
                      "name": "missingEnumerableERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7018,
                      "src": "3552:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                        "typeString": "contract LSSVMPairMissingEnumerableERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7118,
                      "name": "_missingEnumerableERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7098,
                      "src": "3585:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                        "typeString": "contract LSSVMPairMissingEnumerableERC20"
                      }
                    },
                    "src": "3552:64:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                    }
                  },
                  "id": 7120,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:64:28"
                },
                {
                  "expression": {
                    "id": 7123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7121,
                      "name": "protocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7021,
                      "src": "3626:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7122,
                      "name": "_protocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7100,
                      "src": "3649:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3626:44:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7124,
                  "nodeType": "ExpressionStatement",
                  "src": "3626:44:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7126,
                          "name": "_protocolFeeMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7102,
                          "src": "3689:22:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 7127,
                          "name": "MAX_PROTOCOL_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7006,
                          "src": "3715:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3689:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46656520746f6f206c61726765",
                        "id": 7129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3733:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01",
                          "typeString": "literal_string \"Fee too large\""
                        },
                        "value": "Fee too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01",
                          "typeString": "literal_string \"Fee too large\""
                        }
                      ],
                      "id": 7125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3681:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3681:68:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7131,
                  "nodeType": "ExpressionStatement",
                  "src": "3681:68:28"
                },
                {
                  "expression": {
                    "id": 7134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7132,
                      "name": "protocolFeeMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7024,
                      "src": "3759:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7133,
                      "name": "_protocolFeeMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7102,
                      "src": "3783:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3759:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7135,
                  "nodeType": "ExpressionStatement",
                  "src": "3759:46:28"
                }
              ]
            },
            "id": 7137,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7089,
                  "mutability": "mutable",
                  "name": "_enumerableETHTemplate",
                  "nameLocation": "3039:22:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3016:45:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                    "typeString": "contract LSSVMPairEnumerableETH"
                  },
                  "typeName": {
                    "id": 7088,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7087,
                      "name": "LSSVMPairEnumerableETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6945,
                      "src": "3016:22:28"
                    },
                    "referencedDeclaration": 6945,
                    "src": "3016:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                      "typeString": "contract LSSVMPairEnumerableETH"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7092,
                  "mutability": "mutable",
                  "name": "_missingEnumerableETHTemplate",
                  "nameLocation": "3101:29:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3071:59:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                    "typeString": "contract LSSVMPairMissingEnumerableETH"
                  },
                  "typeName": {
                    "id": 7091,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7090,
                      "name": "LSSVMPairMissingEnumerableETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8307,
                      "src": "3071:29:28"
                    },
                    "referencedDeclaration": 8307,
                    "src": "3071:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                      "typeString": "contract LSSVMPairMissingEnumerableETH"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7095,
                  "mutability": "mutable",
                  "name": "_enumerableERC20Template",
                  "nameLocation": "3165:24:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3140:49:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                    "typeString": "contract LSSVMPairEnumerableERC20"
                  },
                  "typeName": {
                    "id": 7094,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7093,
                      "name": "LSSVMPairEnumerableERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6918,
                      "src": "3140:24:28"
                    },
                    "referencedDeclaration": 6918,
                    "src": "3140:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                      "typeString": "contract LSSVMPairEnumerableERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7098,
                  "mutability": "mutable",
                  "name": "_missingEnumerableERC20Template",
                  "nameLocation": "3231:31:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3199:63:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                    "typeString": "contract LSSVMPairMissingEnumerableERC20"
                  },
                  "typeName": {
                    "id": 7097,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7096,
                      "name": "LSSVMPairMissingEnumerableERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8282,
                      "src": "3199:31:28"
                    },
                    "referencedDeclaration": 8282,
                    "src": "3199:31:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7100,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nameLocation": "3288:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3272:37:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7102,
                  "mutability": "mutable",
                  "name": "_protocolFeeMultiplier",
                  "nameLocation": "3327:22:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3319:30:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3006:349:28"
            },
            "returnParameters": {
              "id": 7104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3356:0:28"
            },
            "scope": 7939,
            "src": "2995:817:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7246,
              "nodeType": "Block",
              "src": "5133:1063:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7165,
                          "name": "bondingCurveAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7029,
                          "src": "5164:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
                            "typeString": "mapping(contract ICurve => bool)"
                          }
                        },
                        "id": 7167,
                        "indexExpression": {
                          "id": 7166,
                          "name": "_bondingCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7144,
                          "src": "5184:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$11580",
                            "typeString": "contract ICurve"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5164:34:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f6e64696e67206375727665206e6f742077686974656c6973746564",
                        "id": 7168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5212:31:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb",
                          "typeString": "literal_string \"Bonding curve not whitelisted\""
                        },
                        "value": "Bonding curve not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb",
                          "typeString": "literal_string \"Bonding curve not whitelisted\""
                        }
                      ],
                      "id": 7164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5143:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:110:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7170,
                  "nodeType": "ExpressionStatement",
                  "src": "5143:110:28"
                },
                {
                  "assignments": [
                    7172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7172,
                      "mutability": "mutable",
                      "name": "template",
                      "nameLocation": "5370:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7246,
                      "src": "5362:16:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5362:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7173,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5362:16:28"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 7199,
                        "nodeType": "Block",
                        "src": "5493:131:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 7186,
                                "name": "template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7172,
                                "src": "5505:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "condition": {
                                  "id": 7187,
                                  "name": "isEnumerable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7184,
                                  "src": "5516:12:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "id": 7194,
                                      "name": "missingEnumerableETHTemplate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7012,
                                      "src": "5584:28:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                        "typeString": "contract LSSVMPairMissingEnumerableETH"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                        "typeString": "contract LSSVMPairMissingEnumerableETH"
                                      }
                                    ],
                                    "id": 7193,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5576:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7192,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5576:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5576:37:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 7196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "5516:97:28",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 7190,
                                      "name": "enumerableETHTemplate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7009,
                                      "src": "5539:21:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                                        "typeString": "contract LSSVMPairEnumerableETH"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                                        "typeString": "contract LSSVMPairEnumerableETH"
                                      }
                                    ],
                                    "id": 7189,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5531:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7188,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5531:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5531:30:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5505:108:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 7198,
                            "nodeType": "ExpressionStatement",
                            "src": "5505:108:28"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7200,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 7185,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 7184,
                            "mutability": "mutable",
                            "name": "isEnumerable",
                            "nameLocation": "5479:12:28",
                            "nodeType": "VariableDeclaration",
                            "scope": 7200,
                            "src": "5474:17:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 7183,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5474:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5473:19:28"
                      },
                      "src": "5465:159:28"
                    },
                    {
                      "block": {
                        "id": 7208,
                        "nodeType": "Block",
                        "src": "5631:71:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 7201,
                                "name": "template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7172,
                                "src": "5643:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 7204,
                                    "name": "missingEnumerableETHTemplate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7012,
                                    "src": "5662:28:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                      "typeString": "contract LSSVMPairMissingEnumerableETH"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                      "typeString": "contract LSSVMPairMissingEnumerableETH"
                                    }
                                  ],
                                  "id": 7203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5654:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7202,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5654:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5654:37:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5643:48:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 7207,
                            "nodeType": "ExpressionStatement",
                            "src": "5643:48:28"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7209,
                      "nodeType": "TryCatchClause",
                      "src": "5625:77:28"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 7181,
                        "name": "INTERFACE_ID_ERC721_ENUMERABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7003,
                        "src": "5433:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7177,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7141,
                                "src": "5408:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$2445",
                                  "typeString": "contract IERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721_$2445",
                                  "typeString": "contract IERC721"
                                }
                              ],
                              "id": 7176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5400:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7175,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5400:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5400:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7174,
                          "name": "IERC165",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3617,
                          "src": "5392:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC165_$3617_$",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 7179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5392:22:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC165_$3617",
                          "typeString": "contract IERC165"
                        }
                      },
                      "id": 7180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3616,
                      "src": "5392:40:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 7182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5392:72:28",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7210,
                  "nodeType": "TryStatement",
                  "src": "5388:314:28"
                },
                {
                  "expression": {
                    "id": 7227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7211,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7162,
                      "src": "5712:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                        "typeString": "contract LSSVMPairETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7217,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "5813:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  }
                                },
                                {
                                  "id": 7218,
                                  "name": "_bondingCurve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7144,
                                  "src": "5839:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurve_$11580",
                                    "typeString": "contract ICurve"
                                  }
                                },
                                {
                                  "id": 7219,
                                  "name": "_nft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7141,
                                  "src": "5874:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721_$2445",
                                    "typeString": "contract IERC721"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 7222,
                                      "name": "_poolType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7149,
                                      "src": "5906:9:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_PoolType_$4585",
                                        "typeString": "enum LSSVMPair.PoolType"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_PoolType_$4585",
                                        "typeString": "enum LSSVMPair.PoolType"
                                      }
                                    ],
                                    "id": 7221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5900:5:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 7220,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5900:5:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5900:16:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ICurve_$11580",
                                    "typeString": "contract ICurve"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IERC721_$2445",
                                    "typeString": "contract IERC721"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "id": 7215,
                                  "name": "template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7172,
                                  "src": "5770:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 7216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cloneETHPair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11912,
                                "src": "5770:21:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_ILSSVMPairFactoryLike_$4552_$_t_contract$_ICurve_$11580_$_t_contract$_IERC721_$2445_$_t_uint8_$returns$_t_address_$bound_to$_t_address_$",
                                  "typeString": "function (address,contract ILSSVMPairFactoryLike,contract ICurve,contract IERC721,uint8) returns (address)"
                                }
                              },
                              "id": 7224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5770:164:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5745:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 7213,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5745:8:28",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5745:203:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 7212,
                        "name": "LSSVMPairETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6629,
                        "src": "5719:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSSVMPairETH_$6629_$",
                          "typeString": "type(contract LSSVMPairETH)"
                        }
                      },
                      "id": 7226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5719:239:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                        "typeString": "contract LSSVMPairETH"
                      }
                    },
                    "src": "5712:246:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                      "typeString": "contract LSSVMPairETH"
                    }
                  },
                  "id": 7228,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:246:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7230,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7162,
                        "src": "6001:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                          "typeString": "contract LSSVMPairETH"
                        }
                      },
                      {
                        "id": 7231,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7141,
                        "src": "6019:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$2445",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "id": 7232,
                        "name": "_assetRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7146,
                        "src": "6037:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7233,
                        "name": "_delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7151,
                        "src": "6066:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 7234,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7153,
                        "src": "6086:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 7235,
                        "name": "_spotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7155,
                        "src": "6104:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 7236,
                        "name": "_initialNFTIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7158,
                        "src": "6128:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                          "typeString": "contract LSSVMPairETH"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC721_$2445",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 7229,
                      "name": "_initializePairETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7741,
                      "src": "5969:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_LSSVMPairETH_$6629_$_t_contract$_IERC721_$2445_$_t_address_payable_$_t_uint128_$_t_uint96_$_t_uint128_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (contract LSSVMPairETH,contract IERC721,address payable,uint128,uint96,uint128,uint256[] calldata)"
                      }
                    },
                    "id": 7237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5969:183:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7238,
                  "nodeType": "ExpressionStatement",
                  "src": "5969:183:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7242,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7162,
                            "src": "6183:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                              "typeString": "contract LSSVMPairETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                              "typeString": "contract LSSVMPairETH"
                            }
                          ],
                          "id": 7241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6175:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7240,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6175:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6175:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7239,
                      "name": "NewPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7050,
                      "src": "6167:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6167:22:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7245,
                  "nodeType": "EmitStatement",
                  "src": "6162:27:28"
                }
              ]
            },
            "documentation": {
              "id": 7138,
              "nodeType": "StructuredDocumentation",
              "src": "3861:946:28",
              "text": "@notice Creates a pair contract using EIP-1167.\n@param _nft The NFT contract of the collection the pair trades\n@param _bondingCurve The bonding curve for the pair to price NFTs, must be whitelisted\n@param _assetRecipient The address that will receive the assets traders give during trades.\nIf set to address(0), assets will be sent to the pool address.\nNot available to TRADE pools. \n@param _poolType TOKEN, NFT, or TRADE\n@param _delta The delta value used by the bonding curve. The meaning of delta depends\non the specific curve.\n@param _fee The fee taken by the LP in each trade. Can only be non-zero if _poolType is Trade.\n@param _spotPrice The initial selling spot price\n@param _initialNFTIDs The list of IDs of NFTs to transfer from the sender to the pair\n@return pair The new pair"
            },
            "functionSelector": "ce9c095d",
            "id": 7247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPairETH",
            "nameLocation": "4821:13:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7141,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4852:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4844:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 7140,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7139,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2445,
                      "src": "4844:7:28"
                    },
                    "referencedDeclaration": 2445,
                    "src": "4844:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2445",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7144,
                  "mutability": "mutable",
                  "name": "_bondingCurve",
                  "nameLocation": "4873:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4866:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$11580",
                    "typeString": "contract ICurve"
                  },
                  "typeName": {
                    "id": 7143,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7142,
                      "name": "ICurve",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11580,
                      "src": "4866:6:28"
                    },
                    "referencedDeclaration": 11580,
                    "src": "4866:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$11580",
                      "typeString": "contract ICurve"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7146,
                  "mutability": "mutable",
                  "name": "_assetRecipient",
                  "nameLocation": "4912:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4896:31:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4896:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7149,
                  "mutability": "mutable",
                  "name": "_poolType",
                  "nameLocation": "4956:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4937:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PoolType_$4585",
                    "typeString": "enum LSSVMPair.PoolType"
                  },
                  "typeName": {
                    "id": 7148,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7147,
                      "name": "LSSVMPair.PoolType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4585,
                      "src": "4937:18:28"
                    },
                    "referencedDeclaration": 4585,
                    "src": "4937:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PoolType_$4585",
                      "typeString": "enum LSSVMPair.PoolType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7151,
                  "mutability": "mutable",
                  "name": "_delta",
                  "nameLocation": "4983:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4975:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7150,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4975:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7153,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "5006:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4999:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7152,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4999:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7155,
                  "mutability": "mutable",
                  "name": "_spotPrice",
                  "nameLocation": "5028:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "5020:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7154,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5020:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7158,
                  "mutability": "mutable",
                  "name": "_initialNFTIDs",
                  "nameLocation": "5067:14:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "5048:33:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7156,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5048:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7157,
                    "nodeType": "ArrayTypeName",
                    "src": "5048:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4834:253:28"
            },
            "returnParameters": {
              "id": 7163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7162,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "5127:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "5114:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                    "typeString": "contract LSSVMPairETH"
                  },
                  "typeName": {
                    "id": 7161,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7160,
                      "name": "LSSVMPairETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6629,
                      "src": "5114:12:28"
                    },
                    "referencedDeclaration": 6629,
                    "src": "5114:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                      "typeString": "contract LSSVMPairETH"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5113:19:28"
            },
            "scope": 7939,
            "src": "4812:1384:28",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "LSSVMPairFactory.CreateERC20PairParams",
            "id": 7273,
            "members": [
              {
                "constant": false,
                "id": 7250,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "7308:5:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7302:11:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$12652",
                  "typeString": "contract ERC20"
                },
                "typeName": {
                  "id": 7249,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7248,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 12652,
                    "src": "7302:5:28"
                  },
                  "referencedDeclaration": 12652,
                  "src": "7302:5:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$12652",
                    "typeString": "contract ERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7253,
                "mutability": "mutable",
                "name": "nft",
                "nameLocation": "7331:3:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7323:11:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC721_$2445",
                  "typeString": "contract IERC721"
                },
                "typeName": {
                  "id": 7252,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7251,
                    "name": "IERC721",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2445,
                    "src": "7323:7:28"
                  },
                  "referencedDeclaration": 2445,
                  "src": "7323:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7256,
                "mutability": "mutable",
                "name": "bondingCurve",
                "nameLocation": "7351:12:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7344:19:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ICurve_$11580",
                  "typeString": "contract ICurve"
                },
                "typeName": {
                  "id": 7255,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7254,
                    "name": "ICurve",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11580,
                    "src": "7344:6:28"
                  },
                  "referencedDeclaration": 11580,
                  "src": "7344:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$11580",
                    "typeString": "contract ICurve"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7258,
                "mutability": "mutable",
                "name": "assetRecipient",
                "nameLocation": "7389:14:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7373:30:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 7257,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7373:15:28",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7261,
                "mutability": "mutable",
                "name": "poolType",
                "nameLocation": "7432:8:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7413:27:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_PoolType_$4585",
                  "typeString": "enum LSSVMPair.PoolType"
                },
                "typeName": {
                  "id": 7260,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7259,
                    "name": "LSSVMPair.PoolType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4585,
                    "src": "7413:18:28"
                  },
                  "referencedDeclaration": 4585,
                  "src": "7413:18:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PoolType_$4585",
                    "typeString": "enum LSSVMPair.PoolType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7263,
                "mutability": "mutable",
                "name": "delta",
                "nameLocation": "7458:5:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7450:13:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 7262,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "7450:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7265,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "7480:3:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7473:10:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 7264,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "7473:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7267,
                "mutability": "mutable",
                "name": "spotPrice",
                "nameLocation": "7501:9:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7493:17:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 7266,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "7493:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7270,
                "mutability": "mutable",
                "name": "initialNFTIDs",
                "nameLocation": "7530:13:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7520:23:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 7268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7520:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7269,
                  "nodeType": "ArrayTypeName",
                  "src": "7520:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7272,
                "mutability": "mutable",
                "name": "initialTokenBalance",
                "nameLocation": "7561:19:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7553:27:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7271,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7553:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CreateERC20PairParams",
            "nameLocation": "7270:21:28",
            "nodeType": "StructDefinition",
            "scope": 7939,
            "src": "7263:324:28",
            "visibility": "public"
          },
          {
            "body": {
              "id": 7381,
              "nodeType": "Block",
              "src": "7716:1233:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7283,
                          "name": "bondingCurveAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7029,
                          "src": "7747:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
                            "typeString": "mapping(contract ICurve => bool)"
                          }
                        },
                        "id": 7286,
                        "indexExpression": {
                          "expression": {
                            "id": 7284,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7276,
                            "src": "7767:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                              "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                            }
                          },
                          "id": 7285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bondingCurve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7256,
                          "src": "7767:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$11580",
                            "typeString": "contract ICurve"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7747:40:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f6e64696e67206375727665206e6f742077686974656c6973746564",
                        "id": 7287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7801:31:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb",
                          "typeString": "literal_string \"Bonding curve not whitelisted\""
                        },
                        "value": "Bonding curve not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb",
                          "typeString": "literal_string \"Bonding curve not whitelisted\""
                        }
                      ],
                      "id": 7282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7726:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7726:116:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7289,
                  "nodeType": "ExpressionStatement",
                  "src": "7726:116:28"
                },
                {
                  "assignments": [
                    7291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7291,
                      "mutability": "mutable",
                      "name": "template",
                      "nameLocation": "7951:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7381,
                      "src": "7943:16:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7290,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7943:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7292,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7943:16:28"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 7319,
                        "nodeType": "Block",
                        "src": "8080:135:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 7306,
                                "name": "template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7291,
                                "src": "8092:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "condition": {
                                  "id": 7307,
                                  "name": "isEnumerable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7304,
                                  "src": "8103:12:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "id": 7314,
                                      "name": "missingEnumerableERC20Template",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7018,
                                      "src": "8173:30:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                        "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                        "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                      }
                                    ],
                                    "id": 7313,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8165:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7312,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8165:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8165:39:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 7316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "8103:101:28",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 7310,
                                      "name": "enumerableERC20Template",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7015,
                                      "src": "8126:23:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                                        "typeString": "contract LSSVMPairEnumerableERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                                        "typeString": "contract LSSVMPairEnumerableERC20"
                                      }
                                    ],
                                    "id": 7309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8118:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7308,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8118:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8118:32:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8092:112:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 7318,
                            "nodeType": "ExpressionStatement",
                            "src": "8092:112:28"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7320,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 7305,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 7304,
                            "mutability": "mutable",
                            "name": "isEnumerable",
                            "nameLocation": "8066:12:28",
                            "nodeType": "VariableDeclaration",
                            "scope": 7320,
                            "src": "8061:17:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 7303,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8061:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "8060:19:28"
                      },
                      "src": "8052:163:28"
                    },
                    {
                      "block": {
                        "id": 7328,
                        "nodeType": "Block",
                        "src": "8222:73:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 7321,
                                "name": "template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7291,
                                "src": "8234:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 7324,
                                    "name": "missingEnumerableERC20Template",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7018,
                                    "src": "8253:30:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                    }
                                  ],
                                  "id": 7323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8245:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7322,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8245:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8245:39:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8234:50:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 7327,
                            "nodeType": "ExpressionStatement",
                            "src": "8234:50:28"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7329,
                      "nodeType": "TryCatchClause",
                      "src": "8216:79:28"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 7301,
                        "name": "INTERFACE_ID_ERC721_ENUMERABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7003,
                        "src": "8020:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 7296,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7276,
                                  "src": "7989:6:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                    "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                  }
                                },
                                "id": 7297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nft",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7253,
                                "src": "7989:10:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$2445",
                                  "typeString": "contract IERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721_$2445",
                                  "typeString": "contract IERC721"
                                }
                              ],
                              "id": 7295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7981:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7294,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7981:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7981:19:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7293,
                          "name": "IERC165",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3617,
                          "src": "7973:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC165_$3617_$",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 7299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7973:28:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC165_$3617",
                          "typeString": "contract IERC165"
                        }
                      },
                      "id": 7300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3616,
                      "src": "7973:46:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 7302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7973:78:28",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7330,
                  "nodeType": "TryStatement",
                  "src": "7969:326:28"
                },
                {
                  "expression": {
                    "id": 7352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7331,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7280,
                      "src": "8305:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                        "typeString": "contract LSSVMPairERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7337,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "8410:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 7338,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7276,
                                    "src": "8436:6:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                      "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                    }
                                  },
                                  "id": 7339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "bondingCurve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7256,
                                  "src": "8436:19:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurve_$11580",
                                    "typeString": "contract ICurve"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 7340,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7276,
                                    "src": "8477:6:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                      "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                    }
                                  },
                                  "id": 7341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nft",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7253,
                                  "src": "8477:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721_$2445",
                                    "typeString": "contract IERC721"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 7344,
                                        "name": "params",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7276,
                                        "src": "8515:6:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                          "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                        }
                                      },
                                      "id": 7345,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "poolType",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7261,
                                      "src": "8515:15:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_PoolType_$4585",
                                        "typeString": "enum LSSVMPair.PoolType"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_PoolType_$4585",
                                        "typeString": "enum LSSVMPair.PoolType"
                                      }
                                    ],
                                    "id": 7343,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8509:5:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 7342,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8509:5:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8509:22:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 7347,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7276,
                                    "src": "8553:6:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                      "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                    }
                                  },
                                  "id": 7348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7250,
                                  "src": "8553:12:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$12652",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ICurve_$11580",
                                    "typeString": "contract ICurve"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IERC721_$2445",
                                    "typeString": "contract IERC721"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$12652",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "expression": {
                                  "id": 7335,
                                  "name": "template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7291,
                                  "src": "8365:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 7336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cloneERC20Pair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11936,
                                "src": "8365:23:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_ILSSVMPairFactoryLike_$4552_$_t_contract$_ICurve_$11580_$_t_contract$_IERC721_$2445_$_t_uint8_$_t_contract$_ERC20_$12652_$returns$_t_address_$bound_to$_t_address_$",
                                  "typeString": "function (address,contract ILSSVMPairFactoryLike,contract ICurve,contract IERC721,uint8,contract ERC20) returns (address)"
                                }
                              },
                              "id": 7349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8365:218:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8340:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 7333,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8340:8:28",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8340:257:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 7332,
                        "name": "LSSVMPairERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "8312:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSSVMPairERC20_$6324_$",
                          "typeString": "type(contract LSSVMPairERC20)"
                        }
                      },
                      "id": 7351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8312:295:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                        "typeString": "contract LSSVMPairERC20"
                      }
                    },
                    "src": "8305:302:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                      "typeString": "contract LSSVMPairERC20"
                    }
                  },
                  "id": 7353,
                  "nodeType": "ExpressionStatement",
                  "src": "8305:302:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7355,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7280,
                        "src": "8652:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                          "typeString": "contract LSSVMPairERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 7356,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8670:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7250,
                        "src": "8670:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 7358,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8696:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nft",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7253,
                        "src": "8696:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$2445",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "expression": {
                          "id": 7360,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8720:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "assetRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7258,
                        "src": "8720:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 7362,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8755:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "delta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7263,
                        "src": "8755:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 7364,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8781:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7265,
                        "src": "8781:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "expression": {
                          "id": 7366,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8805:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "spotPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7267,
                        "src": "8805:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 7368,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8835:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialNFTIDs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7270,
                        "src": "8835:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 7370,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8869:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialTokenBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7272,
                        "src": "8869:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                          "typeString": "contract LSSVMPairERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC721_$2445",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7354,
                      "name": "_initializePairERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7821,
                      "src": "8618:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_LSSVMPairERC20_$6324_$_t_contract$_ERC20_$12652_$_t_contract$_IERC721_$2445_$_t_address_payable_$_t_uint128_$_t_uint96_$_t_uint128_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (contract LSSVMPairERC20,contract ERC20,contract IERC721,address payable,uint128,uint96,uint128,uint256[] calldata,uint256)"
                      }
                    },
                    "id": 7372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8618:287:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7373,
                  "nodeType": "ExpressionStatement",
                  "src": "8618:287:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7377,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7280,
                            "src": "8936:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                              "typeString": "contract LSSVMPairERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                              "typeString": "contract LSSVMPairERC20"
                            }
                          ],
                          "id": 7376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8928:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7375,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8928:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8928:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7374,
                      "name": "NewPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7050,
                      "src": "8920:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8920:22:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7380,
                  "nodeType": "EmitStatement",
                  "src": "8915:27:28"
                }
              ]
            },
            "functionSelector": "59722caa",
            "id": 7382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPairERC20",
            "nameLocation": "7602:15:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7276,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7649:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7382,
                  "src": "7618:37:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                    "typeString": "struct LSSVMPairFactory.CreateERC20PairParams"
                  },
                  "typeName": {
                    "id": 7275,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7274,
                      "name": "CreateERC20PairParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7273,
                      "src": "7618:21:28"
                    },
                    "referencedDeclaration": 7273,
                    "src": "7618:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_storage_ptr",
                      "typeString": "struct LSSVMPairFactory.CreateERC20PairParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7617:39:28"
            },
            "returnParameters": {
              "id": 7281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7280,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "7706:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7382,
                  "src": "7691:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                    "typeString": "contract LSSVMPairERC20"
                  },
                  "typeName": {
                    "id": 7279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7278,
                      "name": "LSSVMPairERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6324,
                      "src": "7691:14:28"
                    },
                    "referencedDeclaration": 6324,
                    "src": "7691:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                      "typeString": "contract LSSVMPairERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7690:21:28"
            },
            "scope": 7939,
            "src": "7593:1356:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4551
            ],
            "body": {
              "id": 7473,
              "nodeType": "Block",
              "src": "9439:1192:28",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PairVariant_$4514",
                      "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                    },
                    "id": 7397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7394,
                      "name": "variant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7388,
                      "src": "9453:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PairVariant_$4514",
                        "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 7395,
                        "name": "PairVariant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4514,
                        "src": "9464:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                          "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                        }
                      },
                      "id": 7396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ENUMERABLE_ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4512,
                      "src": "9464:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PairVariant_$4514",
                        "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                      }
                    },
                    "src": "9453:39:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PairVariant_$4514",
                        "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                      },
                      "id": 7415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7412,
                        "name": "variant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7388,
                        "src": "9726:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PairVariant_$4514",
                          "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 7413,
                          "name": "PairVariant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4514,
                          "src": "9737:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                            "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                          }
                        },
                        "id": 7414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "MISSING_ENUMERABLE_ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4513,
                        "src": "9737:36:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PairVariant_$4514",
                          "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                        }
                      },
                      "src": "9726:47:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PairVariant_$4514",
                          "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                        },
                        "id": 7433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7430,
                          "name": "variant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7388,
                          "src": "10014:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 7431,
                            "name": "PairVariant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4514,
                            "src": "10025:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                              "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                            }
                          },
                          "id": 7432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ENUMERABLE_ETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4510,
                          "src": "10025:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        },
                        "src": "10014:37:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          },
                          "id": 7451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 7448,
                            "name": "variant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7388,
                            "src": "10281:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PairVariant_$4514",
                              "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 7449,
                              "name": "PairVariant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4514,
                              "src": "10292:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                                "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                              }
                            },
                            "id": 7450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MISSING_ENUMERABLE_ETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4511,
                            "src": "10292:34:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PairVariant_$4514",
                              "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                            }
                          },
                          "src": "10281:45:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 7468,
                          "nodeType": "Block",
                          "src": "10559:66:28",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 7466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10609:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 7393,
                              "id": 7467,
                              "nodeType": "Return",
                              "src": "10602:12:28"
                            }
                          ]
                        },
                        "id": 7469,
                        "nodeType": "IfStatement",
                        "src": "10277:348:28",
                        "trueBody": {
                          "id": 7465,
                          "nodeType": "Block",
                          "src": "10328:225:28",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 7456,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "10425:4:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                          "typeString": "contract LSSVMPairFactory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                          "typeString": "contract LSSVMPairFactory"
                                        }
                                      ],
                                      "id": 7455,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10417:7:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 7454,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10417:7:28",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 7457,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10417:13:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 7460,
                                        "name": "missingEnumerableETHTemplate",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7012,
                                        "src": "10460:28:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                          "typeString": "contract LSSVMPairMissingEnumerableETH"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                          "typeString": "contract LSSVMPairMissingEnumerableETH"
                                        }
                                      ],
                                      "id": 7459,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10452:7:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 7458,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10452:7:28",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 7461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10452:37:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 7462,
                                    "name": "potentialPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7385,
                                    "src": "10511:13:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 7452,
                                    "name": "LSSVMPairCloner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11965,
                                    "src": "10365:15:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_LSSVMPairCloner_$11965_$",
                                      "typeString": "type(library LSSVMPairCloner)"
                                    }
                                  },
                                  "id": 7453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "isETHPairClone",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11950,
                                  "src": "10365:30:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address,address,address) view returns (bool)"
                                  }
                                },
                                "id": 7463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10365:177:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 7393,
                              "id": 7464,
                              "nodeType": "Return",
                              "src": "10342:200:28"
                            }
                          ]
                        }
                      },
                      "id": 7470,
                      "nodeType": "IfStatement",
                      "src": "10010:615:28",
                      "trueBody": {
                        "id": 7447,
                        "nodeType": "Block",
                        "src": "10053:218:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 7438,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "10150:4:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                        "typeString": "contract LSSVMPairFactory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                        "typeString": "contract LSSVMPairFactory"
                                      }
                                    ],
                                    "id": 7437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10142:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7436,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10142:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10142:13:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 7442,
                                      "name": "enumerableETHTemplate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7009,
                                      "src": "10185:21:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                                        "typeString": "contract LSSVMPairEnumerableETH"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                                        "typeString": "contract LSSVMPairEnumerableETH"
                                      }
                                    ],
                                    "id": 7441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10177:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7440,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10177:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10177:30:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 7444,
                                  "name": "potentialPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7385,
                                  "src": "10229:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 7434,
                                  "name": "LSSVMPairCloner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11965,
                                  "src": "10090:15:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_LSSVMPairCloner_$11965_$",
                                    "typeString": "type(library LSSVMPairCloner)"
                                  }
                                },
                                "id": 7435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isETHPairClone",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11950,
                                "src": "10090:30:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address,address) view returns (bool)"
                                }
                              },
                              "id": 7445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10090:170:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 7393,
                            "id": 7446,
                            "nodeType": "Return",
                            "src": "10067:193:28"
                          }
                        ]
                      }
                    },
                    "id": 7471,
                    "nodeType": "IfStatement",
                    "src": "9722:903:28",
                    "trueBody": {
                      "id": 7429,
                      "nodeType": "Block",
                      "src": "9775:229:28",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7420,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "9874:4:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                      "typeString": "contract LSSVMPairFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                      "typeString": "contract LSSVMPairFactory"
                                    }
                                  ],
                                  "id": 7419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9866:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7418,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9866:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9866:13:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 7424,
                                    "name": "missingEnumerableERC20Template",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7018,
                                    "src": "9909:30:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                    }
                                  ],
                                  "id": 7423,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9901:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7422,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9901:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9901:39:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 7426,
                                "name": "potentialPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7385,
                                "src": "9962:13:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 7416,
                                "name": "LSSVMPairCloner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11965,
                                "src": "9812:15:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LSSVMPairCloner_$11965_$",
                                  "typeString": "type(library LSSVMPairCloner)"
                                }
                              },
                              "id": 7417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isERC20PairClone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11964,
                              "src": "9812:32:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address,address) view returns (bool)"
                              }
                            },
                            "id": 7427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9812:181:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 7393,
                          "id": 7428,
                          "nodeType": "Return",
                          "src": "9789:204:28"
                        }
                      ]
                    }
                  },
                  "id": 7472,
                  "nodeType": "IfStatement",
                  "src": "9449:1176:28",
                  "trueBody": {
                    "id": 7411,
                    "nodeType": "Block",
                    "src": "9494:222:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7402,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "9593:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  }
                                ],
                                "id": 7401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9585:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7400,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9585:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9585:13:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 7406,
                                  "name": "enumerableERC20Template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7015,
                                  "src": "9628:23:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                                    "typeString": "contract LSSVMPairEnumerableERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                                    "typeString": "contract LSSVMPairEnumerableERC20"
                                  }
                                ],
                                "id": 7405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9620:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7404,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9620:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9620:32:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7408,
                              "name": "potentialPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7385,
                              "src": "9674:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7398,
                              "name": "LSSVMPairCloner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11965,
                              "src": "9531:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LSSVMPairCloner_$11965_$",
                                "typeString": "type(library LSSVMPairCloner)"
                              }
                            },
                            "id": 7399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isERC20PairClone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11964,
                            "src": "9531:32:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address,address) view returns (bool)"
                            }
                          },
                          "id": 7409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9531:174:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 7393,
                        "id": 7410,
                        "nodeType": "Return",
                        "src": "9508:197:28"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7383,
              "nodeType": "StructuredDocumentation",
              "src": "8955:347:28",
              "text": "@notice Checks if an address is a LSSVMPair. Uses the fact that the pairs are EIP-1167 minimal proxies.\n@param potentialPair The address to check\n@param variant The pair variant (NFT is enumerable or not, pair uses ETH or ERC20)\n@return True if the address is the specified pair variant, false otherwise"
            },
            "functionSelector": "08f25a8f",
            "id": 7474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPair",
            "nameLocation": "9316:6:28",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9403:8:28"
            },
            "parameters": {
              "id": 7389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7385,
                  "mutability": "mutable",
                  "name": "potentialPair",
                  "nameLocation": "9331:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7474,
                  "src": "9323:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9323:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7388,
                  "mutability": "mutable",
                  "name": "variant",
                  "nameLocation": "9358:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7474,
                  "src": "9346:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PairVariant_$4514",
                    "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                  },
                  "typeName": {
                    "id": 7387,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7386,
                      "name": "PairVariant",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4514,
                      "src": "9346:11:28"
                    },
                    "referencedDeclaration": 4514,
                    "src": "9346:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PairVariant_$4514",
                      "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9322:44:28"
            },
            "returnParameters": {
              "id": 7393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7392,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7474,
                  "src": "9429:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7391,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9429:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9428:6:28"
            },
            "scope": 7939,
            "src": "9307:1324:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7478,
              "nodeType": "Block",
              "src": "10751:2:28",
              "statements": []
            },
            "documentation": {
              "id": 7475,
              "nodeType": "StructuredDocumentation",
              "src": "10637:82:28",
              "text": "@notice Allows receiving ETH in order to receive protocol fees"
            },
            "id": 7479,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10731:2:28"
            },
            "returnParameters": {
              "id": 7477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10751:0:28"
            },
            "scope": 7939,
            "src": "10724:29:28",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7495,
              "nodeType": "Block",
              "src": "10978:76:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7490,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "11033:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                "typeString": "contract LSSVMPairFactory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                "typeString": "contract LSSVMPairFactory"
                              }
                            ],
                            "id": 7489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11025:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7488,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11025:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11025:13:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "11025:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7485,
                        "name": "protocolFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7021,
                        "src": "10988:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 7487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12674,
                      "src": "10988:36:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10988:59:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7494,
                  "nodeType": "ExpressionStatement",
                  "src": "10988:59:28"
                }
              ]
            },
            "documentation": {
              "id": 7480,
              "nodeType": "StructuredDocumentation",
              "src": "10799:120:28",
              "text": "@notice Withdraws the ETH balance to the protocol fee recipient.\nOnly callable by the owner."
            },
            "functionSelector": "b483eddc",
            "id": 7496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7482,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "10968:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "10968:9:28"
              }
            ],
            "name": "withdrawETHProtocolFees",
            "nameLocation": "10933:23:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10956:2:28"
            },
            "returnParameters": {
              "id": 7484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10978:0:28"
            },
            "scope": 7939,
            "src": "10924:130:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7514,
              "nodeType": "Block",
              "src": "11375:65:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7510,
                        "name": "protocolFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7021,
                        "src": "11404:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7511,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7502,
                        "src": "11426:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7507,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7500,
                        "src": "11385:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12716,
                      "src": "11385:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$12652_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$12652_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 7512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11385:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7513,
                  "nodeType": "ExpressionStatement",
                  "src": "11385:48:28"
                }
              ]
            },
            "documentation": {
              "id": 7497,
              "nodeType": "StructuredDocumentation",
              "src": "11060:207:28",
              "text": "@notice Withdraws ERC20 tokens to the protocol fee recipient. Only callable by the owner.\n@param token The token to transfer\n@param amount The amount of tokens to transfer"
            },
            "functionSelector": "cc5bc20b",
            "id": 7515,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7505,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7504,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "11361:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "11361:9:28"
              }
            ],
            "name": "withdrawERC20ProtocolFees",
            "nameLocation": "11281:25:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7500,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "11313:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "11307:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$12652",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7499,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7498,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12652,
                      "src": "11307:5:28"
                    },
                    "referencedDeclaration": 12652,
                    "src": "11307:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$12652",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7502,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11328:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "11320:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11320:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11306:29:28"
            },
            "returnParameters": {
              "id": 7506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11375:0:28"
            },
            "scope": 7939,
            "src": "11272:168:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7541,
              "nodeType": "Block",
              "src": "11723:192:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7524,
                          "name": "_protocolFeeRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7518,
                          "src": "11741:21:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11774:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11766:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7525,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11766:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11766:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11741:35:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "302061646472657373",
                        "id": 7530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11778:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74a398fb97c73fe516416e1dc2b2d1c836807b00191a179b39968d0a8eea7be9",
                          "typeString": "literal_string \"0 address\""
                        },
                        "value": "0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74a398fb97c73fe516416e1dc2b2d1c836807b00191a179b39968d0a8eea7be9",
                          "typeString": "literal_string \"0 address\""
                        }
                      ],
                      "id": 7523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11733:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11733:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7532,
                  "nodeType": "ExpressionStatement",
                  "src": "11733:57:28"
                },
                {
                  "expression": {
                    "id": 7535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7533,
                      "name": "protocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7021,
                      "src": "11800:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7534,
                      "name": "_protocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7518,
                      "src": "11823:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "11800:44:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7536,
                  "nodeType": "ExpressionStatement",
                  "src": "11800:44:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7538,
                        "name": "_protocolFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7518,
                        "src": "11886:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7537,
                      "name": "ProtocolFeeRecipientUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7062,
                      "src": "11859:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11859:49:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7540,
                  "nodeType": "EmitStatement",
                  "src": "11854:54:28"
                }
              ]
            },
            "documentation": {
              "id": 7516,
              "nodeType": "StructuredDocumentation",
              "src": "11446:158:28",
              "text": "@notice Changes the protocol fee recipient address. Only callable by the owner.\n@param _protocolFeeRecipient The new fee recipient"
            },
            "functionSelector": "514f0330",
            "id": 7542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7521,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7520,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "11709:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "11709:9:28"
              }
            ],
            "name": "changeProtocolFeeRecipient",
            "nameLocation": "11618:26:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7518,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nameLocation": "11661:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7542,
                  "src": "11645:37:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11645:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11644:39:28"
            },
            "returnParameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11723:0:28"
            },
            "scope": 7939,
            "src": "11609:306:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7565,
              "nodeType": "Block",
              "src": "12200:207:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7551,
                          "name": "_protocolFeeMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7545,
                          "src": "12218:22:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 7552,
                          "name": "MAX_PROTOCOL_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7006,
                          "src": "12244:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12218:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46656520746f6f206c61726765",
                        "id": 7554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12262:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01",
                          "typeString": "literal_string \"Fee too large\""
                        },
                        "value": "Fee too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01",
                          "typeString": "literal_string \"Fee too large\""
                        }
                      ],
                      "id": 7550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12210:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12210:68:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7556,
                  "nodeType": "ExpressionStatement",
                  "src": "12210:68:28"
                },
                {
                  "expression": {
                    "id": 7559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7557,
                      "name": "protocolFeeMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7024,
                      "src": "12288:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7558,
                      "name": "_protocolFeeMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7545,
                      "src": "12312:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12288:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7560,
                  "nodeType": "ExpressionStatement",
                  "src": "12288:46:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7562,
                        "name": "_protocolFeeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7545,
                        "src": "12377:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7561,
                      "name": "ProtocolFeeMultiplierUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7066,
                      "src": "12349:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12349:51:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7564,
                  "nodeType": "EmitStatement",
                  "src": "12344:56:28"
                }
              ]
            },
            "documentation": {
              "id": 7543,
              "nodeType": "StructuredDocumentation",
              "src": "11921:166:28",
              "text": "@notice Changes the protocol fee multiplier. Only callable by the owner.\n@param _protocolFeeMultiplier The new fee multiplier, 18 decimals"
            },
            "functionSelector": "9c3c11d2",
            "id": 7566,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7547,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "12186:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "12186:9:28"
              }
            ],
            "name": "changeProtocolFeeMultiplier",
            "nameLocation": "12101:27:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7545,
                  "mutability": "mutable",
                  "name": "_protocolFeeMultiplier",
                  "nameLocation": "12137:22:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7566,
                  "src": "12129:30:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12129:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12128:32:28"
            },
            "returnParameters": {
              "id": 7549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12200:0:28"
            },
            "scope": 7939,
            "src": "12092:315:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7588,
              "nodeType": "Block",
              "src": "12766:126:28",
              "statements": [
                {
                  "expression": {
                    "id": 7581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7577,
                        "name": "bondingCurveAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7029,
                        "src": "12776:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
                          "typeString": "mapping(contract ICurve => bool)"
                        }
                      },
                      "id": 7579,
                      "indexExpression": {
                        "id": 7578,
                        "name": "bondingCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "12796:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$11580",
                          "typeString": "contract ICurve"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12776:33:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7580,
                      "name": "isAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7572,
                      "src": "12812:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12776:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7582,
                  "nodeType": "ExpressionStatement",
                  "src": "12776:45:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7584,
                        "name": "bondingCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "12861:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$11580",
                          "typeString": "contract ICurve"
                        }
                      },
                      {
                        "id": 7585,
                        "name": "isAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7572,
                        "src": "12875:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICurve_$11580",
                          "typeString": "contract ICurve"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7583,
                      "name": "BondingCurveStatusUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7073,
                      "src": "12836:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ICurve_$11580_$_t_bool_$returns$__$",
                        "typeString": "function (contract ICurve,bool)"
                      }
                    },
                    "id": 7586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12836:49:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7587,
                  "nodeType": "EmitStatement",
                  "src": "12831:54:28"
                }
              ]
            },
            "documentation": {
              "id": 7567,
              "nodeType": "StructuredDocumentation",
              "src": "12413:240:28",
              "text": "@notice Sets the whitelist status of a bonding curve contract. Only callable by the owner.\n@param bondingCurve The bonding curve contract\n@param isAllowed True to whitelist, false to remove from whitelist"
            },
            "functionSelector": "4bf107c1",
            "id": 7589,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7575,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7574,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "12752:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "12752:9:28"
              }
            ],
            "name": "setBondingCurveAllowed",
            "nameLocation": "12667:22:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7570,
                  "mutability": "mutable",
                  "name": "bondingCurve",
                  "nameLocation": "12697:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7589,
                  "src": "12690:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$11580",
                    "typeString": "contract ICurve"
                  },
                  "typeName": {
                    "id": 7569,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7568,
                      "name": "ICurve",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11580,
                      "src": "12690:6:28"
                    },
                    "referencedDeclaration": 11580,
                    "src": "12690:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$11580",
                      "typeString": "contract ICurve"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7572,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "12716:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7589,
                  "src": "12711:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7571,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12711:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12689:37:28"
            },
            "returnParameters": {
              "id": 7576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12766:0:28"
            },
            "scope": 7939,
            "src": "12658:234:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7624,
              "nodeType": "Block",
              "src": "13262:335:28",
              "statements": [
                {
                  "condition": {
                    "id": 7599,
                    "name": "isAllowed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7594,
                    "src": "13332:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7612,
                  "nodeType": "IfStatement",
                  "src": "13328:165:28",
                  "trueBody": {
                    "id": 7611,
                    "nodeType": "Block",
                    "src": "13343:150:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "13382:49:28",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 7601,
                                    "name": "routerStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7046,
                                    "src": "13383:12:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_LSSVMRouter_$10184_$_t_struct$_RouterStatus_$7039_storage_$",
                                      "typeString": "mapping(contract LSSVMRouter => struct LSSVMPairFactory.RouterStatus storage ref)"
                                    }
                                  },
                                  "id": 7605,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "id": 7603,
                                        "name": "target",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7592,
                                        "src": "13408:6:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 7602,
                                      "name": "LSSVMRouter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10184,
                                      "src": "13396:11:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_LSSVMRouter_$10184_$",
                                        "typeString": "type(contract LSSVMRouter)"
                                      }
                                    },
                                    "id": 7604,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13396:19:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                                      "typeString": "contract LSSVMRouter"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13383:33:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RouterStatus_$7039_storage",
                                    "typeString": "struct LSSVMPairFactory.RouterStatus storage ref"
                                  }
                                },
                                "id": 7606,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "wasEverAllowed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7038,
                                "src": "13383:48:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e27742063616c6c20726f75746572",
                              "id": 7608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13449:19:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a",
                                "typeString": "literal_string \"Can't call router\""
                              },
                              "value": "Can't call router"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a",
                                "typeString": "literal_string \"Can't call router\""
                              }
                            ],
                            "id": 7600,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "13357:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13357:125:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7610,
                        "nodeType": "ExpressionStatement",
                        "src": "13357:125:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 7617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7613,
                        "name": "callAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7034,
                        "src": "13503:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7615,
                      "indexExpression": {
                        "id": 7614,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7592,
                        "src": "13515:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13503:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7616,
                      "name": "isAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7594,
                      "src": "13525:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13503:31:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7618,
                  "nodeType": "ExpressionStatement",
                  "src": "13503:31:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7620,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7592,
                        "src": "13572:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7621,
                        "name": "isAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7594,
                        "src": "13580:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7619,
                      "name": "CallTargetStatusUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7079,
                      "src": "13549:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 7622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13549:41:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7623,
                  "nodeType": "EmitStatement",
                  "src": "13544:46:28"
                }
              ]
            },
            "documentation": {
              "id": 7590,
              "nodeType": "StructuredDocumentation",
              "src": "12898:256:28",
              "text": "@notice Sets the whitelist status of a contract to be called arbitrarily by a pair.\nOnly callable by the owner.\n@param target The target contract\n@param isAllowed True to whitelist, false to remove from whitelist"
            },
            "functionSelector": "ebd0f693",
            "id": 7625,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7597,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7596,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "13248:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "13248:9:28"
              }
            ],
            "name": "setCallAllowed",
            "nameLocation": "13168:14:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7592,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "13199:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7625,
                  "src": "13183:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13183:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7594,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "13212:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7625,
                  "src": "13207:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7593,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13207:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13182:40:28"
            },
            "returnParameters": {
              "id": 7598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13262:0:28"
            },
            "scope": 7939,
            "src": "13159:438:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7664,
              "nodeType": "Block",
              "src": "13904:356:28",
              "statements": [
                {
                  "condition": {
                    "id": 7636,
                    "name": "isAllowed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7631,
                    "src": "13980:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7649,
                  "nodeType": "IfStatement",
                  "src": "13976:100:28",
                  "trueBody": {
                    "id": 7648,
                    "nodeType": "Block",
                    "src": "13991:85:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "14013:30:28",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 7638,
                                  "name": "callAllowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7034,
                                  "src": "14014:11:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 7643,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 7641,
                                      "name": "_router",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7629,
                                      "src": "14034:7:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                                        "typeString": "contract LSSVMRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                                        "typeString": "contract LSSVMRouter"
                                      }
                                    ],
                                    "id": 7640,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14026:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7639,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14026:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14026:16:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14014:29:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e27742063616c6c20726f75746572",
                              "id": 7645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14045:19:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a",
                                "typeString": "literal_string \"Can't call router\""
                              },
                              "value": "Can't call router"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a",
                                "typeString": "literal_string \"Can't call router\""
                              }
                            ],
                            "id": 7637,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "14005:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14005:60:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7647,
                        "nodeType": "ExpressionStatement",
                        "src": "14005:60:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 7657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7650,
                        "name": "routerStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7046,
                        "src": "14085:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_LSSVMRouter_$10184_$_t_struct$_RouterStatus_$7039_storage_$",
                          "typeString": "mapping(contract LSSVMRouter => struct LSSVMPairFactory.RouterStatus storage ref)"
                        }
                      },
                      "id": 7652,
                      "indexExpression": {
                        "id": 7651,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7629,
                        "src": "14098:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                          "typeString": "contract LSSVMRouter"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14085:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RouterStatus_$7039_storage",
                        "typeString": "struct LSSVMPairFactory.RouterStatus storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7654,
                          "name": "isAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7631,
                          "src": "14145:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 7655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14184:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7653,
                        "name": "RouterStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7039,
                        "src": "14109:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RouterStatus_$7039_storage_ptr_$",
                          "typeString": "type(struct LSSVMPairFactory.RouterStatus storage pointer)"
                        }
                      },
                      "id": 7656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "allowed",
                        "wasEverAllowed"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "14109:90:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RouterStatus_$7039_memory_ptr",
                        "typeString": "struct LSSVMPairFactory.RouterStatus memory"
                      }
                    },
                    "src": "14085:114:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RouterStatus_$7039_storage",
                      "typeString": "struct LSSVMPairFactory.RouterStatus storage ref"
                    }
                  },
                  "id": 7658,
                  "nodeType": "ExpressionStatement",
                  "src": "14085:114:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7660,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7629,
                        "src": "14234:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                          "typeString": "contract LSSVMRouter"
                        }
                      },
                      {
                        "id": 7661,
                        "name": "isAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7631,
                        "src": "14243:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                          "typeString": "contract LSSVMRouter"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7659,
                      "name": "RouterStatusUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7086,
                      "src": "14215:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_LSSVMRouter_$10184_$_t_bool_$returns$__$",
                        "typeString": "function (contract LSSVMRouter,bool)"
                      }
                    },
                    "id": 7662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14215:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7663,
                  "nodeType": "EmitStatement",
                  "src": "14210:43:28"
                }
              ]
            },
            "documentation": {
              "id": 7626,
              "nodeType": "StructuredDocumentation",
              "src": "13603:194:28",
              "text": "@notice Updates the router whitelist. Only callable by the owner.\n@param _router The router\n@param isAllowed True to whitelist, false to remove from whitelist"
            },
            "functionSelector": "6cc88edb",
            "id": 7665,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7633,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "13890:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "13890:9:28"
              }
            ],
            "name": "setRouterAllowed",
            "nameLocation": "13811:16:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7629,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "13840:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7665,
                  "src": "13828:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                    "typeString": "contract LSSVMRouter"
                  },
                  "typeName": {
                    "id": 7628,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7627,
                      "name": "LSSVMRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10184,
                      "src": "13828:11:28"
                    },
                    "referencedDeclaration": 10184,
                    "src": "13828:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                      "typeString": "contract LSSVMRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7631,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "13854:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7665,
                  "src": "13849:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7630,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13849:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13827:37:28"
            },
            "returnParameters": {
              "id": 7635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13904:0:28"
            },
            "scope": 7939,
            "src": "13802:458:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7740,
              "nodeType": "Block",
              "src": "14559:574:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "14613:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14613:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7691,
                        "name": "_assetRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7674,
                        "src": "14625:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7692,
                        "name": "_delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7676,
                        "src": "14642:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 7693,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7678,
                        "src": "14650:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 7694,
                        "name": "_spotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7680,
                        "src": "14656:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 7686,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7669,
                        "src": "14596:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                          "typeString": "contract LSSVMPairETH"
                        }
                      },
                      "id": 7688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4751,
                      "src": "14596:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_payable_$_t_uint128_$_t_uint96_$_t_uint128_$returns$__$",
                        "typeString": "function (address,address payable,uint128,uint96,uint128) payable external"
                      }
                    },
                    "id": 7695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14596:71:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7696,
                  "nodeType": "ExpressionStatement",
                  "src": "14596:71:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7705,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "14758:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "14758:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7701,
                                "name": "_pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7669,
                                "src": "14734:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                                  "typeString": "contract LSSVMPairETH"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                                  "typeString": "contract LSSVMPairETH"
                                }
                              ],
                              "id": 7700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14726:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7699,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14726:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14726:14:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14718:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 7697,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14718:8:28",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14718:23:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 7704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12674,
                      "src": "14718:39:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14718:50:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7708,
                  "nodeType": "ExpressionStatement",
                  "src": "14718:50:28"
                },
                {
                  "assignments": [
                    7710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7710,
                      "mutability": "mutable",
                      "name": "numNFTs",
                      "nameLocation": "14840:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7740,
                      "src": "14832:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14832:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7713,
                  "initialValue": {
                    "expression": {
                      "id": 7711,
                      "name": "_initialNFTIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7683,
                      "src": "14850:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 7712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "14850:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14832:39:28"
                },
                {
                  "body": {
                    "id": 7738,
                    "nodeType": "Block",
                    "src": "14912:215:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7723,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14965:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14965:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 7727,
                                  "name": "_pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7669,
                                  "src": "15001:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                                    "typeString": "contract LSSVMPairETH"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                                    "typeString": "contract LSSVMPairETH"
                                  }
                                ],
                                "id": 7726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14993:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7725,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14993:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14993:14:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 7729,
                                "name": "_initialNFTIDs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7683,
                                "src": "15025:14:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 7731,
                              "indexExpression": {
                                "id": 7730,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7715,
                                "src": "15040:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15025:17:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7720,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7672,
                              "src": "14926:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2445",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 7722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2388,
                            "src": "14926:21:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 7732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14926:130:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7733,
                        "nodeType": "ExpressionStatement",
                        "src": "14926:130:28"
                      },
                      {
                        "id": 7737,
                        "nodeType": "UncheckedBlock",
                        "src": "15071:46:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "15099:3:28",
                              "subExpression": {
                                "id": 7734,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7715,
                                "src": "15101:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7736,
                            "nodeType": "ExpressionStatement",
                            "src": "15099:3:28"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7717,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7715,
                      "src": "14897:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7718,
                      "name": "numNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7710,
                      "src": "14901:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14897:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7739,
                  "initializationExpression": {
                    "assignments": [
                      7715
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7715,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14894:1:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 7739,
                        "src": "14886:9:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7714,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14886:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7716,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14886:9:28"
                  },
                  "nodeType": "ForStatement",
                  "src": "14881:246:28"
                }
              ]
            },
            "documentation": {
              "id": 7666,
              "nodeType": "StructuredDocumentation",
              "src": "14266:37:28",
              "text": " Internal functions"
            },
            "id": 7741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializePairETH",
            "nameLocation": "14318:18:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7669,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "14359:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14346:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                    "typeString": "contract LSSVMPairETH"
                  },
                  "typeName": {
                    "id": 7668,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7667,
                      "name": "LSSVMPairETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6629,
                      "src": "14346:12:28"
                    },
                    "referencedDeclaration": 6629,
                    "src": "14346:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                      "typeString": "contract LSSVMPairETH"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7672,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "14382:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14374:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 7671,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7670,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2445,
                      "src": "14374:7:28"
                    },
                    "referencedDeclaration": 2445,
                    "src": "14374:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2445",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7674,
                  "mutability": "mutable",
                  "name": "_assetRecipient",
                  "nameLocation": "14412:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14396:31:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14396:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7676,
                  "mutability": "mutable",
                  "name": "_delta",
                  "nameLocation": "14445:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14437:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7675,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14437:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7678,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "14468:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14461:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7677,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "14461:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7680,
                  "mutability": "mutable",
                  "name": "_spotPrice",
                  "nameLocation": "14490:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14482:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7679,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14482:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7683,
                  "mutability": "mutable",
                  "name": "_initialNFTIDs",
                  "nameLocation": "14529:14:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14510:33:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7681,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14510:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7682,
                    "nodeType": "ArrayTypeName",
                    "src": "14510:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14336:213:28"
            },
            "returnParameters": {
              "id": 7685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14559:0:28"
            },
            "scope": 7939,
            "src": "14309:824:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7820,
              "nodeType": "Block",
              "src": "15453:646:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "15507:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15507:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7771,
                        "name": "_assetRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7752,
                        "src": "15519:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7772,
                        "name": "_delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7754,
                        "src": "15536:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 7773,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7756,
                        "src": "15544:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 7774,
                        "name": "_spotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7758,
                        "src": "15550:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 7766,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7744,
                        "src": "15490:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                          "typeString": "contract LSSVMPairERC20"
                        }
                      },
                      "id": 7768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4751,
                      "src": "15490:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_payable_$_t_uint128_$_t_uint96_$_t_uint128_$returns$__$",
                        "typeString": "function (address,address payable,uint128,uint96,uint128) payable external"
                      }
                    },
                    "id": 7775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15490:71:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7776,
                  "nodeType": "ExpressionStatement",
                  "src": "15490:71:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7780,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "15652:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15652:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7784,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7744,
                            "src": "15684:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                              "typeString": "contract LSSVMPairERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                              "typeString": "contract LSSVMPairERC20"
                            }
                          ],
                          "id": 7783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15676:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7782,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15676:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15676:14:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7786,
                        "name": "_initialTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7763,
                        "src": "15704:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7777,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7747,
                        "src": "15615:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12696,
                      "src": "15615:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$12652_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$12652_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 7787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15615:119:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7788,
                  "nodeType": "ExpressionStatement",
                  "src": "15615:119:28"
                },
                {
                  "assignments": [
                    7790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7790,
                      "mutability": "mutable",
                      "name": "numNFTs",
                      "nameLocation": "15806:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7820,
                      "src": "15798:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7789,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15798:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7793,
                  "initialValue": {
                    "expression": {
                      "id": 7791,
                      "name": "_initialNFTIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7761,
                      "src": "15816:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 7792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "15816:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15798:39:28"
                },
                {
                  "body": {
                    "id": 7818,
                    "nodeType": "Block",
                    "src": "15878:215:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7803,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "15931:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15931:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 7807,
                                  "name": "_pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7744,
                                  "src": "15967:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                                    "typeString": "contract LSSVMPairERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                                    "typeString": "contract LSSVMPairERC20"
                                  }
                                ],
                                "id": 7806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15959:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7805,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15959:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15959:14:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 7809,
                                "name": "_initialNFTIDs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7761,
                                "src": "15991:14:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 7811,
                              "indexExpression": {
                                "id": 7810,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7795,
                                "src": "16006:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15991:17:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7800,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7750,
                              "src": "15892:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2445",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 7802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2388,
                            "src": "15892:21:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 7812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15892:130:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7813,
                        "nodeType": "ExpressionStatement",
                        "src": "15892:130:28"
                      },
                      {
                        "id": 7817,
                        "nodeType": "UncheckedBlock",
                        "src": "16037:46:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16065:3:28",
                              "subExpression": {
                                "id": 7814,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7795,
                                "src": "16067:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7816,
                            "nodeType": "ExpressionStatement",
                            "src": "16065:3:28"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7797,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7795,
                      "src": "15863:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7798,
                      "name": "numNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7790,
                      "src": "15867:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15863:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7819,
                  "initializationExpression": {
                    "assignments": [
                      7795
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7795,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15860:1:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 7819,
                        "src": "15852:9:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7794,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15852:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7796,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15852:9:28"
                  },
                  "nodeType": "ForStatement",
                  "src": "15847:246:28"
                }
              ]
            },
            "id": 7821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializePairERC20",
            "nameLocation": "15148:20:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7744,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "15193:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15178:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                    "typeString": "contract LSSVMPairERC20"
                  },
                  "typeName": {
                    "id": 7743,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7742,
                      "name": "LSSVMPairERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6324,
                      "src": "15178:14:28"
                    },
                    "referencedDeclaration": 6324,
                    "src": "15178:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                      "typeString": "contract LSSVMPairERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7747,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "15214:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15208:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$12652",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7746,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7745,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12652,
                      "src": "15208:5:28"
                    },
                    "referencedDeclaration": 12652,
                    "src": "15208:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$12652",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7750,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "15238:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15230:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 7749,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7748,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2445,
                      "src": "15230:7:28"
                    },
                    "referencedDeclaration": 2445,
                    "src": "15230:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2445",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7752,
                  "mutability": "mutable",
                  "name": "_assetRecipient",
                  "nameLocation": "15268:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15252:31:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15252:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7754,
                  "mutability": "mutable",
                  "name": "_delta",
                  "nameLocation": "15301:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15293:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7753,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "15293:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7756,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "15324:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15317:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7755,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "15317:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7758,
                  "mutability": "mutable",
                  "name": "_spotPrice",
                  "nameLocation": "15346:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15338:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7757,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "15338:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7761,
                  "mutability": "mutable",
                  "name": "_initialNFTIDs",
                  "nameLocation": "15385:14:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15366:33:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7759,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15366:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7760,
                    "nodeType": "ArrayTypeName",
                    "src": "15366:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7763,
                  "mutability": "mutable",
                  "name": "_initialTokenBalance",
                  "nameLocation": "15417:20:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15409:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15409:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15168:275:28"
            },
            "returnParameters": {
              "id": 7765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15453:0:28"
            },
            "scope": 7939,
            "src": "15139:960:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7890,
              "nodeType": "Block",
              "src": "16360:608:28",
              "statements": [
                {
                  "assignments": [
                    7834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7834,
                      "mutability": "mutable",
                      "name": "numNFTs",
                      "nameLocation": "16428:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7890,
                      "src": "16420:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7833,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16420:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7837,
                  "initialValue": {
                    "expression": {
                      "id": 7835,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7828,
                      "src": "16438:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 7836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "16438:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16420:28:28"
                },
                {
                  "body": {
                    "id": 7859,
                    "nodeType": "Block",
                    "src": "16489:137:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7847,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "16525:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16525:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7849,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7830,
                              "src": "16537:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 7850,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7828,
                                "src": "16548:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 7852,
                              "indexExpression": {
                                "id": 7851,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7839,
                                "src": "16552:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16548:6:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7844,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7825,
                              "src": "16503:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2445",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 7846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2388,
                            "src": "16503:21:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 7853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16503:52:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7854,
                        "nodeType": "ExpressionStatement",
                        "src": "16503:52:28"
                      },
                      {
                        "id": 7858,
                        "nodeType": "UncheckedBlock",
                        "src": "16570:46:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16598:3:28",
                              "subExpression": {
                                "id": 7855,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7839,
                                "src": "16600:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7857,
                            "nodeType": "ExpressionStatement",
                            "src": "16598:3:28"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7841,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7839,
                      "src": "16474:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7842,
                      "name": "numNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7834,
                      "src": "16478:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16474:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7860,
                  "initializationExpression": {
                    "assignments": [
                      7839
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7839,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16471:1:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 7860,
                        "src": "16463:9:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16463:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7840,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16463:9:28"
                  },
                  "nodeType": "ForStatement",
                  "src": "16458:168:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 7883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 7877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 7862,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7830,
                              "src": "16659:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 7863,
                                "name": "PairVariant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4514,
                                "src": "16670:11:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                                  "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                                }
                              },
                              "id": 7864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ENUMERABLE_ERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4512,
                              "src": "16670:28:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PairVariant_$4514",
                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_PairVariant_$4514",
                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                              }
                            ],
                            "id": 7861,
                            "name": "isPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7474,
                            "src": "16652:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                              "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                            }
                          },
                          "id": 7865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16652:47:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 7867,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7830,
                              "src": "16722:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 7868,
                                "name": "PairVariant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4514,
                                "src": "16733:11:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                                  "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                                }
                              },
                              "id": 7869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ENUMERABLE_ETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4510,
                              "src": "16733:26:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PairVariant_$4514",
                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_PairVariant_$4514",
                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                              }
                            ],
                            "id": 7866,
                            "name": "isPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7474,
                            "src": "16715:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                              "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                            }
                          },
                          "id": 7870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16715:45:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "16652:108:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 7873,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7830,
                            "src": "16783:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 7874,
                              "name": "PairVariant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4514,
                              "src": "16794:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                                "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                              }
                            },
                            "id": 7875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MISSING_ENUMERABLE_ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4513,
                            "src": "16794:36:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PairVariant_$4514",
                              "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_PairVariant_$4514",
                              "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                            }
                          ],
                          "id": 7872,
                          "name": "isPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7474,
                          "src": "16776:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                            "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                          }
                        },
                        "id": 7876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16776:55:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "16652:179:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 7879,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7830,
                          "src": "16854:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 7880,
                            "name": "PairVariant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4514,
                            "src": "16865:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                              "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                            }
                          },
                          "id": 7881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MISSING_ENUMERABLE_ETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4511,
                          "src": "16865:34:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        ],
                        "id": 7878,
                        "name": "isPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "16847:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                          "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                        }
                      },
                      "id": 7882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16847:53:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16652:248:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7889,
                  "nodeType": "IfStatement",
                  "src": "16635:327:28",
                  "trueBody": {
                    "id": 7888,
                    "nodeType": "Block",
                    "src": "16911:51:28",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7885,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7830,
                              "src": "16941:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7884,
                            "name": "NFTDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7058,
                            "src": "16930:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 7886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16930:21:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7887,
                        "nodeType": "EmitStatement",
                        "src": "16925:26:28"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7822,
              "nodeType": "StructuredDocumentation",
              "src": "16105:133:28",
              "text": "@dev Used to deposit NFTs into a pair after creation and emit an event for indexing (if recipient is indeed a pair)"
            },
            "functionSelector": "2cdb394b",
            "id": 7891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNFTs",
            "nameLocation": "16252:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7825,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "16281:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7891,
                  "src": "16273:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 7824,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7823,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2445,
                      "src": "16273:7:28"
                    },
                    "referencedDeclaration": 2445,
                    "src": "16273:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2445",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7828,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "16314:3:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7891,
                  "src": "16295:22:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7826,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16295:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7827,
                    "nodeType": "ArrayTypeName",
                    "src": "16295:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7830,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "16335:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7891,
                  "src": "16327:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16327:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16263:87:28"
            },
            "returnParameters": {
              "id": 7832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16360:0:28"
            },
            "scope": 7939,
            "src": "16243:725:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7937,
              "nodeType": "Block",
              "src": "17252:358:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7905,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "17285:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17285:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7907,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7897,
                        "src": "17297:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7908,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7899,
                        "src": "17308:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7902,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7895,
                        "src": "17262:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12696,
                      "src": "17262:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$12652_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$12652_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 7909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17262:53:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7910,
                  "nodeType": "ExpressionStatement",
                  "src": "17262:53:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 7921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 7912,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7897,
                          "src": "17349:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 7913,
                            "name": "PairVariant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4514,
                            "src": "17360:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                              "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                            }
                          },
                          "id": 7914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ENUMERABLE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4512,
                          "src": "17360:28:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        ],
                        "id": 7911,
                        "name": "isPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "17342:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                          "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                        }
                      },
                      "id": 7915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17342:47:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 7917,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7897,
                          "src": "17412:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 7918,
                            "name": "PairVariant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4514,
                            "src": "17423:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                              "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                            }
                          },
                          "id": 7919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MISSING_ENUMERABLE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4513,
                          "src": "17423:36:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        ],
                        "id": 7916,
                        "name": "isPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "17405:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                          "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                        }
                      },
                      "id": 7920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17405:55:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17342:118:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7936,
                  "nodeType": "IfStatement",
                  "src": "17325:279:28",
                  "trueBody": {
                    "id": 7935,
                    "nodeType": "Block",
                    "src": "17471:133:28",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$12652",
                            "typeString": "contract ERC20"
                          },
                          "id": 7928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 7922,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7895,
                            "src": "17489:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$12652",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 7924,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7897,
                                    "src": "17513:9:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7923,
                                  "name": "LSSVMPairERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6324,
                                  "src": "17498:14:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_LSSVMPairERC20_$6324_$",
                                    "typeString": "type(contract LSSVMPairERC20)"
                                  }
                                },
                                "id": 7925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17498:25:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                                  "typeString": "contract LSSVMPairERC20"
                                }
                              },
                              "id": 7926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6056,
                              "src": "17498:31:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_contract$_ERC20_$12652_$",
                                "typeString": "function () pure external returns (contract ERC20)"
                              }
                            },
                            "id": 7927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17498:33:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$12652",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "17489:42:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7934,
                        "nodeType": "IfStatement",
                        "src": "17485:109:28",
                        "trueBody": {
                          "id": 7933,
                          "nodeType": "Block",
                          "src": "17533:61:28",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 7930,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7897,
                                    "src": "17569:9:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7929,
                                  "name": "TokenDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7054,
                                  "src": "17556:12:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 7931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17556:23:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 7932,
                              "nodeType": "EmitStatement",
                              "src": "17551:28:28"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7892,
              "nodeType": "StructuredDocumentation",
              "src": "16974:164:28",
              "text": "@dev Used to deposit ERC20s into a pair after creation and emit an event for indexing (if recipient is indeed an ERC20 pair and the token matches)"
            },
            "functionSelector": "1cad5a40",
            "id": 7938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositERC20",
            "nameLocation": "17152:12:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7895,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17180:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7938,
                  "src": "17174:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$12652",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7894,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7893,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12652,
                      "src": "17174:5:28"
                    },
                    "referencedDeclaration": 12652,
                    "src": "17174:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$12652",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7897,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "17203:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7938,
                  "src": "17195:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17195:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7899,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17230:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7938,
                  "src": "17222:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17222:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17164:78:28"
            },
            "returnParameters": {
              "id": 7901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17252:0:28"
            },
            "scope": 7939,
            "src": "17143:467:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7940,
        "src": "1429:16183:28",
        "usedErrors": []
      }
    ],
    "src": "37:17576:28"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/lsvm/LSSVMPairFactory.sol",
    "exportedSymbols": {
      "ERC165Checker": [
        3605
      ],
      "ERC20": [
        12652
      ],
      "ICurve": [
        11580
      ],
      "IERC165": [
        3617
      ],
      "IERC721": [
        2445
      ],
      "IERC721Enumerable": [
        2832
      ],
      "ILSSVMPairFactoryLike": [
        4552
      ],
      "LSSVMPair": [
        6014
      ],
      "LSSVMPairCloner": [
        11965
      ],
      "LSSVMPairERC20": [
        6324
      ],
      "LSSVMPairETH": [
        6629
      ],
      "LSSVMPairEnumerableERC20": [
        6918
      ],
      "LSSVMPairEnumerableETH": [
        6945
      ],
      "LSSVMPairFactory": [
        7939
      ],
      "LSSVMPairMissingEnumerableERC20": [
        8282
      ],
      "LSSVMPairMissingEnumerableETH": [
        8307
      ],
      "LSSVMRouter": [
        10184
      ],
      "Ownable": [
        104
      ],
      "SafeTransferLib": [
        12737
      ]
    },
    "id": 7940,
    "license": "AGPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6947,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6949,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 105,
        "src": "62:67:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6948,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "70:7:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 6951,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 2446,
        "src": "130:73:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6950,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "138:7:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "id": 6953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 3606,
        "src": "204:92:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6952,
              "name": "ERC165Checker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "212:13:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "id": 6955,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 3618,
        "src": "297:80:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6954,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "305:7:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "id": 6957,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 2833,
        "src": "378:104:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6956,
              "name": "IERC721Enumerable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "386:17:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "solmate/src/tokens/ERC20.sol",
        "file": "solmate/src/tokens/ERC20.sol",
        "id": 6959,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 12653,
        "src": "622:51:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6958,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "630:5:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/src/utils/SafeTransferLib.sol",
        "id": 6961,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 12738,
        "src": "674:70:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6960,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "682:15:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPair.sol",
        "file": "./LSSVMPair.sol",
        "id": 6963,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6015,
        "src": "746:42:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6962,
              "name": "LSSVMPair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "754:9:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMRouter.sol",
        "file": "./LSSVMRouter.sol",
        "id": 6965,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 10185,
        "src": "789:46:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6964,
              "name": "LSSVMRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "797:11:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairETH.sol",
        "file": "./LSSVMPairETH.sol",
        "id": 6967,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6630,
        "src": "836:48:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6966,
              "name": "LSSVMPairETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "844:12:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/bonding-curves/ICurve.sol",
        "file": "./bonding-curves/ICurve.sol",
        "id": 6969,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 11581,
        "src": "885:51:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6968,
              "name": "ICurve",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "893:6:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairERC20.sol",
        "file": "./LSSVMPairERC20.sol",
        "id": 6971,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6325,
        "src": "937:52:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6970,
              "name": "LSSVMPairERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "945:14:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/lib/LSSVMPairCloner.sol",
        "file": "./lib/LSSVMPairCloner.sol",
        "id": 6973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 11966,
        "src": "990:58:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6972,
              "name": "LSSVMPairCloner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "998:15:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/ILSSVMPairFactoryLike.sol",
        "file": "./ILSSVMPairFactoryLike.sol",
        "id": 6975,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 4553,
        "src": "1049:66:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6974,
              "name": "ILSSVMPairFactoryLike",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1057:21:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairEnumerableETH.sol",
        "file": "./LSSVMPairEnumerableETH.sol",
        "id": 6977,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6946,
        "src": "1116:68:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6976,
              "name": "LSSVMPairEnumerableETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1124:22:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairEnumerableERC20.sol",
        "file": "./LSSVMPairEnumerableERC20.sol",
        "id": 6979,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 6919,
        "src": "1185:72:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6978,
              "name": "LSSVMPairEnumerableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1193:24:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairMissingEnumerableETH.sol",
        "file": "./LSSVMPairMissingEnumerableETH.sol",
        "id": 6981,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 8308,
        "src": "1258:82:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6980,
              "name": "LSSVMPairMissingEnumerableETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1266:29:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lsvm/LSSVMPairMissingEnumerableERC20.sol",
        "file": "./LSSVMPairMissingEnumerableERC20.sol",
        "id": 6983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7940,
        "sourceUnit": 8283,
        "src": "1341:86:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6982,
              "name": "LSSVMPairMissingEnumerableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "1349:31:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6984,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "1458:7:28"
            },
            "id": 6985,
            "nodeType": "InheritanceSpecifier",
            "src": "1458:7:28"
          },
          {
            "baseName": {
              "id": 6986,
              "name": "ILSSVMPairFactoryLike",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4552,
              "src": "1467:21:28"
            },
            "id": 6987,
            "nodeType": "InheritanceSpecifier",
            "src": "1467:21:28"
          }
        ],
        "canonicalName": "LSSVMPairFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7939,
        "linearizedBaseContracts": [
          7939,
          4552,
          104,
          3176
        ],
        "name": "LSSVMPairFactory",
        "nameLocation": "1438:16:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6990,
            "libraryName": {
              "id": 6988,
              "name": "LSSVMPairCloner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11965,
              "src": "1501:15:28"
            },
            "nodeType": "UsingForDirective",
            "src": "1495:34:28",
            "typeName": {
              "id": 6989,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1521:7:28",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 6993,
            "libraryName": {
              "id": 6991,
              "name": "SafeTransferLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12737,
              "src": "1540:15:28"
            },
            "nodeType": "UsingForDirective",
            "src": "1534:42:28",
            "typeName": {
              "id": 6992,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1560:15:28",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 6997,
            "libraryName": {
              "id": 6994,
              "name": "SafeTransferLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12737,
              "src": "1587:15:28"
            },
            "nodeType": "UsingForDirective",
            "src": "1581:32:28",
            "typeName": {
              "id": 6996,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6995,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12652,
                "src": "1607:5:28"
              },
              "referencedDeclaration": 12652,
              "src": "1607:5:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$12652",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 7003,
            "mutability": "constant",
            "name": "INTERFACE_ID_ERC721_ENUMERABLE",
            "nameLocation": "1643:30:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1619:100:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 6998,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1619:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 7000,
                    "name": "IERC721Enumerable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2832,
                    "src": "1689:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2832_$",
                      "typeString": "type(contract IERC721Enumerable)"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2832_$",
                      "typeString": "type(contract IERC721Enumerable)"
                    }
                  ],
                  "id": 6999,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4294967269,
                  "src": "1684:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 7001,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1684:23:28",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$2832",
                  "typeString": "type(contract IERC721Enumerable)"
                }
              },
              "id": 7002,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "interfaceId",
              "nodeType": "MemberAccess",
              "src": "1684:35:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 7006,
            "mutability": "constant",
            "name": "MAX_PROTOCOL_FEE",
            "nameLocation": "1752:16:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1726:52:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7004,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1726:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3130653138",
              "id": 7005,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1771:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.10e18"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "ad2e5770",
            "id": 7009,
            "mutability": "immutable",
            "name": "enumerableETHTemplate",
            "nameLocation": "1853:21:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1813:61:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
              "typeString": "contract LSSVMPairEnumerableETH"
            },
            "typeName": {
              "id": 7008,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7007,
                "name": "LSSVMPairEnumerableETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6945,
                "src": "1813:22:28"
              },
              "referencedDeclaration": 6945,
              "src": "1813:22:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                "typeString": "contract LSSVMPairEnumerableETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "004885ea",
            "id": 7012,
            "mutability": "immutable",
            "name": "missingEnumerableETHTemplate",
            "nameLocation": "1927:28:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1880:75:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
              "typeString": "contract LSSVMPairMissingEnumerableETH"
            },
            "typeName": {
              "id": 7011,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7010,
                "name": "LSSVMPairMissingEnumerableETH",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8307,
                "src": "1880:29:28"
              },
              "referencedDeclaration": 8307,
              "src": "1880:29:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                "typeString": "contract LSSVMPairMissingEnumerableETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a427f1ad",
            "id": 7015,
            "mutability": "immutable",
            "name": "enumerableERC20Template",
            "nameLocation": "2003:23:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "1961:65:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
              "typeString": "contract LSSVMPairEnumerableERC20"
            },
            "typeName": {
              "id": 7014,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7013,
                "name": "LSSVMPairEnumerableERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6918,
                "src": "1961:24:28"
              },
              "referencedDeclaration": 6918,
              "src": "1961:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                "typeString": "contract LSSVMPairEnumerableERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4c6bc433",
            "id": 7018,
            "mutability": "immutable",
            "name": "missingEnumerableERC20Template",
            "nameLocation": "2089:30:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "2032:87:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
              "typeString": "contract LSSVMPairMissingEnumerableERC20"
            },
            "typeName": {
              "id": 7017,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7016,
                "name": "LSSVMPairMissingEnumerableERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 8282,
                "src": "2032:31:28"
              },
              "referencedDeclaration": 8282,
              "src": "2032:31:28",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                "typeString": "contract LSSVMPairMissingEnumerableERC20"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4524
            ],
            "constant": false,
            "functionSelector": "64df049e",
            "id": 7021,
            "mutability": "mutable",
            "name": "protocolFeeRecipient",
            "nameLocation": "2157:20:28",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7020,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2148:8:28"
            },
            "scope": 7939,
            "src": "2125:52:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 7019,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2125:15:28",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4519
            ],
            "constant": false,
            "functionSelector": "1ce4c78b",
            "id": 7024,
            "mutability": "mutable",
            "name": "protocolFeeMultiplier",
            "nameLocation": "2238:21:28",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2229:8:28"
            },
            "scope": 7939,
            "src": "2214:45:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7022,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2214:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a82719c8",
            "id": 7029,
            "mutability": "mutable",
            "name": "bondingCurveAllowed",
            "nameLocation": "2297:19:28",
            "nodeType": "VariableDeclaration",
            "scope": 7939,
            "src": "2266:50:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
              "typeString": "mapping(contract ICurve => bool)"
            },
            "typeName": {
              "id": 7028,
              "keyType": {
                "id": 7026,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7025,
                  "name": "ICurve",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11580,
                  "src": "2274:6:28"
                },
                "referencedDeclaration": 11580,
                "src": "2274:6:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ICurve_$11580",
                  "typeString": "contract ICurve"
                }
              },
              "nodeType": "Mapping",
              "src": "2266:23:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
                "typeString": "mapping(contract ICurve => bool)"
              },
              "valueType": {
                "id": 7027,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2284:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4531
            ],
            "constant": false,
            "functionSelector": "1fba95e8",
            "id": 7034,
            "mutability": "mutable",
            "name": "callAllowed",
            "nameLocation": "2363:11:28",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7033,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2354:8:28"
            },
            "scope": 7939,
            "src": "2322:52:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7032,
              "keyType": {
                "id": 7030,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2330:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2322:24:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7031,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2341:4:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "LSSVMPairFactory.RouterStatus",
            "id": 7039,
            "members": [
              {
                "constant": false,
                "id": 7036,
                "mutability": "mutable",
                "name": "allowed",
                "nameLocation": "2415:7:28",
                "nodeType": "VariableDeclaration",
                "scope": 7039,
                "src": "2410:12:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7035,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2410:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7038,
                "mutability": "mutable",
                "name": "wasEverAllowed",
                "nameLocation": "2437:14:28",
                "nodeType": "VariableDeclaration",
                "scope": 7039,
                "src": "2432:19:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7037,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2432:4:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RouterStatus",
            "nameLocation": "2387:12:28",
            "nodeType": "StructDefinition",
            "scope": 7939,
            "src": "2380:78:28",
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4541
            ],
            "constant": false,
            "functionSelector": "a93ec68b",
            "id": 7046,
            "mutability": "mutable",
            "name": "routerStatus",
            "nameLocation": "2516:12:28",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7045,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2507:8:28"
            },
            "scope": 7939,
            "src": "2463:65:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_LSSVMRouter_$10184_$_t_struct$_RouterStatus_$7039_storage_$",
              "typeString": "mapping(contract LSSVMRouter => struct LSSVMPairFactory.RouterStatus)"
            },
            "typeName": {
              "id": 7044,
              "keyType": {
                "id": 7041,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7040,
                  "name": "LSSVMRouter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10184,
                  "src": "2471:11:28"
                },
                "referencedDeclaration": 10184,
                "src": "2471:11:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                  "typeString": "contract LSSVMRouter"
                }
              },
              "nodeType": "Mapping",
              "src": "2463:36:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_LSSVMRouter_$10184_$_t_struct$_RouterStatus_$7039_storage_$",
                "typeString": "mapping(contract LSSVMRouter => struct LSSVMPairFactory.RouterStatus)"
              },
              "valueType": {
                "id": 7043,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7042,
                  "name": "RouterStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7039,
                  "src": "2486:12:28"
                },
                "referencedDeclaration": 7039,
                "src": "2486:12:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RouterStatus_$7039_storage_ptr",
                  "typeString": "struct LSSVMPairFactory.RouterStatus"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 7050,
            "name": "NewPair",
            "nameLocation": "2541:7:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7048,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "2557:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7050,
                  "src": "2549:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2549:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2548:21:28"
            },
            "src": "2535:35:28"
          },
          {
            "anonymous": false,
            "id": 7054,
            "name": "TokenDeposit",
            "nameLocation": "2581:12:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7052,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "2602:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7054,
                  "src": "2594:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2593:21:28"
            },
            "src": "2575:40:28"
          },
          {
            "anonymous": false,
            "id": 7058,
            "name": "NFTDeposit",
            "nameLocation": "2626:10:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7056,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "2645:11:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7058,
                  "src": "2637:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2636:21:28"
            },
            "src": "2620:38:28"
          },
          {
            "anonymous": false,
            "id": 7062,
            "name": "ProtocolFeeRecipientUpdate",
            "nameLocation": "2669:26:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipientAddress",
                  "nameLocation": "2704:16:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7062,
                  "src": "2696:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2696:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2695:26:28"
            },
            "src": "2663:59:28"
          },
          {
            "anonymous": false,
            "id": 7066,
            "name": "ProtocolFeeMultiplierUpdate",
            "nameLocation": "2733:27:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7064,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMultiplier",
                  "nameLocation": "2769:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7066,
                  "src": "2761:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2760:23:28"
            },
            "src": "2727:57:28"
          },
          {
            "anonymous": false,
            "id": 7073,
            "name": "BondingCurveStatusUpdate",
            "nameLocation": "2795:24:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7069,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bondingCurve",
                  "nameLocation": "2827:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7073,
                  "src": "2820:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$11580",
                    "typeString": "contract ICurve"
                  },
                  "typeName": {
                    "id": 7068,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7067,
                      "name": "ICurve",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11580,
                      "src": "2820:6:28"
                    },
                    "referencedDeclaration": 11580,
                    "src": "2820:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$11580",
                      "typeString": "contract ICurve"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7071,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "2846:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7073,
                  "src": "2841:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7070,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2841:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2819:37:28"
            },
            "src": "2789:68:28"
          },
          {
            "anonymous": false,
            "id": 7079,
            "name": "CallTargetStatusUpdate",
            "nameLocation": "2868:22:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7075,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2899:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7079,
                  "src": "2891:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7077,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "2912:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7079,
                  "src": "2907:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7076,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2890:32:28"
            },
            "src": "2862:61:28"
          },
          {
            "anonymous": false,
            "id": 7086,
            "name": "RouterStatusUpdate",
            "nameLocation": "2934:18:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "2965:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7086,
                  "src": "2953:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                    "typeString": "contract LSSVMRouter"
                  },
                  "typeName": {
                    "id": 7081,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7080,
                      "name": "LSSVMRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10184,
                      "src": "2953:11:28"
                    },
                    "referencedDeclaration": 10184,
                    "src": "2953:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                      "typeString": "contract LSSVMRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7084,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "2978:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7086,
                  "src": "2973:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7083,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2952:36:28"
            },
            "src": "2928:61:28"
          },
          {
            "body": {
              "id": 7136,
              "nodeType": "Block",
              "src": "3356:456:28",
              "statements": [
                {
                  "expression": {
                    "id": 7107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7105,
                      "name": "enumerableETHTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7009,
                      "src": "3366:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                        "typeString": "contract LSSVMPairEnumerableETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7106,
                      "name": "_enumerableETHTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7089,
                      "src": "3390:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                        "typeString": "contract LSSVMPairEnumerableETH"
                      }
                    },
                    "src": "3366:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                      "typeString": "contract LSSVMPairEnumerableETH"
                    }
                  },
                  "id": 7108,
                  "nodeType": "ExpressionStatement",
                  "src": "3366:46:28"
                },
                {
                  "expression": {
                    "id": 7111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7109,
                      "name": "missingEnumerableETHTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7012,
                      "src": "3422:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                        "typeString": "contract LSSVMPairMissingEnumerableETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7110,
                      "name": "_missingEnumerableETHTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7092,
                      "src": "3453:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                        "typeString": "contract LSSVMPairMissingEnumerableETH"
                      }
                    },
                    "src": "3422:60:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                      "typeString": "contract LSSVMPairMissingEnumerableETH"
                    }
                  },
                  "id": 7112,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:60:28"
                },
                {
                  "expression": {
                    "id": 7115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7113,
                      "name": "enumerableERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7015,
                      "src": "3492:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                        "typeString": "contract LSSVMPairEnumerableERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7114,
                      "name": "_enumerableERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7095,
                      "src": "3518:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                        "typeString": "contract LSSVMPairEnumerableERC20"
                      }
                    },
                    "src": "3492:50:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                      "typeString": "contract LSSVMPairEnumerableERC20"
                    }
                  },
                  "id": 7116,
                  "nodeType": "ExpressionStatement",
                  "src": "3492:50:28"
                },
                {
                  "expression": {
                    "id": 7119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7117,
                      "name": "missingEnumerableERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7018,
                      "src": "3552:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                        "typeString": "contract LSSVMPairMissingEnumerableERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7118,
                      "name": "_missingEnumerableERC20Template",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7098,
                      "src": "3585:31:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                        "typeString": "contract LSSVMPairMissingEnumerableERC20"
                      }
                    },
                    "src": "3552:64:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                    }
                  },
                  "id": 7120,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:64:28"
                },
                {
                  "expression": {
                    "id": 7123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7121,
                      "name": "protocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7021,
                      "src": "3626:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7122,
                      "name": "_protocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7100,
                      "src": "3649:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3626:44:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7124,
                  "nodeType": "ExpressionStatement",
                  "src": "3626:44:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7126,
                          "name": "_protocolFeeMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7102,
                          "src": "3689:22:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 7127,
                          "name": "MAX_PROTOCOL_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7006,
                          "src": "3715:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3689:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46656520746f6f206c61726765",
                        "id": 7129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3733:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01",
                          "typeString": "literal_string \"Fee too large\""
                        },
                        "value": "Fee too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01",
                          "typeString": "literal_string \"Fee too large\""
                        }
                      ],
                      "id": 7125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3681:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3681:68:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7131,
                  "nodeType": "ExpressionStatement",
                  "src": "3681:68:28"
                },
                {
                  "expression": {
                    "id": 7134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7132,
                      "name": "protocolFeeMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7024,
                      "src": "3759:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7133,
                      "name": "_protocolFeeMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7102,
                      "src": "3783:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3759:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7135,
                  "nodeType": "ExpressionStatement",
                  "src": "3759:46:28"
                }
              ]
            },
            "id": 7137,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7089,
                  "mutability": "mutable",
                  "name": "_enumerableETHTemplate",
                  "nameLocation": "3039:22:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3016:45:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                    "typeString": "contract LSSVMPairEnumerableETH"
                  },
                  "typeName": {
                    "id": 7088,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7087,
                      "name": "LSSVMPairEnumerableETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6945,
                      "src": "3016:22:28"
                    },
                    "referencedDeclaration": 6945,
                    "src": "3016:22:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                      "typeString": "contract LSSVMPairEnumerableETH"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7092,
                  "mutability": "mutable",
                  "name": "_missingEnumerableETHTemplate",
                  "nameLocation": "3101:29:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3071:59:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                    "typeString": "contract LSSVMPairMissingEnumerableETH"
                  },
                  "typeName": {
                    "id": 7091,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7090,
                      "name": "LSSVMPairMissingEnumerableETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8307,
                      "src": "3071:29:28"
                    },
                    "referencedDeclaration": 8307,
                    "src": "3071:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                      "typeString": "contract LSSVMPairMissingEnumerableETH"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7095,
                  "mutability": "mutable",
                  "name": "_enumerableERC20Template",
                  "nameLocation": "3165:24:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3140:49:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                    "typeString": "contract LSSVMPairEnumerableERC20"
                  },
                  "typeName": {
                    "id": 7094,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7093,
                      "name": "LSSVMPairEnumerableERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6918,
                      "src": "3140:24:28"
                    },
                    "referencedDeclaration": 6918,
                    "src": "3140:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                      "typeString": "contract LSSVMPairEnumerableERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7098,
                  "mutability": "mutable",
                  "name": "_missingEnumerableERC20Template",
                  "nameLocation": "3231:31:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3199:63:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                    "typeString": "contract LSSVMPairMissingEnumerableERC20"
                  },
                  "typeName": {
                    "id": 7097,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7096,
                      "name": "LSSVMPairMissingEnumerableERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8282,
                      "src": "3199:31:28"
                    },
                    "referencedDeclaration": 8282,
                    "src": "3199:31:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7100,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nameLocation": "3288:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3272:37:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7102,
                  "mutability": "mutable",
                  "name": "_protocolFeeMultiplier",
                  "nameLocation": "3327:22:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7137,
                  "src": "3319:30:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3006:349:28"
            },
            "returnParameters": {
              "id": 7104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3356:0:28"
            },
            "scope": 7939,
            "src": "2995:817:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7246,
              "nodeType": "Block",
              "src": "5133:1063:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7165,
                          "name": "bondingCurveAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7029,
                          "src": "5164:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
                            "typeString": "mapping(contract ICurve => bool)"
                          }
                        },
                        "id": 7167,
                        "indexExpression": {
                          "id": 7166,
                          "name": "_bondingCurve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7144,
                          "src": "5184:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$11580",
                            "typeString": "contract ICurve"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5164:34:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f6e64696e67206375727665206e6f742077686974656c6973746564",
                        "id": 7168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5212:31:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb",
                          "typeString": "literal_string \"Bonding curve not whitelisted\""
                        },
                        "value": "Bonding curve not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb",
                          "typeString": "literal_string \"Bonding curve not whitelisted\""
                        }
                      ],
                      "id": 7164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5143:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5143:110:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7170,
                  "nodeType": "ExpressionStatement",
                  "src": "5143:110:28"
                },
                {
                  "assignments": [
                    7172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7172,
                      "mutability": "mutable",
                      "name": "template",
                      "nameLocation": "5370:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7246,
                      "src": "5362:16:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5362:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7173,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5362:16:28"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 7199,
                        "nodeType": "Block",
                        "src": "5493:131:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 7186,
                                "name": "template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7172,
                                "src": "5505:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "condition": {
                                  "id": 7187,
                                  "name": "isEnumerable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7184,
                                  "src": "5516:12:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "id": 7194,
                                      "name": "missingEnumerableETHTemplate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7012,
                                      "src": "5584:28:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                        "typeString": "contract LSSVMPairMissingEnumerableETH"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                        "typeString": "contract LSSVMPairMissingEnumerableETH"
                                      }
                                    ],
                                    "id": 7193,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5576:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7192,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5576:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5576:37:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 7196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "5516:97:28",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 7190,
                                      "name": "enumerableETHTemplate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7009,
                                      "src": "5539:21:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                                        "typeString": "contract LSSVMPairEnumerableETH"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                                        "typeString": "contract LSSVMPairEnumerableETH"
                                      }
                                    ],
                                    "id": 7189,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5531:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7188,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5531:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7191,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5531:30:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5505:108:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 7198,
                            "nodeType": "ExpressionStatement",
                            "src": "5505:108:28"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7200,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 7185,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 7184,
                            "mutability": "mutable",
                            "name": "isEnumerable",
                            "nameLocation": "5479:12:28",
                            "nodeType": "VariableDeclaration",
                            "scope": 7200,
                            "src": "5474:17:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 7183,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5474:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "5473:19:28"
                      },
                      "src": "5465:159:28"
                    },
                    {
                      "block": {
                        "id": 7208,
                        "nodeType": "Block",
                        "src": "5631:71:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 7201,
                                "name": "template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7172,
                                "src": "5643:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 7204,
                                    "name": "missingEnumerableETHTemplate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7012,
                                    "src": "5662:28:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                      "typeString": "contract LSSVMPairMissingEnumerableETH"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                      "typeString": "contract LSSVMPairMissingEnumerableETH"
                                    }
                                  ],
                                  "id": 7203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5654:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7202,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5654:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5654:37:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5643:48:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 7207,
                            "nodeType": "ExpressionStatement",
                            "src": "5643:48:28"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7209,
                      "nodeType": "TryCatchClause",
                      "src": "5625:77:28"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 7181,
                        "name": "INTERFACE_ID_ERC721_ENUMERABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7003,
                        "src": "5433:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7177,
                                "name": "_nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7141,
                                "src": "5408:4:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$2445",
                                  "typeString": "contract IERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721_$2445",
                                  "typeString": "contract IERC721"
                                }
                              ],
                              "id": 7176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5400:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7175,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5400:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5400:13:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7174,
                          "name": "IERC165",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3617,
                          "src": "5392:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC165_$3617_$",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 7179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5392:22:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC165_$3617",
                          "typeString": "contract IERC165"
                        }
                      },
                      "id": 7180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3616,
                      "src": "5392:40:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 7182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5392:72:28",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7210,
                  "nodeType": "TryStatement",
                  "src": "5388:314:28"
                },
                {
                  "expression": {
                    "id": 7227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7211,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7162,
                      "src": "5712:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                        "typeString": "contract LSSVMPairETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7217,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "5813:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  }
                                },
                                {
                                  "id": 7218,
                                  "name": "_bondingCurve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7144,
                                  "src": "5839:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurve_$11580",
                                    "typeString": "contract ICurve"
                                  }
                                },
                                {
                                  "id": 7219,
                                  "name": "_nft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7141,
                                  "src": "5874:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721_$2445",
                                    "typeString": "contract IERC721"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 7222,
                                      "name": "_poolType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7149,
                                      "src": "5906:9:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_PoolType_$4585",
                                        "typeString": "enum LSSVMPair.PoolType"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_PoolType_$4585",
                                        "typeString": "enum LSSVMPair.PoolType"
                                      }
                                    ],
                                    "id": 7221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5900:5:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 7220,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5900:5:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5900:16:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ICurve_$11580",
                                    "typeString": "contract ICurve"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IERC721_$2445",
                                    "typeString": "contract IERC721"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "id": 7215,
                                  "name": "template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7172,
                                  "src": "5770:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 7216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cloneETHPair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11912,
                                "src": "5770:21:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_ILSSVMPairFactoryLike_$4552_$_t_contract$_ICurve_$11580_$_t_contract$_IERC721_$2445_$_t_uint8_$returns$_t_address_$bound_to$_t_address_$",
                                  "typeString": "function (address,contract ILSSVMPairFactoryLike,contract ICurve,contract IERC721,uint8) returns (address)"
                                }
                              },
                              "id": 7224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5770:164:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5745:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 7213,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5745:8:28",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5745:203:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 7212,
                        "name": "LSSVMPairETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6629,
                        "src": "5719:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSSVMPairETH_$6629_$",
                          "typeString": "type(contract LSSVMPairETH)"
                        }
                      },
                      "id": 7226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5719:239:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                        "typeString": "contract LSSVMPairETH"
                      }
                    },
                    "src": "5712:246:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                      "typeString": "contract LSSVMPairETH"
                    }
                  },
                  "id": 7228,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:246:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7230,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7162,
                        "src": "6001:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                          "typeString": "contract LSSVMPairETH"
                        }
                      },
                      {
                        "id": 7231,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7141,
                        "src": "6019:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$2445",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "id": 7232,
                        "name": "_assetRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7146,
                        "src": "6037:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7233,
                        "name": "_delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7151,
                        "src": "6066:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 7234,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7153,
                        "src": "6086:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 7235,
                        "name": "_spotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7155,
                        "src": "6104:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 7236,
                        "name": "_initialNFTIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7158,
                        "src": "6128:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                          "typeString": "contract LSSVMPairETH"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC721_$2445",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "id": 7229,
                      "name": "_initializePairETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7741,
                      "src": "5969:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_LSSVMPairETH_$6629_$_t_contract$_IERC721_$2445_$_t_address_payable_$_t_uint128_$_t_uint96_$_t_uint128_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (contract LSSVMPairETH,contract IERC721,address payable,uint128,uint96,uint128,uint256[] calldata)"
                      }
                    },
                    "id": 7237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5969:183:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7238,
                  "nodeType": "ExpressionStatement",
                  "src": "5969:183:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7242,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7162,
                            "src": "6183:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                              "typeString": "contract LSSVMPairETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                              "typeString": "contract LSSVMPairETH"
                            }
                          ],
                          "id": 7241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6175:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7240,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6175:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6175:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7239,
                      "name": "NewPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7050,
                      "src": "6167:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6167:22:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7245,
                  "nodeType": "EmitStatement",
                  "src": "6162:27:28"
                }
              ]
            },
            "documentation": {
              "id": 7138,
              "nodeType": "StructuredDocumentation",
              "src": "3861:946:28",
              "text": "@notice Creates a pair contract using EIP-1167.\n@param _nft The NFT contract of the collection the pair trades\n@param _bondingCurve The bonding curve for the pair to price NFTs, must be whitelisted\n@param _assetRecipient The address that will receive the assets traders give during trades.\nIf set to address(0), assets will be sent to the pool address.\nNot available to TRADE pools. \n@param _poolType TOKEN, NFT, or TRADE\n@param _delta The delta value used by the bonding curve. The meaning of delta depends\non the specific curve.\n@param _fee The fee taken by the LP in each trade. Can only be non-zero if _poolType is Trade.\n@param _spotPrice The initial selling spot price\n@param _initialNFTIDs The list of IDs of NFTs to transfer from the sender to the pair\n@return pair The new pair"
            },
            "functionSelector": "ce9c095d",
            "id": 7247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPairETH",
            "nameLocation": "4821:13:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7141,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "4852:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4844:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 7140,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7139,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2445,
                      "src": "4844:7:28"
                    },
                    "referencedDeclaration": 2445,
                    "src": "4844:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2445",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7144,
                  "mutability": "mutable",
                  "name": "_bondingCurve",
                  "nameLocation": "4873:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4866:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$11580",
                    "typeString": "contract ICurve"
                  },
                  "typeName": {
                    "id": 7143,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7142,
                      "name": "ICurve",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11580,
                      "src": "4866:6:28"
                    },
                    "referencedDeclaration": 11580,
                    "src": "4866:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$11580",
                      "typeString": "contract ICurve"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7146,
                  "mutability": "mutable",
                  "name": "_assetRecipient",
                  "nameLocation": "4912:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4896:31:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4896:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7149,
                  "mutability": "mutable",
                  "name": "_poolType",
                  "nameLocation": "4956:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4937:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PoolType_$4585",
                    "typeString": "enum LSSVMPair.PoolType"
                  },
                  "typeName": {
                    "id": 7148,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7147,
                      "name": "LSSVMPair.PoolType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4585,
                      "src": "4937:18:28"
                    },
                    "referencedDeclaration": 4585,
                    "src": "4937:18:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PoolType_$4585",
                      "typeString": "enum LSSVMPair.PoolType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7151,
                  "mutability": "mutable",
                  "name": "_delta",
                  "nameLocation": "4983:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4975:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7150,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4975:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7153,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "5006:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "4999:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7152,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4999:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7155,
                  "mutability": "mutable",
                  "name": "_spotPrice",
                  "nameLocation": "5028:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "5020:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7154,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5020:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7158,
                  "mutability": "mutable",
                  "name": "_initialNFTIDs",
                  "nameLocation": "5067:14:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "5048:33:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7156,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5048:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7157,
                    "nodeType": "ArrayTypeName",
                    "src": "5048:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4834:253:28"
            },
            "returnParameters": {
              "id": 7163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7162,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "5127:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7247,
                  "src": "5114:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                    "typeString": "contract LSSVMPairETH"
                  },
                  "typeName": {
                    "id": 7161,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7160,
                      "name": "LSSVMPairETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6629,
                      "src": "5114:12:28"
                    },
                    "referencedDeclaration": 6629,
                    "src": "5114:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                      "typeString": "contract LSSVMPairETH"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5113:19:28"
            },
            "scope": 7939,
            "src": "4812:1384:28",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "LSSVMPairFactory.CreateERC20PairParams",
            "id": 7273,
            "members": [
              {
                "constant": false,
                "id": 7250,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "7308:5:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7302:11:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$12652",
                  "typeString": "contract ERC20"
                },
                "typeName": {
                  "id": 7249,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7248,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 12652,
                    "src": "7302:5:28"
                  },
                  "referencedDeclaration": 12652,
                  "src": "7302:5:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$12652",
                    "typeString": "contract ERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7253,
                "mutability": "mutable",
                "name": "nft",
                "nameLocation": "7331:3:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7323:11:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC721_$2445",
                  "typeString": "contract IERC721"
                },
                "typeName": {
                  "id": 7252,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7251,
                    "name": "IERC721",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2445,
                    "src": "7323:7:28"
                  },
                  "referencedDeclaration": 2445,
                  "src": "7323:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7256,
                "mutability": "mutable",
                "name": "bondingCurve",
                "nameLocation": "7351:12:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7344:19:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ICurve_$11580",
                  "typeString": "contract ICurve"
                },
                "typeName": {
                  "id": 7255,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7254,
                    "name": "ICurve",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11580,
                    "src": "7344:6:28"
                  },
                  "referencedDeclaration": 11580,
                  "src": "7344:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$11580",
                    "typeString": "contract ICurve"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7258,
                "mutability": "mutable",
                "name": "assetRecipient",
                "nameLocation": "7389:14:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7373:30:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 7257,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7373:15:28",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7261,
                "mutability": "mutable",
                "name": "poolType",
                "nameLocation": "7432:8:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7413:27:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_PoolType_$4585",
                  "typeString": "enum LSSVMPair.PoolType"
                },
                "typeName": {
                  "id": 7260,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7259,
                    "name": "LSSVMPair.PoolType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4585,
                    "src": "7413:18:28"
                  },
                  "referencedDeclaration": 4585,
                  "src": "7413:18:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PoolType_$4585",
                    "typeString": "enum LSSVMPair.PoolType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7263,
                "mutability": "mutable",
                "name": "delta",
                "nameLocation": "7458:5:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7450:13:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 7262,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "7450:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7265,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "7480:3:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7473:10:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 7264,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "7473:6:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7267,
                "mutability": "mutable",
                "name": "spotPrice",
                "nameLocation": "7501:9:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7493:17:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 7266,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "7493:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7270,
                "mutability": "mutable",
                "name": "initialNFTIDs",
                "nameLocation": "7530:13:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7520:23:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 7268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7520:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7269,
                  "nodeType": "ArrayTypeName",
                  "src": "7520:9:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7272,
                "mutability": "mutable",
                "name": "initialTokenBalance",
                "nameLocation": "7561:19:28",
                "nodeType": "VariableDeclaration",
                "scope": 7273,
                "src": "7553:27:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7271,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7553:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CreateERC20PairParams",
            "nameLocation": "7270:21:28",
            "nodeType": "StructDefinition",
            "scope": 7939,
            "src": "7263:324:28",
            "visibility": "public"
          },
          {
            "body": {
              "id": 7381,
              "nodeType": "Block",
              "src": "7716:1233:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 7283,
                          "name": "bondingCurveAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7029,
                          "src": "7747:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
                            "typeString": "mapping(contract ICurve => bool)"
                          }
                        },
                        "id": 7286,
                        "indexExpression": {
                          "expression": {
                            "id": 7284,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7276,
                            "src": "7767:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                              "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                            }
                          },
                          "id": 7285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bondingCurve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7256,
                          "src": "7767:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICurve_$11580",
                            "typeString": "contract ICurve"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7747:40:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f6e64696e67206375727665206e6f742077686974656c6973746564",
                        "id": 7287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7801:31:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb",
                          "typeString": "literal_string \"Bonding curve not whitelisted\""
                        },
                        "value": "Bonding curve not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c6fa992e6dcba2b3276d70355f1018b60d6b37de4d724399b08aad2b76de7eb",
                          "typeString": "literal_string \"Bonding curve not whitelisted\""
                        }
                      ],
                      "id": 7282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7726:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7726:116:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7289,
                  "nodeType": "ExpressionStatement",
                  "src": "7726:116:28"
                },
                {
                  "assignments": [
                    7291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7291,
                      "mutability": "mutable",
                      "name": "template",
                      "nameLocation": "7951:8:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7381,
                      "src": "7943:16:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7290,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7943:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7292,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7943:16:28"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 7319,
                        "nodeType": "Block",
                        "src": "8080:135:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 7306,
                                "name": "template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7291,
                                "src": "8092:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "condition": {
                                  "id": 7307,
                                  "name": "isEnumerable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7304,
                                  "src": "8103:12:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "arguments": [
                                    {
                                      "id": 7314,
                                      "name": "missingEnumerableERC20Template",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7018,
                                      "src": "8173:30:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                        "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                        "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                      }
                                    ],
                                    "id": 7313,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8165:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7312,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8165:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8165:39:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 7316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "8103:101:28",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 7310,
                                      "name": "enumerableERC20Template",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7015,
                                      "src": "8126:23:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                                        "typeString": "contract LSSVMPairEnumerableERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                                        "typeString": "contract LSSVMPairEnumerableERC20"
                                      }
                                    ],
                                    "id": 7309,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8118:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7308,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8118:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8118:32:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8092:112:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 7318,
                            "nodeType": "ExpressionStatement",
                            "src": "8092:112:28"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7320,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 7305,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 7304,
                            "mutability": "mutable",
                            "name": "isEnumerable",
                            "nameLocation": "8066:12:28",
                            "nodeType": "VariableDeclaration",
                            "scope": 7320,
                            "src": "8061:17:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 7303,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8061:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "8060:19:28"
                      },
                      "src": "8052:163:28"
                    },
                    {
                      "block": {
                        "id": 7328,
                        "nodeType": "Block",
                        "src": "8222:73:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 7321,
                                "name": "template",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7291,
                                "src": "8234:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 7324,
                                    "name": "missingEnumerableERC20Template",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7018,
                                    "src": "8253:30:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                    }
                                  ],
                                  "id": 7323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8245:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7322,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8245:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8245:39:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8234:50:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 7327,
                            "nodeType": "ExpressionStatement",
                            "src": "8234:50:28"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7329,
                      "nodeType": "TryCatchClause",
                      "src": "8216:79:28"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 7301,
                        "name": "INTERFACE_ID_ERC721_ENUMERABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7003,
                        "src": "8020:30:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 7296,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7276,
                                  "src": "7989:6:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                    "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                  }
                                },
                                "id": 7297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nft",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7253,
                                "src": "7989:10:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$2445",
                                  "typeString": "contract IERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC721_$2445",
                                  "typeString": "contract IERC721"
                                }
                              ],
                              "id": 7295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7981:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7294,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7981:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7981:19:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7293,
                          "name": "IERC165",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3617,
                          "src": "7973:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC165_$3617_$",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 7299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7973:28:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC165_$3617",
                          "typeString": "contract IERC165"
                        }
                      },
                      "id": 7300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3616,
                      "src": "7973:46:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 7302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7973:78:28",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7330,
                  "nodeType": "TryStatement",
                  "src": "7969:326:28"
                },
                {
                  "expression": {
                    "id": 7352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7331,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7280,
                      "src": "8305:4:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                        "typeString": "contract LSSVMPairERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7337,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "8410:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 7338,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7276,
                                    "src": "8436:6:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                      "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                    }
                                  },
                                  "id": 7339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "bondingCurve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7256,
                                  "src": "8436:19:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ICurve_$11580",
                                    "typeString": "contract ICurve"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 7340,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7276,
                                    "src": "8477:6:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                      "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                    }
                                  },
                                  "id": 7341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nft",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7253,
                                  "src": "8477:10:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721_$2445",
                                    "typeString": "contract IERC721"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 7344,
                                        "name": "params",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7276,
                                        "src": "8515:6:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                          "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                        }
                                      },
                                      "id": 7345,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "poolType",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7261,
                                      "src": "8515:15:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_PoolType_$4585",
                                        "typeString": "enum LSSVMPair.PoolType"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_PoolType_$4585",
                                        "typeString": "enum LSSVMPair.PoolType"
                                      }
                                    ],
                                    "id": 7343,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8509:5:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 7342,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8509:5:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8509:22:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 7347,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7276,
                                    "src": "8553:6:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                                      "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                                    }
                                  },
                                  "id": 7348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7250,
                                  "src": "8553:12:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$12652",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ICurve_$11580",
                                    "typeString": "contract ICurve"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IERC721_$2445",
                                    "typeString": "contract IERC721"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$12652",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "expression": {
                                  "id": 7335,
                                  "name": "template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7291,
                                  "src": "8365:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 7336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cloneERC20Pair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11936,
                                "src": "8365:23:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_ILSSVMPairFactoryLike_$4552_$_t_contract$_ICurve_$11580_$_t_contract$_IERC721_$2445_$_t_uint8_$_t_contract$_ERC20_$12652_$returns$_t_address_$bound_to$_t_address_$",
                                  "typeString": "function (address,contract ILSSVMPairFactoryLike,contract ICurve,contract IERC721,uint8,contract ERC20) returns (address)"
                                }
                              },
                              "id": 7349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8365:218:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8340:8:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 7333,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8340:8:28",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8340:257:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 7332,
                        "name": "LSSVMPairERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6324,
                        "src": "8312:14:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LSSVMPairERC20_$6324_$",
                          "typeString": "type(contract LSSVMPairERC20)"
                        }
                      },
                      "id": 7351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8312:295:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                        "typeString": "contract LSSVMPairERC20"
                      }
                    },
                    "src": "8305:302:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                      "typeString": "contract LSSVMPairERC20"
                    }
                  },
                  "id": 7353,
                  "nodeType": "ExpressionStatement",
                  "src": "8305:302:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7355,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7280,
                        "src": "8652:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                          "typeString": "contract LSSVMPairERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 7356,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8670:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7250,
                        "src": "8670:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 7358,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8696:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nft",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7253,
                        "src": "8696:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$2445",
                          "typeString": "contract IERC721"
                        }
                      },
                      {
                        "expression": {
                          "id": 7360,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8720:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "assetRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7258,
                        "src": "8720:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 7362,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8755:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "delta",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7263,
                        "src": "8755:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 7364,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8781:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7265,
                        "src": "8781:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "expression": {
                          "id": 7366,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8805:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "spotPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7267,
                        "src": "8805:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 7368,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8835:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialNFTIDs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7270,
                        "src": "8835:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 7370,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7276,
                          "src": "8869:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                            "typeString": "struct LSSVMPairFactory.CreateERC20PairParams calldata"
                          }
                        },
                        "id": 7371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "initialTokenBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7272,
                        "src": "8869:26:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                          "typeString": "contract LSSVMPairERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC721_$2445",
                          "typeString": "contract IERC721"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7354,
                      "name": "_initializePairERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7821,
                      "src": "8618:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_LSSVMPairERC20_$6324_$_t_contract$_ERC20_$12652_$_t_contract$_IERC721_$2445_$_t_address_payable_$_t_uint128_$_t_uint96_$_t_uint128_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (contract LSSVMPairERC20,contract ERC20,contract IERC721,address payable,uint128,uint96,uint128,uint256[] calldata,uint256)"
                      }
                    },
                    "id": 7372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8618:287:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7373,
                  "nodeType": "ExpressionStatement",
                  "src": "8618:287:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7377,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7280,
                            "src": "8936:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                              "typeString": "contract LSSVMPairERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                              "typeString": "contract LSSVMPairERC20"
                            }
                          ],
                          "id": 7376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8928:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7375,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8928:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8928:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7374,
                      "name": "NewPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7050,
                      "src": "8920:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8920:22:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7380,
                  "nodeType": "EmitStatement",
                  "src": "8915:27:28"
                }
              ]
            },
            "functionSelector": "59722caa",
            "id": 7382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPairERC20",
            "nameLocation": "7602:15:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7276,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7649:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7382,
                  "src": "7618:37:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_calldata_ptr",
                    "typeString": "struct LSSVMPairFactory.CreateERC20PairParams"
                  },
                  "typeName": {
                    "id": 7275,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7274,
                      "name": "CreateERC20PairParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7273,
                      "src": "7618:21:28"
                    },
                    "referencedDeclaration": 7273,
                    "src": "7618:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateERC20PairParams_$7273_storage_ptr",
                      "typeString": "struct LSSVMPairFactory.CreateERC20PairParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7617:39:28"
            },
            "returnParameters": {
              "id": 7281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7280,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "7706:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7382,
                  "src": "7691:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                    "typeString": "contract LSSVMPairERC20"
                  },
                  "typeName": {
                    "id": 7279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7278,
                      "name": "LSSVMPairERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6324,
                      "src": "7691:14:28"
                    },
                    "referencedDeclaration": 6324,
                    "src": "7691:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                      "typeString": "contract LSSVMPairERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7690:21:28"
            },
            "scope": 7939,
            "src": "7593:1356:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4551
            ],
            "body": {
              "id": 7473,
              "nodeType": "Block",
              "src": "9439:1192:28",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PairVariant_$4514",
                      "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                    },
                    "id": 7397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7394,
                      "name": "variant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7388,
                      "src": "9453:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PairVariant_$4514",
                        "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 7395,
                        "name": "PairVariant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4514,
                        "src": "9464:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                          "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                        }
                      },
                      "id": 7396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ENUMERABLE_ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4512,
                      "src": "9464:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PairVariant_$4514",
                        "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                      }
                    },
                    "src": "9453:39:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PairVariant_$4514",
                        "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                      },
                      "id": 7415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7412,
                        "name": "variant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7388,
                        "src": "9726:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PairVariant_$4514",
                          "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 7413,
                          "name": "PairVariant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4514,
                          "src": "9737:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                            "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                          }
                        },
                        "id": 7414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "MISSING_ENUMERABLE_ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4513,
                        "src": "9737:36:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PairVariant_$4514",
                          "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                        }
                      },
                      "src": "9726:47:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_PairVariant_$4514",
                          "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                        },
                        "id": 7433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7430,
                          "name": "variant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7388,
                          "src": "10014:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 7431,
                            "name": "PairVariant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4514,
                            "src": "10025:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                              "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                            }
                          },
                          "id": 7432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ENUMERABLE_ETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4510,
                          "src": "10025:26:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        },
                        "src": "10014:37:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          },
                          "id": 7451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 7448,
                            "name": "variant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7388,
                            "src": "10281:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PairVariant_$4514",
                              "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 7449,
                              "name": "PairVariant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4514,
                              "src": "10292:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                                "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                              }
                            },
                            "id": 7450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MISSING_ENUMERABLE_ETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4511,
                            "src": "10292:34:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PairVariant_$4514",
                              "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                            }
                          },
                          "src": "10281:45:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 7468,
                          "nodeType": "Block",
                          "src": "10559:66:28",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 7466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10609:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 7393,
                              "id": 7467,
                              "nodeType": "Return",
                              "src": "10602:12:28"
                            }
                          ]
                        },
                        "id": 7469,
                        "nodeType": "IfStatement",
                        "src": "10277:348:28",
                        "trueBody": {
                          "id": 7465,
                          "nodeType": "Block",
                          "src": "10328:225:28",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 7456,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "10425:4:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                          "typeString": "contract LSSVMPairFactory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                          "typeString": "contract LSSVMPairFactory"
                                        }
                                      ],
                                      "id": 7455,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10417:7:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 7454,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10417:7:28",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 7457,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10417:13:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 7460,
                                        "name": "missingEnumerableETHTemplate",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7012,
                                        "src": "10460:28:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                          "typeString": "contract LSSVMPairMissingEnumerableETH"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableETH_$8307",
                                          "typeString": "contract LSSVMPairMissingEnumerableETH"
                                        }
                                      ],
                                      "id": 7459,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10452:7:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 7458,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10452:7:28",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 7461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10452:37:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 7462,
                                    "name": "potentialPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7385,
                                    "src": "10511:13:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 7452,
                                    "name": "LSSVMPairCloner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11965,
                                    "src": "10365:15:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_LSSVMPairCloner_$11965_$",
                                      "typeString": "type(library LSSVMPairCloner)"
                                    }
                                  },
                                  "id": 7453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "isETHPairClone",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11950,
                                  "src": "10365:30:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address,address,address) view returns (bool)"
                                  }
                                },
                                "id": 7463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10365:177:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 7393,
                              "id": 7464,
                              "nodeType": "Return",
                              "src": "10342:200:28"
                            }
                          ]
                        }
                      },
                      "id": 7470,
                      "nodeType": "IfStatement",
                      "src": "10010:615:28",
                      "trueBody": {
                        "id": 7447,
                        "nodeType": "Block",
                        "src": "10053:218:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 7438,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "10150:4:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                        "typeString": "contract LSSVMPairFactory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                        "typeString": "contract LSSVMPairFactory"
                                      }
                                    ],
                                    "id": 7437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10142:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7436,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10142:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10142:13:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 7442,
                                      "name": "enumerableETHTemplate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7009,
                                      "src": "10185:21:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                                        "typeString": "contract LSSVMPairEnumerableETH"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMPairEnumerableETH_$6945",
                                        "typeString": "contract LSSVMPairEnumerableETH"
                                      }
                                    ],
                                    "id": 7441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10177:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7440,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10177:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10177:30:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 7444,
                                  "name": "potentialPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7385,
                                  "src": "10229:13:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 7434,
                                  "name": "LSSVMPairCloner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11965,
                                  "src": "10090:15:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_LSSVMPairCloner_$11965_$",
                                    "typeString": "type(library LSSVMPairCloner)"
                                  }
                                },
                                "id": 7435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isETHPairClone",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11950,
                                "src": "10090:30:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address,address) view returns (bool)"
                                }
                              },
                              "id": 7445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10090:170:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 7393,
                            "id": 7446,
                            "nodeType": "Return",
                            "src": "10067:193:28"
                          }
                        ]
                      }
                    },
                    "id": 7471,
                    "nodeType": "IfStatement",
                    "src": "9722:903:28",
                    "trueBody": {
                      "id": 7429,
                      "nodeType": "Block",
                      "src": "9775:229:28",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 7420,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "9874:4:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                      "typeString": "contract LSSVMPairFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                      "typeString": "contract LSSVMPairFactory"
                                    }
                                  ],
                                  "id": 7419,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9866:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7418,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9866:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9866:13:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 7424,
                                    "name": "missingEnumerableERC20Template",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7018,
                                    "src": "9909:30:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LSSVMPairMissingEnumerableERC20_$8282",
                                      "typeString": "contract LSSVMPairMissingEnumerableERC20"
                                    }
                                  ],
                                  "id": 7423,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9901:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 7422,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9901:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 7425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9901:39:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 7426,
                                "name": "potentialPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7385,
                                "src": "9962:13:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 7416,
                                "name": "LSSVMPairCloner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11965,
                                "src": "9812:15:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LSSVMPairCloner_$11965_$",
                                  "typeString": "type(library LSSVMPairCloner)"
                                }
                              },
                              "id": 7417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isERC20PairClone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11964,
                              "src": "9812:32:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address,address) view returns (bool)"
                              }
                            },
                            "id": 7427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9812:181:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 7393,
                          "id": 7428,
                          "nodeType": "Return",
                          "src": "9789:204:28"
                        }
                      ]
                    }
                  },
                  "id": 7472,
                  "nodeType": "IfStatement",
                  "src": "9449:1176:28",
                  "trueBody": {
                    "id": 7411,
                    "nodeType": "Block",
                    "src": "9494:222:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7402,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "9593:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                    "typeString": "contract LSSVMPairFactory"
                                  }
                                ],
                                "id": 7401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9585:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7400,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9585:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9585:13:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 7406,
                                  "name": "enumerableERC20Template",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7015,
                                  "src": "9628:23:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                                    "typeString": "contract LSSVMPairEnumerableERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairEnumerableERC20_$6918",
                                    "typeString": "contract LSSVMPairEnumerableERC20"
                                  }
                                ],
                                "id": 7405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9620:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7404,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9620:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9620:32:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7408,
                              "name": "potentialPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7385,
                              "src": "9674:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 7398,
                              "name": "LSSVMPairCloner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11965,
                              "src": "9531:15:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LSSVMPairCloner_$11965_$",
                                "typeString": "type(library LSSVMPairCloner)"
                              }
                            },
                            "id": 7399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isERC20PairClone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11964,
                            "src": "9531:32:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address,address) view returns (bool)"
                            }
                          },
                          "id": 7409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9531:174:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 7393,
                        "id": 7410,
                        "nodeType": "Return",
                        "src": "9508:197:28"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7383,
              "nodeType": "StructuredDocumentation",
              "src": "8955:347:28",
              "text": "@notice Checks if an address is a LSSVMPair. Uses the fact that the pairs are EIP-1167 minimal proxies.\n@param potentialPair The address to check\n@param variant The pair variant (NFT is enumerable or not, pair uses ETH or ERC20)\n@return True if the address is the specified pair variant, false otherwise"
            },
            "functionSelector": "08f25a8f",
            "id": 7474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPair",
            "nameLocation": "9316:6:28",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9403:8:28"
            },
            "parameters": {
              "id": 7389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7385,
                  "mutability": "mutable",
                  "name": "potentialPair",
                  "nameLocation": "9331:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7474,
                  "src": "9323:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9323:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7388,
                  "mutability": "mutable",
                  "name": "variant",
                  "nameLocation": "9358:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7474,
                  "src": "9346:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PairVariant_$4514",
                    "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                  },
                  "typeName": {
                    "id": 7387,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7386,
                      "name": "PairVariant",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4514,
                      "src": "9346:11:28"
                    },
                    "referencedDeclaration": 4514,
                    "src": "9346:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PairVariant_$4514",
                      "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9322:44:28"
            },
            "returnParameters": {
              "id": 7393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7392,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7474,
                  "src": "9429:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7391,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9429:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9428:6:28"
            },
            "scope": 7939,
            "src": "9307:1324:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7478,
              "nodeType": "Block",
              "src": "10751:2:28",
              "statements": []
            },
            "documentation": {
              "id": 7475,
              "nodeType": "StructuredDocumentation",
              "src": "10637:82:28",
              "text": "@notice Allows receiving ETH in order to receive protocol fees"
            },
            "id": 7479,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10731:2:28"
            },
            "returnParameters": {
              "id": 7477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10751:0:28"
            },
            "scope": 7939,
            "src": "10724:29:28",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7495,
              "nodeType": "Block",
              "src": "10978:76:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7490,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "11033:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                "typeString": "contract LSSVMPairFactory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LSSVMPairFactory_$7939",
                                "typeString": "contract LSSVMPairFactory"
                              }
                            ],
                            "id": 7489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11025:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7488,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11025:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11025:13:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 7492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "11025:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7485,
                        "name": "protocolFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7021,
                        "src": "10988:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 7487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12674,
                      "src": "10988:36:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10988:59:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7494,
                  "nodeType": "ExpressionStatement",
                  "src": "10988:59:28"
                }
              ]
            },
            "documentation": {
              "id": 7480,
              "nodeType": "StructuredDocumentation",
              "src": "10799:120:28",
              "text": "@notice Withdraws the ETH balance to the protocol fee recipient.\nOnly callable by the owner."
            },
            "functionSelector": "b483eddc",
            "id": 7496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7482,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "10968:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "10968:9:28"
              }
            ],
            "name": "withdrawETHProtocolFees",
            "nameLocation": "10933:23:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10956:2:28"
            },
            "returnParameters": {
              "id": 7484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10978:0:28"
            },
            "scope": 7939,
            "src": "10924:130:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7514,
              "nodeType": "Block",
              "src": "11375:65:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7510,
                        "name": "protocolFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7021,
                        "src": "11404:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7511,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7502,
                        "src": "11426:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7507,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7500,
                        "src": "11385:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12716,
                      "src": "11385:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$12652_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$12652_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 7512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11385:48:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7513,
                  "nodeType": "ExpressionStatement",
                  "src": "11385:48:28"
                }
              ]
            },
            "documentation": {
              "id": 7497,
              "nodeType": "StructuredDocumentation",
              "src": "11060:207:28",
              "text": "@notice Withdraws ERC20 tokens to the protocol fee recipient. Only callable by the owner.\n@param token The token to transfer\n@param amount The amount of tokens to transfer"
            },
            "functionSelector": "cc5bc20b",
            "id": 7515,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7505,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7504,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "11361:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "11361:9:28"
              }
            ],
            "name": "withdrawERC20ProtocolFees",
            "nameLocation": "11281:25:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7500,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "11313:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "11307:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$12652",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7499,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7498,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12652,
                      "src": "11307:5:28"
                    },
                    "referencedDeclaration": 12652,
                    "src": "11307:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$12652",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7502,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11328:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "11320:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11320:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11306:29:28"
            },
            "returnParameters": {
              "id": 7506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11375:0:28"
            },
            "scope": 7939,
            "src": "11272:168:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7541,
              "nodeType": "Block",
              "src": "11723:192:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7524,
                          "name": "_protocolFeeRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7518,
                          "src": "11741:21:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11774:1:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11766:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7525,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11766:7:28",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11766:10:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11741:35:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "302061646472657373",
                        "id": 7530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11778:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74a398fb97c73fe516416e1dc2b2d1c836807b00191a179b39968d0a8eea7be9",
                          "typeString": "literal_string \"0 address\""
                        },
                        "value": "0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74a398fb97c73fe516416e1dc2b2d1c836807b00191a179b39968d0a8eea7be9",
                          "typeString": "literal_string \"0 address\""
                        }
                      ],
                      "id": 7523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11733:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11733:57:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7532,
                  "nodeType": "ExpressionStatement",
                  "src": "11733:57:28"
                },
                {
                  "expression": {
                    "id": 7535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7533,
                      "name": "protocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7021,
                      "src": "11800:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7534,
                      "name": "_protocolFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7518,
                      "src": "11823:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "11800:44:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7536,
                  "nodeType": "ExpressionStatement",
                  "src": "11800:44:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7538,
                        "name": "_protocolFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7518,
                        "src": "11886:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7537,
                      "name": "ProtocolFeeRecipientUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7062,
                      "src": "11859:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11859:49:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7540,
                  "nodeType": "EmitStatement",
                  "src": "11854:54:28"
                }
              ]
            },
            "documentation": {
              "id": 7516,
              "nodeType": "StructuredDocumentation",
              "src": "11446:158:28",
              "text": "@notice Changes the protocol fee recipient address. Only callable by the owner.\n@param _protocolFeeRecipient The new fee recipient"
            },
            "functionSelector": "514f0330",
            "id": 7542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7521,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7520,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "11709:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "11709:9:28"
              }
            ],
            "name": "changeProtocolFeeRecipient",
            "nameLocation": "11618:26:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7518,
                  "mutability": "mutable",
                  "name": "_protocolFeeRecipient",
                  "nameLocation": "11661:21:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7542,
                  "src": "11645:37:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11645:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11644:39:28"
            },
            "returnParameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11723:0:28"
            },
            "scope": 7939,
            "src": "11609:306:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7565,
              "nodeType": "Block",
              "src": "12200:207:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7551,
                          "name": "_protocolFeeMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7545,
                          "src": "12218:22:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 7552,
                          "name": "MAX_PROTOCOL_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7006,
                          "src": "12244:16:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12218:42:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46656520746f6f206c61726765",
                        "id": 7554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12262:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01",
                          "typeString": "literal_string \"Fee too large\""
                        },
                        "value": "Fee too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d81b6272ef5cf512611f359c05fe61d015b541c85a1df1029b936bbf0854ca01",
                          "typeString": "literal_string \"Fee too large\""
                        }
                      ],
                      "id": 7550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12210:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12210:68:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7556,
                  "nodeType": "ExpressionStatement",
                  "src": "12210:68:28"
                },
                {
                  "expression": {
                    "id": 7559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7557,
                      "name": "protocolFeeMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7024,
                      "src": "12288:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7558,
                      "name": "_protocolFeeMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7545,
                      "src": "12312:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12288:46:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7560,
                  "nodeType": "ExpressionStatement",
                  "src": "12288:46:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7562,
                        "name": "_protocolFeeMultiplier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7545,
                        "src": "12377:22:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7561,
                      "name": "ProtocolFeeMultiplierUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7066,
                      "src": "12349:27:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12349:51:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7564,
                  "nodeType": "EmitStatement",
                  "src": "12344:56:28"
                }
              ]
            },
            "documentation": {
              "id": 7543,
              "nodeType": "StructuredDocumentation",
              "src": "11921:166:28",
              "text": "@notice Changes the protocol fee multiplier. Only callable by the owner.\n@param _protocolFeeMultiplier The new fee multiplier, 18 decimals"
            },
            "functionSelector": "9c3c11d2",
            "id": 7566,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7547,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "12186:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "12186:9:28"
              }
            ],
            "name": "changeProtocolFeeMultiplier",
            "nameLocation": "12101:27:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7545,
                  "mutability": "mutable",
                  "name": "_protocolFeeMultiplier",
                  "nameLocation": "12137:22:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7566,
                  "src": "12129:30:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12129:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12128:32:28"
            },
            "returnParameters": {
              "id": 7549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12200:0:28"
            },
            "scope": 7939,
            "src": "12092:315:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7588,
              "nodeType": "Block",
              "src": "12766:126:28",
              "statements": [
                {
                  "expression": {
                    "id": 7581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7577,
                        "name": "bondingCurveAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7029,
                        "src": "12776:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ICurve_$11580_$_t_bool_$",
                          "typeString": "mapping(contract ICurve => bool)"
                        }
                      },
                      "id": 7579,
                      "indexExpression": {
                        "id": 7578,
                        "name": "bondingCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "12796:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$11580",
                          "typeString": "contract ICurve"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12776:33:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7580,
                      "name": "isAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7572,
                      "src": "12812:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12776:45:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7582,
                  "nodeType": "ExpressionStatement",
                  "src": "12776:45:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7584,
                        "name": "bondingCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7570,
                        "src": "12861:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurve_$11580",
                          "typeString": "contract ICurve"
                        }
                      },
                      {
                        "id": 7585,
                        "name": "isAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7572,
                        "src": "12875:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICurve_$11580",
                          "typeString": "contract ICurve"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7583,
                      "name": "BondingCurveStatusUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7073,
                      "src": "12836:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ICurve_$11580_$_t_bool_$returns$__$",
                        "typeString": "function (contract ICurve,bool)"
                      }
                    },
                    "id": 7586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12836:49:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7587,
                  "nodeType": "EmitStatement",
                  "src": "12831:54:28"
                }
              ]
            },
            "documentation": {
              "id": 7567,
              "nodeType": "StructuredDocumentation",
              "src": "12413:240:28",
              "text": "@notice Sets the whitelist status of a bonding curve contract. Only callable by the owner.\n@param bondingCurve The bonding curve contract\n@param isAllowed True to whitelist, false to remove from whitelist"
            },
            "functionSelector": "4bf107c1",
            "id": 7589,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7575,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7574,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "12752:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "12752:9:28"
              }
            ],
            "name": "setBondingCurveAllowed",
            "nameLocation": "12667:22:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7570,
                  "mutability": "mutable",
                  "name": "bondingCurve",
                  "nameLocation": "12697:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7589,
                  "src": "12690:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICurve_$11580",
                    "typeString": "contract ICurve"
                  },
                  "typeName": {
                    "id": 7569,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7568,
                      "name": "ICurve",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11580,
                      "src": "12690:6:28"
                    },
                    "referencedDeclaration": 11580,
                    "src": "12690:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICurve_$11580",
                      "typeString": "contract ICurve"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7572,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "12716:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7589,
                  "src": "12711:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7571,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12711:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12689:37:28"
            },
            "returnParameters": {
              "id": 7576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12766:0:28"
            },
            "scope": 7939,
            "src": "12658:234:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7624,
              "nodeType": "Block",
              "src": "13262:335:28",
              "statements": [
                {
                  "condition": {
                    "id": 7599,
                    "name": "isAllowed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7594,
                    "src": "13332:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7612,
                  "nodeType": "IfStatement",
                  "src": "13328:165:28",
                  "trueBody": {
                    "id": 7611,
                    "nodeType": "Block",
                    "src": "13343:150:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "13382:49:28",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 7601,
                                    "name": "routerStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7046,
                                    "src": "13383:12:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_LSSVMRouter_$10184_$_t_struct$_RouterStatus_$7039_storage_$",
                                      "typeString": "mapping(contract LSSVMRouter => struct LSSVMPairFactory.RouterStatus storage ref)"
                                    }
                                  },
                                  "id": 7605,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "id": 7603,
                                        "name": "target",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7592,
                                        "src": "13408:6:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 7602,
                                      "name": "LSSVMRouter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10184,
                                      "src": "13396:11:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_LSSVMRouter_$10184_$",
                                        "typeString": "type(contract LSSVMRouter)"
                                      }
                                    },
                                    "id": 7604,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13396:19:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                                      "typeString": "contract LSSVMRouter"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13383:33:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RouterStatus_$7039_storage",
                                    "typeString": "struct LSSVMPairFactory.RouterStatus storage ref"
                                  }
                                },
                                "id": 7606,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "wasEverAllowed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7038,
                                "src": "13383:48:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e27742063616c6c20726f75746572",
                              "id": 7608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13449:19:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a",
                                "typeString": "literal_string \"Can't call router\""
                              },
                              "value": "Can't call router"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a",
                                "typeString": "literal_string \"Can't call router\""
                              }
                            ],
                            "id": 7600,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "13357:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13357:125:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7610,
                        "nodeType": "ExpressionStatement",
                        "src": "13357:125:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 7617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7613,
                        "name": "callAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7034,
                        "src": "13503:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7615,
                      "indexExpression": {
                        "id": 7614,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7592,
                        "src": "13515:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13503:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7616,
                      "name": "isAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7594,
                      "src": "13525:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13503:31:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7618,
                  "nodeType": "ExpressionStatement",
                  "src": "13503:31:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7620,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7592,
                        "src": "13572:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7621,
                        "name": "isAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7594,
                        "src": "13580:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7619,
                      "name": "CallTargetStatusUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7079,
                      "src": "13549:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 7622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13549:41:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7623,
                  "nodeType": "EmitStatement",
                  "src": "13544:46:28"
                }
              ]
            },
            "documentation": {
              "id": 7590,
              "nodeType": "StructuredDocumentation",
              "src": "12898:256:28",
              "text": "@notice Sets the whitelist status of a contract to be called arbitrarily by a pair.\nOnly callable by the owner.\n@param target The target contract\n@param isAllowed True to whitelist, false to remove from whitelist"
            },
            "functionSelector": "ebd0f693",
            "id": 7625,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7597,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7596,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "13248:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "13248:9:28"
              }
            ],
            "name": "setCallAllowed",
            "nameLocation": "13168:14:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7592,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "13199:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7625,
                  "src": "13183:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13183:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7594,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "13212:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7625,
                  "src": "13207:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7593,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13207:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13182:40:28"
            },
            "returnParameters": {
              "id": 7598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13262:0:28"
            },
            "scope": 7939,
            "src": "13159:438:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7664,
              "nodeType": "Block",
              "src": "13904:356:28",
              "statements": [
                {
                  "condition": {
                    "id": 7636,
                    "name": "isAllowed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7631,
                    "src": "13980:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7649,
                  "nodeType": "IfStatement",
                  "src": "13976:100:28",
                  "trueBody": {
                    "id": 7648,
                    "nodeType": "Block",
                    "src": "13991:85:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "14013:30:28",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 7638,
                                  "name": "callAllowed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7034,
                                  "src": "14014:11:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 7643,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 7641,
                                      "name": "_router",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7629,
                                      "src": "14034:7:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                                        "typeString": "contract LSSVMRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                                        "typeString": "contract LSSVMRouter"
                                      }
                                    ],
                                    "id": 7640,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14026:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7639,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14026:7:28",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14026:16:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14014:29:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e27742063616c6c20726f75746572",
                              "id": 7645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14045:19:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a",
                                "typeString": "literal_string \"Can't call router\""
                              },
                              "value": "Can't call router"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e92bc659a1fd70ffb54364e59ff723bbec14a347583ebef4759d1a2a1120c33a",
                                "typeString": "literal_string \"Can't call router\""
                              }
                            ],
                            "id": 7637,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "14005:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14005:60:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7647,
                        "nodeType": "ExpressionStatement",
                        "src": "14005:60:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 7657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7650,
                        "name": "routerStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7046,
                        "src": "14085:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_LSSVMRouter_$10184_$_t_struct$_RouterStatus_$7039_storage_$",
                          "typeString": "mapping(contract LSSVMRouter => struct LSSVMPairFactory.RouterStatus storage ref)"
                        }
                      },
                      "id": 7652,
                      "indexExpression": {
                        "id": 7651,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7629,
                        "src": "14098:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                          "typeString": "contract LSSVMRouter"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14085:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RouterStatus_$7039_storage",
                        "typeString": "struct LSSVMPairFactory.RouterStatus storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7654,
                          "name": "isAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7631,
                          "src": "14145:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 7655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14184:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 7653,
                        "name": "RouterStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7039,
                        "src": "14109:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RouterStatus_$7039_storage_ptr_$",
                          "typeString": "type(struct LSSVMPairFactory.RouterStatus storage pointer)"
                        }
                      },
                      "id": 7656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "allowed",
                        "wasEverAllowed"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "14109:90:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RouterStatus_$7039_memory_ptr",
                        "typeString": "struct LSSVMPairFactory.RouterStatus memory"
                      }
                    },
                    "src": "14085:114:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RouterStatus_$7039_storage",
                      "typeString": "struct LSSVMPairFactory.RouterStatus storage ref"
                    }
                  },
                  "id": 7658,
                  "nodeType": "ExpressionStatement",
                  "src": "14085:114:28"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7660,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7629,
                        "src": "14234:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                          "typeString": "contract LSSVMRouter"
                        }
                      },
                      {
                        "id": 7661,
                        "name": "isAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7631,
                        "src": "14243:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                          "typeString": "contract LSSVMRouter"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7659,
                      "name": "RouterStatusUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7086,
                      "src": "14215:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_LSSVMRouter_$10184_$_t_bool_$returns$__$",
                        "typeString": "function (contract LSSVMRouter,bool)"
                      }
                    },
                    "id": 7662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14215:38:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7663,
                  "nodeType": "EmitStatement",
                  "src": "14210:43:28"
                }
              ]
            },
            "documentation": {
              "id": 7626,
              "nodeType": "StructuredDocumentation",
              "src": "13603:194:28",
              "text": "@notice Updates the router whitelist. Only callable by the owner.\n@param _router The router\n@param isAllowed True to whitelist, false to remove from whitelist"
            },
            "functionSelector": "6cc88edb",
            "id": 7665,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7633,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "13890:9:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "13890:9:28"
              }
            ],
            "name": "setRouterAllowed",
            "nameLocation": "13811:16:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7629,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "13840:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7665,
                  "src": "13828:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                    "typeString": "contract LSSVMRouter"
                  },
                  "typeName": {
                    "id": 7628,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7627,
                      "name": "LSSVMRouter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10184,
                      "src": "13828:11:28"
                    },
                    "referencedDeclaration": 10184,
                    "src": "13828:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMRouter_$10184",
                      "typeString": "contract LSSVMRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7631,
                  "mutability": "mutable",
                  "name": "isAllowed",
                  "nameLocation": "13854:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7665,
                  "src": "13849:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7630,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13849:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13827:37:28"
            },
            "returnParameters": {
              "id": 7635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13904:0:28"
            },
            "scope": 7939,
            "src": "13802:458:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7740,
              "nodeType": "Block",
              "src": "14559:574:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "14613:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14613:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7691,
                        "name": "_assetRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7674,
                        "src": "14625:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7692,
                        "name": "_delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7676,
                        "src": "14642:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 7693,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7678,
                        "src": "14650:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 7694,
                        "name": "_spotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7680,
                        "src": "14656:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 7686,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7669,
                        "src": "14596:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                          "typeString": "contract LSSVMPairETH"
                        }
                      },
                      "id": 7688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4751,
                      "src": "14596:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_payable_$_t_uint128_$_t_uint96_$_t_uint128_$returns$__$",
                        "typeString": "function (address,address payable,uint128,uint96,uint128) payable external"
                      }
                    },
                    "id": 7695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14596:71:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7696,
                  "nodeType": "ExpressionStatement",
                  "src": "14596:71:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7705,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "14758:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "14758:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 7701,
                                "name": "_pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7669,
                                "src": "14734:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                                  "typeString": "contract LSSVMPairETH"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                                  "typeString": "contract LSSVMPairETH"
                                }
                              ],
                              "id": 7700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14726:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 7699,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14726:7:28",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14726:14:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14718:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 7697,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14718:8:28",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14718:23:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 7704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12674,
                      "src": "14718:39:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14718:50:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7708,
                  "nodeType": "ExpressionStatement",
                  "src": "14718:50:28"
                },
                {
                  "assignments": [
                    7710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7710,
                      "mutability": "mutable",
                      "name": "numNFTs",
                      "nameLocation": "14840:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7740,
                      "src": "14832:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14832:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7713,
                  "initialValue": {
                    "expression": {
                      "id": 7711,
                      "name": "_initialNFTIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7683,
                      "src": "14850:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 7712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "14850:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14832:39:28"
                },
                {
                  "body": {
                    "id": 7738,
                    "nodeType": "Block",
                    "src": "14912:215:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7723,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "14965:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14965:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 7727,
                                  "name": "_pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7669,
                                  "src": "15001:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                                    "typeString": "contract LSSVMPairETH"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                                    "typeString": "contract LSSVMPairETH"
                                  }
                                ],
                                "id": 7726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14993:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7725,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14993:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14993:14:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 7729,
                                "name": "_initialNFTIDs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7683,
                                "src": "15025:14:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 7731,
                              "indexExpression": {
                                "id": 7730,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7715,
                                "src": "15040:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15025:17:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7720,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7672,
                              "src": "14926:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2445",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 7722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2388,
                            "src": "14926:21:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 7732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14926:130:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7733,
                        "nodeType": "ExpressionStatement",
                        "src": "14926:130:28"
                      },
                      {
                        "id": 7737,
                        "nodeType": "UncheckedBlock",
                        "src": "15071:46:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "15099:3:28",
                              "subExpression": {
                                "id": 7734,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7715,
                                "src": "15101:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7736,
                            "nodeType": "ExpressionStatement",
                            "src": "15099:3:28"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7717,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7715,
                      "src": "14897:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7718,
                      "name": "numNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7710,
                      "src": "14901:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14897:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7739,
                  "initializationExpression": {
                    "assignments": [
                      7715
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7715,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14894:1:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 7739,
                        "src": "14886:9:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7714,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14886:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7716,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14886:9:28"
                  },
                  "nodeType": "ForStatement",
                  "src": "14881:246:28"
                }
              ]
            },
            "documentation": {
              "id": 7666,
              "nodeType": "StructuredDocumentation",
              "src": "14266:37:28",
              "text": " Internal functions"
            },
            "id": 7741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializePairETH",
            "nameLocation": "14318:18:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7669,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "14359:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14346:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                    "typeString": "contract LSSVMPairETH"
                  },
                  "typeName": {
                    "id": 7668,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7667,
                      "name": "LSSVMPairETH",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6629,
                      "src": "14346:12:28"
                    },
                    "referencedDeclaration": 6629,
                    "src": "14346:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairETH_$6629",
                      "typeString": "contract LSSVMPairETH"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7672,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "14382:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14374:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 7671,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7670,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2445,
                      "src": "14374:7:28"
                    },
                    "referencedDeclaration": 2445,
                    "src": "14374:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2445",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7674,
                  "mutability": "mutable",
                  "name": "_assetRecipient",
                  "nameLocation": "14412:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14396:31:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14396:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7676,
                  "mutability": "mutable",
                  "name": "_delta",
                  "nameLocation": "14445:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14437:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7675,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14437:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7678,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "14468:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14461:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7677,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "14461:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7680,
                  "mutability": "mutable",
                  "name": "_spotPrice",
                  "nameLocation": "14490:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14482:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7679,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14482:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7683,
                  "mutability": "mutable",
                  "name": "_initialNFTIDs",
                  "nameLocation": "14529:14:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "14510:33:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7681,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14510:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7682,
                    "nodeType": "ArrayTypeName",
                    "src": "14510:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14336:213:28"
            },
            "returnParameters": {
              "id": 7685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14559:0:28"
            },
            "scope": 7939,
            "src": "14309:824:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7820,
              "nodeType": "Block",
              "src": "15453:646:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "15507:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15507:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7771,
                        "name": "_assetRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7752,
                        "src": "15519:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 7772,
                        "name": "_delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7754,
                        "src": "15536:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 7773,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7756,
                        "src": "15544:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 7774,
                        "name": "_spotPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7758,
                        "src": "15550:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 7766,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7744,
                        "src": "15490:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                          "typeString": "contract LSSVMPairERC20"
                        }
                      },
                      "id": 7768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4751,
                      "src": "15490:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_payable_$_t_uint128_$_t_uint96_$_t_uint128_$returns$__$",
                        "typeString": "function (address,address payable,uint128,uint96,uint128) payable external"
                      }
                    },
                    "id": 7775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15490:71:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7776,
                  "nodeType": "ExpressionStatement",
                  "src": "15490:71:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7780,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "15652:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15652:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 7784,
                            "name": "_pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7744,
                            "src": "15684:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                              "typeString": "contract LSSVMPairERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                              "typeString": "contract LSSVMPairERC20"
                            }
                          ],
                          "id": 7783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15676:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7782,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15676:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15676:14:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7786,
                        "name": "_initialTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7763,
                        "src": "15704:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7777,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7747,
                        "src": "15615:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12696,
                      "src": "15615:23:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$12652_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$12652_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 7787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15615:119:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7788,
                  "nodeType": "ExpressionStatement",
                  "src": "15615:119:28"
                },
                {
                  "assignments": [
                    7790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7790,
                      "mutability": "mutable",
                      "name": "numNFTs",
                      "nameLocation": "15806:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7820,
                      "src": "15798:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7789,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15798:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7793,
                  "initialValue": {
                    "expression": {
                      "id": 7791,
                      "name": "_initialNFTIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7761,
                      "src": "15816:14:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 7792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "15816:21:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15798:39:28"
                },
                {
                  "body": {
                    "id": 7818,
                    "nodeType": "Block",
                    "src": "15878:215:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7803,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "15931:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15931:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 7807,
                                  "name": "_pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7744,
                                  "src": "15967:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                                    "typeString": "contract LSSVMPairERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                                    "typeString": "contract LSSVMPairERC20"
                                  }
                                ],
                                "id": 7806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15959:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7805,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15959:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15959:14:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 7809,
                                "name": "_initialNFTIDs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7761,
                                "src": "15991:14:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 7811,
                              "indexExpression": {
                                "id": 7810,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7795,
                                "src": "16006:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15991:17:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7800,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7750,
                              "src": "15892:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2445",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 7802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2388,
                            "src": "15892:21:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 7812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15892:130:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7813,
                        "nodeType": "ExpressionStatement",
                        "src": "15892:130:28"
                      },
                      {
                        "id": 7817,
                        "nodeType": "UncheckedBlock",
                        "src": "16037:46:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16065:3:28",
                              "subExpression": {
                                "id": 7814,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7795,
                                "src": "16067:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7816,
                            "nodeType": "ExpressionStatement",
                            "src": "16065:3:28"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7797,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7795,
                      "src": "15863:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7798,
                      "name": "numNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7790,
                      "src": "15867:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15863:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7819,
                  "initializationExpression": {
                    "assignments": [
                      7795
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7795,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15860:1:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 7819,
                        "src": "15852:9:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7794,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15852:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7796,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15852:9:28"
                  },
                  "nodeType": "ForStatement",
                  "src": "15847:246:28"
                }
              ]
            },
            "id": 7821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializePairERC20",
            "nameLocation": "15148:20:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7744,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "15193:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15178:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                    "typeString": "contract LSSVMPairERC20"
                  },
                  "typeName": {
                    "id": 7743,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7742,
                      "name": "LSSVMPairERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6324,
                      "src": "15178:14:28"
                    },
                    "referencedDeclaration": 6324,
                    "src": "15178:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                      "typeString": "contract LSSVMPairERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7747,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "15214:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15208:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$12652",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7746,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7745,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12652,
                      "src": "15208:5:28"
                    },
                    "referencedDeclaration": 12652,
                    "src": "15208:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$12652",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7750,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "15238:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15230:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 7749,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7748,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2445,
                      "src": "15230:7:28"
                    },
                    "referencedDeclaration": 2445,
                    "src": "15230:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2445",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7752,
                  "mutability": "mutable",
                  "name": "_assetRecipient",
                  "nameLocation": "15268:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15252:31:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15252:15:28",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7754,
                  "mutability": "mutable",
                  "name": "_delta",
                  "nameLocation": "15301:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15293:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7753,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "15293:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7756,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "15324:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15317:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 7755,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "15317:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7758,
                  "mutability": "mutable",
                  "name": "_spotPrice",
                  "nameLocation": "15346:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15338:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7757,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "15338:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7761,
                  "mutability": "mutable",
                  "name": "_initialNFTIDs",
                  "nameLocation": "15385:14:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15366:33:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7759,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15366:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7760,
                    "nodeType": "ArrayTypeName",
                    "src": "15366:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7763,
                  "mutability": "mutable",
                  "name": "_initialTokenBalance",
                  "nameLocation": "15417:20:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7821,
                  "src": "15409:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15409:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15168:275:28"
            },
            "returnParameters": {
              "id": 7765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15453:0:28"
            },
            "scope": 7939,
            "src": "15139:960:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7890,
              "nodeType": "Block",
              "src": "16360:608:28",
              "statements": [
                {
                  "assignments": [
                    7834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7834,
                      "mutability": "mutable",
                      "name": "numNFTs",
                      "nameLocation": "16428:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 7890,
                      "src": "16420:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7833,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16420:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7837,
                  "initialValue": {
                    "expression": {
                      "id": 7835,
                      "name": "ids",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7828,
                      "src": "16438:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 7836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "16438:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16420:28:28"
                },
                {
                  "body": {
                    "id": 7859,
                    "nodeType": "Block",
                    "src": "16489:137:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 7847,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "16525:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "16525:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 7849,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7830,
                              "src": "16537:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 7850,
                                "name": "ids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7828,
                                "src": "16548:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 7852,
                              "indexExpression": {
                                "id": 7851,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7839,
                                "src": "16552:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16548:6:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 7844,
                              "name": "_nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7825,
                              "src": "16503:4:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2445",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 7846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2388,
                            "src": "16503:21:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 7853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16503:52:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7854,
                        "nodeType": "ExpressionStatement",
                        "src": "16503:52:28"
                      },
                      {
                        "id": 7858,
                        "nodeType": "UncheckedBlock",
                        "src": "16570:46:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 7856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16598:3:28",
                              "subExpression": {
                                "id": 7855,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7839,
                                "src": "16600:1:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 7857,
                            "nodeType": "ExpressionStatement",
                            "src": "16598:3:28"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7841,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7839,
                      "src": "16474:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 7842,
                      "name": "numNFTs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7834,
                      "src": "16478:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16474:11:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7860,
                  "initializationExpression": {
                    "assignments": [
                      7839
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7839,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16471:1:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 7860,
                        "src": "16463:9:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16463:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7840,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16463:9:28"
                  },
                  "nodeType": "ForStatement",
                  "src": "16458:168:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 7883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 7877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 7862,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7830,
                              "src": "16659:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 7863,
                                "name": "PairVariant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4514,
                                "src": "16670:11:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                                  "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                                }
                              },
                              "id": 7864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ENUMERABLE_ERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4512,
                              "src": "16670:28:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PairVariant_$4514",
                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_PairVariant_$4514",
                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                              }
                            ],
                            "id": 7861,
                            "name": "isPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7474,
                            "src": "16652:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                              "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                            }
                          },
                          "id": 7865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16652:47:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 7867,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7830,
                              "src": "16722:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 7868,
                                "name": "PairVariant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4514,
                                "src": "16733:11:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                                  "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                                }
                              },
                              "id": 7869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ENUMERABLE_ETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4510,
                              "src": "16733:26:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PairVariant_$4514",
                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_PairVariant_$4514",
                                "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                              }
                            ],
                            "id": 7866,
                            "name": "isPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7474,
                            "src": "16715:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                              "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                            }
                          },
                          "id": 7870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16715:45:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "16652:108:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 7873,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7830,
                            "src": "16783:9:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 7874,
                              "name": "PairVariant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4514,
                              "src": "16794:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                                "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                              }
                            },
                            "id": 7875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MISSING_ENUMERABLE_ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4513,
                            "src": "16794:36:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PairVariant_$4514",
                              "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_enum$_PairVariant_$4514",
                              "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                            }
                          ],
                          "id": 7872,
                          "name": "isPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7474,
                          "src": "16776:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                            "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                          }
                        },
                        "id": 7876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16776:55:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "16652:179:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 7879,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7830,
                          "src": "16854:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 7880,
                            "name": "PairVariant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4514,
                            "src": "16865:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                              "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                            }
                          },
                          "id": 7881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MISSING_ENUMERABLE_ETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4511,
                          "src": "16865:34:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        ],
                        "id": 7878,
                        "name": "isPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "16847:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                          "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                        }
                      },
                      "id": 7882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16847:53:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "16652:248:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7889,
                  "nodeType": "IfStatement",
                  "src": "16635:327:28",
                  "trueBody": {
                    "id": 7888,
                    "nodeType": "Block",
                    "src": "16911:51:28",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 7885,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7830,
                              "src": "16941:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7884,
                            "name": "NFTDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7058,
                            "src": "16930:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 7886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16930:21:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7887,
                        "nodeType": "EmitStatement",
                        "src": "16925:26:28"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7822,
              "nodeType": "StructuredDocumentation",
              "src": "16105:133:28",
              "text": "@dev Used to deposit NFTs into a pair after creation and emit an event for indexing (if recipient is indeed a pair)"
            },
            "functionSelector": "2cdb394b",
            "id": 7891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNFTs",
            "nameLocation": "16252:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7825,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "16281:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7891,
                  "src": "16273:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2445",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 7824,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7823,
                      "name": "IERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2445,
                      "src": "16273:7:28"
                    },
                    "referencedDeclaration": 2445,
                    "src": "16273:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2445",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7828,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "16314:3:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7891,
                  "src": "16295:22:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7826,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "16295:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7827,
                    "nodeType": "ArrayTypeName",
                    "src": "16295:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7830,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "16335:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7891,
                  "src": "16327:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16327:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16263:87:28"
            },
            "returnParameters": {
              "id": 7832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16360:0:28"
            },
            "scope": 7939,
            "src": "16243:725:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7937,
              "nodeType": "Block",
              "src": "17252:358:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7905,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "17285:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17285:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7907,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7897,
                        "src": "17297:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7908,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7899,
                        "src": "17308:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 7902,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7895,
                        "src": "17262:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$12652",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 7904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12696,
                      "src": "17262:22:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$12652_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$12652_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 7909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17262:53:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7910,
                  "nodeType": "ExpressionStatement",
                  "src": "17262:53:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 7921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 7912,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7897,
                          "src": "17349:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 7913,
                            "name": "PairVariant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4514,
                            "src": "17360:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                              "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                            }
                          },
                          "id": 7914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ENUMERABLE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4512,
                          "src": "17360:28:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        ],
                        "id": 7911,
                        "name": "isPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "17342:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                          "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                        }
                      },
                      "id": 7915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17342:47:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 7917,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7897,
                          "src": "17412:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 7918,
                            "name": "PairVariant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4514,
                            "src": "17423:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_PairVariant_$4514_$",
                              "typeString": "type(enum ILSSVMPairFactoryLike.PairVariant)"
                            }
                          },
                          "id": 7919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "MISSING_ENUMERABLE_ERC20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4513,
                          "src": "17423:36:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_PairVariant_$4514",
                            "typeString": "enum ILSSVMPairFactoryLike.PairVariant"
                          }
                        ],
                        "id": 7916,
                        "name": "isPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7474,
                        "src": "17405:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_enum$_PairVariant_$4514_$returns$_t_bool_$",
                          "typeString": "function (address,enum ILSSVMPairFactoryLike.PairVariant) view returns (bool)"
                        }
                      },
                      "id": 7920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17405:55:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17342:118:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7936,
                  "nodeType": "IfStatement",
                  "src": "17325:279:28",
                  "trueBody": {
                    "id": 7935,
                    "nodeType": "Block",
                    "src": "17471:133:28",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_ERC20_$12652",
                            "typeString": "contract ERC20"
                          },
                          "id": 7928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 7922,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7895,
                            "src": "17489:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$12652",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 7924,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7897,
                                    "src": "17513:9:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7923,
                                  "name": "LSSVMPairERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6324,
                                  "src": "17498:14:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_LSSVMPairERC20_$6324_$",
                                    "typeString": "type(contract LSSVMPairERC20)"
                                  }
                                },
                                "id": 7925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17498:25:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LSSVMPairERC20_$6324",
                                  "typeString": "contract LSSVMPairERC20"
                                }
                              },
                              "id": 7926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6056,
                              "src": "17498:31:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_contract$_ERC20_$12652_$",
                                "typeString": "function () pure external returns (contract ERC20)"
                              }
                            },
                            "id": 7927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17498:33:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$12652",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "17489:42:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7934,
                        "nodeType": "IfStatement",
                        "src": "17485:109:28",
                        "trueBody": {
                          "id": 7933,
                          "nodeType": "Block",
                          "src": "17533:61:28",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 7930,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7897,
                                    "src": "17569:9:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7929,
                                  "name": "TokenDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7054,
                                  "src": "17556:12:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 7931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17556:23:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 7932,
                              "nodeType": "EmitStatement",
                              "src": "17551:28:28"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7892,
              "nodeType": "StructuredDocumentation",
              "src": "16974:164:28",
              "text": "@dev Used to deposit ERC20s into a pair after creation and emit an event for indexing (if recipient is indeed an ERC20 pair and the token matches)"
            },
            "functionSelector": "1cad5a40",
            "id": 7938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositERC20",
            "nameLocation": "17152:12:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7895,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17180:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7938,
                  "src": "17174:11:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$12652",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 7894,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7893,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12652,
                      "src": "17174:5:28"
                    },
                    "referencedDeclaration": 12652,
                    "src": "17174:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$12652",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7897,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "17203:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7938,
                  "src": "17195:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17195:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7899,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17230:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 7938,
                  "src": "17222:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17222:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17164:78:28"
            },
            "returnParameters": {
              "id": 7901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17252:0:28"
            },
            "scope": 7939,
            "src": "17143:467:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7940,
        "src": "1429:16183:28",
        "usedErrors": []
      }
    ],
    "src": "37:17576:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "300500": {
      "events": {
        "0x1da28d127ec72d2dde6a533c98857664b25cd827680fb1f39f57394c2b444d91": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract ICurve",
              "name": "bondingCurve",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "name": "BondingCurveStatusUpdate",
          "type": "event"
        },
        "0xab2e2e8d21d5efbffb30945e9b6ee1fb43620ef65a228f871f5028bf8a6e004a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "name": "CallTargetStatusUpdate",
          "type": "event"
        },
        "0x4fd0cd7c14badac45ff0bee670a9d8dd80e87907afcf2c121e0fd4b8b4b0047f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            }
          ],
          "name": "NFTDeposit",
          "type": "event"
        },
        "0xf5bdc103c3e68a20d5f97d2d46792d3fdddfa4efeb6761f8141e6a7b936ca66c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            }
          ],
          "name": "NewPair",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x7c5d30e0df5c540841a598b27bd89807223a2e6348125bb4aa74f1a8cb9ce768": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "newMultiplier",
              "type": "uint256"
            }
          ],
          "name": "ProtocolFeeMultiplierUpdate",
          "type": "event"
        },
        "0xceec08a75d1f3b12c14c6cdc16c081aec1c401c2eac1d8c6ea91e9d73b929211": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipientAddress",
              "type": "address"
            }
          ],
          "name": "ProtocolFeeRecipientUpdate",
          "type": "event"
        },
        "0x24e274cfd23919da24a57044266685f5474338837aecdcca3136b2102f78fee5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "contract LSSVMRouter",
              "name": "router",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ],
          "name": "RouterStatusUpdate",
          "type": "event"
        },
        "0x831faf3fbb75c9fc66e318de7e95905d24c0430822da168c1c06fd49cba8f5f7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            }
          ],
          "name": "TokenDeposit",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3df054dA59B1c0D5d9CeE5EDc9B58798526023B5",
      "transactionHash": "0x1b78f5df670c0d67260d6aa8e20719e9770f7240a65728f2e415843d37897c8d"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-11-01T12:38:41.441Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "changeProtocolFeeMultiplier(uint256)": {
        "params": {
          "_protocolFeeMultiplier": "The new fee multiplier, 18 decimals"
        }
      },
      "changeProtocolFeeRecipient(address)": {
        "params": {
          "_protocolFeeRecipient": "The new fee recipient"
        }
      },
      "createPairETH(address,address,address,uint8,uint128,uint96,uint128,uint256[])": {
        "params": {
          "_assetRecipient": "The address that will receive the assets traders give during trades. If set to address(0), assets will be sent to the pool address. Not available to TRADE pools. ",
          "_bondingCurve": "The bonding curve for the pair to price NFTs, must be whitelisted",
          "_delta": "The delta value used by the bonding curve. The meaning of delta depends on the specific curve.",
          "_fee": "The fee taken by the LP in each trade. Can only be non-zero if _poolType is Trade.",
          "_initialNFTIDs": "The list of IDs of NFTs to transfer from the sender to the pair",
          "_nft": "The NFT contract of the collection the pair trades",
          "_poolType": "TOKEN, NFT, or TRADE",
          "_spotPrice": "The initial selling spot price"
        },
        "returns": {
          "pair": "The new pair"
        }
      },
      "depositERC20(address,address,uint256)": {
        "details": "Used to deposit ERC20s into a pair after creation and emit an event for indexing (if recipient is indeed an ERC20 pair and the token matches)"
      },
      "depositNFTs(address,uint256[],address)": {
        "details": "Used to deposit NFTs into a pair after creation and emit an event for indexing (if recipient is indeed a pair)"
      },
      "isPair(address,uint8)": {
        "params": {
          "potentialPair": "The address to check",
          "variant": "The pair variant (NFT is enumerable or not, pair uses ETH or ERC20)"
        },
        "returns": {
          "_0": "True if the address is the specified pair variant, false otherwise"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setBondingCurveAllowed(address,bool)": {
        "params": {
          "bondingCurve": "The bonding curve contract",
          "isAllowed": "True to whitelist, false to remove from whitelist"
        }
      },
      "setCallAllowed(address,bool)": {
        "params": {
          "isAllowed": "True to whitelist, false to remove from whitelist",
          "target": "The target contract"
        }
      },
      "setRouterAllowed(address,bool)": {
        "params": {
          "_router": "The router",
          "isAllowed": "True to whitelist, false to remove from whitelist"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawERC20ProtocolFees(address,uint256)": {
        "params": {
          "amount": "The amount of tokens to transfer",
          "token": "The token to transfer"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeProtocolFeeMultiplier(uint256)": {
        "notice": "Changes the protocol fee multiplier. Only callable by the owner."
      },
      "changeProtocolFeeRecipient(address)": {
        "notice": "Changes the protocol fee recipient address. Only callable by the owner."
      },
      "createPairETH(address,address,address,uint8,uint128,uint96,uint128,uint256[])": {
        "notice": "Creates a pair contract using EIP-1167."
      },
      "isPair(address,uint8)": {
        "notice": "Checks if an address is a LSSVMPair. Uses the fact that the pairs are EIP-1167 minimal proxies."
      },
      "setBondingCurveAllowed(address,bool)": {
        "notice": "Sets the whitelist status of a bonding curve contract. Only callable by the owner."
      },
      "setCallAllowed(address,bool)": {
        "notice": "Sets the whitelist status of a contract to be called arbitrarily by a pair. Only callable by the owner."
      },
      "setRouterAllowed(address,bool)": {
        "notice": "Updates the router whitelist. Only callable by the owner."
      },
      "withdrawERC20ProtocolFees(address,uint256)": {
        "notice": "Withdraws ERC20 tokens to the protocol fee recipient. Only callable by the owner."
      },
      "withdrawETHProtocolFees()": {
        "notice": "Withdraws the ETH balance to the protocol fee recipient. Only callable by the owner."
      }
    },
    "version": 1
  }
}