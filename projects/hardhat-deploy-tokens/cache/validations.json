{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:IERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/IERC2981Upgradeable.sol:16",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:21",
        "version": {
          "withMetadata": "a8de633afc960b6519427518a0a8b0e65b6c53dc69ce1e9a1a44e4fa74a91221",
          "withoutMetadata": "9e8d04730edbe88705272c17e760207c13f48d5ebacb460023dc07ce963b1d1c",
          "linkedWithoutMetadata": "9e8d04730edbe88705272c17e760207c13f48d5ebacb460023dc07ce963b1d1c"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "102",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "104",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:IERC1155ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:14",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "8f5b9eb7b94dd4d97326429733ed3e86d68071b584822ba9c35a61521b211db7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:12",
        "version": {
          "withMetadata": "0cffa58506d2d3cfe3e2a963eb79e7337b3b49a6dd2c0b5c920ca4b85a4073af",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "89a3dbc14eae93be9637ba9232866e13f278375248462925324898f303a3ff08",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:9",
        "version": {
          "withMetadata": "3b5c62b89d92f09b98c25e48a1ecde24e657bb9153576b9f748b695b3169bcc1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:ERC721AUpgradeable": {
        "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:27",
        "version": {
          "withMetadata": "3103b6f5619ca00c53bd3a0db54593ee4f449dcba6f7c96dadea159eb27dde22",
          "withoutMetadata": "809e27da7bda935c5ab633d08f8a19279f6e59d3b3bc952900d0304ac0299d9d",
          "linkedWithoutMetadata": "809e27da7bda935c5ab633d08f8a19279f6e59d3b3bc952900d0304ac0299d9d"
        },
        "inherit": [
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:32"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:35"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "103",
              "type": "t_string_storage",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "104",
              "type": "t_string_storage",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:41"
            },
            {
              "label": "_ownerships",
              "offset": 0,
              "slot": "105",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)15908_storage)",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:45"
            },
            {
              "label": "_addressData",
              "offset": 0,
              "slot": "106",
              "type": "t_mapping(t_address,t_struct(AddressData)15917_storage)",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:48"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "107",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:51"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "108",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:54"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "109",
              "type": "t_array(t_uint256)42_storage",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:597"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)42_storage": {
              "label": "uint256[42]",
              "numberOfBytes": "1344"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressData)15917_storage)": {
              "label": "mapping(address => struct IERC721AUpgradeable.AddressData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)15908_storage)": {
              "label": "mapping(uint256 => struct IERC721AUpgradeable.TokenOwnership)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressData)15917_storage": {
              "label": "struct IERC721AUpgradeable.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "numberBurned",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "aux",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TokenOwnership)15908_storage": {
              "label": "struct IERC721AUpgradeable.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "burned",
                  "type": "t_bool",
                  "offset": 28,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:IERC165": {
        "src": "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/interface/IERC20.sol:IERC20": {
        "src": "@rarible/external-contracts/contracts/eip/interface/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/interface/IERC2981.sol:IERC2981": {
        "src": "@rarible/external-contracts/contracts/eip/interface/IERC2981.sol:14",
        "inherit": [
          "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/interface/IERC4906.sol:IERC4906": {
        "src": "@rarible/external-contracts/contracts/eip/interface/IERC4906.sol:7",
        "inherit": [
          "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/interface/IERC721.sol:IERC721": {
        "src": "@rarible/external-contracts/contracts/eip/interface/IERC721.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/queryable/ERC721AQueryableUpgradeable.sol:ERC721AQueryableUpgradeable": {
        "src": "@rarible/external-contracts/contracts/eip/queryable/ERC721AQueryableUpgradeable.sol:16",
        "inherit": [
          "@rarible/external-contracts/contracts/eip/queryable/IERC721AQueryableUpgradeable.sol:IERC721AQueryableUpgradeable",
          "@rarible/external-contracts/contracts/eip/queryable/ERC721AUpgradeable.sol:ERC721AUpgradeable",
          "@rarible/external-contracts/contracts/eip/queryable/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "@rarible/external-contracts/contracts/eip/queryable/ERC721A__Initializable.sol:ERC721A__Initializable"
        ],
        "libraries": [],
        "methods": [
          "explicitOwnershipOf(uint256)",
          "tokensOfOwnerIn(address,uint256,uint256)",
          "tokensOfOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/queryable/ERC721AStorage.sol:ERC721AStorage": {
        "src": "@rarible/external-contracts/contracts/eip/queryable/ERC721AStorage.sol:5",
        "version": {
          "withMetadata": "707c7762fb4bb40d2170717c5458c951014dee2e9c657d6153c0d606bceacbb0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/queryable/ERC721AUpgradeable.sol:ERC721AUpgradeable": {
        "src": "@rarible/external-contracts/contracts/eip/queryable/ERC721AUpgradeable.sol:38",
        "version": {
          "withMetadata": "72eb21d9782f63f7d48971fac630edff76a893d4fd56ccd83e230cb851c6744f",
          "withoutMetadata": "3743de3ef37c78506c4d26c8088ae778ac472805dde25a0d441d6dfa556b58b2",
          "linkedWithoutMetadata": "3743de3ef37c78506c4d26c8088ae778ac472805dde25a0d441d6dfa556b58b2"
        },
        "inherit": [
          "@rarible/external-contracts/contracts/eip/queryable/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "@rarible/external-contracts/contracts/eip/queryable/ERC721A__Initializable.sol:ERC721A__Initializable"
        ],
        "libraries": [
          "@rarible/external-contracts/contracts/eip/queryable/ERC721AStorage.sol:ERC721AStorage"
        ],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/queryable/ERC721AUpgradeable.sol:ERC721A__IERC721ReceiverUpgradeable": {
        "src": "@rarible/external-contracts/contracts/eip/queryable/ERC721AUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/queryable/ERC721A__Initializable.sol:ERC721A__Initializable": {
        "src": "@rarible/external-contracts/contracts/eip/queryable/ERC721A__Initializable.sol:19",
        "inherit": [],
        "libraries": [
          "@rarible/external-contracts/contracts/eip/queryable/ERC721A__InitializableStorage.sol:ERC721A__InitializableStorage"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/queryable/ERC721A__InitializableStorage.sol:ERC721A__InitializableStorage": {
        "src": "@rarible/external-contracts/contracts/eip/queryable/ERC721A__InitializableStorage.sol:9",
        "version": {
          "withMetadata": "d87c7075aed6cce91a04643b15ea31b38d5a4a1ce0b97ef8ecd85bbd1ac83dfd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/queryable/IERC721AQueryableUpgradeable.sol:IERC721AQueryableUpgradeable": {
        "src": "@rarible/external-contracts/contracts/eip/queryable/IERC721AQueryableUpgradeable.sol:12",
        "inherit": [
          "@rarible/external-contracts/contracts/eip/queryable/IERC721AUpgradeable.sol:IERC721AUpgradeable"
        ],
        "libraries": [],
        "methods": [
          "explicitOwnershipOf(uint256)",
          "tokensOfOwnerIn(address,uint256,uint256)",
          "tokensOfOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/eip/queryable/IERC721AUpgradeable.sol:IERC721AUpgradeable": {
        "src": "@rarible/external-contracts/contracts/eip/queryable/IERC721AUpgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:BatchMintMetadata": {
        "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:13",
        "version": {
          "withMetadata": "681aba9189a193a0d923c342c43054dde2591e39b843af2a7d49e67211e432ec",
          "withoutMetadata": "64a0440e0ac3f8214fd6d21fc77f1de897a1b2cbc06f4caa361e2149241c4801",
          "linkedWithoutMetadata": "64a0440e0ac3f8214fd6d21fc77f1de897a1b2cbc06f4caa361e2149241c4801"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBaseURICount()",
          "getBatchIdAtIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "batchIds",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:24"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:27"
            },
            {
              "label": "batchFrozen",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/ContractMetadata.sol:ContractMetadata": {
        "src": "@rarible/external-contracts/contracts/extension/ContractMetadata.sol:15",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [],
        "methods": [
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@rarible/external-contracts/contracts/extension/ContractMetadata.sol:20"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/DelayedReveal.sol:DelayedReveal": {
        "src": "@rarible/external-contracts/contracts/extension/DelayedReveal.sol:14",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IDelayedReveal.sol:IDelayedReveal"
        ],
        "libraries": [],
        "methods": [
          "getRevealURI(uint256,bytes)",
          "encryptDecrypt(bytes,bytes)",
          "isEncryptedBatch(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "encryptedData",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "DelayedReveal",
              "src": "@rarible/external-contracts/contracts/extension/DelayedReveal.sol:22"
            }
          ],
          "types": {
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/Drop.sol:Drop": {
        "src": "@rarible/external-contracts/contracts/extension/Drop.sol:9",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IDrop.sol:IDrop",
          "@rarible/external-contracts/contracts/extension/interface/IClaimConditionMultiPhase.sol:IClaimConditionMultiPhase",
          "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:IClaimCondition"
        ],
        "libraries": [
          "@rarible/external-contracts/contracts/lib/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)",
          "setClaimConditions(struct IClaimCondition.ClaimCondition[],bool)",
          "verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))",
          "getActiveClaimConditionId()",
          "getClaimConditionById(uint256)",
          "getSupplyClaimedByWallet(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "claimCondition",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ClaimConditionList)11351_storage",
              "contract": "Drop",
              "src": "@rarible/external-contracts/contracts/extension/Drop.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)": {
              "label": "mapping(uint256 => struct IClaimCondition.ClaimCondition)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ClaimCondition)11327_storage": {
              "label": "struct IClaimCondition.ClaimCondition",
              "members": [
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxClaimableSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "supplyClaimed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "quantityLimitPerWallet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "pricePerToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "currency",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "metadata",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ClaimConditionList)11351_storage": {
              "label": "struct IClaimConditionMultiPhase.ClaimConditionList",
              "members": [
                {
                  "label": "currentStartId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "count",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditions",
                  "type": "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "supplyClaimedByWallet",
                  "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/Drop1155.sol:Drop1155": {
        "src": "@rarible/external-contracts/contracts/extension/Drop1155.sol:9",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IDrop1155.sol:IDrop1155",
          "@rarible/external-contracts/contracts/extension/interface/IClaimConditionMultiPhase.sol:IClaimConditionMultiPhase",
          "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:IClaimCondition"
        ],
        "libraries": [
          "@rarible/external-contracts/contracts/lib/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)",
          "setClaimConditions(uint256,struct IClaimCondition.ClaimCondition[],bool)",
          "verifyClaim(uint256,address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address))",
          "getActiveClaimConditionId(uint256)",
          "getClaimConditionById(uint256,uint256)",
          "getSupplyClaimedByWallet(uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "claimCondition",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ClaimConditionList)11351_storage)",
              "contract": "Drop1155",
              "src": "@rarible/external-contracts/contracts/extension/Drop1155.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)": {
              "label": "mapping(uint256 => struct IClaimCondition.ClaimCondition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ClaimConditionList)11351_storage)": {
              "label": "mapping(uint256 => struct IClaimConditionMultiPhase.ClaimConditionList)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ClaimCondition)11327_storage": {
              "label": "struct IClaimCondition.ClaimCondition",
              "members": [
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxClaimableSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "supplyClaimed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "quantityLimitPerWallet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "pricePerToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "currency",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "metadata",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ClaimConditionList)11351_storage": {
              "label": "struct IClaimConditionMultiPhase.ClaimConditionList",
              "members": [
                {
                  "label": "currentStartId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "count",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditions",
                  "type": "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "supplyClaimedByWallet",
                  "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/LazyMint.sol:LazyMint": {
        "src": "@rarible/external-contracts/contracts/extension/LazyMint.sol:15",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:BatchMintMetadata",
          "@rarible/external-contracts/contracts/extension/interface/ILazyMint.sol:ILazyMint"
        ],
        "libraries": [],
        "methods": [
          "lazyMint(uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "batchIds",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:24"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:27"
            },
            {
              "label": "batchFrozen",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:30"
            },
            {
              "label": "nextTokenIdToLazyMint",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "LazyMint",
              "src": "@rarible/external-contracts/contracts/extension/LazyMint.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/Multicall.sol:Multicall": {
        "src": "@rarible/external-contracts/contracts/extension/Multicall.sol:14",
        "version": {
          "withMetadata": "da75d748ce130a4ad75e85ffbd060d707845c8451bcf1b7f3b1761842dc1fa53",
          "withoutMetadata": "927da7ad6ee5e57a11414a5bd75c7e01f4ead9285916df262eeaee9e85619754",
          "linkedWithoutMetadata": "927da7ad6ee5e57a11414a5bd75c7e01f4ead9285916df262eeaee9e85619754"
        },
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IMulticall.sol:IMulticall"
        ],
        "libraries": [
          "@rarible/external-contracts/contracts/lib/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@rarible/external-contracts/contracts/lib/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@rarible/external-contracts/contracts/lib/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/Ownable.sol:Ownable": {
        "src": "@rarible/external-contracts/contracts/extension/Ownable.sol:15",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IOwnable.sol:IOwnable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@rarible/external-contracts/contracts/extension/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/Permissions.sol:Permissions": {
        "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:13",
        "version": {
          "withMetadata": "81c4f264c34c1853aa0c05f37eb4cbd442caa6151d13d2e7029c5937ee393258",
          "withoutMetadata": "4c370f0debc2ae2fe5571fbff2ebab310eaf70ee7a09ffdf1e59d43373482f99",
          "linkedWithoutMetadata": "4c370f0debc2ae2fe5571fbff2ebab310eaf70ee7a09ffdf1e59d43373482f99"
        },
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "hasRoleWithSwitch(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_hasRole",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:24"
            },
            {
              "label": "_getRoleAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable": {
        "src": "@rarible/external-contracts/contracts/extension/PermissionsEnumerable.sol:14",
        "version": {
          "withMetadata": "ecbde3682b0146a42e9a7c3535e19e3fb64fc24645da69f4969a473223244dec",
          "withoutMetadata": "d8d095b0776c30da89aedb7b16f1e344dc553cabfe61756404166c5f89232949",
          "linkedWithoutMetadata": "d8d095b0776c30da89aedb7b16f1e344dc553cabfe61756404166c5f89232949"
        },
        "inherit": [
          "@rarible/external-contracts/contracts/extension/Permissions.sol:Permissions",
          "@rarible/external-contracts/contracts/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "@rarible/external-contracts/contracts/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_hasRole",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:24"
            },
            {
              "label": "_getRoleAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:27"
            },
            {
              "label": "roleMembers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_struct(RoleMembers)10352_storage)",
              "contract": "PermissionsEnumerable",
              "src": "@rarible/external-contracts/contracts/extension/PermissionsEnumerable.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleMembers)10352_storage)": {
              "label": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleMembers)10352_storage": {
              "label": "struct PermissionsEnumerable.RoleMembers",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "members",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indexOf",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/PlatformFee.sol:PlatformFee": {
        "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:15",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IPlatformFee.sol:IPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "getPlatformFeeInfo()",
          "getFlatPlatformFeeInfo()",
          "getPlatformFeeType()",
          "setPlatformFeeInfo(address,uint256)",
          "setFlatPlatformFeeInfo(address,uint256)",
          "setPlatformFeeType(uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:26"
            },
            {
              "label": "platformFeeBps",
              "offset": 20,
              "slot": "0",
              "type": "t_uint16",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:29"
            },
            {
              "label": "platformFeeType",
              "offset": 22,
              "slot": "0",
              "type": "t_enum(PlatformFeeType)11715",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:32"
            },
            {
              "label": "flatPlatformFee",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_enum(PlatformFeeType)11715": {
              "label": "enum IPlatformFee.PlatformFeeType",
              "members": [
                "Bps",
                "Flat"
              ],
              "numberOfBytes": "1"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/PrimarySale.sol:PrimarySale": {
        "src": "@rarible/external-contracts/contracts/extension/PrimarySale.sol:15",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IPrimarySale.sol:IPrimarySale"
        ],
        "libraries": [],
        "methods": [
          "primarySaleRecipient()",
          "setPrimarySaleRecipient(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recipient",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PrimarySale",
              "src": "@rarible/external-contracts/contracts/extension/PrimarySale.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/Royalty.sol:Royalty": {
        "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:17",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IRoyalty.sol:IRoyalty",
          "@rarible/external-contracts/contracts/eip/interface/IERC2981.sol:IERC2981",
          "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)",
          "getRoyaltyInfoForToken(uint256)",
          "getDefaultRoyaltyInfo()",
          "setDefaultRoyaltyInfo(address,uint256)",
          "setRoyaltyInfoForToken(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:28"
            },
            {
              "label": "royaltyBps",
              "offset": 20,
              "slot": "0",
              "type": "t_uint16",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:31"
            },
            {
              "label": "royaltyInfoForToken",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)11784_storage)",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)11784_storage)": {
              "label": "mapping(uint256 => struct IRoyalty.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)11784_storage": {
              "label": "struct IRoyalty.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/SharedMetadata.sol:SharedMetadata": {
        "src": "@rarible/external-contracts/contracts/extension/SharedMetadata.sol:10",
        "inherit": [
          "@rarible/external-contracts/contracts/eip/interface/IERC4906.sol:IERC4906",
          "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:IERC165",
          "@rarible/external-contracts/contracts/extension/interface/ISharedMetadata.sol:ISharedMetadata"
        ],
        "libraries": [
          "@rarible/external-contracts/contracts/lib/NFTMetadataRenderer.sol:NFTMetadataRenderer"
        ],
        "methods": [
          "setSharedMetadata((string,string,string,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "sharedMetadata",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(SharedMetadataInfo)11861_storage",
              "contract": "SharedMetadata",
              "src": "@rarible/external-contracts/contracts/extension/SharedMetadata.sol:12"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(SharedMetadataInfo)11861_storage": {
              "label": "struct ISharedMetadata.SharedMetadataInfo",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "imageURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "animationURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:IClaimCondition": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IClaimConditionMultiPhase.sol:IClaimConditionMultiPhase": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IClaimConditionMultiPhase.sol:16",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:IClaimCondition"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IContractMetadata.sol:IContractMetadata": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IContractMetadata.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contractURI()",
          "setContractURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IDelayedReveal.sol:IDelayedReveal": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IDelayedReveal.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "reveal(uint256,bytes)",
          "encryptDecrypt(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IDrop.sol:IDrop": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IDrop.sol:16",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IClaimConditionMultiPhase.sol:IClaimConditionMultiPhase",
          "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:IClaimCondition"
        ],
        "libraries": [],
        "methods": [
          "claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)",
          "setClaimConditions(struct IClaimCondition.ClaimCondition[],bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IDrop1155.sol:IDrop1155": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IDrop1155.sol:16",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IClaimConditionMultiPhase.sol:IClaimConditionMultiPhase",
          "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:IClaimCondition"
        ],
        "libraries": [],
        "methods": [
          "claim(address,uint256,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)",
          "setClaimConditions(uint256,struct IClaimCondition.ClaimCondition[],bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/ILazyMint.sol:ILazyMint": {
        "src": "@rarible/external-contracts/contracts/extension/interface/ILazyMint.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "lazyMint(uint256,string,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IMulticall.sol:IMulticall": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IMulticall.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IOwnable.sol:IOwnable": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IOwnable.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IPermissions.sol:IPermissions": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IPermissions.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IPermissionsEnumerable.sol:11",
        "inherit": [
          "@rarible/external-contracts/contracts/extension/interface/IPermissions.sol:IPermissions"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IPlatformFee.sol:IPlatformFee": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IPlatformFee.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPlatformFeeInfo()",
          "setPlatformFeeInfo(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IPrimarySale.sol:IPrimarySale": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IPrimarySale.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "primarySaleRecipient()",
          "setPrimarySaleRecipient(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/IRoyalty.sol:IRoyalty": {
        "src": "@rarible/external-contracts/contracts/extension/interface/IRoyalty.sol:16",
        "inherit": [
          "@rarible/external-contracts/contracts/eip/interface/IERC2981.sol:IERC2981",
          "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "getDefaultRoyaltyInfo()",
          "setDefaultRoyaltyInfo(address,uint256)",
          "setRoyaltyInfoForToken(uint256,address,uint256)",
          "getRoyaltyInfoForToken(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/extension/interface/ISharedMetadata.sol:ISharedMetadata": {
        "src": "@rarible/external-contracts/contracts/extension/interface/ISharedMetadata.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setSharedMetadata((string,string,string,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:ERC2771ContextUpgradeable": {
        "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:12",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC2771ContextUpgradeable",
              "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC2771ContextUpgradeable",
              "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "fbf2033a75b88b30759d254ef530fd591dde3e0d87e94fa04dad5952c521a225",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@rarible/external-contracts/contracts/lib/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/external-deps/openzeppelin/utils/Base64.sol:Base64": {
        "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/utils/Base64.sol:11",
        "version": {
          "withMetadata": "c43fa065f0b253144ca2cfd7093bf30f608110dd41642521f3bf34e53876be42",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/infra/interface/IWETH.sol:IWETH": {
        "src": "@rarible/external-contracts/contracts/infra/interface/IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/lib/Address.sol:Address": {
        "src": "@rarible/external-contracts/contracts/lib/Address.sol:9",
        "version": {
          "withMetadata": "2ac886c97377663fb3e5ee280e1db5e9f6b72ece0d754a09014cc1ce87253818",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@rarible/external-contracts/contracts/lib/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@rarible/external-contracts/contracts/lib/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/lib/CurrencyTransferLib.sol:CurrencyTransferLib": {
        "src": "@rarible/external-contracts/contracts/lib/CurrencyTransferLib.sol:10",
        "version": {
          "withMetadata": "ea187df4e4087ab902f521011eb5f3ccc951cd1fafd681a9726dee4811898a51",
          "withoutMetadata": "88567c9e5ee2dcdb927d156635ea267f83bac12b710dbd3bc9c609ab1601b076",
          "linkedWithoutMetadata": "88567c9e5ee2dcdb927d156635ea267f83bac12b710dbd3bc9c609ab1601b076"
        },
        "inherit": [],
        "libraries": [
          "@rarible/external-contracts/contracts/external-deps/openzeppelin/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/lib/MerkleProof.sol:MerkleProof": {
        "src": "@rarible/external-contracts/contracts/lib/MerkleProof.sol:6",
        "version": {
          "withMetadata": "c1a8026b3ce2fd607dbec48ac38ae0e618c8df809fe8bf39827ab2374ea91ee9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/lib/NFTMetadataRenderer.sol:NFTMetadataRenderer": {
        "src": "@rarible/external-contracts/contracts/lib/NFTMetadataRenderer.sol:13",
        "version": {
          "withMetadata": "3f7b5ef899c0ab490c8b8d152c4675672664a6a36b7d1b9707bb671215ecc8a7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@rarible/external-contracts/contracts/lib/Strings.sol:Strings",
          "@rarible/external-contracts/contracts/external-deps/openzeppelin/utils/Base64.sol:Base64"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/lib/Strings.sol:Strings": {
        "src": "@rarible/external-contracts/contracts/lib/Strings.sol:9",
        "version": {
          "withMetadata": "d88fec5bb0c81dd82aa4d7623472f364d70a5dd513129fd554806565092f00ef",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:DropERC1155": {
        "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:39",
        "version": {
          "withMetadata": "18b74d692d07803528de760bec7f4b6d97d81787577df57112d4f682930114e8",
          "withoutMetadata": "e187490ae9cb8ca7d5e1e80db464ac135052a74fc0649b99a2e37dee1f6909f6",
          "linkedWithoutMetadata": "e187490ae9cb8ca7d5e1e80db464ac135052a74fc0649b99a2e37dee1f6909f6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:ERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol:IERC1155MetadataURIUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol:IERC1155Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@rarible/external-contracts/contracts/extension/Multicall.sol:Multicall",
          "@rarible/external-contracts/contracts/extension/interface/IMulticall.sol:IMulticall",
          "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:ERC2771ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@rarible/external-contracts/contracts/extension/Drop1155.sol:Drop1155",
          "@rarible/external-contracts/contracts/extension/interface/IDrop1155.sol:IDrop1155",
          "@rarible/external-contracts/contracts/extension/interface/IClaimConditionMultiPhase.sol:IClaimConditionMultiPhase",
          "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:IClaimCondition",
          "@rarible/external-contracts/contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable",
          "@rarible/external-contracts/contracts/extension/Permissions.sol:Permissions",
          "@rarible/external-contracts/contracts/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "@rarible/external-contracts/contracts/extension/interface/IPermissions.sol:IPermissions",
          "@rarible/external-contracts/contracts/extension/LazyMint.sol:LazyMint",
          "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:BatchMintMetadata",
          "@rarible/external-contracts/contracts/extension/interface/ILazyMint.sol:ILazyMint",
          "@rarible/external-contracts/contracts/extension/Ownable.sol:Ownable",
          "@rarible/external-contracts/contracts/extension/interface/IOwnable.sol:IOwnable",
          "@rarible/external-contracts/contracts/extension/PrimarySale.sol:PrimarySale",
          "@rarible/external-contracts/contracts/extension/interface/IPrimarySale.sol:IPrimarySale",
          "@rarible/external-contracts/contracts/extension/Royalty.sol:Royalty",
          "@rarible/external-contracts/contracts/extension/interface/IRoyalty.sol:IRoyalty",
          "@rarible/external-contracts/contracts/eip/interface/IERC2981.sol:IERC2981",
          "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:IERC165",
          "@rarible/external-contracts/contracts/extension/PlatformFee.sol:PlatformFee",
          "@rarible/external-contracts/contracts/extension/interface/IPlatformFee.sol:IPlatformFee",
          "@rarible/external-contracts/contracts/extension/ContractMetadata.sol:ContractMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@rarible/external-contracts/contracts/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "@rarible/external-contracts/contracts/lib/CurrencyTransferLib.sol:CurrencyTransferLib"
        ],
        "methods": [
          "()",
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)",
          "uri(uint256)",
          "supportsInterface(bytes4)",
          "contractType()",
          "contractVersion()",
          "setMaxTotalSupply(uint256,uint256)",
          "setSaleRecipientForToken(uint256,address)",
          "updateBatchBaseURI(uint256,string)",
          "freezeBatchBaseURI(uint256)",
          "nextTokenIdToMint()",
          "burnBatch(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DropERC1155",
            "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:105"
          },
          {
            "kind": "missing-initializer-call",
            "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:105",
            "parentContracts": [
              "ERC2771ContextUpgradeable",
              "ERC1155Upgradeable"
            ]
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@rarible/external-contracts/contracts/extension/ContractMetadata.sol:20"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:26"
            },
            {
              "label": "platformFeeBps",
              "offset": 20,
              "slot": "2",
              "type": "t_uint16",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:29"
            },
            {
              "label": "platformFeeType",
              "offset": 22,
              "slot": "2",
              "type": "t_enum(PlatformFeeType)11715",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:32"
            },
            {
              "label": "flatPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:35"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:28"
            },
            {
              "label": "royaltyBps",
              "offset": 20,
              "slot": "4",
              "type": "t_uint16",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:31"
            },
            {
              "label": "royaltyInfoForToken",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)11784_storage)",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:34"
            },
            {
              "label": "recipient",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PrimarySale",
              "src": "@rarible/external-contracts/contracts/extension/PrimarySale.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@rarible/external-contracts/contracts/extension/Ownable.sol:20"
            },
            {
              "label": "batchIds",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:24"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:27"
            },
            {
              "label": "batchFrozen",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:30"
            },
            {
              "label": "nextTokenIdToLazyMint",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "LazyMint",
              "src": "@rarible/external-contracts/contracts/extension/LazyMint.sol:21"
            },
            {
              "label": "_hasRole",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:24"
            },
            {
              "label": "_getRoleAdmin",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:27"
            },
            {
              "label": "roleMembers",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_struct(RoleMembers)10352_storage)",
              "contract": "PermissionsEnumerable",
              "src": "@rarible/external-contracts/contracts/extension/PermissionsEnumerable.sol:29"
            },
            {
              "label": "claimCondition",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_struct(ClaimConditionList)11351_storage)",
              "contract": "Drop1155",
              "src": "@rarible/external-contracts/contracts/extension/Drop1155.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC2771ContextUpgradeable",
              "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "67",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC2771ContextUpgradeable",
              "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:49"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "116",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "166",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "167",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "168",
              "type": "t_string_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "169",
              "type": "t_array(t_uint256)47_storage",
              "contract": "ERC1155Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "216",
              "type": "t_string_storage",
              "contract": "DropERC1155",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:60"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "217",
              "type": "t_string_storage",
              "contract": "DropERC1155",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:63"
            },
            {
              "label": "transferRole",
              "offset": 0,
              "slot": "218",
              "type": "t_bytes32",
              "contract": "DropERC1155",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:66"
            },
            {
              "label": "minterRole",
              "offset": 0,
              "slot": "219",
              "type": "t_bytes32",
              "contract": "DropERC1155",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:68"
            },
            {
              "label": "metadataRole",
              "offset": 0,
              "slot": "220",
              "type": "t_bytes32",
              "contract": "DropERC1155",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:70"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "221",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DropERC1155",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:83"
            },
            {
              "label": "maxTotalSupply",
              "offset": 0,
              "slot": "222",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "DropERC1155",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:86"
            },
            {
              "label": "saleRecipient",
              "offset": 0,
              "slot": "223",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "DropERC1155",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC1155.sol:89"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)47_storage": {
              "label": "uint256[47]",
              "numberOfBytes": "1504"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(PlatformFeeType)11715": {
              "label": "enum IPlatformFee.PlatformFeeType",
              "members": [
                "Bps",
                "Flat"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleMembers)10352_storage)": {
              "label": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)": {
              "label": "mapping(uint256 => struct IClaimCondition.ClaimCondition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ClaimConditionList)11351_storage)": {
              "label": "mapping(uint256 => struct IClaimConditionMultiPhase.ClaimConditionList)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)11784_storage)": {
              "label": "mapping(uint256 => struct IRoyalty.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ClaimCondition)11327_storage": {
              "label": "struct IClaimCondition.ClaimCondition",
              "members": [
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxClaimableSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "supplyClaimed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "quantityLimitPerWallet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "pricePerToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "currency",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "metadata",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ClaimConditionList)11351_storage": {
              "label": "struct IClaimConditionMultiPhase.ClaimConditionList",
              "members": [
                {
                  "label": "currentStartId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "count",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditions",
                  "type": "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "supplyClaimedByWallet",
                  "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleMembers)10352_storage": {
              "label": "struct PermissionsEnumerable.RoleMembers",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "members",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indexOf",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(RoyaltyInfo)11784_storage": {
              "label": "struct IRoyalty.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/prebuilts/drop/DropERC721.sol:DropERC721": {
        "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC721.sol:40",
        "version": {
          "withMetadata": "555370a3f6403f52eeb4b34d07dd3cd0734bbf3e19f8f5f748cffc63768843b8",
          "withoutMetadata": "79dbc5833698b6fa1762e115f2915733b0c41d58278339bd5db608e8f42cc406",
          "linkedWithoutMetadata": "79dbc5833698b6fa1762e115f2915733b0c41d58278339bd5db608e8f42cc406"
        },
        "inherit": [
          "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:ERC721AUpgradeable",
          "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@rarible/external-contracts/contracts/extension/Multicall.sol:Multicall",
          "@rarible/external-contracts/contracts/extension/interface/IMulticall.sol:IMulticall",
          "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:ERC2771ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@rarible/external-contracts/contracts/extension/Drop.sol:Drop",
          "@rarible/external-contracts/contracts/extension/interface/IDrop.sol:IDrop",
          "@rarible/external-contracts/contracts/extension/interface/IClaimConditionMultiPhase.sol:IClaimConditionMultiPhase",
          "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:IClaimCondition",
          "@rarible/external-contracts/contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable",
          "@rarible/external-contracts/contracts/extension/Permissions.sol:Permissions",
          "@rarible/external-contracts/contracts/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "@rarible/external-contracts/contracts/extension/interface/IPermissions.sol:IPermissions",
          "@rarible/external-contracts/contracts/extension/LazyMint.sol:LazyMint",
          "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:BatchMintMetadata",
          "@rarible/external-contracts/contracts/extension/interface/ILazyMint.sol:ILazyMint",
          "@rarible/external-contracts/contracts/extension/DelayedReveal.sol:DelayedReveal",
          "@rarible/external-contracts/contracts/extension/interface/IDelayedReveal.sol:IDelayedReveal",
          "@rarible/external-contracts/contracts/extension/Ownable.sol:Ownable",
          "@rarible/external-contracts/contracts/extension/interface/IOwnable.sol:IOwnable",
          "@rarible/external-contracts/contracts/extension/PrimarySale.sol:PrimarySale",
          "@rarible/external-contracts/contracts/extension/interface/IPrimarySale.sol:IPrimarySale",
          "@rarible/external-contracts/contracts/extension/Royalty.sol:Royalty",
          "@rarible/external-contracts/contracts/extension/interface/IRoyalty.sol:IRoyalty",
          "@rarible/external-contracts/contracts/eip/interface/IERC2981.sol:IERC2981",
          "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:IERC165",
          "@rarible/external-contracts/contracts/extension/PlatformFee.sol:PlatformFee",
          "@rarible/external-contracts/contracts/extension/interface/IPlatformFee.sol:IPlatformFee",
          "@rarible/external-contracts/contracts/extension/ContractMetadata.sol:ContractMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@rarible/external-contracts/contracts/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "@rarible/external-contracts/contracts/lib/CurrencyTransferLib.sol:CurrencyTransferLib"
        ],
        "methods": [
          "()",
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)",
          "contractType()",
          "contractVersion()",
          "lazyMint(uint256,string,bytes)",
          "reveal(uint256,bytes)",
          "updateBatchBaseURI(uint256,string)",
          "freezeBatchBaseURI(uint256)",
          "setMaxTotalSupply(uint256)",
          "totalMinted()",
          "nextTokenIdToMint()",
          "nextTokenIdToClaim()",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DropERC721",
            "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC721.sol:84"
          },
          {
            "kind": "missing-initializer-call",
            "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC721.sol:84",
            "parentContracts": [
              "ERC2771ContextUpgradeable",
              "ERC721AUpgradeable"
            ]
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@rarible/external-contracts/contracts/extension/ContractMetadata.sol:20"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:26"
            },
            {
              "label": "platformFeeBps",
              "offset": 20,
              "slot": "2",
              "type": "t_uint16",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:29"
            },
            {
              "label": "platformFeeType",
              "offset": 22,
              "slot": "2",
              "type": "t_enum(PlatformFeeType)11715",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:32"
            },
            {
              "label": "flatPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:35"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:28"
            },
            {
              "label": "royaltyBps",
              "offset": 20,
              "slot": "4",
              "type": "t_uint16",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:31"
            },
            {
              "label": "royaltyInfoForToken",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)11784_storage)",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:34"
            },
            {
              "label": "recipient",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PrimarySale",
              "src": "@rarible/external-contracts/contracts/extension/PrimarySale.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@rarible/external-contracts/contracts/extension/Ownable.sol:20"
            },
            {
              "label": "encryptedData",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_bytes_storage)",
              "contract": "DelayedReveal",
              "src": "@rarible/external-contracts/contracts/extension/DelayedReveal.sol:22"
            },
            {
              "label": "batchIds",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:24"
            },
            {
              "label": "baseURI",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:27"
            },
            {
              "label": "batchFrozen",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "BatchMintMetadata",
              "src": "@rarible/external-contracts/contracts/extension/BatchMintMetadata.sol:30"
            },
            {
              "label": "nextTokenIdToLazyMint",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "LazyMint",
              "src": "@rarible/external-contracts/contracts/extension/LazyMint.sol:21"
            },
            {
              "label": "_hasRole",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:24"
            },
            {
              "label": "_getRoleAdmin",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:27"
            },
            {
              "label": "roleMembers",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_struct(RoleMembers)10352_storage)",
              "contract": "PermissionsEnumerable",
              "src": "@rarible/external-contracts/contracts/extension/PermissionsEnumerable.sol:29"
            },
            {
              "label": "claimCondition",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(ClaimConditionList)11351_storage",
              "contract": "Drop",
              "src": "@rarible/external-contracts/contracts/extension/Drop.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "20",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "70",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC2771ContextUpgradeable",
              "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "71",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC2771ContextUpgradeable",
              "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:49"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "120",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_currentIndex",
              "offset": 0,
              "slot": "170",
              "type": "t_uint256",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:32"
            },
            {
              "label": "_burnCounter",
              "offset": 0,
              "slot": "171",
              "type": "t_uint256",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:35"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "172",
              "type": "t_string_storage",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "173",
              "type": "t_string_storage",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:41"
            },
            {
              "label": "_ownerships",
              "offset": 0,
              "slot": "174",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)15908_storage)",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:45"
            },
            {
              "label": "_addressData",
              "offset": 0,
              "slot": "175",
              "type": "t_mapping(t_address,t_struct(AddressData)15917_storage)",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:48"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "176",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:51"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "177",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:54"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "178",
              "type": "t_array(t_uint256)42_storage",
              "contract": "ERC721AUpgradeable",
              "src": "@rarible/external-contracts/contracts/eip/ERC721AVirtualApproveUpgradeable.sol:597"
            },
            {
              "label": "transferRole",
              "offset": 0,
              "slot": "220",
              "type": "t_bytes32",
              "contract": "DropERC721",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC721.sol:62"
            },
            {
              "label": "minterRole",
              "offset": 0,
              "slot": "221",
              "type": "t_bytes32",
              "contract": "DropERC721",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC721.sol:64"
            },
            {
              "label": "metadataRole",
              "offset": 0,
              "slot": "222",
              "type": "t_bytes32",
              "contract": "DropERC721",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC721.sol:66"
            },
            {
              "label": "maxTotalSupply",
              "offset": 0,
              "slot": "223",
              "type": "t_uint256",
              "contract": "DropERC721",
              "src": "@rarible/external-contracts/contracts/prebuilts/drop/DropERC721.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)42_storage": {
              "label": "uint256[42]",
              "numberOfBytes": "1344"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_enum(PlatformFeeType)11715": {
              "label": "enum IPlatformFee.PlatformFeeType",
              "members": [
                "Bps",
                "Flat"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressData)15917_storage)": {
              "label": "mapping(address => struct IERC721AUpgradeable.AddressData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleMembers)10352_storage)": {
              "label": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)": {
              "label": "mapping(uint256 => struct IClaimCondition.ClaimCondition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)11784_storage)": {
              "label": "mapping(uint256 => struct IRoyalty.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)15908_storage)": {
              "label": "mapping(uint256 => struct IERC721AUpgradeable.TokenOwnership)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressData)15917_storage": {
              "label": "struct IERC721AUpgradeable.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "numberBurned",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "aux",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ClaimCondition)11327_storage": {
              "label": "struct IClaimCondition.ClaimCondition",
              "members": [
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxClaimableSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "supplyClaimed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "quantityLimitPerWallet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "pricePerToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "currency",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "metadata",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ClaimConditionList)11351_storage": {
              "label": "struct IClaimConditionMultiPhase.ClaimConditionList",
              "members": [
                {
                  "label": "currentStartId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "count",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditions",
                  "type": "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "supplyClaimedByWallet",
                  "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleMembers)10352_storage": {
              "label": "struct PermissionsEnumerable.RoleMembers",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "members",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indexOf",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(RoyaltyInfo)11784_storage": {
              "label": "struct IRoyalty.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TokenOwnership)15908_storage": {
              "label": "struct IERC721AUpgradeable.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "burned",
                  "type": "t_bool",
                  "offset": 28,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@rarible/external-contracts/contracts/prebuilts/open-edition/OpenEditionERC721FlatFee.sol:OpenEditionERC721FlatFee": {
        "src": "@rarible/external-contracts/contracts/prebuilts/open-edition/OpenEditionERC721FlatFee.sol:39",
        "version": {
          "withMetadata": "aa21c4e6824242c9fdda0ebd5a8dd6da368426fa8c26978a39cfcfaec46b3e84",
          "withoutMetadata": "6ed07054785fb16290529634c1090ee46e8fc3cd1215b77ed41b4be7a6096a58",
          "linkedWithoutMetadata": "6ed07054785fb16290529634c1090ee46e8fc3cd1215b77ed41b4be7a6096a58"
        },
        "inherit": [
          "@rarible/external-contracts/contracts/eip/queryable/ERC721AQueryableUpgradeable.sol:ERC721AQueryableUpgradeable",
          "@rarible/external-contracts/contracts/eip/queryable/IERC721AQueryableUpgradeable.sol:IERC721AQueryableUpgradeable",
          "@rarible/external-contracts/contracts/eip/queryable/ERC721AUpgradeable.sol:ERC721AUpgradeable",
          "@rarible/external-contracts/contracts/eip/queryable/IERC721AUpgradeable.sol:IERC721AUpgradeable",
          "@rarible/external-contracts/contracts/eip/queryable/ERC721A__Initializable.sol:ERC721A__Initializable",
          "@rarible/external-contracts/contracts/extension/Multicall.sol:Multicall",
          "@rarible/external-contracts/contracts/extension/interface/IMulticall.sol:IMulticall",
          "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:ERC2771ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@rarible/external-contracts/contracts/extension/Drop.sol:Drop",
          "@rarible/external-contracts/contracts/extension/interface/IDrop.sol:IDrop",
          "@rarible/external-contracts/contracts/extension/interface/IClaimConditionMultiPhase.sol:IClaimConditionMultiPhase",
          "@rarible/external-contracts/contracts/extension/interface/IClaimCondition.sol:IClaimCondition",
          "@rarible/external-contracts/contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable",
          "@rarible/external-contracts/contracts/extension/Permissions.sol:Permissions",
          "@rarible/external-contracts/contracts/extension/interface/IPermissionsEnumerable.sol:IPermissionsEnumerable",
          "@rarible/external-contracts/contracts/extension/interface/IPermissions.sol:IPermissions",
          "@rarible/external-contracts/contracts/extension/SharedMetadata.sol:SharedMetadata",
          "@rarible/external-contracts/contracts/eip/interface/IERC4906.sol:IERC4906",
          "@rarible/external-contracts/contracts/extension/Ownable.sol:Ownable",
          "@rarible/external-contracts/contracts/extension/interface/IOwnable.sol:IOwnable",
          "@rarible/external-contracts/contracts/extension/PrimarySale.sol:PrimarySale",
          "@rarible/external-contracts/contracts/extension/interface/IPrimarySale.sol:IPrimarySale",
          "@rarible/external-contracts/contracts/extension/Royalty.sol:Royalty",
          "@rarible/external-contracts/contracts/extension/interface/IRoyalty.sol:IRoyalty",
          "@rarible/external-contracts/contracts/eip/interface/IERC2981.sol:IERC2981",
          "@rarible/external-contracts/contracts/eip/interface/IERC165.sol:IERC165",
          "@rarible/external-contracts/contracts/extension/interface/ISharedMetadata.sol:ISharedMetadata",
          "@rarible/external-contracts/contracts/extension/PlatformFee.sol:PlatformFee",
          "@rarible/external-contracts/contracts/extension/interface/IPlatformFee.sol:IPlatformFee",
          "@rarible/external-contracts/contracts/extension/ContractMetadata.sol:ContractMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@rarible/external-contracts/contracts/extension/interface/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable",
          "@rarible/external-contracts/contracts/lib/CurrencyTransferLib.sol:CurrencyTransferLib"
        ],
        "methods": [
          "()",
          "initialize(address,string,string,string,address[],address,address,uint128,uint128,address)",
          "tokenURI(uint256)",
          "supportsInterface(bytes4)",
          "startTokenId()",
          "totalMinted()",
          "nextTokenIdToMint()",
          "nextTokenIdToClaim()",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OpenEditionERC721FlatFee",
            "src": "@rarible/external-contracts/contracts/prebuilts/open-edition/OpenEditionERC721FlatFee.sol:74"
          },
          {
            "kind": "missing-initializer-call",
            "src": "@rarible/external-contracts/contracts/prebuilts/open-edition/OpenEditionERC721FlatFee.sol:74",
            "parentContracts": [
              "ERC2771ContextUpgradeable"
            ]
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "contractURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@rarible/external-contracts/contracts/extension/ContractMetadata.sol:20"
            },
            {
              "label": "platformFeeRecipient",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:26"
            },
            {
              "label": "platformFeeBps",
              "offset": 20,
              "slot": "2",
              "type": "t_uint16",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:29"
            },
            {
              "label": "platformFeeType",
              "offset": 22,
              "slot": "2",
              "type": "t_enum(PlatformFeeType)11715",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:32"
            },
            {
              "label": "flatPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PlatformFee",
              "src": "@rarible/external-contracts/contracts/extension/PlatformFee.sol:35"
            },
            {
              "label": "royaltyRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:28"
            },
            {
              "label": "royaltyBps",
              "offset": 20,
              "slot": "4",
              "type": "t_uint16",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:31"
            },
            {
              "label": "royaltyInfoForToken",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)11784_storage)",
              "contract": "Royalty",
              "src": "@rarible/external-contracts/contracts/extension/Royalty.sol:34"
            },
            {
              "label": "recipient",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PrimarySale",
              "src": "@rarible/external-contracts/contracts/extension/PrimarySale.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@rarible/external-contracts/contracts/extension/Ownable.sol:20"
            },
            {
              "label": "sharedMetadata",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(SharedMetadataInfo)11861_storage",
              "contract": "SharedMetadata",
              "src": "@rarible/external-contracts/contracts/extension/SharedMetadata.sol:12"
            },
            {
              "label": "_hasRole",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:24"
            },
            {
              "label": "_getRoleAdmin",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_bytes32)",
              "contract": "Permissions",
              "src": "@rarible/external-contracts/contracts/extension/Permissions.sol:27"
            },
            {
              "label": "roleMembers",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_struct(RoleMembers)10352_storage)",
              "contract": "PermissionsEnumerable",
              "src": "@rarible/external-contracts/contracts/extension/PermissionsEnumerable.sol:29"
            },
            {
              "label": "claimCondition",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ClaimConditionList)11351_storage",
              "contract": "Drop",
              "src": "@rarible/external-contracts/contracts/extension/Drop.sol:41"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_trustedForwarder",
              "offset": 0,
              "slot": "69",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC2771ContextUpgradeable",
              "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:13"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "70",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC2771ContextUpgradeable",
              "src": "@rarible/external-contracts/contracts/external-deps/openzeppelin/metatx/ERC2771ContextUpgradeable.sol:49"
            },
            {
              "label": "transferRole",
              "offset": 0,
              "slot": "119",
              "type": "t_bytes32",
              "contract": "OpenEditionERC721FlatFee",
              "src": "@rarible/external-contracts/contracts/prebuilts/open-edition/OpenEditionERC721FlatFee.sol:60"
            },
            {
              "label": "minterRole",
              "offset": 0,
              "slot": "120",
              "type": "t_bytes32",
              "contract": "OpenEditionERC721FlatFee",
              "src": "@rarible/external-contracts/contracts/prebuilts/open-edition/OpenEditionERC721FlatFee.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(PlatformFeeType)11715": {
              "label": "enum IPlatformFee.PlatformFeeType",
              "members": [
                "Bps",
                "Flat"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleMembers)10352_storage)": {
              "label": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)": {
              "label": "mapping(uint256 => struct IClaimCondition.ClaimCondition)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)11784_storage)": {
              "label": "mapping(uint256 => struct IRoyalty.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ClaimCondition)11327_storage": {
              "label": "struct IClaimCondition.ClaimCondition",
              "members": [
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxClaimableSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "supplyClaimed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "quantityLimitPerWallet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "pricePerToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "currency",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "metadata",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(ClaimConditionList)11351_storage": {
              "label": "struct IClaimConditionMultiPhase.ClaimConditionList",
              "members": [
                {
                  "label": "currentStartId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "count",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "conditions",
                  "type": "t_mapping(t_uint256,t_struct(ClaimCondition)11327_storage)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "supplyClaimedByWallet",
                  "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleMembers)10352_storage": {
              "label": "struct PermissionsEnumerable.RoleMembers",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "members",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "indexOf",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(RoyaltyInfo)11784_storage": {
              "label": "struct IRoyalty.RoyaltyInfo",
              "members": [
                {
                  "label": "recipient",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(SharedMetadataInfo)11861_storage": {
              "label": "struct ISharedMetadata.SharedMetadataInfo",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "imageURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "animationURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:IERC721AUpgradeable": {
        "src": "erc721a-upgradeable/contracts/IERC721AUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:IERC721MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:IERC721Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "src/RaribleCloneFactory.sol:RaribleCloneFactory": {
        "src": "src/RaribleCloneFactory.sol:6",
        "version": {
          "withMetadata": "5e4f1a72c2a3254fcef33897063b3077b0f5d16e9df0a7378bd19ec7cef46a21",
          "withoutMetadata": "8b1fbc3f0465a450d1ca6a4aafc8fc3685720110fe8e6b90b2014900e860d592",
          "linkedWithoutMetadata": "8b1fbc3f0465a450d1ca6a4aafc8fc3685720110fe8e6b90b2014900e860d592"
        },
        "inherit": [],
        "libraries": [
          "src/lib/LibClone.sol:LibClone"
        ],
        "methods": [
          "deployProxyByImplementation(address,bytes,bytes32)",
          "deployProxyByImplementationV2(address,bytes,bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "src/lib/LibClone.sol:LibClone": {
        "src": "src/lib/LibClone.sol:39",
        "version": {
          "withMetadata": "8f441cde653d57133cf8b3da612b5ced750ea0d7df3c00caeafa7bfae11a5990",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      }
    }
  ]
}