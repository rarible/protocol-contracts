/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  PrimarySale,
  PrimarySaleInterface,
} from "../../../../../@rarible/external-contracts/contracts/extension/PrimarySale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "PrimarySaleInvalidRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "PrimarySaleUnauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "PrimarySaleRecipientUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "primarySaleRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_saleRecipient",
        type: "address",
      },
    ],
    name: "setPrimarySaleRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class PrimarySale__factory {
  static readonly abi = _abi;
  static createInterface(): PrimarySaleInterface {
    return new utils.Interface(_abi) as PrimarySaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrimarySale {
    return new Contract(address, _abi, signerOrProvider) as PrimarySale;
  }
}
