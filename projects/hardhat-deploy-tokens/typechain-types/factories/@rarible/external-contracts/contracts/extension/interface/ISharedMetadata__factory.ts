/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISharedMetadata,
  ISharedMetadataInterface,
} from "../../../../../../@rarible/external-contracts/contracts/extension/interface/ISharedMetadata";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "animationURI",
        type: "string",
      },
    ],
    name: "SharedMetadataUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "animationURI",
            type: "string",
          },
        ],
        internalType: "struct ISharedMetadata.SharedMetadataInfo",
        name: "_metadata",
        type: "tuple",
      },
    ],
    name: "setSharedMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISharedMetadata__factory {
  static readonly abi = _abi;
  static createInterface(): ISharedMetadataInterface {
    return new utils.Interface(_abi) as ISharedMetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISharedMetadata {
    return new Contract(address, _abi, signerOrProvider) as ISharedMetadata;
  }
}
