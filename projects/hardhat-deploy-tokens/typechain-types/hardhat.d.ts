/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981Upgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AUpgradeable__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "IERC4906",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4906__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "ERC721AQueryableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AQueryableUpgradeable__factory>;
    getContractFactory(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AUpgradeable__factory>;
    getContractFactory(
      name: "IERC721AQueryableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AQueryableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AUpgradeable__factory>;
    getContractFactory(
      name: "BatchMintMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BatchMintMetadata__factory>;
    getContractFactory(
      name: "ContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractMetadata__factory>;
    getContractFactory(
      name: "DelayedReveal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelayedReveal__factory>;
    getContractFactory(
      name: "Drop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Drop__factory>;
    getContractFactory(
      name: "Drop1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Drop1155__factory>;
    getContractFactory(
      name: "IContractMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IContractMetadata__factory>;
    getContractFactory(
      name: "IDelayedReveal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelayedReveal__factory>;
    getContractFactory(
      name: "IDrop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDrop__factory>;
    getContractFactory(
      name: "IDrop1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDrop1155__factory>;
    getContractFactory(
      name: "ILazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILazyMint__factory>;
    getContractFactory(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IPermissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissions__factory>;
    getContractFactory(
      name: "IPermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissionsEnumerable__factory>;
    getContractFactory(
      name: "IPlatformFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlatformFee__factory>;
    getContractFactory(
      name: "IPrimarySale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPrimarySale__factory>;
    getContractFactory(
      name: "IRoyalty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRoyalty__factory>;
    getContractFactory(
      name: "ISharedMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISharedMetadata__factory>;
    getContractFactory(
      name: "LazyMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LazyMint__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Permissions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permissions__factory>;
    getContractFactory(
      name: "PermissionsEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionsEnumerable__factory>;
    getContractFactory(
      name: "PlatformFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PlatformFee__factory>;
    getContractFactory(
      name: "PrimarySale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrimarySale__factory>;
    getContractFactory(
      name: "Royalty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Royalty__factory>;
    getContractFactory(
      name: "SharedMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SharedMetadata__factory>;
    getContractFactory(
      name: "ERC2771ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2771ContextUpgradeable__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "CurrencyTransferLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurrencyTransferLib__factory>;
    getContractFactory(
      name: "DropERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropERC1155__factory>;
    getContractFactory(
      name: "DropERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DropERC721__factory>;
    getContractFactory(
      name: "OpenEditionERC721FlatFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenEditionERC721FlatFee__factory>;
    getContractFactory(
      name: "IERC721AUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AUpgradeable__factory>;
    getContractFactory(
      name: "LibClone",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibClone__factory>;
    getContractFactory(
      name: "RaribleCloneFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RaribleCloneFactory__factory>;

    getContractAt(
      name: "IERC2981Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981Upgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "IERC1155MetadataURIUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "ERC721AUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AUpgradeable>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "IERC4906",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4906>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "ERC721AQueryableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AQueryableUpgradeable>;
    getContractAt(
      name: "ERC721A__IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A__IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "ERC721AUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AUpgradeable>;
    getContractAt(
      name: "IERC721AQueryableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AQueryableUpgradeable>;
    getContractAt(
      name: "IERC721AUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AUpgradeable>;
    getContractAt(
      name: "BatchMintMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BatchMintMetadata>;
    getContractAt(
      name: "ContractMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractMetadata>;
    getContractAt(
      name: "DelayedReveal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DelayedReveal>;
    getContractAt(
      name: "Drop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Drop>;
    getContractAt(
      name: "Drop1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Drop1155>;
    getContractAt(
      name: "IContractMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IContractMetadata>;
    getContractAt(
      name: "IDelayedReveal",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDelayedReveal>;
    getContractAt(
      name: "IDrop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDrop>;
    getContractAt(
      name: "IDrop1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDrop1155>;
    getContractAt(
      name: "ILazyMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILazyMint>;
    getContractAt(
      name: "IMulticall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMulticall>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IPermissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissions>;
    getContractAt(
      name: "IPermissionsEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissionsEnumerable>;
    getContractAt(
      name: "IPlatformFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPlatformFee>;
    getContractAt(
      name: "IPrimarySale",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPrimarySale>;
    getContractAt(
      name: "IRoyalty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRoyalty>;
    getContractAt(
      name: "ISharedMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISharedMetadata>;
    getContractAt(
      name: "LazyMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LazyMint>;
    getContractAt(
      name: "Multicall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Permissions",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Permissions>;
    getContractAt(
      name: "PermissionsEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionsEnumerable>;
    getContractAt(
      name: "PlatformFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PlatformFee>;
    getContractAt(
      name: "PrimarySale",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PrimarySale>;
    getContractAt(
      name: "Royalty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Royalty>;
    getContractAt(
      name: "SharedMetadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SharedMetadata>;
    getContractAt(
      name: "ERC2771ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2771ContextUpgradeable>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "CurrencyTransferLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurrencyTransferLib>;
    getContractAt(
      name: "DropERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DropERC1155>;
    getContractAt(
      name: "DropERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DropERC721>;
    getContractAt(
      name: "OpenEditionERC721FlatFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenEditionERC721FlatFee>;
    getContractAt(
      name: "IERC721AUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AUpgradeable>;
    getContractAt(
      name: "LibClone",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibClone>;
    getContractAt(
      name: "RaribleCloneFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RaribleCloneFactory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
