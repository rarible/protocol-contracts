/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  HasContractURI,
  HasContractURIInterface,
} from "../HasContractURI";

const _abi = [
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class HasContractURI__factory {
  static readonly abi = _abi;
  static createInterface(): HasContractURIInterface {
    return new utils.Interface(_abi) as HasContractURIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HasContractURI {
    return new Contract(address, _abi, signerOrProvider) as HasContractURI;
  }
}
