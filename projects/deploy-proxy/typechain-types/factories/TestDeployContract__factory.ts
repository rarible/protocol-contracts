/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TestDeployContract,
  TestDeployContractInterface,
} from "../TestDeployContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value2",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getValue1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101163803806101168339818101604052604081101561003357600080fd5b50805160209091015160009190915560015560c3806100536000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80633033413b14604b5780635d33a27f14606357806360d586f8146069578063c515205d14606f575b600080fd5b60516075565b60408051918252519081900360200190f35b6051607b565b60516081565b60516087565b60005481565b60015481565b60005490565b6001549056fea264697066735822122084259bdfca1e2a6f343107902e211a3844e8d43d88318f7344ca4c31ba6286c464736f6c63430007060033";

type TestDeployContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestDeployContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestDeployContract__factory extends ContractFactory {
  constructor(...args: TestDeployContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _value1: PromiseOrValue<BigNumberish>,
    _value2: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestDeployContract> {
    return super.deploy(
      _value1,
      _value2,
      overrides || {}
    ) as Promise<TestDeployContract>;
  }
  override getDeployTransaction(
    _value1: PromiseOrValue<BigNumberish>,
    _value2: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_value1, _value2, overrides || {});
  }
  override attach(address: string): TestDeployContract {
    return super.attach(address) as TestDeployContract;
  }
  override connect(signer: Signer): TestDeployContract__factory {
    return super.connect(signer) as TestDeployContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestDeployContractInterface {
    return new utils.Interface(_abi) as TestDeployContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestDeployContract {
    return new Contract(address, _abi, signerOrProvider) as TestDeployContract;
  }
}
