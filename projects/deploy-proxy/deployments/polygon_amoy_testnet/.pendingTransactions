{
  "0xeeca58300c9c438df6fd135cf3c4a6036a1363e12cf3958f86cd95ccc6058e92": {
    "name": "RaribleCreateX",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "RaribleCreateX",
      "sourceName": "contracts/RaribleCreateX.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "emitter",
              "type": "address"
            }
          ],
          "name": "FailedContractCreation",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "emitter",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "revertData",
              "type": "bytes"
            }
          ],
          "name": "FailedContractInitialisation",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "emitter",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "revertData",
              "type": "bytes"
            }
          ],
          "name": "FailedEtherTransfer",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "emitter",
              "type": "address"
            }
          ],
          "name": "InvalidNonceValue",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "emitter",
              "type": "address"
            }
          ],
          "name": "InvalidSalt",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "name": "ContractCreation",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "name": "ContractCreation",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "name": "Create3ProxyContractCreation",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "initCodeHash",
              "type": "bytes32"
            }
          ],
          "name": "computeCreate2Address",
          "outputs": [
            {
              "internalType": "address",
              "name": "computedAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "initCodeHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            }
          ],
          "name": "computeCreate2Address",
          "outputs": [
            {
              "internalType": "address",
              "name": "computedAddress",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            }
          ],
          "name": "computeCreate3Address",
          "outputs": [
            {
              "internalType": "address",
              "name": "computedAddress",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "name": "computeCreate3Address",
          "outputs": [
            {
              "internalType": "address",
              "name": "computedAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "name": "computeCreateAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "computedAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "name": "computeCreateAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "computedAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "name": "deployCreate",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "name": "deployCreate2",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "name": "deployCreate2",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "refundAddress",
              "type": "address"
            }
          ],
          "name": "deployCreate2AndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            }
          ],
          "name": "deployCreate2AndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "refundAddress",
              "type": "address"
            }
          ],
          "name": "deployCreate2AndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            }
          ],
          "name": "deployCreate2AndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "deployCreate2Clone",
          "outputs": [
            {
              "internalType": "address",
              "name": "proxy",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "deployCreate2Clone",
          "outputs": [
            {
              "internalType": "address",
              "name": "proxy",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "name": "deployCreate3",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "name": "deployCreate3",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            }
          ],
          "name": "deployCreate3AndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            }
          ],
          "name": "deployCreate3AndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "refundAddress",
              "type": "address"
            }
          ],
          "name": "deployCreate3AndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "refundAddress",
              "type": "address"
            }
          ],
          "name": "deployCreate3AndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            }
          ],
          "name": "deployCreateAndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "constructorAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initCallAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct RaribleCreateX.Values",
              "name": "values",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "refundAddress",
              "type": "address"
            }
          ],
          "name": "deployCreateAndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "deployCreateClone",
          "outputs": [
            {
              "internalType": "address",
              "name": "proxy",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "name": "findCreate2Address",
          "outputs": [
            {
              "internalType": "address",
              "name": "computedAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "initCodeHash",
              "type": "bytes32"
            }
          ],
          "name": "findCreate2AddressViaHash",
          "outputs": [
            {
              "internalType": "address",
              "name": "computedAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "deploymentAddress",
              "type": "address"
            }
          ],
          "name": "hasBeenDeployed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "name": "safeCreate2",
          "outputs": [
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        }
      ],
      "bytecode": "",
      "deployedBytecode": "",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "author": "RARIBLE team",
        "custom:based-on": "Implementation by pcaversaccio (https://web.archive.org/web/20230921103111/https://pcaversaccio.com/) and Matt Solomon (https://web.archive.org/web/20230921103335/https://mattsolomon.dev/), modified by RARIBLE team for specific use cases.",
        "details": "To simplify testing of non-public variables and functions, we use the `internal` function visibility specifier `internal` for all variables and functions, even though they could technically be `private` since we do not expect anyone to inherit from the `CreateX` contract.",
        "errors": {
          "FailedContractCreation(address)": [
            {
              "details": "Error that occurs when the contract creation failed.",
              "params": {
                "emitter": "The contract that emits the error."
              }
            }
          ],
          "FailedContractInitialisation(address,bytes)": [
            {
              "details": "Error that occurs when the contract initialisation call failed.",
              "params": {
                "emitter": "The contract that emits the error.",
                "revertData": "The data returned by the failed initialisation call."
              }
            }
          ],
          "FailedEtherTransfer(address,bytes)": [
            {
              "details": "Error that occurs when transferring ether has failed.",
              "params": {
                "emitter": "The contract that emits the error.",
                "revertData": "The data returned by the failed ether transfer."
              }
            }
          ],
          "InvalidNonceValue(address)": [
            {
              "details": "Error that occurs when the nonce value is invalid.",
              "params": {
                "emitter": "The contract that emits the error."
              }
            }
          ],
          "InvalidSalt(address)": [
            {
              "details": "Error that occurs when the salt value is invalid.",
              "params": {
                "emitter": "The contract that emits the error."
              }
            }
          ]
        },
        "events": {
          "ContractCreation(address)": {
            "details": "Event that is emitted when a contract is successfully created.",
            "params": {
              "newContract": "The address of the new contract."
            }
          },
          "ContractCreation(address,bytes32)": {
            "details": "Event that is emitted when a contract is successfully created.",
            "params": {
              "newContract": "The address of the new contract.",
              "salt": "The 32-byte random value used to create the contract address."
            }
          },
          "Create3ProxyContractCreation(address,bytes32)": {
            "details": "Event that is emitted when a `CREATE3` proxy contract is successfully created.",
            "params": {
              "newContract": "The address of the new proxy contract.",
              "salt": "The 32-byte random value used to create the proxy address."
            }
          }
        },
        "kind": "dev",
        "methods": {
          "computeCreate2Address(bytes32,bytes32)": {
            "details": "Returns the address where a contract will be stored if deployed via this contract using the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new destination address.",
            "params": {
              "initCodeHash": "The 32-byte bytecode digest of the contract creation bytecode.",
              "salt": "The 32-byte random value used to create the contract address."
            },
            "returns": {
              "computedAddress": "The 20-byte address where a contract will be stored."
            }
          },
          "computeCreate2Address(bytes32,bytes32,address)": {
            "details": "Returns the address where a contract will be stored if deployed via `deployer` using the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new destination address. This implementation is based on OpenZeppelin: https://web.archive.org/web/20230921113703/https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/181d518609a9f006fcb97af63e6952e603cf100e/contracts/utils/Create2.sol.",
            "params": {
              "deployer": "The 20-byte deployer address.",
              "initCodeHash": "The 32-byte bytecode digest of the contract creation bytecode.",
              "salt": "The 32-byte random value used to create the contract address."
            },
            "returns": {
              "computedAddress": "The 20-byte address where a contract will be stored."
            }
          },
          "computeCreate3Address(bytes32)": {
            "details": "Returns the address where a contract will be stored if deployed via this contract using the `CREATE3` pattern (i.e. without an initcode factor). Any change in the `salt` value will result in a new destination address. This implementation is based on Solady: https://web.archive.org/web/20230921114120/https://raw.githubusercontent.com/Vectorized/solady/1c1ac4ad9c8558001e92d8d1a7722ef67bec75df/src/utils/CREATE3.sol.",
            "params": {
              "salt": "The 32-byte random value used to create the proxy contract address."
            },
            "returns": {
              "computedAddress": "The 20-byte address where a contract will be stored."
            }
          },
          "computeCreate3Address(bytes32,address)": {
            "details": "Returns the address where a contract will be stored if deployed via `deployer` using the `CREATE3` pattern (i.e. without an initcode factor). Any change in the `salt` value will result in a new destination address. This implementation is based on Solady: https://web.archive.org/web/20230921114120/https://raw.githubusercontent.com/Vectorized/solady/1c1ac4ad9c8558001e92d8d1a7722ef67bec75df/src/utils/CREATE3.sol.",
            "params": {
              "deployer": "The 20-byte deployer address.",
              "salt": "The 32-byte random value used to create the proxy contract address."
            },
            "returns": {
              "computedAddress": "The 20-byte address where a contract will be stored."
            }
          },
          "computeCreateAddress(address,uint256)": {
            "details": "Returns the address where a contract will be stored if deployed via `deployer` using the `CREATE` opcode. For the specification of the Recursive Length Prefix (RLP) encoding scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://web.archive.org/web/20230921110603/https://ethereum.github.io/yellowpaper/paper.pdf) and the Ethereum Wiki (https://web.archive.org/web/20230921112807/https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/). For further insights also, see the following issue: https://web.archive.org/web/20230921112943/https://github.com/transmissions11/solmate/issues/207. Based on the EIP-161 (https://web.archive.org/web/20230921113207/https://raw.githubusercontent.com/ethereum/EIPs/master/EIPS/eip-161.md) specification, all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the first contract address created by another contract is calculated with a non-zero nonce.",
            "params": {
              "deployer": "The 20-byte deployer address.",
              "nonce": "The next 32-byte nonce of the deployer address."
            },
            "returns": {
              "computedAddress": "The 20-byte address where a contract will be stored."
            }
          },
          "computeCreateAddress(uint256)": {
            "details": "Returns the address where a contract will be stored if deployed via this contract using the `CREATE` opcode. For the specification of the Recursive Length Prefix (RLP) encoding scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://web.archive.org/web/20230921110603/https://ethereum.github.io/yellowpaper/paper.pdf) and the Ethereum Wiki (https://web.archive.org/web/20230921112807/https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/). For further insights also, see the following issue: https://web.archive.org/web/20230921112943/https://github.com/transmissions11/solmate/issues/207. Based on the EIP-161 (https://web.archive.org/web/20230921113207/https://raw.githubusercontent.com/ethereum/EIPs/master/EIPS/eip-161.md) specification, all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the first contract address created by another contract is calculated with a non-zero nonce.",
            "params": {
              "nonce": "The next 32-byte nonce of this contract."
            },
            "returns": {
              "computedAddress": "The 20-byte address where a contract will be stored."
            }
          },
          "deployCreate(bytes)": {
            "details": "Deploys a new contract via calling the `CREATE` opcode and using the creation bytecode `initCode` and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor.",
            "params": {
              "initCode": "The creation bytecode."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate2(bytes)": {
            "details": "Deploys a new contract via calling the `CREATE2` opcode and using the creation bytecode `initCode` and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor.",
            "params": {
              "initCode": "The creation bytecode."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate2(bytes32,bytes)": {
            "details": "Deploys a new contract via calling the `CREATE2` opcode and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor.",
            "params": {
              "initCode": "The creation bytecode.",
              "salt": "The 32-byte random value used to create the contract address."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate2AndInit(bytes,bytes,(uint256,uint256))": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys and initialises a new contract via calling the `CREATE2` opcode and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate2AndInit(bytes,bytes,(uint256,uint256),address)": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys and initialises a new contract via calling the `CREATE2` opcode and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "refundAddress": "The 20-byte address where any excess ether is returned to.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256))": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys and initialises a new contract via calling the `CREATE2` opcode and using the salt value `salt`, creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "salt": "The 32-byte random value used to create the contract address.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256),address)": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys and initialises a new contract via calling the `CREATE2` opcode and using the salt value `salt`, the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "refundAddress": "The 20-byte address where any excess ether is returned to.",
              "salt": "The 32-byte random value used to create the contract address.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate2Clone(address,bytes)": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys a new EIP-1167 minimal proxy contract using the `CREATE2` opcode and the salt value `salt`, and initialises the implementation contract using the implementation address `implementation`, the initialisation code `data`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! Note that if `msg.value` is non-zero, the initialiser function called via `data` must be `payable`.",
            "params": {
              "data": "The initialisation code that is passed to the deployed proxy contract.",
              "implementation": "The 20-byte implementation contract address."
            },
            "returns": {
              "proxy": "The 20-byte address where the clone was deployed."
            }
          },
          "deployCreate2Clone(bytes32,address,bytes)": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys a new EIP-1167 minimal proxy contract using the `CREATE2` opcode and the salt value `salt`, and initialises the implementation contract using the implementation address `implementation`, the initialisation code `data`, and `msg.value` as inputs. Note that if `msg.value` is non-zero, the initialiser function called via `data` must be `payable`.",
            "params": {
              "data": "The initialisation code that is passed to the deployed proxy contract.",
              "implementation": "The 20-byte implementation contract address.",
              "salt": "The 32-byte random value used to create the proxy contract address."
            },
            "returns": {
              "proxy": "The 20-byte address where the clone was deployed."
            }
          },
          "deployCreate3(bytes)": {
            "details": "Deploys a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.",
            "params": {
              "initCode": "The creation bytecode."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate3(bytes32,bytes)": {
            "custom:security": "We strongly recommend implementing a permissioned deploy protection by setting the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun proxy deployments on other chains.",
            "details": "Deploys a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.",
            "params": {
              "initCode": "The creation bytecode.",
              "salt": "The 32-byte random value used to create the proxy contract address."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate3AndInit(bytes,bytes,(uint256,uint256))": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate3AndInit(bytes,bytes,(uint256,uint256),address)": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "refundAddress": "The 20-byte address where any excess ether is returned to.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256))": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system. Furthermore, we strongly recommend implementing a permissioned deploy protection by setting the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun proxy deployments on other chains.",
            "details": "Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "salt": "The 32-byte random value used to create the proxy contract address.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256),address)": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system. Furthermore, we strongly recommend implementing a permissioned deploy protection by setting the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun proxy deployments on other chains.",
            "details": "Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "refundAddress": "The 20-byte address where any excess ether is returned to.",
              "salt": "The 32-byte random value used to create the proxy contract address.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreateAndInit(bytes,bytes,(uint256,uint256))": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys and initialises a new contract via calling the `CREATE` opcode and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreateAndInit(bytes,bytes,(uint256,uint256),address)": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys and initialises a new contract via calling the `CREATE` opcode and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor.",
            "params": {
              "data": "The initialisation code that is passed to the deployed contract.",
              "initCode": "The creation bytecode.",
              "refundAddress": "The 20-byte address where any excess ether is returned to.",
              "values": "The specific `payable` amounts for the deployment and initialisation call."
            },
            "returns": {
              "newContract": "The 20-byte address where the contract was deployed."
            }
          },
          "deployCreateClone(address,bytes)": {
            "custom:security": "This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.",
            "details": "Deploys a new EIP-1167 minimal proxy contract using the `CREATE` opcode, and initialises the implementation contract using the implementation address `implementation`, the initialisation code `data`, and `msg.value` as inputs. Note that if `msg.value` is non-zero, the initialiser function called via `data` must be `payable`.",
            "params": {
              "data": "The initialisation code that is passed to the deployed proxy contract.",
              "implementation": "The 20-byte implementation contract address."
            },
            "returns": {
              "proxy": "The 20-byte address where the clone was deployed."
            }
          },
          "findCreate2Address(bytes32,bytes)": {
            "details": "Returns the address where a contract will be stored if deployed via this contract using the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new destination address.",
            "params": {
              "initCode": "The 32-byte bytecode digest of the contract creation bytecode.",
              "salt": "The 32-byte random value used to create the contract address."
            },
            "returns": {
              "computedAddress": "The 20-byte address where a contract will be stored."
            }
          },
          "findCreate2AddressViaHash(bytes32,bytes32)": {
            "details": "Returns the address where a contract will be stored if deployed via this contract using the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new destination address.",
            "params": {
              "initCodeHash": "The 32-byte bytecode digest of the contract creation bytecode.",
              "salt": "The 32-byte random value used to create the contract address."
            },
            "returns": {
              "computedAddress": "The 20-byte address where a contract will be stored."
            }
          },
          "hasBeenDeployed(address)": {
            "details": "Determine if a contract has already been deployed by the factory to a given address.",
            "params": {
              "deploymentAddress": "address The contract address to check."
            },
            "returns": {
              "_0": "True if the contract has been deployed, false otherwise."
            }
          },
          "safeCreate2(bytes32,bytes)": {
            "details": "Create a contract using CREATE2 by submitting a given salt or nonce along with the initialization code for the contract. Note that the first 20 bytes of the salt must match those of the calling address, which prevents contract creation events from being submitted by unintended parties.",
            "params": {
              "initCode": "bytes The initialization code that will be passed into the CREATE2 call.",
              "salt": "bytes32 The nonce that will be passed into the CREATE2 call."
            },
            "returns": {
              "newContract": "Address of the contract that will be created, or the null address if a contract already exists at that address."
            }
          }
        },
        "stateVariables": {
          "_SELF": {
            "details": "Caches the contract address at construction, to be used for the custom errors."
          }
        },
        "title": "CreateX Factory Smart Contract",
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {},
          "generatedSources": [],
          "linkReferences": {},
          "object": "",
          "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x23BF PUSH2 0xF4 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4FC ADD MSTORE DUP2 DUP2 PUSH2 0x655 ADD MSTORE DUP2 DUP2 PUSH2 0x738 ADD MSTORE DUP2 DUP2 PUSH2 0x892 ADD MSTORE DUP2 DUP2 PUSH2 0x8F8 ADD MSTORE DUP2 DUP2 PUSH2 0xD4E ADD MSTORE DUP2 DUP2 PUSH2 0xDA8 ADD MSTORE DUP2 DUP2 PUSH2 0xE72 ADD MSTORE DUP2 DUP2 PUSH2 0xEB7 ADD MSTORE DUP2 DUP2 PUSH2 0xEE9 ADD MSTORE DUP2 DUP2 PUSH2 0xF64 ADD MSTORE DUP2 DUP2 PUSH2 0x1017 ADD MSTORE DUP2 DUP2 PUSH2 0x112D ADD MSTORE DUP2 DUP2 PUSH2 0x11AC ADD MSTORE DUP2 DUP2 PUSH2 0x1292 ADD MSTORE DUP2 DUP2 PUSH2 0x12D7 ADD MSTORE DUP2 DUP2 PUSH2 0x1309 ADD MSTORE DUP2 DUP2 PUSH2 0x1384 ADD MSTORE DUP2 DUP2 PUSH2 0x1479 ADD MSTORE DUP2 DUP2 PUSH2 0x15E6 ADD MSTORE DUP2 DUP2 PUSH2 0x162B ADD MSTORE DUP2 DUP2 PUSH2 0x165D ADD MSTORE DUP2 DUP2 PUSH2 0x16D8 ADD MSTORE DUP2 DUP2 PUSH2 0x17CE ADD MSTORE DUP2 DUP2 PUSH2 0x1999 ADD MSTORE DUP2 DUP2 PUSH2 0x1A5F ADD MSTORE DUP2 DUP2 PUSH2 0x1B07 ADD MSTORE DUP2 DUP2 PUSH2 0x1BAD ADD MSTORE PUSH2 0x1C30 ADD MSTORE PUSH2 0x23BF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81503DA1 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xC3FE107B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE437252A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE437252A EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xE96DEEE4 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xF5745ABA EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xF9664498 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC3FE107B EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xD323826A EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xDDDA0ACB EQ PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98E81077 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x98E81077 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x9C36A286 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xA49A7C90 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xA7DB93F2 EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81503DA1 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x85CF97AB EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x890C283B EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F990E3F GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x64E03087 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x64E03087 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x6CEC2536 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x74637A7A EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x7F565360 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F990E3F EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x31A7C8C8 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x42D654FC EQ PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26A32FC7 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x26A32FC7 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x27FE1822 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x2852527A EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x28DDD046 EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD84ACB EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x8508B8F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x26307668 EQ PUSH2 0x234 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B8 JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x210E JUMP JUMPDEST PUSH2 0xCFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x2145 JUMP JUMPDEST PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0xFA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2145 JUMP JUMPDEST PUSH2 0x111C JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x13CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x426 CALLDATASIZE PUSH1 0x4 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x13E1 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0x140B JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x210E JUMP JUMPDEST PUSH2 0x175C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP6 DUP6 DUP6 DUP6 CALLER PUSH2 0x140B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4AE DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 MLOAD PUSH1 0x20 DUP6 ADD CALLVALUE CREATE2 SWAP2 POP PUSH2 0x4C4 DUP3 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0xB8FDA7E00C6B06A2B54E58521BC5894FEE35F1090E5A3BB6390BFE2B98B497F7 SWAP2 LOG3 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 PUSH2 0x58D PUSH2 0x1B37 JUMP JUMPDEST DUP4 PUSH2 0x4A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH2 0x5AE DUP2 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E1 DUP6 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP3 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP4 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xB8FDA7E00C6B06A2B54E58521BC5894FEE35F1090E5A3BB6390BFE2B98B497F7 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE DUP8 PUSH1 0x40 MLOAD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x716 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x726 DUP3 DUP3 DUP10 PUSH2 0x1B91 JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 PUSH32 0x0 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x773 PUSH2 0x76A PUSH2 0x1B37 JUMP JUMPDEST DUP6 DUP6 DUP6 CALLER PUSH2 0x140B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x773 DUP5 DUP5 DUP5 CALLER PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0xB MSTORE8 DUP4 PUSH1 0x20 MSTORE PUSH32 0x21C35DBE1B344A2488CF3321D6CE542F8E9F305544FF09E4993A62319A497C1F PUSH1 0x40 MSTORE PUSH1 0x55 PUSH1 0xB KECCAK256 PUSH1 0x14 MSTORE DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xD694 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x34 MSTORE8 POP POP PUSH1 0x17 PUSH1 0x1E KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 DUP2 SWAP1 SHR CALLER EQ DUP1 PUSH2 0x800 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP2 AND ISZERO JUMPDEST PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073616C74202D206669727374203230206279746573206F66 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468652073616C74206D757374206D617463682063616C6C696E6720616464 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x3932B9B997 PUSH1 0xD9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x773 DUP5 DUP5 PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 DUP3 PUSH32 0x0 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x25 PUSH1 0xFA SHL PUSH2 0x8D1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP5 GT ISZERO PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3C55AB3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST DUP4 PUSH1 0x0 SUB PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH1 0x6B PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x37 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x7F DUP5 GT PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH1 0x6B PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP1 DUP4 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0xF8 DUP7 SWAP1 SHL AND PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x37 ADD PUSH2 0x96C JUMP JUMPDEST PUSH1 0xFF DUP5 GT PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH1 0xD7 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP1 DUP4 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x81 PUSH1 0xF8 SHL PUSH1 0x36 DUP4 ADD MSTORE PUSH1 0xF8 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x38 ADD PUSH2 0x96C JUMP JUMPDEST PUSH2 0xFFFF DUP5 GT PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1B PUSH1 0xFB SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0xF9 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH1 0xF0 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x39 ADD PUSH2 0x96C JUMP JUMPDEST PUSH3 0xFFFFFF DUP5 GT PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH1 0xD9 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x83 PUSH1 0xF8 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT PUSH1 0xE8 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3A ADD PUSH2 0x96C JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 GT PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH1 0x6D PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xFA SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3B ADD PUSH2 0x96C JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP5 GT PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH1 0xDB PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x85 PUSH1 0xF8 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT PUSH1 0xD8 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3C ADD PUSH2 0x96C JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP5 GT PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH1 0x37 PUSH1 0xFA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0xF9 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3D ADD PUSH2 0x96C JUMP JUMPDEST PUSH7 0xFFFFFFFFFFFFFF DUP5 GT PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH1 0xDD PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x87 PUSH1 0xF8 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC8 SHL SUB NOT PUSH1 0xC8 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3E ADD PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6F PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFB SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT PUSH1 0xC0 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3F ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 PUSH2 0xCF6 PUSH2 0x1B37 JUMP JUMPDEST DUP4 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD10 PUSH2 0xD09 PUSH2 0x1B37 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 PUSH2 0xD25 DUP5 PUSH2 0x1894 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD36 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH32 0x0 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x593 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD10 DUP4 DUP4 PUSH32 0x0 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP5 MLOAD CREATE SWAP1 POP PUSH2 0xDE2 DUP2 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 MLOAD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xEAD JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xA57CA239 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND BALANCE ISZERO PUSH2 0xF9F JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xF9F JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xC2B3F445 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFB5 DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x67363D3D37363D34F03D5260086018F3 PUSH1 0x80 SHL DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP3 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2FEEA65DD4E9F9CBD86B74B7734210C59A1B2981B5B137BD0EE3E208200C9067 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH2 0x1083 DUP4 PUSH2 0x88A JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE DUP8 PUSH1 0x40 MLOAD PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH2 0x10F0 DUP2 DUP7 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 PUSH2 0x112A DUP5 PUSH2 0x1894 JUMP JUMPDEST DUP4 PUSH32 0x0 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x115D DUP8 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 MLOAD PUSH1 0x20 DUP9 ADD DUP7 MLOAD CREATE2 SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0xB8FDA7E00C6B06A2B54E58521BC5894FEE35F1090E5A3BB6390BFE2B98B497F7 SWAP2 LOG3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 MLOAD PUSH2 0x1244 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x12CD JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xA57CA239 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND BALANCE ISZERO PUSH2 0x13BF JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x13BF JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xC2B3F445 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x773 PUSH2 0x13D8 PUSH2 0x1B37 JUMP JUMPDEST DUP6 DUP6 DUP6 CALLER PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD SWAP1 POP PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 SWAP1 KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1417 DUP8 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x67363D3D37363D34F03D5260086018F3 PUSH1 0x80 SHL DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP3 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2FEEA65DD4E9F9CBD86B74B7734210C59A1B2981B5B137BD0EE3E208200C9067 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH2 0x14E5 DUP4 PUSH2 0x88A JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x0 ADD MLOAD DUP11 PUSH1 0x40 MLOAD PUSH2 0x1506 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH2 0x1556 DUP2 DUP7 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x40 MLOAD PUSH2 0x1597 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15D4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1621 JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xA57CA239 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND BALANCE ISZERO PUSH2 0x1713 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1713 JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xC2B3F445 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 PUSH2 0x172E PUSH2 0x1B37 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP6 DUP6 DUP6 DUP6 CALLER PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 PUSH2 0x1753 PUSH2 0x1B37 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE DUP7 PUSH1 0x40 MLOAD PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1876 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x187B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x188B DUP3 DUP3 DUP9 PUSH2 0x1B91 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x18A2 DUP5 PUSH2 0x1C61 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18BB JUMPI PUSH2 0x18BB PUSH2 0x2353 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x18D9 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18D7 JUMPI PUSH2 0x18D7 PUSH2 0x2353 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1917 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD MSTORE CHAINID SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x192B JUMPI PUSH2 0x192B PUSH2 0x2353 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1949 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1947 JUMPI PUSH2 0x1947 PUSH2 0x2353 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1962 CALLER DUP6 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 POP PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x197D JUMPI PUSH2 0x197D PUSH2 0x2353 JUMP JUMPDEST SUB PUSH2 0x19C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x13B3A2A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH2 0x19DA PUSH2 0x2353 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x19F8 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F6 PUSH2 0x2353 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1A11 JUMPI PUSH2 0x1962 CHAINID DUP6 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A25 JUMPI PUSH2 0x1A25 PUSH2 0x2353 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1A43 JUMPI POP PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A41 PUSH2 0x2353 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1A8C JUMPI PUSH1 0x40 MLOAD PUSH4 0x13B3A2A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x1A94 PUSH2 0x1B37 JUMP JUMPDEST DUP5 SUB PUSH2 0x1AA0 JUMPI DUP4 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x1AEB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1B34 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD NUMBER PUSH1 0x1F NOT DUP2 ADD BLOCKHASH PUSH1 0x20 DUP4 ADD MSTORE COINBASE SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PREVRANDAO PUSH1 0xA0 DUP3 ADD MSTORE CHAINID PUSH1 0xC0 DUP3 ADD MSTORE CALLER PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH2 0x100 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 ISZERO DUP1 PUSH2 0x1BA6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1BE8 JUMPI PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH4 0xA57CA239 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x1C01 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST DUP1 PUSH2 0x1C14 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1C5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 SWAP1 SHR CALLER EQ DUP1 ISZERO PUSH2 0x1C8A JUMPI POP DUP3 PUSH1 0x14 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL EQ JUMPDEST ISZERO PUSH2 0x1C9A JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP4 SWAP1 SHR CALLER EQ DUP1 ISZERO PUSH2 0x1CBC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0x14 DUP5 SWAP1 BYTE PUSH1 0xF8 SHL AND ISZERO JUMPDEST ISZERO PUSH2 0x1CCD JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 SWAP2 POP SWAP2 JUMP JUMPDEST CALLER PUSH1 0x60 DUP5 SWAP1 SHR SUB PUSH2 0x1CE4 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP4 SWAP1 SHR ISZERO DUP1 ISZERO PUSH2 0x1D09 JUMPI POP DUP3 PUSH1 0x14 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL EQ JUMPDEST ISZERO PUSH2 0x1D1A JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP4 SWAP1 SHR ISZERO DUP1 ISZERO PUSH2 0x1D3B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0x14 DUP5 SWAP1 BYTE PUSH1 0xF8 SHL AND ISZERO JUMPDEST ISZERO PUSH2 0x1D4B JUMPI POP PUSH1 0x1 SWAP1 POP DUP1 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP4 SWAP1 SHR PUSH2 0x1D60 JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x2 SWAP2 POP SWAP2 JUMP JUMPDEST DUP3 PUSH1 0x14 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL SUB PUSH2 0x1D87 JUMPI POP PUSH1 0x2 SWAP1 POP PUSH1 0x0 SWAP2 POP SWAP2 JUMP JUMPDEST DUP3 PUSH1 0x14 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x0 SUB PUSH2 0x1DAB JUMPI POP PUSH1 0x2 SWAP1 POP PUSH1 0x1 SWAP2 POP SWAP2 JUMP JUMPDEST POP PUSH1 0x2 SWAP1 POP DUP1 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1DF7 JUMPI PUSH2 0x1DF7 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1E1F PUSH2 0x1DB6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8C PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE6 DUP9 DUP4 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F09 DUP8 DUP3 DUP9 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1F19 DUP7 PUSH1 0x60 DUP8 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD10 DUP3 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1F8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F97 DUP6 DUP3 DUP7 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1FC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x773 DUP5 DUP3 DUP6 ADD PUSH2 0x1DCC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1FFA PUSH1 0x20 DUP6 ADD PUSH2 0x1F24 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2021 DUP7 DUP3 DUP8 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2059 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207C DUP8 DUP4 DUP9 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209F DUP7 DUP3 DUP8 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP PUSH2 0x20AF DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x20DB PUSH1 0x20 DUP5 ADD PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2100 DUP4 PUSH2 0x1F24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212A DUP4 PUSH2 0x1F24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1F8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x217D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A0 DUP9 DUP4 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP4 POP POP PUSH2 0x21D3 DUP7 PUSH1 0x40 DUP8 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F19 PUSH1 0x80 DUP7 ADD PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2223 DUP10 DUP4 DUP11 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2246 DUP9 DUP3 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2256 DUP8 PUSH1 0x60 DUP9 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP PUSH2 0x2264 PUSH1 0xA0 DUP8 ADD PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x20AF PUSH1 0x40 DUP6 ADD PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22B7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x229F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x22D2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x230A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x233E DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x229C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0x4D 0xB1 PUSH30 0xD5E4732FB6DA34A148104A592783CA119A1E7BB8829EBA6CBADEF0B511A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT DUP2 0xA7 0xEC JUMPI SWAP16 0xA5 EQ COINBASE COINBASE 0xC3 0x2A EXTCODECOPY 0xD8 SWAP8 0xE5 0xB2 BASEFEE 0x26 PUSH27 0x7671289C462EA53EBF7EB53864736F6C6343000814003300000000 ",
          "sourceMap": "1114:63300:0:-:0;;;1577:4;1534:48;;1114:63300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@_efficientHash_1761": {
              "entryPoint": null,
              "id": 1761,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@_generateSalt_1795": {
              "entryPoint": 6967,
              "id": 1795,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_guard_1511": {
              "entryPoint": 6292,
              "id": 1511,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@_parseSalt_1749": {
              "entryPoint": 7265,
              "id": 1749,
              "parameterSlots": 1,
              "returnSlots": 2
            },
            "@_requireSuccessfulContractCreation_1825": {
              "entryPoint": 7149,
              "id": 1825,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_requireSuccessfulContractCreation_1850": {
              "entryPoint": 6861,
              "id": 1850,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_requireSuccessfulContractInitialisation_1876": {
              "entryPoint": 7057,
              "id": 1876,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@computeCreate2Address_967": {
              "entryPoint": 3487,
              "id": 967,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@computeCreate2Address_981": {
              "entryPoint": 5089,
              "id": 981,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@computeCreate3Address_1360": {
              "entryPoint": 1929,
              "id": 1360,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@computeCreate3Address_1376": {
              "entryPoint": 2186,
              "id": 1376,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@computeCreateAddress_595": {
              "entryPoint": 2230,
              "id": 595,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@computeCreateAddress_611": {
              "entryPoint": 1841,
              "id": 611,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@deployCreate2AndInit_786": {
              "entryPoint": 4433,
              "id": 786,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "@deployCreate2AndInit_813": {
              "entryPoint": 5943,
              "id": 813,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@deployCreate2AndInit_840": {
              "entryPoint": 5921,
              "id": 840,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@deployCreate2AndInit_866": {
              "entryPoint": 5067,
              "id": 866,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@deployCreate2Clone_928": {
              "entryPoint": 1493,
              "id": 928,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@deployCreate2Clone_948": {
              "entryPoint": 3324,
              "id": 948,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@deployCreate2_652": {
              "entryPoint": 1186,
              "id": 652,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@deployCreate2_669": {
              "entryPoint": 1408,
              "id": 669,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@deployCreate3AndInit_1268": {
              "entryPoint": 5131,
              "id": 1268,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "@deployCreate3AndInit_1295": {
              "entryPoint": 1162,
              "id": 1295,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@deployCreate3AndInit_1322": {
              "entryPoint": 5958,
              "id": 1322,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@deployCreate3AndInit_1348": {
              "entryPoint": 1885,
              "id": 1348,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@deployCreate3_1126": {
              "entryPoint": 4009,
              "id": 1126,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@deployCreate3_1143": {
              "entryPoint": 3305,
              "id": 1143,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@deployCreateAndInit_201": {
              "entryPoint": 3532,
              "id": 201,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "@deployCreateAndInit_225": {
              "entryPoint": 1915,
              "id": 225,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@deployCreateClone_278": {
              "entryPoint": 5980,
              "id": 278,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@deployCreate_128": {
              "entryPoint": 1433,
              "id": 128,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@findCreate2AddressViaHash_1011": {
              "entryPoint": 4380,
              "id": 1011,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@findCreate2Address_1046": {
              "entryPoint": 3351,
              "id": 1046,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@hasBeenDeployed_1059": {
              "entryPoint": null,
              "id": 1059,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@safeCreate2_690": {
              "entryPoint": 2019,
              "id": 690,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_address": {
              "entryPoint": 7972,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_decode_bytes": {
              "entryPoint": 7628,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_struct_Values": {
              "entryPoint": 7768,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_address": {
              "entryPoint": 8000,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_bytes_memory_ptr": {
              "entryPoint": 8462,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_uint256": {
              "entryPoint": 8420,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes32": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_bytes32t_address": {
              "entryPoint": 8376,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes32t_addresst_bytes_memory_ptr": {
              "entryPoint": 8149,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_decode_tuple_t_bytes32t_bytes32": {
              "entryPoint": 8517,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes32t_bytes32t_address": {
              "entryPoint": 8816,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
              "entryPoint": 8027,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptr": {
              "entryPoint": 7846,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 4
            },
            "abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptrt_address": {
              "entryPoint": 8673,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 5
            },
            "abi_decode_tuple_t_bytes_memory_ptr": {
              "entryPoint": 8097,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptr": {
              "entryPoint": 8260,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptrt_address": {
              "entryPoint": 8551,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 4
            },
            "abi_decode_tuple_t_uint256": {
              "entryPoint": 8235,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1__to_t_bytes1_t_bytes1_t_address_t_bytes1__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint16__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint16__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint24__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint24__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint32__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint32__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint40__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint40__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint48__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint48__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint56__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint56__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint64__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint64__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint8__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint8__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 6,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_uint8__to_t_bytes1_t_bytes1_t_address_t_uint8__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": 8896,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
              "entryPoint": 8977,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes32_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_bytes32_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 8,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_979150ea917af01af711df6e6f8e813d8cc9edb535cd6f8c22f812e1f4b5ed9c__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "checked_sub_t_uint64": {
              "entryPoint": 8924,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "copy_memory_to_memory_with_cleanup": {
              "entryPoint": 8860,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "panic_error_0x21": {
              "entryPoint": 9043,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x32": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 7606,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:17174:1",
                "statements": [
                  {
                    "nodeType": "YulBlock",
                    "src": "6:3:1",
                    "statements": []
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "46:95:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "63:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "70:3:1",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "75:10:1",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "66:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "66:20:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "56:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "56:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "56:31:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "103:1:1",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "106:4:1",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "96:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "96:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "96:15:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "127:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "130:4:1",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "120:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "120:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "120:15:1"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nodeType": "YulFunctionDefinition",
                    "src": "14:127:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "198:666:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "247:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "256:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "259:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "249:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "249:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "249:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "226:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "234:4:1",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "222:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "222:17:1"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "241:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "218:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "218:27:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "211:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "211:35:1"
                          },
                          "nodeType": "YulIf",
                          "src": "208:55:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "272:30:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "295:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "282:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "282:20:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "276:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "311:28:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "321:18:1",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_2",
                              "nodeType": "YulTypedName",
                              "src": "315:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "362:22:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "364:16:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "364:18:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "364:18:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "354:2:1"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "358:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "351:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "351:10:1"
                          },
                          "nodeType": "YulIf",
                          "src": "348:36:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "393:17:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "407:2:1",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "403:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "403:7:1"
                          },
                          "variables": [
                            {
                              "name": "_3",
                              "nodeType": "YulTypedName",
                              "src": "397:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "419:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "439:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "433:5:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "433:9:1"
                          },
                          "variables": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulTypedName",
                              "src": "423:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "451:71:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "473:6:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "497:2:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "501:4:1",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "493:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "493:13:1"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "508:2:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "489:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "489:22:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "513:2:1",
                                        "type": "",
                                        "value": "63"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "485:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "485:31:1"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "518:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "481:40:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "469:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "469:53:1"
                          },
                          "variables": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulTypedName",
                              "src": "455:10:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "581:22:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "583:16:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "583:18:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "583:18:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "540:10:1"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "552:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "537:18:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "560:10:1"
                                  },
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "572:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "557:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "557:22:1"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "534:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "534:46:1"
                          },
                          "nodeType": "YulIf",
                          "src": "531:72:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "619:2:1",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "623:10:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "612:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "612:22:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "612:22:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "650:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "658:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "643:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "643:18:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "643:18:1"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "709:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "718:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "721:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "711:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "711:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "711:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "684:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "692:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "680:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "680:15:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "697:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "676:26:1"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "704:3:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "673:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "673:35:1"
                          },
                          "nodeType": "YulIf",
                          "src": "670:55:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "751:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "759:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "747:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "747:17:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "770:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "778:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "766:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "766:17:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "785:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldatacopy",
                              "nodeType": "YulIdentifier",
                              "src": "734:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "734:54:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "734:54:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "812:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "820:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "808:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "808:15:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "825:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "804:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "804:26:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "832:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "797:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "797:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "797:37:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "843:15:1",
                          "value": {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "852:6:1"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "843:5:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_bytes",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "172:6:1",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "180:3:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "188:5:1",
                        "type": ""
                      }
                    ],
                    "src": "146:718:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "932:412:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "976:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "985:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "988:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "978:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "978:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "978:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "953:3:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "958:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "949:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "949:19:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "970:4:1",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "945:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "945:30:1"
                          },
                          "nodeType": "YulIf",
                          "src": "942:50:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1001:25:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1021:4:1",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "1015:5:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1015:11:1"
                          },
                          "variables": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulTypedName",
                              "src": "1005:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1035:35:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1057:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1065:4:1",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1053:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1053:17:1"
                          },
                          "variables": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulTypedName",
                              "src": "1039:10:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1145:22:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "1147:16:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1147:18:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1147:18:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1088:10:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1100:18:1",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1085:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1085:34:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1124:10:1"
                                  },
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1136:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1121:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1121:22:1"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "1082:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1082:62:1"
                          },
                          "nodeType": "YulIf",
                          "src": "1079:88:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1183:4:1",
                                "type": "",
                                "value": "0x40"
                              },
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1189:10:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1176:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1176:24:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1176:24:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1209:15:1",
                          "value": {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1218:6:1"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1209:5:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1240:6:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1261:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1248:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1248:23:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1233:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1233:39:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1233:39:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1292:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1300:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1288:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1288:15:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1322:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1333:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1318:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1318:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1305:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1305:32:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1281:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1281:57:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1281:57:1"
                        }
                      ]
                    },
                    "name": "abi_decode_struct_Values",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "903:9:1",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "914:3:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "922:5:1",
                        "type": ""
                      }
                    ],
                    "src": "869:475:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1510:558:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1557:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1566:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1569:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1559:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1559:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1559:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1531:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1540:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1527:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1527:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1552:3:1",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1523:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1523:33:1"
                          },
                          "nodeType": "YulIf",
                          "src": "1520:53:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1582:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1605:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1592:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1592:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1582:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1624:46:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1655:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1666:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1651:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1651:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1638:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1638:32:1"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "1628:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1679:28:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1689:18:1",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "1683:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1734:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1743:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1746:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1736:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1736:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1736:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1722:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1730:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1719:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1719:14:1"
                          },
                          "nodeType": "YulIf",
                          "src": "1716:34:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1759:59:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1790:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1801:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1786:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1786:22:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1810:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "1769:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1769:49:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1759:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1827:48:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1860:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1871:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1856:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1856:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1843:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1843:32:1"
                          },
                          "variables": [
                            {
                              "name": "offset_1",
                              "nodeType": "YulTypedName",
                              "src": "1831:8:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1904:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1913:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1916:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1906:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1906:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1906:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "1890:8:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1900:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1887:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1887:16:1"
                          },
                          "nodeType": "YulIf",
                          "src": "1884:36:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1929:61:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1960:9:1"
                                  },
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1971:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1956:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1956:24:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1982:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "1939:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1939:51:1"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1929:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1999:63:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2038:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2049:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2034:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2034:18:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2054:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_struct_Values",
                              "nodeType": "YulIdentifier",
                              "src": "2009:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2009:53:1"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1999:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1452:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1463:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1475:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1483:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "1491:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "1499:6:1",
                        "type": ""
                      }
                    ],
                    "src": "1349:719:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2174:102:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2184:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2196:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2207:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2192:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2192:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2184:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2226:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2241:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2257:3:1",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2262:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "2253:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2253:11:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2266:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2249:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2249:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2237:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2237:32:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2219:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2219:51:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2219:51:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2143:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2154:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "2165:4:1",
                        "type": ""
                      }
                    ],
                    "src": "2073:203:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2330:124:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2340:29:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2362:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2349:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2349:20:1"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2340:5:1"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2432:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2441:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2444:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2434:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2434:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2434:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2391:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2402:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2417:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2422:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "2413:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2413:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2426:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "2409:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2409:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2398:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2398:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "2388:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2388:42:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2381:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2381:50:1"
                          },
                          "nodeType": "YulIf",
                          "src": "2378:70:1"
                        }
                      ]
                    },
                    "name": "abi_decode_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "2309:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2320:5:1",
                        "type": ""
                      }
                    ],
                    "src": "2281:173:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2529:116:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2575:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2584:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2587:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2577:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2577:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2577:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2550:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2559:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2546:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2546:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2571:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2542:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2542:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "2539:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2600:39:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2629:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "2610:18:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2610:29:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2600:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2495:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2506:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2518:6:1",
                        "type": ""
                      }
                    ],
                    "src": "2459:186:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2745:92:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2755:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2767:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2778:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2763:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2763:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2755:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2797:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2822:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2815:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2815:14:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2808:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2808:22:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2790:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2790:41:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2790:41:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2714:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2725:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "2736:4:1",
                        "type": ""
                      }
                    ],
                    "src": "2650:187:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2938:292:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2984:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2993:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2996:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2986:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2986:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2986:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2959:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2968:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2955:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2955:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2980:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2951:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2951:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "2948:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3009:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3032:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3019:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3019:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3009:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3051:46:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3082:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3093:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3078:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3078:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3065:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3065:32:1"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "3055:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3140:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3149:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3152:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3142:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3142:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3142:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3112:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3120:18:1",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "3109:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3109:30:1"
                          },
                          "nodeType": "YulIf",
                          "src": "3106:50:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3165:59:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3196:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3207:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3192:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3192:22:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3216:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "3175:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3175:49:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "3165:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2896:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2907:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2919:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2927:6:1",
                        "type": ""
                      }
                    ],
                    "src": "2842:388:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3314:241:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3360:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3369:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3372:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3362:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3362:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3362:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3335:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3344:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3331:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3331:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3356:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3327:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3327:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "3324:52:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3385:37:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3412:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3399:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3399:23:1"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "3389:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3465:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3474:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3477:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3467:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3467:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3467:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3437:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3445:18:1",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "3434:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3434:30:1"
                          },
                          "nodeType": "YulIf",
                          "src": "3431:50:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3490:59:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3521:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3532:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3517:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3517:22:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3541:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "3500:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3500:49:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3490:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3280:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3291:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3303:6:1",
                        "type": ""
                      }
                    ],
                    "src": "3235:320:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3673:349:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3719:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3728:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3731:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3721:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3721:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3721:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3694:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3703:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3690:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3690:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3715:2:1",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3686:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3686:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "3683:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3744:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3767:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3754:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3754:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3744:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3786:48:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3819:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3830:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3815:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3815:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "3796:18:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3796:38:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "3786:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3843:46:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3874:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3885:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3870:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3870:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3857:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3857:32:1"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "3847:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3932:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3941:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3944:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3934:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3934:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3934:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3904:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3912:18:1",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "3901:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3901:30:1"
                          },
                          "nodeType": "YulIf",
                          "src": "3898:50:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3957:59:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3988:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3999:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3984:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3984:22:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4008:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "3967:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3967:49:1"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3957:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_addresst_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3623:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3634:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3646:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "3654:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "3662:6:1",
                        "type": ""
                      }
                    ],
                    "src": "3560:462:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4097:110:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4143:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4152:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4155:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4145:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4145:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4145:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4118:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4127:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4114:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4114:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4139:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4110:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4110:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "4107:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4168:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4191:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4178:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4178:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4168:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4063:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4074:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4086:6:1",
                        "type": ""
                      }
                    ],
                    "src": "4027:180:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4356:507:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4403:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4412:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4415:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4405:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4405:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4405:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4377:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4386:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4373:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4373:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4398:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4369:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4369:33:1"
                          },
                          "nodeType": "YulIf",
                          "src": "4366:53:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4428:37:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4455:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4442:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4442:23:1"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "4432:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4474:28:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4484:18:1",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "4478:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4529:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4538:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4541:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4531:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4531:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4531:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4517:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4525:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4514:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4514:14:1"
                          },
                          "nodeType": "YulIf",
                          "src": "4511:34:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4554:59:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4585:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4596:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4581:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4581:22:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4605:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "4564:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4564:49:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4554:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4622:48:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4655:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4666:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4651:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4651:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4638:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4638:32:1"
                          },
                          "variables": [
                            {
                              "name": "offset_1",
                              "nodeType": "YulTypedName",
                              "src": "4626:8:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4699:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4708:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4711:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4701:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4701:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4701:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "4685:8:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4695:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4682:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4682:16:1"
                          },
                          "nodeType": "YulIf",
                          "src": "4679:36:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4724:61:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4755:9:1"
                                  },
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4766:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4751:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4751:24:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4777:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "4734:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4734:51:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "4724:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4794:63:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4833:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4844:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4829:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4829:18:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4849:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_struct_Values",
                              "nodeType": "YulIdentifier",
                              "src": "4804:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4804:53:1"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "4794:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4306:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4317:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4329:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "4337:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "4345:6:1",
                        "type": ""
                      }
                    ],
                    "src": "4212:651:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4955:167:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5001:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5010:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5013:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "5003:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5003:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5003:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4976:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4985:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4972:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4972:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4997:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4968:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4968:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "4965:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5026:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5049:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "5036:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5036:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5026:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5068:48:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5101:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5112:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5097:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5097:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "5078:18:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5078:38:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "5068:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4913:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4924:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4936:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "4944:6:1",
                        "type": ""
                      }
                    ],
                    "src": "4868:254:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5197:110:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5243:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5252:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5255:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "5245:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5245:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5245:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5218:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5227:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5214:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5214:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5239:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "5210:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5210:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "5207:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5268:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5291:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "5278:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5278:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5268:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5163:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "5174:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5186:6:1",
                        "type": ""
                      }
                    ],
                    "src": "5127:180:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5399:167:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5445:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5454:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5457:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "5447:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5447:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5447:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5420:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5429:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5416:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5416:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5441:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "5412:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5412:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "5409:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5470:39:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5499:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "5480:18:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5480:29:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5470:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5518:42:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5545:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5556:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5541:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5541:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "5528:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5528:32:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "5518:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5357:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "5368:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5380:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5388:6:1",
                        "type": ""
                      }
                    ],
                    "src": "5312:254:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5667:298:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5713:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5722:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5725:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "5715:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5715:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5715:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5688:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5697:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5684:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5684:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5709:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "5680:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5680:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "5677:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5738:39:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5767:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "5748:18:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5748:29:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5738:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5786:46:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5817:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5828:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5813:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5813:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "5800:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5800:32:1"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "5790:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5875:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5884:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5887:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "5877:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5877:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5877:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5847:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5855:18:1",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "5844:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5844:30:1"
                          },
                          "nodeType": "YulIf",
                          "src": "5841:50:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5900:59:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5931:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5942:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5927:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5927:22:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "5951:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "5910:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5910:49:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "5900:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5625:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "5636:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "5648:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "5656:6:1",
                        "type": ""
                      }
                    ],
                    "src": "5571:394:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6057:161:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6103:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6112:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6115:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "6105:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6105:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6105:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6078:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6087:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6074:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6074:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6099:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "6070:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6070:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "6067:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6128:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6151:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "6138:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6138:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6128:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6170:42:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6197:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6208:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6193:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6193:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "6180:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6180:32:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "6170:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_bytes32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6015:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "6026:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6038:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "6046:6:1",
                        "type": ""
                      }
                    ],
                    "src": "5970:248:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6384:565:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6431:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6440:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6443:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "6433:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6433:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6433:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6405:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6414:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6401:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6401:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6426:3:1",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "6397:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6397:33:1"
                          },
                          "nodeType": "YulIf",
                          "src": "6394:53:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6456:37:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6483:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "6470:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6470:23:1"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "6460:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6502:28:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6512:18:1",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "6506:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6557:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6566:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6569:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "6559:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6559:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6559:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6545:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "6553:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "6542:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6542:14:1"
                          },
                          "nodeType": "YulIf",
                          "src": "6539:34:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6582:59:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6613:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6624:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6609:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6609:22:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6633:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "6592:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6592:49:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6582:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6650:48:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6683:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6694:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6679:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6679:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "6666:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6666:32:1"
                          },
                          "variables": [
                            {
                              "name": "offset_1",
                              "nodeType": "YulTypedName",
                              "src": "6654:8:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6727:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6736:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6739:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "6729:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6729:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6729:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "6713:8:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "6723:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "6710:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6710:16:1"
                          },
                          "nodeType": "YulIf",
                          "src": "6707:36:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6752:61:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6783:9:1"
                                  },
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6794:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6779:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6779:24:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6805:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "6762:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6762:51:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "6752:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6822:63:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6861:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6872:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6857:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6857:18:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6877:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_struct_Values",
                              "nodeType": "YulIdentifier",
                              "src": "6832:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6832:53:1"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "6822:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6894:49:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6927:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6938:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6923:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6923:19:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "6904:18:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6904:39:1"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "6894:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptrt_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6326:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "6337:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6349:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "6357:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "6365:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "6373:6:1",
                        "type": ""
                      }
                    ],
                    "src": "6223:726:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7132:616:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7179:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7188:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7191:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "7181:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7181:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7181:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7153:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7162:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7149:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7149:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7174:3:1",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "7145:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7145:33:1"
                          },
                          "nodeType": "YulIf",
                          "src": "7142:53:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7204:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7227:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "7214:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7214:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7204:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "7246:46:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7277:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7288:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7273:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7273:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "7260:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7260:32:1"
                          },
                          "variables": [
                            {
                              "name": "offset",
                              "nodeType": "YulTypedName",
                              "src": "7250:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "7301:28:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7311:18:1",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "7305:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7356:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7365:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7368:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "7358:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7358:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7358:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7344:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "7352:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "7341:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7341:14:1"
                          },
                          "nodeType": "YulIf",
                          "src": "7338:34:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7381:59:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7412:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7423:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7408:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7408:22:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "7432:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "7391:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7391:49:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "7381:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "7449:48:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7482:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7493:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7478:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7478:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "7465:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7465:32:1"
                          },
                          "variables": [
                            {
                              "name": "offset_1",
                              "nodeType": "YulTypedName",
                              "src": "7453:8:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7526:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7535:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7538:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "7528:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7528:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7528:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "7512:8:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "7522:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "7509:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7509:16:1"
                          },
                          "nodeType": "YulIf",
                          "src": "7506:36:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7551:61:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7582:9:1"
                                  },
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7593:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7578:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7578:24:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "7604:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_bytes",
                              "nodeType": "YulIdentifier",
                              "src": "7561:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7561:51:1"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "7551:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7621:63:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7660:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7671:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7656:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7656:18:1"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "7676:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_struct_Values",
                              "nodeType": "YulIdentifier",
                              "src": "7631:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7631:53:1"
                          },
                          "variableNames": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "7621:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7693:49:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7726:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7737:3:1",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7722:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7722:19:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "7703:18:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7703:39:1"
                          },
                          "variableNames": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "7693:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptrt_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7066:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "7077:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "7089:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "7097:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "7105:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "7113:6:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "7121:6:1",
                        "type": ""
                      }
                    ],
                    "src": "6954:794:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7857:218:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7903:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7912:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7915:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "7905:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7905:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7905:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7878:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7887:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7874:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7874:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7899:2:1",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "7870:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7870:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "7867:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7928:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7951:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "7938:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7938:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7928:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7970:42:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7997:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8008:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7993:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7993:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "7980:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7980:32:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "7970:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8021:48:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8054:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8065:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8050:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8050:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_address",
                              "nodeType": "YulIdentifier",
                              "src": "8031:18:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8031:38:1"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "8021:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes32t_bytes32t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7807:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "7818:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "7830:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "7838:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "7846:6:1",
                        "type": ""
                      }
                    ],
                    "src": "7753:322:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8146:184:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "8156:10:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8165:1:1",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "8160:1:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "8225:63:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "8250:3:1"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "8255:1:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8246:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8246:11:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "8269:3:1"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "8274:1:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "8265:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8265:11:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "8259:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8259:18:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "8239:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8239:39:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "8239:39:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "8186:1:1"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8189:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "8183:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8183:13:1"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "8197:19:1",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "8199:15:1",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "8208:1:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8211:2:1",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8204:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8204:10:1"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "8199:1:1"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "8179:3:1",
                            "statements": []
                          },
                          "src": "8175:113:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "8308:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8313:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8304:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8304:16:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8322:1:1",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8297:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8297:27:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8297:27:1"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory_with_cleanup",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "8124:3:1",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "8129:3:1",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "8134:6:1",
                        "type": ""
                      }
                    ],
                    "src": "8080:250:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8472:150:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "8482:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8502:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "8496:5:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8496:13:1"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "8486:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8557:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8565:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8553:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8553:17:1"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8572:3:1"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8577:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "8518:34:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8518:66:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8518:66:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8593:23:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8604:3:1"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8609:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8600:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8600:16:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "8593:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "8448:3:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "8453:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "8464:3:1",
                        "type": ""
                      }
                    ],
                    "src": "8335:287:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8801:299:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8818:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8829:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8811:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8811:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8811:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8852:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8863:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8848:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8848:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8868:2:1",
                                "type": "",
                                "value": "69"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8841:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8841:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8841:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8891:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8902:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8887:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8887:18:1"
                              },
                              {
                                "hexValue": "496e76616c69642073616c74202d206669727374203230206279746573206f66",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8907:34:1",
                                "type": "",
                                "value": "Invalid salt - first 20 bytes of"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8880:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8880:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8880:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8962:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8973:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8958:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8958:18:1"
                              },
                              {
                                "hexValue": "207468652073616c74206d757374206d617463682063616c6c696e6720616464",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8978:34:1",
                                "type": "",
                                "value": " the salt must match calling add"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8951:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8951:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8951:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9033:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9044:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9029:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9029:19:1"
                              },
                              {
                                "hexValue": "726573732e",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9050:7:1",
                                "type": "",
                                "value": "ress."
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9022:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9022:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9022:36:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9067:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9079:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9090:3:1",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9075:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9075:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9067:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_979150ea917af01af711df6e6f8e813d8cc9edb535cd6f8c22f812e1f4b5ed9c__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8778:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8792:4:1",
                        "type": ""
                      }
                    ],
                    "src": "8627:473:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9153:232:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "9163:28:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9173:18:1",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "9167:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9200:35:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "9216:1:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9219:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9212:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9212:10:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "9228:1:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9231:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9224:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9224:10:1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9208:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9208:27:1"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "9200:4:1"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "9268:111:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9289:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9296:3:1",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "9301:10:1",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "9292:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9292:20:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "9282:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9282:31:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9282:31:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9333:1:1",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9336:4:1",
                                      "type": "",
                                      "value": "0x11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "9326:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9326:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9326:15:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9361:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9364:4:1",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "9354:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9354:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9354:15:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "diff",
                                "nodeType": "YulIdentifier",
                                "src": "9250:4:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "9256:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "9247:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9247:12:1"
                          },
                          "nodeType": "YulIf",
                          "src": "9244:135:1"
                        }
                      ]
                    },
                    "name": "checked_sub_t_uint64",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "9135:1:1",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "9138:1:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "9144:4:1",
                        "type": ""
                      }
                    ],
                    "src": "9105:280:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9587:278:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "9597:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9611:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9616:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "9607:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9607:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "9601:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9636:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9645:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9653:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9641:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9641:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9629:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9629:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9629:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9677:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9682:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9673:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9673:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9690:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9698:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9686:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9686:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9666:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9666:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9666:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9722:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9727:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9718:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9718:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9739:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9743:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "9735:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9735:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9756:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "9752:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9752:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9731:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9731:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9711:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9711:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9711:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9805:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9810:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9801:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9801:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "9819:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9827:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9815:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9815:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9794:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9794:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9794:37:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9840:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9851:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9856:2:1",
                                "type": "",
                                "value": "23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9847:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9847:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "9840:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1__to_t_bytes1_t_bytes1_t_address_t_bytes1__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "9539:3:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "9544:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "9552:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "9560:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "9568:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "9579:3:1",
                        "type": ""
                      }
                    ],
                    "src": "9390:475:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10065:288:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10075:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10089:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10094:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10085:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10085:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "10079:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10114:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10123:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10131:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10119:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10119:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10107:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10107:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10107:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10155:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10160:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10151:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10151:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10168:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10176:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10164:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10164:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10144:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10144:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10144:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10200:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10205:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10196:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10196:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10217:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "10221:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10213:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10213:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10234:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "10230:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10230:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10209:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10209:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10189:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10189:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10189:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10283:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10288:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10279:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10279:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10301:3:1",
                                        "type": "",
                                        "value": "248"
                                      },
                                      {
                                        "name": "value3",
                                        "nodeType": "YulIdentifier",
                                        "src": "10306:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10297:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10297:16:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10315:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10293:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10293:25:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10272:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10272:47:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10272:47:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10328:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10339:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10344:2:1",
                                "type": "",
                                "value": "23"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10335:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10335:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "10328:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_uint8__to_t_bytes1_t_bytes1_t_address_t_uint8__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "10017:3:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "10022:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "10030:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "10038:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "10046:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "10057:3:1",
                        "type": ""
                      }
                    ],
                    "src": "9870:483:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10579:334:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "10589:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10603:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10608:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10599:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10599:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "10593:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10628:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10637:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10645:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10633:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10633:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10621:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10621:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10621:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10669:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10674:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10665:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10665:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10682:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10690:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10678:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10678:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10658:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10658:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10658:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10714:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10719:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10710:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10710:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10731:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "10735:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10727:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10727:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10748:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "10744:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10744:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10723:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10723:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10703:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10703:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10703:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10797:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10802:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10793:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10793:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "10811:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10819:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10807:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10807:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10786:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10786:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10786:37:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10843:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10848:2:1",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10839:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10839:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10861:3:1",
                                        "type": "",
                                        "value": "248"
                                      },
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "10866:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10857:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10857:16:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10875:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10853:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10853:25:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10832:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10832:47:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10832:47:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10888:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10899:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10904:2:1",
                                "type": "",
                                "value": "24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10895:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10895:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "10888:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint8__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint8__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "10523:3:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "10528:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "10536:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "10544:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "10552:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "10560:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "10571:3:1",
                        "type": ""
                      }
                    ],
                    "src": "10358:555:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11141:347:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "11151:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11165:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11170:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "11161:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11161:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "11155:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11190:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11199:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11207:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11195:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11195:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11183:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11183:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11183:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11231:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11236:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11227:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11227:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11244:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11252:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11240:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11240:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11220:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11220:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11220:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11276:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11281:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11272:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11272:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11293:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "11297:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11289:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11289:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11310:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "11306:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11306:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11285:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11285:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11265:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11265:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11265:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11359:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11364:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11355:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11355:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "11373:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11381:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11369:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11369:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11348:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11348:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11348:37:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11405:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11410:2:1",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11401:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11401:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11423:3:1",
                                        "type": "",
                                        "value": "240"
                                      },
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "11428:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11419:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11419:16:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11441:3:1",
                                        "type": "",
                                        "value": "240"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11446:5:1",
                                        "type": "",
                                        "value": "65535"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11437:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11437:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11415:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11415:38:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11394:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11394:60:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11394:60:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11463:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11474:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11479:2:1",
                                "type": "",
                                "value": "25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11470:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11470:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "11463:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint16__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint16__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "11085:3:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "11090:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "11098:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "11106:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "11114:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "11122:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "11133:3:1",
                        "type": ""
                      }
                    ],
                    "src": "10918:570:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11716:350:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "11726:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11740:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11745:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "11736:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11736:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "11730:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11765:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11774:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11782:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11770:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11770:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11758:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11758:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11758:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11806:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11811:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11802:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11802:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11819:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11827:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11815:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11815:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11795:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11795:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11795:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11851:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11856:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11847:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11847:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11868:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "11872:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11864:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11864:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11885:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "11881:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11881:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11860:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11860:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11840:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11840:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11840:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11934:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11939:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11930:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11930:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "11948:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11956:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11944:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11944:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11923:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11923:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11923:37:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11980:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11985:2:1",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11976:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11976:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11998:3:1",
                                        "type": "",
                                        "value": "232"
                                      },
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "12003:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11994:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11994:16:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12016:3:1",
                                        "type": "",
                                        "value": "232"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12021:8:1",
                                        "type": "",
                                        "value": "16777215"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12012:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12012:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11990:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11990:41:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11969:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11969:63:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11969:63:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12041:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12052:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12057:2:1",
                                "type": "",
                                "value": "26"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12048:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12048:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "12041:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint24__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint24__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "11660:3:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "11665:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "11673:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "11681:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "11689:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "11697:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "11708:3:1",
                        "type": ""
                      }
                    ],
                    "src": "11493:573:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12294:352:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "12304:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12318:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12323:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "12314:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12314:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "12308:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12343:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12352:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12360:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12348:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12348:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12336:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12336:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12336:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12384:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12389:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12380:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12380:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12397:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12405:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12393:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12393:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12373:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12373:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12373:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12429:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12434:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12425:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12425:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12446:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "12450:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12442:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12442:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12463:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "12459:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12459:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12438:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12438:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12418:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12418:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12418:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12512:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12517:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12508:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12508:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "12526:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12534:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12522:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12522:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12501:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12501:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12501:37:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12558:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12563:2:1",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12554:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12554:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12576:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "12581:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12572:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12572:16:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12594:3:1",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12599:10:1",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12590:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12590:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12568:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12568:43:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12547:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12547:65:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12547:65:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12621:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12632:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12637:2:1",
                                "type": "",
                                "value": "27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12628:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12628:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "12621:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint32__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint32__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12238:3:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "12243:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "12251:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "12259:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "12267:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "12275:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "12286:3:1",
                        "type": ""
                      }
                    ],
                    "src": "12071:575:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12874:354:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "12884:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12898:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12903:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "12894:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12894:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "12888:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12923:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12932:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12940:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12928:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12928:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12916:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12916:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12916:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12964:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12969:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12960:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12960:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12977:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12985:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12973:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12973:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12953:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12953:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12953:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13009:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13014:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13005:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13005:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13026:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "13030:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "13022:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13022:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13043:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "13039:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13039:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13018:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13018:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12998:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12998:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12998:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13092:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13097:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13088:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13088:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "13106:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13114:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13102:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13102:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13081:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13081:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13081:37:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13138:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13143:2:1",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13134:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13134:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13156:3:1",
                                        "type": "",
                                        "value": "216"
                                      },
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "13161:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "13152:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13152:16:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13174:3:1",
                                        "type": "",
                                        "value": "216"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13179:12:1",
                                        "type": "",
                                        "value": "0xffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "13170:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13170:22:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13148:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13148:45:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13127:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13127:67:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13127:67:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13203:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13214:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13219:2:1",
                                "type": "",
                                "value": "28"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13210:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13210:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "13203:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint40__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint40__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12818:3:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "12823:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "12831:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "12839:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "12847:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "12855:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "12866:3:1",
                        "type": ""
                      }
                    ],
                    "src": "12651:577:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13456:356:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "13466:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13480:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13485:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "13476:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13476:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "13470:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13505:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13514:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13522:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13510:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13510:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13498:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13498:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13498:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13546:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13551:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13542:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13542:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13559:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13567:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13555:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13555:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13535:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13535:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13535:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13591:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13596:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13587:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13587:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13608:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "13612:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "13604:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13604:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13625:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "13621:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13621:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13600:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13600:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13580:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13580:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13580:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13674:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13679:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13670:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13670:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "13688:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13696:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13684:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13684:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13663:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13663:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13663:37:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13720:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13725:2:1",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13716:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13716:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13738:3:1",
                                        "type": "",
                                        "value": "208"
                                      },
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "13743:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "13734:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13734:16:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13756:3:1",
                                        "type": "",
                                        "value": "208"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13761:14:1",
                                        "type": "",
                                        "value": "0xffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "13752:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13752:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13730:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13730:47:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13709:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13709:69:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13709:69:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13787:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13798:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13803:2:1",
                                "type": "",
                                "value": "29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13794:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13794:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "13787:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint48__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint48__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "13400:3:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "13405:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "13413:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "13421:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "13429:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "13437:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "13448:3:1",
                        "type": ""
                      }
                    ],
                    "src": "13233:579:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14040:358:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "14050:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14064:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14069:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "14060:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14060:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "14054:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14089:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14098:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14106:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14094:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14094:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14082:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14082:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14082:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14130:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14135:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14126:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14126:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14143:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14151:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14139:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14139:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14119:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14119:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14119:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14175:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14180:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14171:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14171:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14192:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "14196:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "14188:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14188:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14209:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "14205:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14205:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14184:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14184:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14164:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14164:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14164:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14258:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14263:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14254:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14254:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "14272:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14280:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14268:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14268:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14247:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14247:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14247:37:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14304:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14309:2:1",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14300:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14300:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14322:3:1",
                                        "type": "",
                                        "value": "200"
                                      },
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "14327:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "14318:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14318:16:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14340:3:1",
                                        "type": "",
                                        "value": "200"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14345:16:1",
                                        "type": "",
                                        "value": "0xffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "14336:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14336:26:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14314:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14314:49:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14293:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14293:71:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14293:71:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14373:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14384:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14389:2:1",
                                "type": "",
                                "value": "30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14380:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14380:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "14373:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint56__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint56__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "13984:3:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "13989:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "13997:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "14005:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "14013:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "14021:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "14032:3:1",
                        "type": ""
                      }
                    ],
                    "src": "13817:581:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14626:360:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "14636:23:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14650:3:1",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14655:3:1",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "14646:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14646:13:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "14640:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14675:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14684:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14692:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14680:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14680:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14668:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14668:28:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14668:28:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14716:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14721:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14712:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14712:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14729:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14737:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14725:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14725:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14705:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14705:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14705:36:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14761:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14766:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14757:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14757:11:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14778:2:1",
                                        "type": "",
                                        "value": "96"
                                      },
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "14782:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "14774:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14774:15:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14795:26:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "14791:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14791:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14770:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14770:53:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14750:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14750:74:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14750:74:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14844:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14849:2:1",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14840:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14840:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "14858:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14866:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14854:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14854:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14833:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14833:37:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14833:37:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "14890:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14895:2:1",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14886:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14886:12:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14908:3:1",
                                        "type": "",
                                        "value": "192"
                                      },
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "14913:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "14904:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14904:16:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14926:3:1",
                                        "type": "",
                                        "value": "192"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14931:18:1",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "14922:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14922:28:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14900:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14900:51:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14879:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14879:73:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14879:73:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14961:19:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "14972:3:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14977:2:1",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14968:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14968:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "14961:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint64__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint64__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "14570:3:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "14575:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "14583:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "14591:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "14599:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "14607:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "14618:3:1",
                        "type": ""
                      }
                    ],
                    "src": "14403:583:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15138:344:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15155:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15170:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15186:3:1",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15191:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "15182:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15182:11:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15195:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15178:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15178:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15166:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15166:32:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15148:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15148:51:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15148:51:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15219:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15230:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15215:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15215:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15235:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15208:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15208:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15208:30:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "15247:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "15267:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "15261:5:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15261:13:1"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "15251:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15294:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15305:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15290:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15290:18:1"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "15310:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15283:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15283:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15283:34:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15365:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15373:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15361:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15361:15:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15382:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15393:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15378:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15378:18:1"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "15398:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "15326:34:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15326:79:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15326:79:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15414:62:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15430:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "15449:6:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15457:2:1",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15445:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15445:15:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15466:2:1",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "15462:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15462:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "15441:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15441:29:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15426:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15426:45:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15473:2:1",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15422:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15422:54:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "15414:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15099:9:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "15110:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "15118:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "15129:4:1",
                        "type": ""
                      }
                    ],
                    "src": "14991:491:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15678:14:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15680:10:1",
                          "value": {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "15687:3:1"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "15680:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "15662:3:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "15670:3:1",
                        "type": ""
                      }
                    ],
                    "src": "15487:205:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15729:95:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15746:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15753:3:1",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15758:10:1",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "15749:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15749:20:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15739:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15739:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15739:31:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15786:1:1",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15789:4:1",
                                "type": "",
                                "value": "0x21"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15779:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15779:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15779:15:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15810:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15813:4:1",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "15803:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15803:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15803:15:1"
                        }
                      ]
                    },
                    "name": "panic_error_0x21",
                    "nodeType": "YulFunctionDefinition",
                    "src": "15697:127:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15986:188:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15996:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16008:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16019:2:1",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16004:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16004:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "15996:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16038:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16053:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16069:3:1",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16074:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "16065:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16065:11:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16078:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16061:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16061:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "16049:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16049:32:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16031:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16031:51:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16031:51:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16102:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16113:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16098:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16098:18:1"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "16118:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16091:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16091:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16091:34:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16145:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16156:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16141:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16141:18:1"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "16161:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16134:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16134:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16134:34:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15939:9:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "15950:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "15958:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "15966:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "15977:4:1",
                        "type": ""
                      }
                    ],
                    "src": "15829:345:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16280:76:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "16290:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16302:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16313:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16298:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16298:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "16290:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16332:9:1"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "16343:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16325:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16325:25:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16325:25:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "16249:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "16260:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "16271:4:1",
                        "type": ""
                      }
                    ],
                    "src": "16179:177:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16646:394:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "16656:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16668:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16679:3:1",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16664:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16664:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "16656:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16699:9:1"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "16710:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16692:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16692:25:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16692:25:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "16726:29:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16744:3:1",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16749:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "16740:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16740:11:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16753:1:1",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "16736:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16736:19:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "16730:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16775:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16786:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16771:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16771:18:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "16795:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "16803:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "16791:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16791:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16764:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16764:43:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16764:43:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16827:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16838:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16823:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16823:18:1"
                              },
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "16843:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16816:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16816:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16816:34:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16870:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16881:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16866:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16866:18:1"
                              },
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "16886:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16859:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16859:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16859:34:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16913:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16924:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16909:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16909:19:1"
                              },
                              {
                                "name": "value4",
                                "nodeType": "YulIdentifier",
                                "src": "16930:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16902:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16902:35:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16902:35:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16957:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16968:3:1",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16953:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16953:19:1"
                              },
                              {
                                "name": "value5",
                                "nodeType": "YulIdentifier",
                                "src": "16974:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16946:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16946:35:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16946:35:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17001:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17012:3:1",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16997:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16997:19:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "17022:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "17030:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "17018:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17018:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16990:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16990:44:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16990:44:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes32_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_bytes32_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "16567:9:1",
                        "type": ""
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulTypedName",
                        "src": "16578:6:1",
                        "type": ""
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulTypedName",
                        "src": "16586:6:1",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "16594:6:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "16602:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "16610:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "16618:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "16626:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "16637:4:1",
                        "type": ""
                      }
                    ],
                    "src": "16361:679:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17077:95:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17094:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17101:3:1",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17106:10:1",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "17097:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17097:20:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17087:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17087:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17087:31:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17134:1:1",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17137:4:1",
                                "type": "",
                                "value": "0x32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17127:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17127:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17127:15:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17158:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17161:4:1",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "17151:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17151:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17151:15:1"
                        }
                      ]
                    },
                    "name": "panic_error_0x32",
                    "nodeType": "YulFunctionDefinition",
                    "src": "17045:127:1"
                  }
                ]
              },
              "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_struct_Values(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        let memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n        value := memPtr\n        mstore(memPtr, calldataload(headStart))\n        mstore(add(memPtr, 32), calldataload(add(headStart, 32)))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        value3 := abi_decode_struct_Values(add(headStart, 96), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_struct_Values(add(headStart, 64), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_struct_Values(add(headStart, 64), dataEnd)\n        value3 := abi_decode_address(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_struct$_Values_$52_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        value3 := abi_decode_struct_Values(add(headStart, 96), dataEnd)\n        value4 := abi_decode_address(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_979150ea917af01af711df6e6f8e813d8cc9edb535cd6f8c22f812e1f4b5ed9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"Invalid salt - first 20 bytes of\")\n        mstore(add(headStart, 96), \" the salt must match calling add\")\n        mstore(add(headStart, 128), \"ress.\")\n        tail := add(headStart, 160)\n    }\n    function checked_sub_t_uint64(x, y) -> diff\n    {\n        let _1 := 0xffffffffffffffff\n        diff := sub(and(x, _1), and(y, _1))\n        if gt(diff, _1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1__to_t_bytes1_t_bytes1_t_address_t_bytes1__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(value3, _1))\n        end := add(pos, 23)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_uint8__to_t_bytes1_t_bytes1_t_address_t_uint8__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(shl(248, value3), _1))\n        end := add(pos, 23)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint8__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint8__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(value3, _1))\n        mstore(add(pos, 23), and(shl(248, value4), _1))\n        end := add(pos, 24)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint16__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint16__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(value3, _1))\n        mstore(add(pos, 23), and(shl(240, value4), shl(240, 65535)))\n        end := add(pos, 25)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint24__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint24__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(value3, _1))\n        mstore(add(pos, 23), and(shl(232, value4), shl(232, 16777215)))\n        end := add(pos, 26)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint32__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint32__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(value3, _1))\n        mstore(add(pos, 23), and(shl(224, value4), shl(224, 0xffffffff)))\n        end := add(pos, 27)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint40__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint40__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(value3, _1))\n        mstore(add(pos, 23), and(shl(216, value4), shl(216, 0xffffffffff)))\n        end := add(pos, 28)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint48__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint48__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(value3, _1))\n        mstore(add(pos, 23), and(shl(208, value4), shl(208, 0xffffffffffff)))\n        end := add(pos, 29)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint56__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint56__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(value3, _1))\n        mstore(add(pos, 23), and(shl(200, value4), shl(200, 0xffffffffffffff)))\n        end := add(pos, 30)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint64__to_t_bytes1_t_bytes1_t_address_t_bytes1_t_uint64__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        mstore(add(pos, 2), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 22), and(value3, _1))\n        mstore(add(pos, 23), and(shl(192, value4), shl(192, 0xffffffffffffffff)))\n        end := add(pos, 31)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        copy_memory_to_memory_with_cleanup(add(value1, 32), add(headStart, 96), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes32__to_t_address_t_uint256_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_bytes32_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), and(value6, _1))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
              "id": 1,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {
            "9": [
              {
                "length": 32,
                "start": 1276
              },
              {
                "length": 32,
                "start": 1621
              },
              {
                "length": 32,
                "start": 1848
              },
              {
                "length": 32,
                "start": 2194
              },
              {
                "length": 32,
                "start": 2296
              },
              {
                "length": 32,
                "start": 3406
              },
              {
                "length": 32,
                "start": 3496
              },
              {
                "length": 32,
                "start": 3698
              },
              {
                "length": 32,
                "start": 3767
              },
              {
                "length": 32,
                "start": 3817
              },
              {
                "length": 32,
                "start": 3940
              },
              {
                "length": 32,
                "start": 4119
              },
              {
                "length": 32,
                "start": 4397
              },
              {
                "length": 32,
                "start": 4524
              },
              {
                "length": 32,
                "start": 4754
              },
              {
                "length": 32,
                "start": 4823
              },
              {
                "length": 32,
                "start": 4873
              },
              {
                "length": 32,
                "start": 4996
              },
              {
                "length": 32,
                "start": 5241
              },
              {
                "length": 32,
                "start": 5606
              },
              {
                "length": 32,
                "start": 5675
              },
              {
                "length": 32,
                "start": 5725
              },
              {
                "length": 32,
                "start": 5848
              },
              {
                "length": 32,
                "start": 6094
              },
              {
                "length": 32,
                "start": 6553
              },
              {
                "length": 32,
                "start": 6751
              },
              {
                "length": 32,
                "start": 6919
              },
              {
                "length": 32,
                "start": 7085
              },
              {
                "length": 32,
                "start": 7216
              }
            ]
          },
          "linkReferences": {},
          "object": "",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x81503DA1 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xC3FE107B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE437252A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE437252A EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xE96DEEE4 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xF5745ABA EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xF9664498 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC3FE107B EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xD323826A EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xDDDA0ACB EQ PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98E81077 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x98E81077 EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x9C36A286 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xA49A7C90 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xA7DB93F2 EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81503DA1 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x85CF97AB EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x890C283B EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F990E3F GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x64E03087 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x64E03087 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x6CEC2536 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x74637A7A EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x7F565360 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F990E3F EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x31A7C8C8 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x42D654FC EQ PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26A32FC7 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x26A32FC7 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x27FE1822 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x2852527A EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x28DDD046 EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD84ACB EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x8508B8F EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x26307668 EQ PUSH2 0x234 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x20B8 JUMP JUMPDEST PUSH2 0x789 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x202B JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA1 JUMP JUMPDEST PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x210E JUMP JUMPDEST PUSH2 0xCFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0xD17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x2145 JUMP JUMPDEST PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xDCC JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5B JUMP JUMPDEST PUSH2 0xFA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2145 JUMP JUMPDEST PUSH2 0x111C JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x13CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x426 CALLDATASIZE PUSH1 0x4 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x13E1 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0x140B JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x210E JUMP JUMPDEST PUSH2 0x175C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP6 DUP6 DUP6 DUP6 CALLER PUSH2 0x140B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4AE DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 MLOAD PUSH1 0x20 DUP6 ADD CALLVALUE CREATE2 SWAP2 POP PUSH2 0x4C4 DUP3 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x52E JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0xB8FDA7E00C6B06A2B54E58521BC5894FEE35F1090E5A3BB6390BFE2B98B497F7 SWAP2 LOG3 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 PUSH2 0x58D PUSH2 0x1B37 JUMP JUMPDEST DUP4 PUSH2 0x4A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH2 0x5AE DUP2 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E1 DUP6 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP3 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP4 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xB8FDA7E00C6B06A2B54E58521BC5894FEE35F1090E5A3BB6390BFE2B98B497F7 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE DUP8 PUSH1 0x40 MLOAD PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x716 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x726 DUP3 DUP3 DUP10 PUSH2 0x1B91 JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 PUSH32 0x0 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x773 PUSH2 0x76A PUSH2 0x1B37 JUMP JUMPDEST DUP6 DUP6 DUP6 CALLER PUSH2 0x140B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x773 DUP5 DUP5 DUP5 CALLER PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0xB MSTORE8 DUP4 PUSH1 0x20 MSTORE PUSH32 0x21C35DBE1B344A2488CF3321D6CE542F8E9F305544FF09E4993A62319A497C1F PUSH1 0x40 MSTORE PUSH1 0x55 PUSH1 0xB KECCAK256 PUSH1 0x14 MSTORE DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xD694 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x34 MSTORE8 POP POP PUSH1 0x17 PUSH1 0x1E KECCAK256 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 DUP2 SWAP1 SHR CALLER EQ DUP1 PUSH2 0x800 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP2 AND ISZERO JUMPDEST PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642073616C74202D206669727374203230206279746573206F66 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468652073616C74206D757374206D617463682063616C6C696E6720616464 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x3932B9B997 PUSH1 0xD9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x773 DUP5 DUP5 PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 DUP3 PUSH32 0x0 PUSH2 0x789 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x25 PUSH1 0xFA SHL PUSH2 0x8D1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x22DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP5 GT ISZERO PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3C55AB3B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST DUP4 PUSH1 0x0 SUB PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH1 0x6B PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x37 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x7F DUP5 GT PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH1 0x6B PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP1 DUP4 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0xF8 DUP7 SWAP1 SHL AND PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x37 ADD PUSH2 0x96C JUMP JUMPDEST PUSH1 0xFF DUP5 GT PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH1 0xD7 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP1 DUP4 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x81 PUSH1 0xF8 SHL PUSH1 0x36 DUP4 ADD MSTORE PUSH1 0xF8 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x38 ADD PUSH2 0x96C JUMP JUMPDEST PUSH2 0xFFFF DUP5 GT PUSH2 0xA86 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1B PUSH1 0xFB SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0xF9 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH1 0xF0 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x39 ADD PUSH2 0x96C JUMP JUMPDEST PUSH3 0xFFFFFF DUP5 GT PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH1 0xD9 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x83 PUSH1 0xF8 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT PUSH1 0xE8 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3A ADD PUSH2 0x96C JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 GT PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH1 0x6D PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0xFA SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3B ADD PUSH2 0x96C JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP5 GT PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH1 0xDB PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x85 PUSH1 0xF8 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT PUSH1 0xD8 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3C ADD PUSH2 0x96C JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF DUP5 GT PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH1 0x37 PUSH1 0xFA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0xF9 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0xD0 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3D ADD PUSH2 0x96C JUMP JUMPDEST PUSH7 0xFFFFFFFFFFFFFF DUP5 GT PUSH2 0xC75 JUMPI PUSH1 0x40 MLOAD PUSH1 0xDD PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x87 PUSH1 0xF8 SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC8 SHL SUB NOT PUSH1 0xC8 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3E ADD PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6F PUSH1 0xF9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP3 AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0xFB SHL PUSH1 0x36 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT PUSH1 0xC0 DUP7 SWAP1 SHL AND PUSH1 0x37 DUP3 ADD MSTORE PUSH1 0x3F ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x593 PUSH2 0xCF6 PUSH2 0x1B37 JUMP JUMPDEST DUP4 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD10 PUSH2 0xD09 PUSH2 0x1B37 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 PUSH2 0xD25 DUP5 PUSH2 0x1894 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD36 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH32 0x0 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x593 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD10 DUP4 DUP4 PUSH32 0x0 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP5 MLOAD CREATE SWAP1 POP PUSH2 0xDE2 DUP2 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 MLOAD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xEAD JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xA57CA239 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND BALANCE ISZERO PUSH2 0xF9F JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xF9F JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xC2B3F445 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFB5 DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x67363D3D37363D34F03D5260086018F3 PUSH1 0x80 SHL DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP3 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2FEEA65DD4E9F9CBD86B74B7734210C59A1B2981B5B137BD0EE3E208200C9067 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH2 0x1083 DUP4 PUSH2 0x88A JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE DUP8 PUSH1 0x40 MLOAD PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH2 0x10F0 DUP2 DUP7 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 PUSH2 0x112A DUP5 PUSH2 0x1894 JUMP JUMPDEST DUP4 PUSH32 0x0 PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x115D DUP8 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 MLOAD PUSH1 0x20 DUP9 ADD DUP7 MLOAD CREATE2 SWAP2 POP PUSH2 0x1174 DUP3 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 PUSH32 0xB8FDA7E00C6B06A2B54E58521BC5894FEE35F1090E5A3BB6390BFE2B98B497F7 SWAP2 LOG3 PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 MLOAD PUSH2 0x1244 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x12CD JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xA57CA239 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND BALANCE ISZERO PUSH2 0x13BF JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x13BF JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xC2B3F445 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x773 PUSH2 0x13D8 PUSH2 0x1B37 JUMP JUMPDEST DUP6 DUP6 DUP6 CALLER PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD SWAP1 POP PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 SWAP1 KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1417 DUP8 PUSH2 0x1894 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x67363D3D37363D34F03D5260086018F3 PUSH1 0x80 SHL DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP3 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2FEEA65DD4E9F9CBD86B74B7734210C59A1B2981B5B137BD0EE3E208200C9067 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH2 0x14E5 DUP4 PUSH2 0x88A JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x0 ADD MLOAD DUP11 PUSH1 0x40 MLOAD PUSH2 0x1506 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH2 0x1556 DUP2 DUP7 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x40 MLOAD PUSH2 0x1597 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15D4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1621 JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xA57CA239 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND BALANCE ISZERO PUSH2 0x1713 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1713 JUMPI PUSH32 0x0 DUP2 PUSH1 0x40 MLOAD PUSH4 0xC2B3F445 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 PUSH2 0x172E PUSH2 0x1B37 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP6 DUP6 DUP6 DUP6 CALLER PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 PUSH2 0x1753 PUSH2 0x1B37 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP7 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x236A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLVALUE DUP7 PUSH1 0x40 MLOAD PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1876 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x187B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x188B DUP3 DUP3 DUP9 PUSH2 0x1B91 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x18A2 DUP5 PUSH2 0x1C61 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18BB JUMPI PUSH2 0x18BB PUSH2 0x2353 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x18D9 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18D7 JUMPI PUSH2 0x18D7 PUSH2 0x2353 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1917 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD MSTORE CHAINID SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x192B JUMPI PUSH2 0x192B PUSH2 0x2353 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1949 JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1947 JUMPI PUSH2 0x1947 PUSH2 0x2353 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1962 CALLER DUP6 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 POP PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x197D JUMPI PUSH2 0x197D PUSH2 0x2353 JUMP JUMPDEST SUB PUSH2 0x19C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x13B3A2A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19DA JUMPI PUSH2 0x19DA PUSH2 0x2353 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x19F8 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F6 PUSH2 0x2353 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1A11 JUMPI PUSH2 0x1962 CHAINID DUP6 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A25 JUMPI PUSH2 0x1A25 PUSH2 0x2353 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x1A43 JUMPI POP PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A41 PUSH2 0x2353 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x1A8C JUMPI PUSH1 0x40 MLOAD PUSH4 0x13B3A2A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST PUSH2 0x1A94 PUSH2 0x1B37 JUMP JUMPDEST DUP5 SUB PUSH2 0x1AA0 JUMPI DUP4 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x1AEB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1B34 JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD NUMBER PUSH1 0x1F NOT DUP2 ADD BLOCKHASH PUSH1 0x20 DUP4 ADD MSTORE COINBASE SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE PREVRANDAO PUSH1 0xA0 DUP3 ADD MSTORE CHAINID PUSH1 0xC0 DUP3 ADD MSTORE CALLER PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH2 0x100 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 ISZERO DUP1 PUSH2 0x1BA6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1BE8 JUMPI PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH4 0xA57CA239 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x1C01 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST DUP1 PUSH2 0x1C14 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1C5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x602E773D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x525 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 SWAP1 SHR CALLER EQ DUP1 ISZERO PUSH2 0x1C8A JUMPI POP DUP3 PUSH1 0x14 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL EQ JUMPDEST ISZERO PUSH2 0x1C9A JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP4 SWAP1 SHR CALLER EQ DUP1 ISZERO PUSH2 0x1CBC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0x14 DUP5 SWAP1 BYTE PUSH1 0xF8 SHL AND ISZERO JUMPDEST ISZERO PUSH2 0x1CCD JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 SWAP2 POP SWAP2 JUMP JUMPDEST CALLER PUSH1 0x60 DUP5 SWAP1 SHR SUB PUSH2 0x1CE4 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP4 SWAP1 SHR ISZERO DUP1 ISZERO PUSH2 0x1D09 JUMPI POP DUP3 PUSH1 0x14 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL EQ JUMPDEST ISZERO PUSH2 0x1D1A JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP4 SWAP1 SHR ISZERO DUP1 ISZERO PUSH2 0x1D3B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0x14 DUP5 SWAP1 BYTE PUSH1 0xF8 SHL AND ISZERO JUMPDEST ISZERO PUSH2 0x1D4B JUMPI POP PUSH1 0x1 SWAP1 POP DUP1 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x60 DUP4 SWAP1 SHR PUSH2 0x1D60 JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x2 SWAP2 POP SWAP2 JUMP JUMPDEST DUP3 PUSH1 0x14 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xF8 SHL SUB PUSH2 0x1D87 JUMPI POP PUSH1 0x2 SWAP1 POP PUSH1 0x0 SWAP2 POP SWAP2 JUMP JUMPDEST DUP3 PUSH1 0x14 BYTE PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x0 SUB PUSH2 0x1DAB JUMPI POP PUSH1 0x2 SWAP1 POP PUSH1 0x1 SWAP2 POP SWAP2 JUMP JUMPDEST POP PUSH1 0x2 SWAP1 POP DUP1 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1DF7 JUMPI PUSH2 0x1DF7 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1E1F PUSH2 0x1DB6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x1E8C JUMPI PUSH2 0x1E8C PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE6 DUP9 DUP4 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F09 DUP8 DUP3 DUP9 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1F19 DUP7 PUSH1 0x60 DUP8 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD10 DUP3 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1F8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F97 DUP6 DUP3 DUP7 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1FC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x773 DUP5 DUP3 DUP6 ADD PUSH2 0x1DCC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1FFA PUSH1 0x20 DUP6 ADD PUSH2 0x1F24 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2015 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2021 DUP7 DUP3 DUP8 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2059 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207C DUP8 DUP4 DUP9 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2092 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209F DUP7 DUP3 DUP8 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP PUSH2 0x20AF DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x20DB PUSH1 0x20 DUP5 ADD PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2100 DUP4 PUSH2 0x1F24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212A DUP4 PUSH2 0x1F24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1F8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x217D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A0 DUP9 DUP4 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP4 POP POP PUSH2 0x21D3 DUP7 PUSH1 0x40 DUP8 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F19 PUSH1 0x80 DUP7 ADD PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2223 DUP10 DUP4 DUP11 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2246 DUP9 DUP3 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2256 DUP8 PUSH1 0x60 DUP9 ADD PUSH2 0x1E58 JUMP JUMPDEST SWAP2 POP PUSH2 0x2264 PUSH1 0xA0 DUP8 ADD PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x20AF PUSH1 0x40 DUP6 ADD PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22B7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x229F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x22D2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x230A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x233E DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x229C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0x4D 0xB1 PUSH30 0xD5E4732FB6DA34A148104A592783CA119A1E7BB8829EBA6CBADEF0B511A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT DUP2 0xA7 0xEC JUMPI SWAP16 0xA5 EQ COINBASE COINBASE 0xC3 0x2A EXTCODECOPY 0xD8 SWAP8 0xE5 0xB2 BASEFEE 0x26 PUSH27 0x7671289C462EA53EBF7EB53864736F6C6343000814003300000000 ",
          "sourceMap": "1114:63300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47913:537;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2237:32:1;;;2219:51;;2207:2;2192:18;47913:537:0;;;;;;;;38992:218;;;;;;;;;;-1:-1:-1;38992:218:0;;;;;:::i;:::-;-1:-1:-1;;;;;39168:35:0;39067:4;39168:35;;;;;;;;;;;;;;38992:218;;;;2815:14:1;;2808:22;2790:41;;2778:2;2763:18;38992:218:0;2650:187:1;19443:599:0;;;;;;:::i;:::-;;:::i;20679:309::-;;;;;;:::i;:::-;;:::i;7173:358::-;;;;;;:::i;:::-;;:::i;30980:1274::-;;;;;;:::i;:::-;;:::i;18404:179::-;;;;;;;;;;-1:-1:-1;18404:179:0;;;;;:::i;:::-;;:::i;52133:526::-;;;;;;:::i;:::-;;:::i;10930:295::-;;;;;;:::i;:::-;;:::i;53352:663::-;;;;;;;;;;-1:-1:-1;53352:663:0;;;;;:::i;:::-;;:::i;21659:202::-;;;;;;:::i;:::-;;:::i;54658:178::-;;;;;;;;;;-1:-1:-1;54658:178:0;;;;;:::i;:::-;;:::i;14513:2706::-;;;;;;;;;;-1:-1:-1;14513:2706:0;;;;;:::i;:::-;;:::i;42401:309::-;;;;;;:::i;:::-;;:::i;33355:356::-;;;;;;:::i;:::-;;:::i;38309:414::-;;;;;;;;;;-1:-1:-1;38309:414:0;;;;;:::i;:::-;;:::i;34216:228::-;;;;;;;;;;-1:-1:-1;34216:228:0;;;;;:::i;:::-;;:::i;8708:1118::-;;;;;;:::i;:::-;;:::i;40581:902::-;;;;;;:::i;:::-;;:::i;37413:395::-;;;;;;;;;;-1:-1:-1;37413:395:0;;;;;:::i;:::-;;:::i;23143:1366::-;;;;;;:::i;:::-;;:::i;29438:526::-;;;;;;:::i;:::-;;:::i;35235:1673::-;;;;;;;;;;-1:-1:-1;35235:1673:0;;;;;:::i;:::-;;:::i;44499:1698::-;;;;;;:::i;:::-;;:::i;27601:560::-;;;;;;:::i;:::-;;:::i;25714:537::-;;;;;;:::i;:::-;;:::i;50050:560::-;;;;;;:::i;:::-;;:::i;12127:1144::-;;;;;;:::i;:::-;;:::i;47913:537::-;48083:19;48264:179;48305:4;48333:8;48361:4;48387:6;48422:10;48264:20;:179::i;:::-;48250:193;47913:537;-1:-1:-1;;;;;47913:537:0:o;19443:599::-;19527:19;19558;19580:20;19594:4;19580:6;:20::i;:::-;19558:42;;19723:11;19712:8;19706:15;19699:4;19689:8;19685:19;19672:11;19664:71;19649:86;;19754:62;19803:11;19754:34;:62::i;:::-;-1:-1:-1;;;;;19831:29:0;;:16;:29;;;;;;;;;;;;;19827:82;;;19869:40;;-1:-1:-1;;;19869:40:0;;-1:-1:-1;;;;;19902:5:0;2237:32:1;19869:40:0;;;2219:51:1;2192:18;;19869:40:0;;;;;;;;19827:82;-1:-1:-1;;;;;19919:29:0;;:16;:29;;;;;;;;;;;:36;;-1:-1:-1;;19919:36:0;19951:4;19919:36;;;19972:63;20022:11;;19919:29;19972:63;;;19548:494;19443:599;;;;:::o;20679:309::-;20749:19;20923:58;20944:15;:13;:15::i;:::-;20971:8;20923:13;:58::i;:::-;20909:72;20679:309;-1:-1:-1;;20679:309:0:o;7173:358::-;7242:19;7374:8;7368:15;7361:4;7351:8;7347:19;7334:11;7327:57;7312:72;;7403:62;7452:11;7403:34;:62::i;:::-;7480:44;;-1:-1:-1;;;;;7480:44:0;;;-1:-1:-1;;;;;;;;;;;7480:44:0;;;;7173:358;;;:::o;30980:1274::-;31119:13;31144:19;31166:20;31180:4;31166:6;:20::i;:::-;31144:42;;31196:29;31236:14;31228:23;;31196:55;;31319:4;31313:11;-1:-1:-1;;;31361:5:0;31337:161;31536:21;31529:4;31522:5;31518:16;31511:47;-1:-1:-1;;;31606:4:0;31599:5;31595:16;31571:172;31789:11;31783:4;31776:5;31773:1;31765:36;31756:45;-1:-1:-1;;;;;;;31824:19:0;;31820:97;;31866:40;;-1:-1:-1;;;31866:40:0;;-1:-1:-1;;;;;31899:5:0;2237:32:1;31866:40:0;;;2219:51:1;2192:18;;31866:40:0;2073:203:1;31820:97:0;31931:57;;31975:11;;-1:-1:-1;;;;;31931:57:0;;;;;;;;32000:12;32014:23;32041:5;-1:-1:-1;;;;;32041:10:0;32059:9;32070:4;32041:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31999:76;;;;32085:162;32149:7;32182:10;32222:14;32085:40;:162::i;:::-;31134:1120;;;;30980:1274;;;;;:::o;18404:179::-;18470:23;18523:53;18555:5;18569;18523:20;:53::i;52133:526::-;52281:19;52462:190;52503:15;:13;:15::i;:::-;52542:8;52570:4;52596:6;52631:10;52462:20;:190::i;:::-;52448:204;52133:526;-1:-1:-1;;;;52133:526:0:o;10930:295::-;11077:19;11122:96;11153:8;11169:4;11183:6;11206:10;11122:19;:96::i;53352:663::-;53436:23;53527:4;53521:11;53558:8;53552:4;53545:22;53594:4;53588;53580:19;53625:4;53619;53612:18;53689:100;53667:4;53643:160;53845:4;53839;53829:21;53823:4;53816:35;53877:3;53871:4;53864:17;;53907:6;53901:4;53894:20;53941:4;53935;53927:19;-1:-1:-1;;53994:4:0;53988;53978:21;;53352:663;-1:-1:-1;53352:663:0:o;21659:202::-;21762:19;21747:4;2851:22;;;;2877:10;2851:36;;2850:79;;-1:-1:-1;;;;;;;2901:27:0;;;2850:79;2833:187;;;;-1:-1:-1;;;2833:187:0;;8829:2:1;2833:187:0;;;8811:21:1;8868:2;8848:18;;;8841:30;8907:34;8887:18;;;8880:62;8978:34;8958:18;;;8951:62;-1:-1:-1;;;9029:19:1;;;9022:36;9075:19;;2833:187:0;8627:473:1;2833:187:0;21807:47:::1;21828:4;21844:8;21807:13;:47::i;54658:178::-:0;54724:23;54777:52;54806:4;54822:5;54777:21;:52::i;14513:2706::-;14597:23;14632:17;-1:-1:-1;;;14896:20:0;14915:1;-1:-1:-1;;;;;14896:20:0;:::i;:::-;-1:-1:-1;;;;;14888:28:0;:5;:28;14884:101;;;14939:35;;-1:-1:-1;;;14939:35:0;;-1:-1:-1;;;;;14967:5:0;2237:32:1;14939:35:0;;;2219:51:1;2192:18;;14939:35:0;2073:203:1;14884:101:0;15155:5;15164:4;15155:13;15151:1991;;15191:59;;-1:-1:-1;;;15191:59:0;;;9629:28:1;-1:-1:-1;;;;;;9686:15:1;;9673:11;;;9666:36;-1:-1:-1;;;;;;9739:2:1;9735:15;;;9731:53;9718:11;;;9711:74;-1:-1:-1;;;9801:12:1;;;9794:37;9847:12;;15191:59:0;;;;;;;;;;;;;15184:66;;15151:1991;;;15458:4;15449:5;:13;15445:1697;;15485:59;;-1:-1:-1;;;15485:59:0;;;10107:28:1;-1:-1:-1;;;;;;10164:15:1;;;10151:11;;;10144:36;-1:-1:-1;;;;;;10217:2:1;10213:15;;;10209:53;10196:11;;;10189:74;10089:3;10297:16;;;10293:25;10279:12;;;10272:47;10335:12;;15485:59:0;9870:483:1;15445:1697:0;16050:15;16041:24;;16037:1105;;16088:73;;-1:-1:-1;;;16088:73:0;;;10621:28:1;-1:-1:-1;;;;;;10678:15:1;;;10665:11;;;10658:36;-1:-1:-1;;;;;;10731:2:1;10727:15;;;10723:53;10710:11;;;10703:74;-1:-1:-1;;;10793:12:1;;;10786:37;10603:3;10857:16;;;10853:25;10839:12;;;10832:47;10895:12;;16088:73:0;10358:555:1;16037:1105:0;16191:16;16182:25;;16178:964;;16230:74;;-1:-1:-1;;;16230:74:0;;;11183:28:1;-1:-1:-1;;;;;;11240:15:1;;11227:11;;;11220:36;-1:-1:-1;;;;;;11293:2:1;11289:15;;;11285:53;11272:11;;;11265:74;-1:-1:-1;;;11355:12:1;;;11348:37;-1:-1:-1;;;;;;11441:3:1;11419:16;;;11415:38;11401:12;;;11394:60;11470:12;;16230:74:0;10918:570:1;16178:964:0;16334:16;16325:25;;16321:821;;16373:74;;-1:-1:-1;;;16373:74:0;;;11758:28:1;-1:-1:-1;;;;;;11815:15:1;;11802:11;;;11795:36;-1:-1:-1;;;;;;11868:2:1;11864:15;;;11860:53;11847:11;;;11840:74;-1:-1:-1;;;11930:12:1;;;11923:37;-1:-1:-1;;;;;;12016:3:1;11994:16;;;11990:41;11976:12;;;11969:63;12048:12;;16373:74:0;11493:573:1;16321:821:0;16477:16;16468:25;;16464:678;;16516:74;;-1:-1:-1;;;16516:74:0;;;12336:28:1;-1:-1:-1;;;;;;12393:15:1;;12380:11;;;12373:36;-1:-1:-1;;;;;;12446:2:1;12442:15;;;12438:53;12425:11;;;12418:74;-1:-1:-1;;;12508:12:1;;;12501:37;-1:-1:-1;;;;;;12594:3:1;12572:16;;;12568:43;12554:12;;;12547:65;12628:12;;16516:74:0;12071:575:1;16464:678:0;16620:16;16611:25;;16607:535;;16659:74;;-1:-1:-1;;;16659:74:0;;;12916:28:1;-1:-1:-1;;;;;;12973:15:1;;12960:11;;;12953:36;-1:-1:-1;;;;;;13026:2:1;13022:15;;;13018:53;13005:11;;;12998:74;-1:-1:-1;;;13088:12:1;;;13081:37;-1:-1:-1;;;;;;13174:3:1;13152:16;;;13148:45;13134:12;;;13127:67;13210:12;;16659:74:0;12651:577:1;16607:535:0;16763:16;16754:25;;16750:392;;16802:74;;-1:-1:-1;;;16802:74:0;;;13498:28:1;-1:-1:-1;;;;;;13555:15:1;;13542:11;;;13535:36;-1:-1:-1;;;;;;13608:2:1;13604:15;;;13600:53;13587:11;;;13580:74;-1:-1:-1;;;13670:12:1;;;13663:37;-1:-1:-1;;;;;;13756:3:1;13734:16;;;13730:47;13716:12;;;13709:69;13794:12;;16802:74:0;13233:579:1;16750:392:0;16906:16;16897:25;;16893:249;;16945:74;;-1:-1:-1;;;16945:74:0;;;14082:28:1;-1:-1:-1;;;;;;14139:15:1;;14126:11;;;14119:36;-1:-1:-1;;;;;;14192:2:1;14188:15;;;14184:53;14171:11;;;14164:74;-1:-1:-1;;;14254:12:1;;;14247:37;-1:-1:-1;;;;;;14340:3:1;14318:16;;;14314:49;14300:12;;;14293:71;14380:12;;16945:74:0;13817:581:1;16893:249:0;17057:74;;-1:-1:-1;;;17057:74:0;;;14668:28:1;-1:-1:-1;;;;;;14725:15:1;;14712:11;;;14705:36;-1:-1:-1;;;;;;14778:2:1;14774:15;;;14770:53;14757:11;;;14750:74;-1:-1:-1;;;14840:12:1;;;14833:37;-1:-1:-1;;;;;;14926:3:1;14904:16;;;14900:51;14886:12;;;14879:73;14968:12;;17057:74:0;;;;;;;;;;;;17050:81;;16893:249;-1:-1:-1;17194:15:0;;;;;;;;14513:2706;-1:-1:-1;;;14513:2706:0:o;42401:309::-;42471:19;42645:58;42666:15;:13;:15::i;:::-;42693:8;42645:13;:58::i;33355:356::-;33450:13;33617:87;33643:15;:13;:15::i;:::-;33676:14;33698:4;33617:18;:87::i;:::-;33609:95;33355:356;-1:-1:-1;;;33355:356:0:o;38309:414::-;38395:23;38448:121;38477:20;38491:4;38477:6;:20::i;:::-;38540:8;38523:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;38513:37;;;;;;38562:5;38448:21;:121::i;:::-;-1:-1:-1;;;;;38664:33:0;;:16;:33;;;;;;;;;;;38430:139;;-1:-1:-1;38664:33:0;;38660:56;;;-1:-1:-1;38714:1:0;38309:414;;;;:::o;34216:228::-;34304:23;34357:80;34386:4;34406:12;34430:5;34357:21;:80::i;8708:1118::-;8886:19;9020:8;9014:15;9007:4;8997:8;8993:19;8984:6;8978:13;8971:59;8956:74;;9049:62;9098:11;9049:34;:62::i;:::-;9126:44;;-1:-1:-1;;;;;9126:44:0;;;-1:-1:-1;;;;;;;;;;;9126:44:0;;;;9182:12;9196:23;9223:11;-1:-1:-1;;;;;9223:16:0;9247:6;:21;;;9270:4;9223:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9181:94;;;;9290:7;9285:116;;9359:5;9378:10;9320:70;;-1:-1:-1;;;9320:70:0;;;;;;;;;:::i;9285:116::-;-1:-1:-1;;;;;9415:5:0;:13;;:18;9411:409;;9637:13;-1:-1:-1;;;;;9637:18:0;9663:5;-1:-1:-1;;;;;9663:13:0;;9637:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9613:68:0;;-1:-1:-1;9613:68:0;-1:-1:-1;9613:68:0;9695:115;;9764:5;9783:10;9734:61;;-1:-1:-1;;;9734:61:0;;;;;;;;;:::i;9695:115::-;8907:919;;8708:1118;;;;;;:::o;40581:902::-;40665:19;40696;40718:20;40732:4;40718:6;:20::i;:::-;40696:42;;40748:31;:86;;;;;;;;;;;;;-1:-1:-1;;;40748:86:0;;;;;40844:13;40982:11;40961:18;40955:25;40950:2;40930:18;40926:27;40923:1;40915:79;40906:88;-1:-1:-1;;;;;;41017:19:0;;41013:97;;41059:40;;-1:-1:-1;;;41059:40:0;;-1:-1:-1;;;;;41092:5:0;2237:32:1;41059:40:0;;;2219:51:1;2192:18;;41059:40:0;2073:203:1;41013:97:0;41124:69;;41180:11;;-1:-1:-1;;;;;41124:69:0;;;;;;;;41218:42;41247:11;41218:21;:42::i;:::-;41204:56;;41271:12;41289:5;-1:-1:-1;;;;;41289:10:0;41307:9;41318:8;41289:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41270:57;;;41337:80;41382:7;41404:11;41337:34;:80::i;:::-;41432:44;;-1:-1:-1;;;;;41432:44:0;;;-1:-1:-1;;;;;;;;;;;41432:44:0;;;;40686:797;;;;40581:902;;;;:::o;37413:395::-;37505:23;37558:96;37587:20;37601:4;37587:6;:20::i;:::-;37623:12;37647:5;37558:21;:96::i;23143:1366::-;23344:19;23375;23397:20;23411:4;23397:6;:20::i;:::-;23375:42;;23542:11;23531:8;23525:15;23518:4;23508:8;23504:19;23495:6;23489:13;23481:73;23466:88;;23573:62;23622:11;23573:34;:62::i;:::-;-1:-1:-1;;;;;23650:29:0;;:16;:29;;;;;;;;;;;;;23646:82;;;23688:40;;-1:-1:-1;;;23688:40:0;;-1:-1:-1;;;;;23721:5:0;2237:32:1;23688:40:0;;;2219:51:1;2192:18;;23688:40:0;2073:203:1;23646:82:0;-1:-1:-1;;;;;23738:29:0;;:16;:29;;;;;;;;;;;:36;;-1:-1:-1;;23738:36:0;23770:4;23738:36;;;23790:63;23840:11;;23738:29;23790:63;;;23865:12;23879:23;23906:11;-1:-1:-1;;;;;23906:16:0;23930:6;:21;;;23953:4;23906:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23864:94;;;;23973:7;23968:116;;24042:5;24061:10;24003:70;;-1:-1:-1;;;24003:70:0;;;;;;;;;:::i;23968:116::-;-1:-1:-1;;;;;24098:5:0;:13;;:18;24094:409;;24320:13;-1:-1:-1;;;;;24320:18:0;24346:5;-1:-1:-1;;;;;24346:13:0;;24320:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24296:68:0;;-1:-1:-1;24296:68:0;-1:-1:-1;24296:68:0;24378:115;;24447:5;24466:10;24417:61;;-1:-1:-1;;;24417:61:0;;;;;;;;;:::i;24378:115::-;23365:1144;;;23143:1366;;;;;;;:::o;29438:526::-;29586:19;29767:190;29808:15;:13;:15::i;:::-;29847:8;29875:4;29901:6;29936:10;29767:20;:190::i;35235:1673::-;35371:23;36638:4;36632:11;36679:12;36672:4;36667:3;36663:14;36656:36;36728:4;36721;36716:3;36712:14;36705:28;36758:8;36753:3;36746:21;36802:4;36797:3;36793:14;36780:27;;36835:4;36828:5;36820:20;36889:2;36872:20;;;35235:1673;-1:-1:-1;;;;35235:1673:0:o;44499:1698::-;44700:19;44731;44753:20;44767:4;44753:6;:20::i;:::-;44731:42;;44783:31;:86;;;;;;;;;;;;;-1:-1:-1;;;44783:86:0;;;;;44879:13;45017:11;44996:18;44990:25;44985:2;44965:18;44961:27;44958:1;44950:79;44941:88;-1:-1:-1;;;;;;45052:19:0;;45048:97;;45094:40;;-1:-1:-1;;;45094:40:0;;-1:-1:-1;;;;;45127:5:0;2237:32:1;45094:40:0;;;2219:51:1;2192:18;;45094:40:0;2073:203:1;45048:97:0;45159:69;;45215:11;;-1:-1:-1;;;;;45159:69:0;;;;;;;;45253:42;45282:11;45253:21;:42::i;:::-;45239:56;;45306:12;45324:5;-1:-1:-1;;;;;45324:10:0;45342:6;:24;;;45368:8;45324:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45305:72;;;45387:80;45432:7;45454:11;45387:34;:80::i;:::-;45482:44;;-1:-1:-1;;;;;45482:44:0;;;-1:-1:-1;;;;;;;;;;;45482:44:0;;;;45537:23;45594:11;-1:-1:-1;;;;;45594:16:0;45618:6;:21;;;45641:4;45594:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;45570:76:0;;-1:-1:-1;45570:76:0;-1:-1:-1;45570:76:0;45656:116;;45730:5;45749:10;45691:70;;-1:-1:-1;;;45691:70:0;;;;;;;;;:::i;45656:116::-;-1:-1:-1;;;;;45786:5:0;:13;;:18;45782:409;;46008:13;-1:-1:-1;;;;;46008:18:0;46034:5;-1:-1:-1;;;;;46034:13:0;;46008:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;45984:68:0;;-1:-1:-1;45984:68:0;-1:-1:-1;45984:68:0;46066:115;;46135:5;46154:10;46105:61;;-1:-1:-1;;;46105:61:0;;;;;;;;;:::i;46066:115::-;44721:1476;;;;;44499:1698;;;;;;;:::o;27601:560::-;27780:19;27961:193;28002:15;:13;:15::i;:::-;28041:8;28069:4;28095:6;28130:13;27961:20;:193::i;25714:537::-;25884:19;26065:179;26106:4;26134:8;26162:4;26188:6;26223:10;26065:20;:179::i;50050:560::-;50229:19;50410:193;50451:15;:13;:15::i;:::-;50490:8;50518:4;50544:6;50579:13;50410:20;:193::i;12127:1144::-;12221:13;12246:29;12286:14;12278:23;;12246:55;;12369:4;12363:11;-1:-1:-1;;;12411:5:0;12387:161;12586:21;12579:4;12572:5;12568:16;12561:47;-1:-1:-1;;;12656:4:0;12649:5;12645:16;12621:172;12832:4;12825:5;12822:1;12815:22;12806:31;-1:-1:-1;;;;;;;12860:19:0;;12856:97;;12902:40;;-1:-1:-1;;;12902:40:0;;-1:-1:-1;;;;;12935:5:0;2237:32:1;12902:40:0;;;2219:51:1;2192:18;;12902:40:0;2073:203:1;12856:97:0;12967:38;;-1:-1:-1;;;;;12967:38:0;;;-1:-1:-1;;;;;;;;;;;12967:38:0;;;;13017:12;13031:23;13058:5;-1:-1:-1;;;;;13058:10:0;13076:9;13087:4;13058:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13016:76;;;;13102:162;13166:7;13199:10;13239:14;13102:40;:162::i;:::-;12236:1035;;;12127:1144;;;;:::o;56027:2025::-;56080:19;56112:23;56137:45;56186:24;56204:4;56186:10;:24::i;:::-;56111:99;;-1:-1:-1;56111:99:0;-1:-1:-1;56240:21:0;56225:11;:36;;;;;;;;:::i;:::-;;:93;;;;-1:-1:-1;56291:27:0;56265:22;:53;;;;;;;;:::i;:::-;;56225:93;56221:1825;;;56463:43;;;56474:10;56463:43;;;16031:51:1;56486:13:0;16098:18:1;;;16091:34;;;;16141:18;;;16134:34;;;16004:18;;56463:43:0;;;;;;;;;;;;56453:54;;;;;;56439:68;;56221:1825;;;56543:21;56528:11;:36;;;;;;;;:::i;:::-;;:94;;;;-1:-1:-1;56594:28:0;56568:22;:54;;;;;;;;:::i;:::-;;56528:94;56524:1522;;;56719:67;56762:10;56780:4;60605:12;60668:15;;;60703:4;60696:15;60748:4;60732:21;;;60536:233;56719:67;56705:81;;56524:1522;;;56822:21;56807:11;:36;;;;;;;;:::i;:::-;;56803:1243;;56973:29;;-1:-1:-1;;;56973:29:0;;-1:-1:-1;;;;;56995:5:0;2237:32:1;56973:29:0;;;2219:51:1;2192:18;;56973:29:0;2073:203:1;56803:1243:0;57038:23;57023:11;:38;;;;;;;;:::i;:::-;;:95;;;;-1:-1:-1;57091:27:0;57065:22;:53;;;;;;;;:::i;:::-;;57023:95;57019:1027;;;57370:52;57397:13;57416:4;60605:12;60668:15;;;60703:4;60696:15;60748:4;60732:21;;;60536:233;57019:1027;57471:23;57456:11;:38;;;;;;;;:::i;:::-;;:102;;;;-1:-1:-1;57524:34:0;57498:22;:60;;;;;;;;:::i;:::-;;57456:102;57439:607;;;57697:29;;-1:-1:-1;;;57697:29:0;;-1:-1:-1;;;;;57719:5:0;2237:32:1;57697:29:0;;;2219:51:1;2192:18;;57697:29:0;2073:203:1;57439:607:0;57982:15;:13;:15::i;:::-;57974:4;:23;57973:62;;58031:4;57973:62;;;58011:16;;;;;;16325:25:1;;;16298:18;58011:16:0;;;;;;;;;;;;58001:27;;;;;;57973:62;57959:76;;57439:607;56101:1951;;56027:2025;;;:::o;63516:230::-;-1:-1:-1;;;;;63609:25:0;;;;:57;;-1:-1:-1;;;;;;63638:23:0;;;:28;63609:57;63605:135;;;63689:40;;-1:-1:-1;;;63689:40:0;;-1:-1:-1;;;;;63722:5:0;2237:32:1;63689:40:0;;;2219:51:1;2192:18;;63689:40:0;2073:203:1;63605:135:0;63516:230;:::o;60970:1347::-;61100:1186;;;62038:12;-1:-1:-1;;62038:17:0;;62028:28;62053:2;61100:1186;;16692:25:1;62078:14:0;16771:18:1;;;16764:43;;;;16823:18;;;16816:34;;;;62148:15:0;16866:18:1;;;16859:34;62185:16:0;16909:19:1;;;16902:35;62223:13:0;16953:19:1;;;16946:35;62258:10:0;16997:19:1;;;16990:44;-1:-1:-1;;16664:19:1;;61100:1186:0;;;;;;;;;;;;61073:1227;;;;;;61066:1234;;60970:1347;:::o;64088:324::-;64260:7;64259:8;:43;;;-1:-1:-1;;;;;;64271:26:0;;;:31;64259:43;64255:151;;;64364:5;64383:10;64325:70;;-1:-1:-1;;;64325:70:0;;;;;;;;;:::i;64255:151::-;64088:324;;;:::o;62539:808::-;63199:7;63198:8;:37;;;-1:-1:-1;;;;;;63210:25:0;;;63198:37;:69;;;-1:-1:-1;;;;;;63239:23:0;;;:28;63198:69;63194:147;;;63290:40;;-1:-1:-1;;;63290:40:0;;-1:-1:-1;;;;;63323:5:0;2237:32:1;63290:40:0;;;2219:51:1;2192:18;;63290:40:0;2073:203:1;63194:147:0;62539:808;;:::o;58506:1723::-;58577:23;;58663:22;;;;58689:10;58663:36;:67;;;;-1:-1:-1;58710:4:0;58715:2;58710:8;;;-1:-1:-1;;;;;58703:27:0;;-1:-1:-1;;;58703:27:0;58663:67;58659:1564;;;-1:-1:-1;58787:21:0;;-1:-1:-1;58787:21:0;58506:1723;;;:::o;58659:1564::-;58859:22;;;;58885:10;58859:36;:67;;;;-1:-1:-1;;;;;;;58911:2:0;58906:8;;;;;58899:27;;58859:67;58855:1368;;;-1:-1:-1;58983:21:0;;-1:-1:-1;59006:28:0;58506:1723;;;:::o;58855:1368::-;59082:10;59056:22;;;;:36;59052:1171;;-1:-1:-1;59149:21:0;;-1:-1:-1;59172:34:0;58506:1723;;;:::o;59052:1171::-;59228:22;;;;:36;:67;;;;-1:-1:-1;59275:4:0;59280:2;59275:8;;;-1:-1:-1;;;;;59268:27:0;;-1:-1:-1;;;59268:27:0;59228:67;59224:999;;;-1:-1:-1;59352:23:0;;-1:-1:-1;59377:27:0;58506:1723;;;:::o;59224:999::-;59426:22;;;;:36;:67;;;;-1:-1:-1;;;;;;;59478:2:0;59473:8;;;;;59466:27;;59426:67;59422:801;;;-1:-1:-1;59550:23:0;;-1:-1:-1;59550:23:0;58506:1723;;;:::o;59422:801::-;59625:22;;;;59621:602;;-1:-1:-1;59718:23:0;;-1:-1:-1;59743:34:0;58506:1723;;;:::o;59621:602::-;59806:4;59811:2;59806:8;;;-1:-1:-1;;;;;59799:27:0;;-1:-1:-1;;;59799:27:0;59795:428;;-1:-1:-1;59883:18:0;;-1:-1:-1;59903:27:0;58506:1723;;;:::o;59795:428::-;59959:4;59964:2;59959:8;;;-1:-1:-1;;;;;59952:27:0;;;;59948:275;;-1:-1:-1;60036:18:0;;-1:-1:-1;60056:28:0;58506:1723;;;:::o;59948:275::-;-1:-1:-1;60157:18:0;;-1:-1:-1;60157:18:0;58506:1723;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:718;188:5;241:3;234:4;226:6;222:17;218:27;208:55;;259:1;256;249:12;208:55;295:6;282:20;-1:-1:-1;;;;;358:2:1;354;351:10;348:36;;;364:18;;:::i;:::-;439:2;433:9;407:2;493:13;;-1:-1:-1;;489:22:1;;;513:2;485:31;481:40;469:53;;;537:18;;;557:22;;;534:46;531:72;;;583:18;;:::i;:::-;623:10;619:2;612:22;658:2;650:6;643:18;704:3;697:4;692:2;684:6;680:15;676:26;673:35;670:55;;;721:1;718;711:12;670:55;785:2;778:4;770:6;766:17;759:4;751:6;747:17;734:54;832:1;825:4;820:2;812:6;808:15;804:26;797:37;852:6;843:15;;;;;;146:718;;;;:::o;869:475::-;922:5;970:4;958:9;953:3;949:19;945:30;942:50;;;988:1;985;978:12;942:50;1021:4;1015:11;1065:4;1057:6;1053:17;1136:6;1124:10;1121:22;-1:-1:-1;;;;;1088:10:1;1085:34;1082:62;1079:88;;;1147:18;;:::i;:::-;1183:4;1176:24;1248:23;;1233:39;;1333:2;1318:18;;;1305:32;1288:15;;;1281:57;;;;-1:-1:-1;1218:6:1;869:475;-1:-1:-1;869:475:1:o;1349:719::-;1475:6;1483;1491;1499;1552:3;1540:9;1531:7;1527:23;1523:33;1520:53;;;1569:1;1566;1559:12;1520:53;1605:9;1592:23;1582:33;;1666:2;1655:9;1651:18;1638:32;-1:-1:-1;;;;;1730:2:1;1722:6;1719:14;1716:34;;;1746:1;1743;1736:12;1716:34;1769:49;1810:7;1801:6;1790:9;1786:22;1769:49;:::i;:::-;1759:59;;1871:2;1860:9;1856:18;1843:32;1827:48;;1900:2;1890:8;1887:16;1884:36;;;1916:1;1913;1906:12;1884:36;;1939:51;1982:7;1971:8;1960:9;1956:24;1939:51;:::i;:::-;1929:61;;;2009:53;2054:7;2049:2;2038:9;2034:18;2009:53;:::i;:::-;1999:63;;1349:719;;;;;;;:::o;2281:173::-;2349:20;;-1:-1:-1;;;;;2398:31:1;;2388:42;;2378:70;;2444:1;2441;2434:12;2378:70;2281:173;;;:::o;2459:186::-;2518:6;2571:2;2559:9;2550:7;2546:23;2542:32;2539:52;;;2587:1;2584;2577:12;2539:52;2610:29;2629:9;2610:29;:::i;2842:388::-;2919:6;2927;2980:2;2968:9;2959:7;2955:23;2951:32;2948:52;;;2996:1;2993;2986:12;2948:52;3032:9;3019:23;3009:33;;3093:2;3082:9;3078:18;3065:32;-1:-1:-1;;;;;3112:6:1;3109:30;3106:50;;;3152:1;3149;3142:12;3106:50;3175:49;3216:7;3207:6;3196:9;3192:22;3175:49;:::i;:::-;3165:59;;;2842:388;;;;;:::o;3235:320::-;3303:6;3356:2;3344:9;3335:7;3331:23;3327:32;3324:52;;;3372:1;3369;3362:12;3324:52;3412:9;3399:23;-1:-1:-1;;;;;3437:6:1;3434:30;3431:50;;;3477:1;3474;3467:12;3431:50;3500:49;3541:7;3532:6;3521:9;3517:22;3500:49;:::i;3560:462::-;3646:6;3654;3662;3715:2;3703:9;3694:7;3690:23;3686:32;3683:52;;;3731:1;3728;3721:12;3683:52;3767:9;3754:23;3744:33;;3796:38;3830:2;3819:9;3815:18;3796:38;:::i;:::-;3786:48;;3885:2;3874:9;3870:18;3857:32;-1:-1:-1;;;;;3904:6:1;3901:30;3898:50;;;3944:1;3941;3934:12;3898:50;3967:49;4008:7;3999:6;3988:9;3984:22;3967:49;:::i;:::-;3957:59;;;3560:462;;;;;:::o;4027:180::-;4086:6;4139:2;4127:9;4118:7;4114:23;4110:32;4107:52;;;4155:1;4152;4145:12;4107:52;-1:-1:-1;4178:23:1;;4027:180;-1:-1:-1;4027:180:1:o;4212:651::-;4329:6;4337;4345;4398:3;4386:9;4377:7;4373:23;4369:33;4366:53;;;4415:1;4412;4405:12;4366:53;4455:9;4442:23;-1:-1:-1;;;;;4525:2:1;4517:6;4514:14;4511:34;;;4541:1;4538;4531:12;4511:34;4564:49;4605:7;4596:6;4585:9;4581:22;4564:49;:::i;:::-;4554:59;;4666:2;4655:9;4651:18;4638:32;4622:48;;4695:2;4685:8;4682:16;4679:36;;;4711:1;4708;4701:12;4679:36;;4734:51;4777:7;4766:8;4755:9;4751:24;4734:51;:::i;:::-;4724:61;;;4804:53;4849:7;4844:2;4833:9;4829:18;4804:53;:::i;:::-;4794:63;;4212:651;;;;;:::o;4868:254::-;4936:6;4944;4997:2;4985:9;4976:7;4972:23;4968:32;4965:52;;;5013:1;5010;5003:12;4965:52;5049:9;5036:23;5026:33;;5078:38;5112:2;5101:9;5097:18;5078:38;:::i;:::-;5068:48;;4868:254;;;;;:::o;5312:::-;5380:6;5388;5441:2;5429:9;5420:7;5416:23;5412:32;5409:52;;;5457:1;5454;5447:12;5409:52;5480:29;5499:9;5480:29;:::i;:::-;5470:39;5556:2;5541:18;;;;5528:32;;-1:-1:-1;;;5312:254:1:o;5571:394::-;5648:6;5656;5709:2;5697:9;5688:7;5684:23;5680:32;5677:52;;;5725:1;5722;5715:12;5677:52;5748:29;5767:9;5748:29;:::i;:::-;5738:39;;5828:2;5817:9;5813:18;5800:32;-1:-1:-1;;;;;5847:6:1;5844:30;5841:50;;;5887:1;5884;5877:12;5970:248;6038:6;6046;6099:2;6087:9;6078:7;6074:23;6070:32;6067:52;;;6115:1;6112;6105:12;6067:52;-1:-1:-1;;6138:23:1;;;6208:2;6193:18;;;6180:32;;-1:-1:-1;5970:248:1:o;6223:726::-;6349:6;6357;6365;6373;6426:3;6414:9;6405:7;6401:23;6397:33;6394:53;;;6443:1;6440;6433:12;6394:53;6483:9;6470:23;-1:-1:-1;;;;;6553:2:1;6545:6;6542:14;6539:34;;;6569:1;6566;6559:12;6539:34;6592:49;6633:7;6624:6;6613:9;6609:22;6592:49;:::i;:::-;6582:59;;6694:2;6683:9;6679:18;6666:32;6650:48;;6723:2;6713:8;6710:16;6707:36;;;6739:1;6736;6729:12;6707:36;;6762:51;6805:7;6794:8;6783:9;6779:24;6762:51;:::i;:::-;6752:61;;;6832:53;6877:7;6872:2;6861:9;6857:18;6832:53;:::i;:::-;6822:63;;6904:39;6938:3;6927:9;6923:19;6904:39;:::i;6954:794::-;7089:6;7097;7105;7113;7121;7174:3;7162:9;7153:7;7149:23;7145:33;7142:53;;;7191:1;7188;7181:12;7142:53;7227:9;7214:23;7204:33;;7288:2;7277:9;7273:18;7260:32;-1:-1:-1;;;;;7352:2:1;7344:6;7341:14;7338:34;;;7368:1;7365;7358:12;7338:34;7391:49;7432:7;7423:6;7412:9;7408:22;7391:49;:::i;:::-;7381:59;;7493:2;7482:9;7478:18;7465:32;7449:48;;7522:2;7512:8;7509:16;7506:36;;;7538:1;7535;7528:12;7506:36;;7561:51;7604:7;7593:8;7582:9;7578:24;7561:51;:::i;:::-;7551:61;;;7631:53;7676:7;7671:2;7660:9;7656:18;7631:53;:::i;:::-;7621:63;;7703:39;7737:3;7726:9;7722:19;7703:39;:::i;:::-;7693:49;;6954:794;;;;;;;;:::o;7753:322::-;7830:6;7838;7846;7899:2;7887:9;7878:7;7874:23;7870:32;7867:52;;;7915:1;7912;7905:12;7867:52;7951:9;7938:23;7928:33;;8008:2;7997:9;7993:18;7980:32;7970:42;;8031:38;8065:2;8054:9;8050:18;8031:38;:::i;8080:250::-;8165:1;8175:113;8189:6;8186:1;8183:13;8175:113;;;8265:11;;;8259:18;8246:11;;;8239:39;8211:2;8204:10;8175:113;;;-1:-1:-1;;8322:1:1;8304:16;;8297:27;8080:250::o;8335:287::-;8464:3;8502:6;8496:13;8518:66;8577:6;8572:3;8565:4;8557:6;8553:17;8518:66;:::i;:::-;8600:16;;;;;8335:287;-1:-1:-1;;8335:287:1:o;9105:280::-;-1:-1:-1;;;;;9224:10:1;;;9212;;;9208:27;;9247:12;;;9244:135;;;9301:10;9296:3;9292:20;9289:1;9282:31;9336:4;9333:1;9326:15;9364:4;9361:1;9354:15;9244:135;;9105:280;;;;:::o;14991:491::-;15195:1;15191;15186:3;15182:11;15178:19;15170:6;15166:32;15155:9;15148:51;15235:2;15230;15219:9;15215:18;15208:30;15129:4;15267:6;15261:13;15310:6;15305:2;15294:9;15290:18;15283:34;15326:79;15398:6;15393:2;15382:9;15378:18;15373:2;15365:6;15361:15;15326:79;:::i;:::-;15466:2;15445:15;-1:-1:-1;;15441:29:1;15426:45;;;;15473:2;15422:54;;14991:491;-1:-1:-1;;;14991:491:1:o;15697:127::-;15758:10;15753:3;15749:20;15746:1;15739:31;15789:4;15786:1;15779:15;15813:4;15810:1;15803:15"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "1830200",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "computeCreate2Address(bytes32,bytes32)": "infinite",
            "computeCreate2Address(bytes32,bytes32,address)": "infinite",
            "computeCreate3Address(bytes32)": "infinite",
            "computeCreate3Address(bytes32,address)": "infinite",
            "computeCreateAddress(address,uint256)": "infinite",
            "computeCreateAddress(uint256)": "infinite",
            "deployCreate(bytes)": "infinite",
            "deployCreate2(bytes)": "infinite",
            "deployCreate2(bytes32,bytes)": "infinite",
            "deployCreate2AndInit(bytes,bytes,(uint256,uint256))": "infinite",
            "deployCreate2AndInit(bytes,bytes,(uint256,uint256),address)": "infinite",
            "deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256))": "infinite",
            "deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256),address)": "infinite",
            "deployCreate2Clone(address,bytes)": "infinite",
            "deployCreate2Clone(bytes32,address,bytes)": "infinite",
            "deployCreate3(bytes)": "infinite",
            "deployCreate3(bytes32,bytes)": "infinite",
            "deployCreate3AndInit(bytes,bytes,(uint256,uint256))": "infinite",
            "deployCreate3AndInit(bytes,bytes,(uint256,uint256),address)": "infinite",
            "deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256))": "infinite",
            "deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256),address)": "infinite",
            "deployCreateAndInit(bytes,bytes,(uint256,uint256))": "infinite",
            "deployCreateAndInit(bytes,bytes,(uint256,uint256),address)": "infinite",
            "deployCreateClone(address,bytes)": "infinite",
            "findCreate2Address(bytes32,bytes)": "infinite",
            "findCreate2AddressViaHash(bytes32,bytes32)": "infinite",
            "hasBeenDeployed(address)": "2621",
            "safeCreate2(bytes32,bytes)": "infinite"
          },
          "internal": {
            "_efficientHash(bytes32,bytes32)": "infinite",
            "_generateSalt()": "infinite",
            "_guard(bytes32)": "infinite",
            "_parseSalt(bytes32)": "611",
            "_requireSuccessfulContractCreation(address)": "infinite",
            "_requireSuccessfulContractCreation(bool,address)": "infinite",
            "_requireSuccessfulContractInitialisation(bool,bytes memory,address)": "infinite"
          }
        },
        "methodIdentifiers": {
          "computeCreate2Address(bytes32,bytes32)": "890c283b",
          "computeCreate2Address(bytes32,bytes32,address)": "d323826a",
          "computeCreate3Address(bytes32)": "6cec2536",
          "computeCreate3Address(bytes32,address)": "42d654fc",
          "computeCreateAddress(address,uint256)": "74637a7a",
          "computeCreateAddress(uint256)": "28ddd046",
          "deployCreate(bytes)": "27fe1822",
          "deployCreate2(bytes)": "26a32fc7",
          "deployCreate2(bytes32,bytes)": "26307668",
          "deployCreate2AndInit(bytes,bytes,(uint256,uint256))": "c3fe107b",
          "deployCreate2AndInit(bytes,bytes,(uint256,uint256),address)": "e437252a",
          "deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256))": "e96deee4",
          "deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256),address)": "a7db93f2",
          "deployCreate2Clone(address,bytes)": "81503da1",
          "deployCreate2Clone(bytes32,address,bytes)": "2852527a",
          "deployCreate3(bytes)": "7f565360",
          "deployCreate3(bytes32,bytes)": "9c36a286",
          "deployCreate3AndInit(bytes,bytes,(uint256,uint256))": "2f990e3f",
          "deployCreate3AndInit(bytes,bytes,(uint256,uint256),address)": "f5745aba",
          "deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256))": "00d84acb",
          "deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256),address)": "ddda0acb",
          "deployCreateAndInit(bytes,bytes,(uint256,uint256))": "31a7c8c8",
          "deployCreateAndInit(bytes,bytes,(uint256,uint256),address)": "98e81077",
          "deployCreateClone(address,bytes)": "f9664498",
          "findCreate2Address(bytes32,bytes)": "85cf97ab",
          "findCreate2AddressViaHash(bytes32,bytes32)": "a49a7c90",
          "hasBeenDeployed(address)": "08508b8f",
          "safeCreate2(bytes32,bytes)": "64e03087"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"FailedContractCreation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"FailedContractInitialisation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"FailedEtherTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"InvalidNonceValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"InvalidSalt\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ContractCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"Create3ProxyContractCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"computedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"computedAddress\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate3Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"computedAddress\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"computeCreate3Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"computedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"computedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"computedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"deployCreate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"deployCreate2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"deployCreate2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"deployCreate2AndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"}],\"name\":\"deployCreate2AndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"deployCreate2AndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"}],\"name\":\"deployCreate2AndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deployCreate2Clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deployCreate2Clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"deployCreate3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"deployCreate3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"}],\"name\":\"deployCreate3AndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"}],\"name\":\"deployCreate3AndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"deployCreate3AndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"deployCreate3AndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"}],\"name\":\"deployCreateAndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"constructorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initCallAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct RaribleCreateX.Values\",\"name\":\"values\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"deployCreateAndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deployCreateClone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"findCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"computedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"findCreate2AddressViaHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"computedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deploymentAddress\",\"type\":\"address\"}],\"name\":\"hasBeenDeployed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"safeCreate2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"RARIBLE team\",\"custom:based-on\":\"Implementation by pcaversaccio (https://web.archive.org/web/20230921103111/https://pcaversaccio.com/) and Matt Solomon (https://web.archive.org/web/20230921103335/https://mattsolomon.dev/), modified by RARIBLE team for specific use cases.\",\"details\":\"To simplify testing of non-public variables and functions, we use the `internal` function visibility specifier `internal` for all variables and functions, even though they could technically be `private` since we do not expect anyone to inherit from the `CreateX` contract.\",\"errors\":{\"FailedContractCreation(address)\":[{\"details\":\"Error that occurs when the contract creation failed.\",\"params\":{\"emitter\":\"The contract that emits the error.\"}}],\"FailedContractInitialisation(address,bytes)\":[{\"details\":\"Error that occurs when the contract initialisation call failed.\",\"params\":{\"emitter\":\"The contract that emits the error.\",\"revertData\":\"The data returned by the failed initialisation call.\"}}],\"FailedEtherTransfer(address,bytes)\":[{\"details\":\"Error that occurs when transferring ether has failed.\",\"params\":{\"emitter\":\"The contract that emits the error.\",\"revertData\":\"The data returned by the failed ether transfer.\"}}],\"InvalidNonceValue(address)\":[{\"details\":\"Error that occurs when the nonce value is invalid.\",\"params\":{\"emitter\":\"The contract that emits the error.\"}}],\"InvalidSalt(address)\":[{\"details\":\"Error that occurs when the salt value is invalid.\",\"params\":{\"emitter\":\"The contract that emits the error.\"}}]},\"events\":{\"ContractCreation(address)\":{\"details\":\"Event that is emitted when a contract is successfully created.\",\"params\":{\"newContract\":\"The address of the new contract.\"}},\"ContractCreation(address,bytes32)\":{\"details\":\"Event that is emitted when a contract is successfully created.\",\"params\":{\"newContract\":\"The address of the new contract.\",\"salt\":\"The 32-byte random value used to create the contract address.\"}},\"Create3ProxyContractCreation(address,bytes32)\":{\"details\":\"Event that is emitted when a `CREATE3` proxy contract is successfully created.\",\"params\":{\"newContract\":\"The address of the new proxy contract.\",\"salt\":\"The 32-byte random value used to create the proxy address.\"}}},\"kind\":\"dev\",\"methods\":{\"computeCreate2Address(bytes32,bytes32)\":{\"details\":\"Returns the address where a contract will be stored if deployed via this contract using the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new destination address.\",\"params\":{\"initCodeHash\":\"The 32-byte bytecode digest of the contract creation bytecode.\",\"salt\":\"The 32-byte random value used to create the contract address.\"},\"returns\":{\"computedAddress\":\"The 20-byte address where a contract will be stored.\"}},\"computeCreate2Address(bytes32,bytes32,address)\":{\"details\":\"Returns the address where a contract will be stored if deployed via `deployer` using the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new destination address. This implementation is based on OpenZeppelin: https://web.archive.org/web/20230921113703/https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/181d518609a9f006fcb97af63e6952e603cf100e/contracts/utils/Create2.sol.\",\"params\":{\"deployer\":\"The 20-byte deployer address.\",\"initCodeHash\":\"The 32-byte bytecode digest of the contract creation bytecode.\",\"salt\":\"The 32-byte random value used to create the contract address.\"},\"returns\":{\"computedAddress\":\"The 20-byte address where a contract will be stored.\"}},\"computeCreate3Address(bytes32)\":{\"details\":\"Returns the address where a contract will be stored if deployed via this contract using the `CREATE3` pattern (i.e. without an initcode factor). Any change in the `salt` value will result in a new destination address. This implementation is based on Solady: https://web.archive.org/web/20230921114120/https://raw.githubusercontent.com/Vectorized/solady/1c1ac4ad9c8558001e92d8d1a7722ef67bec75df/src/utils/CREATE3.sol.\",\"params\":{\"salt\":\"The 32-byte random value used to create the proxy contract address.\"},\"returns\":{\"computedAddress\":\"The 20-byte address where a contract will be stored.\"}},\"computeCreate3Address(bytes32,address)\":{\"details\":\"Returns the address where a contract will be stored if deployed via `deployer` using the `CREATE3` pattern (i.e. without an initcode factor). Any change in the `salt` value will result in a new destination address. This implementation is based on Solady: https://web.archive.org/web/20230921114120/https://raw.githubusercontent.com/Vectorized/solady/1c1ac4ad9c8558001e92d8d1a7722ef67bec75df/src/utils/CREATE3.sol.\",\"params\":{\"deployer\":\"The 20-byte deployer address.\",\"salt\":\"The 32-byte random value used to create the proxy contract address.\"},\"returns\":{\"computedAddress\":\"The 20-byte address where a contract will be stored.\"}},\"computeCreateAddress(address,uint256)\":{\"details\":\"Returns the address where a contract will be stored if deployed via `deployer` using the `CREATE` opcode. For the specification of the Recursive Length Prefix (RLP) encoding scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://web.archive.org/web/20230921110603/https://ethereum.github.io/yellowpaper/paper.pdf) and the Ethereum Wiki (https://web.archive.org/web/20230921112807/https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/). For further insights also, see the following issue: https://web.archive.org/web/20230921112943/https://github.com/transmissions11/solmate/issues/207. Based on the EIP-161 (https://web.archive.org/web/20230921113207/https://raw.githubusercontent.com/ethereum/EIPs/master/EIPS/eip-161.md) specification, all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the first contract address created by another contract is calculated with a non-zero nonce.\",\"params\":{\"deployer\":\"The 20-byte deployer address.\",\"nonce\":\"The next 32-byte nonce of the deployer address.\"},\"returns\":{\"computedAddress\":\"The 20-byte address where a contract will be stored.\"}},\"computeCreateAddress(uint256)\":{\"details\":\"Returns the address where a contract will be stored if deployed via this contract using the `CREATE` opcode. For the specification of the Recursive Length Prefix (RLP) encoding scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://web.archive.org/web/20230921110603/https://ethereum.github.io/yellowpaper/paper.pdf) and the Ethereum Wiki (https://web.archive.org/web/20230921112807/https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/). For further insights also, see the following issue: https://web.archive.org/web/20230921112943/https://github.com/transmissions11/solmate/issues/207. Based on the EIP-161 (https://web.archive.org/web/20230921113207/https://raw.githubusercontent.com/ethereum/EIPs/master/EIPS/eip-161.md) specification, all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the first contract address created by another contract is calculated with a non-zero nonce.\",\"params\":{\"nonce\":\"The next 32-byte nonce of this contract.\"},\"returns\":{\"computedAddress\":\"The 20-byte address where a contract will be stored.\"}},\"deployCreate(bytes)\":{\"details\":\"Deploys a new contract via calling the `CREATE` opcode and using the creation bytecode `initCode` and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor.\",\"params\":{\"initCode\":\"The creation bytecode.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate2(bytes)\":{\"details\":\"Deploys a new contract via calling the `CREATE2` opcode and using the creation bytecode `initCode` and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor.\",\"params\":{\"initCode\":\"The creation bytecode.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate2(bytes32,bytes)\":{\"details\":\"Deploys a new contract via calling the `CREATE2` opcode and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor.\",\"params\":{\"initCode\":\"The creation bytecode.\",\"salt\":\"The 32-byte random value used to create the contract address.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate2AndInit(bytes,bytes,(uint256,uint256))\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys and initialises a new contract via calling the `CREATE2` opcode and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate2AndInit(bytes,bytes,(uint256,uint256),address)\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys and initialises a new contract via calling the `CREATE2` opcode and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"refundAddress\":\"The 20-byte address where any excess ether is returned to.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256))\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys and initialises a new contract via calling the `CREATE2` opcode and using the salt value `salt`, creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"salt\":\"The 32-byte random value used to create the contract address.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate2AndInit(bytes32,bytes,bytes,(uint256,uint256),address)\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys and initialises a new contract via calling the `CREATE2` opcode and using the salt value `salt`, the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"refundAddress\":\"The 20-byte address where any excess ether is returned to.\",\"salt\":\"The 32-byte random value used to create the contract address.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate2Clone(address,bytes)\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys a new EIP-1167 minimal proxy contract using the `CREATE2` opcode and the salt value `salt`, and initialises the implementation contract using the implementation address `implementation`, the initialisation code `data`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! Note that if `msg.value` is non-zero, the initialiser function called via `data` must be `payable`.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed proxy contract.\",\"implementation\":\"The 20-byte implementation contract address.\"},\"returns\":{\"proxy\":\"The 20-byte address where the clone was deployed.\"}},\"deployCreate2Clone(bytes32,address,bytes)\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys a new EIP-1167 minimal proxy contract using the `CREATE2` opcode and the salt value `salt`, and initialises the implementation contract using the implementation address `implementation`, the initialisation code `data`, and `msg.value` as inputs. Note that if `msg.value` is non-zero, the initialiser function called via `data` must be `payable`.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed proxy contract.\",\"implementation\":\"The 20-byte implementation contract address.\",\"salt\":\"The 32-byte random value used to create the proxy contract address.\"},\"returns\":{\"proxy\":\"The 20-byte address where the clone was deployed.\"}},\"deployCreate3(bytes)\":{\"details\":\"Deploys a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\",\"params\":{\"initCode\":\"The creation bytecode.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate3(bytes32,bytes)\":{\"custom:security\":\"We strongly recommend implementing a permissioned deploy protection by setting the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun proxy deployments on other chains.\",\"details\":\"Deploys a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\",\"params\":{\"initCode\":\"The creation bytecode.\",\"salt\":\"The 32-byte random value used to create the proxy contract address.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate3AndInit(bytes,bytes,(uint256,uint256))\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate3AndInit(bytes,bytes,(uint256,uint256),address)\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and transaction properties. This approach does not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"refundAddress\":\"The 20-byte address where any excess ether is returned to.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256))\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system. Furthermore, we strongly recommend implementing a permissioned deploy protection by setting the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun proxy deployments on other chains.\",\"details\":\"Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"salt\":\"The 32-byte random value used to create the proxy contract address.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreate3AndInit(bytes32,bytes,bytes,(uint256,uint256),address)\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system. Furthermore, we strongly recommend implementing a permissioned deploy protection by setting the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun proxy deployments on other chains.\",\"details\":\"Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate: https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"refundAddress\":\"The 20-byte address where any excess ether is returned to.\",\"salt\":\"The 32-byte random value used to create the proxy contract address.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreateAndInit(bytes,bytes,(uint256,uint256))\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys and initialises a new contract via calling the `CREATE` opcode and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreateAndInit(bytes,bytes,(uint256,uint256),address)\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys and initialises a new contract via calling the `CREATE` opcode and using the creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed contract.\",\"initCode\":\"The creation bytecode.\",\"refundAddress\":\"The 20-byte address where any excess ether is returned to.\",\"values\":\"The specific `payable` amounts for the deployment and initialisation call.\"},\"returns\":{\"newContract\":\"The 20-byte address where the contract was deployed.\"}},\"deployCreateClone(address,bytes)\":{\"custom:security\":\"This function allows for reentrancy, however we refrain from adding a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol level that potentially malicious reentrant calls do not affect your smart contract system.\",\"details\":\"Deploys a new EIP-1167 minimal proxy contract using the `CREATE` opcode, and initialises the implementation contract using the implementation address `implementation`, the initialisation code `data`, and `msg.value` as inputs. Note that if `msg.value` is non-zero, the initialiser function called via `data` must be `payable`.\",\"params\":{\"data\":\"The initialisation code that is passed to the deployed proxy contract.\",\"implementation\":\"The 20-byte implementation contract address.\"},\"returns\":{\"proxy\":\"The 20-byte address where the clone was deployed.\"}},\"findCreate2Address(bytes32,bytes)\":{\"details\":\"Returns the address where a contract will be stored if deployed via this contract using the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new destination address.\",\"params\":{\"initCode\":\"The 32-byte bytecode digest of the contract creation bytecode.\",\"salt\":\"The 32-byte random value used to create the contract address.\"},\"returns\":{\"computedAddress\":\"The 20-byte address where a contract will be stored.\"}},\"findCreate2AddressViaHash(bytes32,bytes32)\":{\"details\":\"Returns the address where a contract will be stored if deployed via this contract using the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new destination address.\",\"params\":{\"initCodeHash\":\"The 32-byte bytecode digest of the contract creation bytecode.\",\"salt\":\"The 32-byte random value used to create the contract address.\"},\"returns\":{\"computedAddress\":\"The 20-byte address where a contract will be stored.\"}},\"hasBeenDeployed(address)\":{\"details\":\"Determine if a contract has already been deployed by the factory to a given address.\",\"params\":{\"deploymentAddress\":\"address The contract address to check.\"},\"returns\":{\"_0\":\"True if the contract has been deployed, false otherwise.\"}},\"safeCreate2(bytes32,bytes)\":{\"details\":\"Create a contract using CREATE2 by submitting a given salt or nonce along with the initialization code for the contract. Note that the first 20 bytes of the salt must match those of the calling address, which prevents contract creation events from being submitted by unintended parties.\",\"params\":{\"initCode\":\"bytes The initialization code that will be passed into the CREATE2 call.\",\"salt\":\"bytes32 The nonce that will be passed into the CREATE2 call.\"},\"returns\":{\"newContract\":\"Address of the contract that will be created, or the null address if a contract already exists at that address.\"}}},\"stateVariables\":{\"_SELF\":{\"details\":\"Caches the contract address at construction, to be used for the custom errors.\"}},\"title\":\"CreateX Factory Smart Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Factory smart contract to make easier and safer usage of the `CREATE` (https://web.archive.org/web/20230921103540/https://www.evm.codes/#f0?fork=shanghai) and `CREATE2` (https://web.archive.org/web/20230921103540/https://www.evm.codes/#f5?fork=shanghai) EVM opcodes as well as of `CREATE3`-based (https://web.archive.org/web/20230921103920/https://github.com/ethereum/EIPs/pull/3171) contract creations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RaribleCreateX.sol\":\"RaribleCreateX\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RaribleCreateX.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.20;\\n\\n/**\\n * @title CreateX Factory Smart Contract\\n * @author RARIBLE team\\n * @notice Factory smart contract to make easier and safer usage of the\\n * `CREATE` (https://web.archive.org/web/20230921103540/https://www.evm.codes/#f0?fork=shanghai) and `CREATE2`\\n * (https://web.archive.org/web/20230921103540/https://www.evm.codes/#f5?fork=shanghai) EVM opcodes as well as of\\n * `CREATE3`-based (https://web.archive.org/web/20230921103920/https://github.com/ethereum/EIPs/pull/3171) contract creations.\\n * @dev To simplify testing of non-public variables and functions, we use the `internal`\\n * function visibility specifier `internal` for all variables and functions, even though\\n * they could technically be `private` since we do not expect anyone to inherit from\\n * the `CreateX` contract.\\n * @custom:based-on Implementation by pcaversaccio (https://web.archive.org/web/20230921103111/https://pcaversaccio.com/)\\n * and Matt Solomon (https://web.archive.org/web/20230921103335/https://mattsolomon.dev/), modified by RARIBLE team\\n * for specific use cases.\\n */\\ncontract RaribleCreateX {\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                         IMMUTABLES                         */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    /**\\n     * @dev Caches the contract address at construction, to be used for the custom errors.\\n     */\\n    address internal immutable _SELF = address(this);\\n\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                       CREATE2 MAPPING                      */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    mapping(address => bool) private _create2Deployed;\\n\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                      CREATE2 MODIFIER                      */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    /**\\n     * @dev Modifier to ensure that the first 20 bytes of a submitted salt match\\n     * those of the calling account. This provides protection against the salt\\n     * being stolen by frontrunners or other attackers. The protection can also be\\n     * bypassed if desired by setting each of the first 20 bytes to zero.\\n     * @param salt bytes32 The salt value to check against the calling address.\\n     * */\\n    modifier containsCaller(bytes32 salt) {\\n        // prevent contract submissions from being stolen from tx.pool by requiring\\n        // that the first 20 bytes of the submitted salt match msg.sender.\\n        require(\\n        (address(bytes20(salt)) == msg.sender) ||\\n        (bytes20(salt) == bytes20(0)),\\n        \\\"Invalid salt - first 20 bytes of the salt must match calling address.\\\"\\n        );\\n        _;\\n    }\\n\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                            TYPES                           */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    /**\\n     * @dev Struct for the `payable` amounts in a deploy-and-initialise call.\\n     */\\n    struct Values {\\n        uint256 constructorAmount;\\n        uint256 initCallAmount;\\n    }\\n\\n    /**\\n     * @dev Enum for the selection of a permissioned deploy protection.\\n     */\\n    enum SenderBytes {\\n        MsgSender,\\n        ZeroAddress,\\n        Random\\n    }\\n\\n    /**\\n     * @dev Enum for the selection of a cross-chain redeploy protection.\\n     */\\n    enum RedeployProtectionFlag {\\n        True,\\n        False,\\n        Unspecified\\n    }\\n\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                           EVENTS                           */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    /**\\n     * @dev Event that is emitted when a contract is successfully created.\\n     * @param newContract The address of the new contract.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     */\\n    event ContractCreation(address indexed newContract, bytes32 indexed salt);\\n\\n    /**\\n     * @dev Event that is emitted when a contract is successfully created.\\n     * @param newContract The address of the new contract.\\n     */\\n    event ContractCreation(address indexed newContract);\\n\\n    /**\\n     * @dev Event that is emitted when a `CREATE3` proxy contract is successfully created.\\n     * @param newContract The address of the new proxy contract.\\n     * @param salt The 32-byte random value used to create the proxy address.\\n     */\\n    event Create3ProxyContractCreation(address indexed newContract, bytes32 indexed salt);\\n\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                        CUSTOM ERRORS                       */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    /**\\n     * @dev Error that occurs when the contract creation failed.\\n     * @param emitter The contract that emits the error.\\n     */\\n    error FailedContractCreation(address emitter);\\n\\n    /**\\n     * @dev Error that occurs when the contract initialisation call failed.\\n     * @param emitter The contract that emits the error.\\n     * @param revertData The data returned by the failed initialisation call.\\n     */\\n    error FailedContractInitialisation(address emitter, bytes revertData);\\n\\n    /**\\n     * @dev Error that occurs when the salt value is invalid.\\n     * @param emitter The contract that emits the error.\\n     */\\n    error InvalidSalt(address emitter);\\n\\n    /**\\n     * @dev Error that occurs when the nonce value is invalid.\\n     * @param emitter The contract that emits the error.\\n     */\\n    error InvalidNonceValue(address emitter);\\n\\n    /**\\n     * @dev Error that occurs when transferring ether has failed.\\n     * @param emitter The contract that emits the error.\\n     * @param revertData The data returned by the failed ether transfer.\\n     */\\n    error FailedEtherTransfer(address emitter, bytes revertData);\\n\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                           CREATE                           */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    /**\\n     * @dev Deploys a new contract via calling the `CREATE` opcode and using the creation\\n     * bytecode `initCode` and `msg.value` as inputs. In order to save deployment costs,\\n     * we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero,\\n     * `initCode` must have a `payable` constructor.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     */\\n    function deployCreate(bytes memory initCode) public payable returns (address newContract) {\\n        assembly (\\\"memory-safe\\\") {\\n            newContract := create(callvalue(), add(initCode, 0x20), mload(initCode))\\n        }\\n        _requireSuccessfulContractCreation({newContract: newContract});\\n        emit ContractCreation({newContract: newContract});\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE` opcode and using the\\n     * creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable`\\n     * amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. In order to\\n     * save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount`\\n     * is non-zero, `initCode` must have a `payable` constructor.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreateAndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        assembly (\\\"memory-safe\\\") {\\n            newContract := create(mload(values), add(initCode, 0x20), mload(initCode))\\n        }\\n        _requireSuccessfulContractCreation({newContract: newContract});\\n        emit ContractCreation({newContract: newContract});\\n\\n        (bool success, bytes memory returnData) = newContract.call{value: values.initCallAmount}(data);\\n        if (!success) {\\n            revert FailedContractInitialisation({emitter: _SELF, revertData: returnData});\\n        }\\n\\n        if (_SELF.balance != 0) {\\n            // Any wei amount previously forced into this contract (e.g. by using the `SELFDESTRUCT`\\n            // opcode) will be part of the refund transaction.\\n            (success, returnData) = refundAddress.call{value: _SELF.balance}(\\\"\\\");\\n            if (!success) {\\n                revert FailedEtherTransfer({emitter: _SELF, revertData: returnData});\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE` opcode and using the\\n     * creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable`\\n     * amounts `values`, and `msg.value` as inputs. In order to save deployment costs, we do not\\n     * sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero,\\n     * `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreateAndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        newContract = deployCreateAndInit({initCode: initCode, data: data, values: values, refundAddress: msg.sender});\\n    }\\n\\n    /**\\n     * @dev Deploys a new EIP-1167 minimal proxy contract using the `CREATE` opcode, and initialises\\n     * the implementation contract using the implementation address `implementation`, the initialisation\\n     * code `data`, and `msg.value` as inputs. Note that if `msg.value` is non-zero, the initialiser\\n     * function called via `data` must be `payable`.\\n     * @param implementation The 20-byte implementation contract address.\\n     * @param data The initialisation code that is passed to the deployed proxy contract.\\n     * @return proxy The 20-byte address where the clone was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreateClone(address implementation, bytes memory data) public payable returns (address proxy) {\\n        bytes20 implementationInBytes = bytes20(implementation);\\n        assembly (\\\"memory-safe\\\") {\\n            let clone := mload(0x40)\\n            mstore(\\n                clone,\\n                hex\\\"3d_60_2d_80_60_0a_3d_39_81_f3_36_3d_3d_37_3d_3d_3d_36_3d_73_00_00_00_00_00_00_00_00_00_00_00_00\\\"\\n            )\\n            mstore(add(clone, 0x14), implementationInBytes)\\n            mstore(\\n                add(clone, 0x28),\\n                hex\\\"5a_f4_3d_82_80_3e_90_3d_91_60_2b_57_fd_5b_f3_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00\\\"\\n            )\\n            proxy := create(0, clone, 0x37)\\n        }\\n        if (proxy == address(0)) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n        emit ContractCreation({newContract: proxy});\\n\\n        (bool success, bytes memory returnData) = proxy.call{value: msg.value}(data);\\n        _requireSuccessfulContractInitialisation({\\n            success: success,\\n            returnData: returnData,\\n            implementation: implementation\\n        });\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via `deployer` using\\n     * the `CREATE` opcode. For the specification of the Recursive Length Prefix (RLP) encoding\\n     * scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://web.archive.org/web/20230921110603/https://ethereum.github.io/yellowpaper/paper.pdf)\\n     * and the Ethereum Wiki (https://web.archive.org/web/20230921112807/https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/).\\n     * For further insights also, see the following issue: https://web.archive.org/web/20230921112943/https://github.com/transmissions11/solmate/issues/207.\\n     *\\n     * Based on the EIP-161 (https://web.archive.org/web/20230921113207/https://raw.githubusercontent.com/ethereum/EIPs/master/EIPS/eip-161.md) specification,\\n     * all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the\\n     * first contract address created by another contract is calculated with a non-zero nonce.\\n     * @param deployer The 20-byte deployer address.\\n     * @param nonce The next 32-byte nonce of the deployer address.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreateAddress(address deployer, uint256 nonce) public view returns (address computedAddress) {\\n        bytes memory data;\\n        bytes1 len = bytes1(0x94);\\n\\n        // The theoretical allowed limit, based on EIP-2681, for an account nonce is 2**64-2:\\n        // https://web.archive.org/web/20230921113252/https://eips.ethereum.org/EIPS/eip-2681.\\n        if (nonce > type(uint64).max - 1) {\\n            revert InvalidNonceValue({emitter: _SELF});\\n        }\\n\\n        // The integer zero is treated as an empty byte string and therefore has only one length prefix,\\n        // 0x80, which is calculated via 0x80 + 0.\\n        if (nonce == 0x00) {\\n            data = abi.encodePacked(bytes1(0xd6), len, deployer, bytes1(0x80));\\n        }\\n        // A one-byte integer in the [0x00, 0x7f] range uses its own value as a length prefix, there is no\\n        // additional \\\"0x80 + length\\\" prefix that precedes it.\\n        else if (nonce <= 0x7f) {\\n            data = abi.encodePacked(bytes1(0xd6), len, deployer, uint8(nonce));\\n        }\\n        // In the case of `nonce > 0x7f` and `nonce <= type(uint8).max`, we have the following encoding scheme\\n        // (the same calculation can be carried over for higher nonce bytes):\\n        // 0xda = 0xc0 (short RLP prefix) + 0x1a (= the bytes length of: 0x94 + address + 0x84 + nonce, in hex),\\n        // 0x94 = 0x80 + 0x14 (= the bytes length of an address, 20 bytes, in hex),\\n        // 0x84 = 0x80 + 0x04 (= the bytes length of the nonce, 4 bytes, in hex).\\n        else if (nonce <= type(uint8).max) {\\n            data = abi.encodePacked(bytes1(0xd7), len, deployer, bytes1(0x81), uint8(nonce));\\n        } else if (nonce <= type(uint16).max) {\\n            data = abi.encodePacked(bytes1(0xd8), len, deployer, bytes1(0x82), uint16(nonce));\\n        } else if (nonce <= type(uint24).max) {\\n            data = abi.encodePacked(bytes1(0xd9), len, deployer, bytes1(0x83), uint24(nonce));\\n        } else if (nonce <= type(uint32).max) {\\n            data = abi.encodePacked(bytes1(0xda), len, deployer, bytes1(0x84), uint32(nonce));\\n        } else if (nonce <= type(uint40).max) {\\n            data = abi.encodePacked(bytes1(0xdb), len, deployer, bytes1(0x85), uint40(nonce));\\n        } else if (nonce <= type(uint48).max) {\\n            data = abi.encodePacked(bytes1(0xdc), len, deployer, bytes1(0x86), uint48(nonce));\\n        } else if (nonce <= type(uint56).max) {\\n            data = abi.encodePacked(bytes1(0xdd), len, deployer, bytes1(0x87), uint56(nonce));\\n        } else {\\n            data = abi.encodePacked(bytes1(0xde), len, deployer, bytes1(0x88), uint64(nonce));\\n        }\\n\\n        computedAddress = address(uint160(uint256(keccak256(data))));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract\\n     * using the `CREATE` opcode. For the specification of the Recursive Length Prefix (RLP)\\n     * encoding scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://web.archive.org/web/20230921110603/https://ethereum.github.io/yellowpaper/paper.pdf)\\n     * and the Ethereum Wiki (https://web.archive.org/web/20230921112807/https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/).\\n     * For further insights also, see the following issue: https://web.archive.org/web/20230921112943/https://github.com/transmissions11/solmate/issues/207.\\n     *\\n     * Based on the EIP-161 (https://web.archive.org/web/20230921113207/https://raw.githubusercontent.com/ethereum/EIPs/master/EIPS/eip-161.md) specification,\\n     * all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the\\n     * first contract address created by another contract is calculated with a non-zero nonce.\\n     * @param nonce The next 32-byte nonce of this contract.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreateAddress(uint256 nonce) public view returns (address computedAddress) {\\n        computedAddress = computeCreateAddress({deployer: _SELF, nonce: nonce});\\n    }\\n\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                           CREATE2                          */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    /**\\n     * @dev Deploys a new contract via calling the `CREATE2` opcode and using the salt value `salt`,\\n     * the creation bytecode `initCode`, and `msg.value` as inputs. In order to save deployment costs,\\n     * we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode`\\n     * must have a `payable` constructor.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     */\\n    function deployCreate2(bytes32 salt, bytes memory initCode) public payable returns (address newContract) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        assembly (\\\"memory-safe\\\") {\\n            newContract := create2(callvalue(), add(initCode, 0x20), mload(initCode), guardedSalt)\\n        }\\n        _requireSuccessfulContractCreation({newContract: newContract});\\n\\n        if (_create2Deployed[newContract]) revert FailedContractCreation({emitter: _SELF});\\n        _create2Deployed[newContract] = true;\\n\\n\\n        emit ContractCreation({newContract: newContract, salt: guardedSalt});\\n    }\\n\\n    /**\\n     * @dev Deploys a new contract via calling the `CREATE2` opcode and using the creation bytecode\\n     * `initCode` and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a\\n     * diverse selection of block and transaction properties. This approach does not guarantee true\\n     * randomness! In order to save deployment costs, we do not sanity check the `initCode` length.\\n     * Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     */\\n    function deployCreate2(bytes memory initCode) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2`.\\n        newContract = deployCreate2({salt: _generateSalt(), initCode: initCode});\\n    }\\n\\n    /**\\n     * @dev Create a contract using CREATE2 by submitting a given salt or nonce\\n     * along with the initialization code for the contract. Note that the first 20\\n     * bytes of the salt must match those of the calling address, which prevents\\n     * contract creation events from being submitted by unintended parties.\\n     * @param salt bytes32 The nonce that will be passed into the CREATE2 call.\\n     * @param initCode bytes The initialization code that will be passed\\n     * into the CREATE2 call.\\n     * @return newContract Address of the contract that will be created, or the null address\\n     * if a contract already exists at that address.\\n     */\\n    function safeCreate2(bytes32 salt, bytes memory initCode) public payable containsCaller(salt) returns (address newContract) {\\n        newContract = deployCreate2({salt: salt, initCode: initCode});\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE2` opcode and using the\\n     * salt value `salt`, the creation bytecode `initCode`, the initialisation code `data`, the struct\\n     * for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs.\\n     * In order to save deployment costs, we do not sanity check the `initCode` length. Note that if\\n     * `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2AndInit(\\n        bytes32 salt,\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        assembly (\\\"memory-safe\\\") {\\n            newContract := create2(mload(values), add(initCode, 0x20), mload(initCode), guardedSalt)\\n        }\\n        _requireSuccessfulContractCreation({newContract: newContract});\\n\\n        if (_create2Deployed[newContract]) revert FailedContractCreation({emitter: _SELF});\\n        _create2Deployed[newContract] = true;\\n\\n        emit ContractCreation({newContract: newContract, salt: guardedSalt});\\n\\n        (bool success, bytes memory returnData) = newContract.call{value: values.initCallAmount}(data);\\n        if (!success) {\\n            revert FailedContractInitialisation({emitter: _SELF, revertData: returnData});\\n        }\\n\\n        if (_SELF.balance != 0) {\\n            // Any wei amount previously forced into this contract (e.g. by using the `SELFDESTRUCT`\\n            // opcode) will be part of the refund transaction.\\n            (success, returnData) = refundAddress.call{value: _SELF.balance}(\\\"\\\");\\n            if (!success) {\\n                revert FailedEtherTransfer({emitter: _SELF, revertData: returnData});\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE2` opcode and using the\\n     * salt value `salt`, creation bytecode `initCode`, the initialisation code `data`, the struct for\\n     * the `payable` amounts `values`, and `msg.value` as inputs. In order to save deployment costs,\\n     * we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero,\\n     * `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2AndInit(\\n        bytes32 salt,\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2AndInit`.\\n        newContract = deployCreate2AndInit({\\n            salt: salt,\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: msg.sender\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE2` opcode and using the\\n     * creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable`\\n     * amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. The salt value\\n     * is calculated pseudo-randomly using a diverse selection of block and transaction properties.\\n     * This approach does not guarantee true randomness! In order to save deployment costs, we do not\\n     * sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode`\\n     * must have a `payable` constructor.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2AndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2AndInit`.\\n        newContract = deployCreate2AndInit({\\n            salt: _generateSalt(),\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: refundAddress\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE2` opcode and using the\\n     * creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts\\n     * `values`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a\\n     * diverse selection of block and transaction properties. This approach does not guarantee true\\n     * randomness! In order to save deployment costs, we do not sanity check the `initCode` length.\\n     * Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor,\\n     * and any excess ether is returned to `msg.sender`.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2AndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2AndInit`.\\n        newContract = deployCreate2AndInit({\\n            salt: _generateSalt(),\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: msg.sender\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys a new EIP-1167 minimal proxy contract using the `CREATE2` opcode and the salt\\n     * value `salt`, and initialises the implementation contract using the implementation address\\n     * `implementation`, the initialisation code `data`, and `msg.value` as inputs. Note that if\\n     * `msg.value` is non-zero, the initialiser function called via `data` must be `payable`.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param implementation The 20-byte implementation contract address.\\n     * @param data The initialisation code that is passed to the deployed proxy contract.\\n     * @return proxy The 20-byte address where the clone was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2Clone(\\n        bytes32 salt,\\n        address implementation,\\n        bytes memory data\\n    ) public payable returns (address proxy) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        bytes20 implementationInBytes = bytes20(implementation);\\n        assembly (\\\"memory-safe\\\") {\\n            let clone := mload(0x40)\\n            mstore(\\n                clone,\\n                hex\\\"3d_60_2d_80_60_0a_3d_39_81_f3_36_3d_3d_37_3d_3d_3d_36_3d_73_00_00_00_00_00_00_00_00_00_00_00_00\\\"\\n            )\\n            mstore(add(clone, 0x14), implementationInBytes)\\n            mstore(\\n                add(clone, 0x28),\\n                hex\\\"5a_f4_3d_82_80_3e_90_3d_91_60_2b_57_fd_5b_f3_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00\\\"\\n            )\\n            proxy := create2(0, clone, 0x37, guardedSalt)\\n        }\\n        if (proxy == address(0)) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n        emit ContractCreation({newContract: proxy, salt: guardedSalt});\\n\\n        (bool success, bytes memory returnData) = proxy.call{value: msg.value}(data);\\n        _requireSuccessfulContractInitialisation({\\n            success: success,\\n            returnData: returnData,\\n            implementation: implementation\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys a new EIP-1167 minimal proxy contract using the `CREATE2` opcode and the salt\\n     * value `salt`, and initialises the implementation contract using the implementation address\\n     * `implementation`, the initialisation code `data`, and `msg.value` as inputs. The salt value is\\n     * calculated pseudo-randomly using a diverse selection of block and transaction properties. This\\n     * approach does not guarantee true randomness! Note that if `msg.value` is non-zero, the initialiser\\n     * function called via `data` must be `payable`.\\n     * @param implementation The 20-byte implementation contract address.\\n     * @param data The initialisation code that is passed to the deployed proxy contract.\\n     * @return proxy The 20-byte address where the clone was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2Clone(address implementation, bytes memory data) public payable returns (address proxy) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2Clone`.\\n        proxy = deployCreate2Clone({salt: _generateSalt(), implementation: implementation, data: data});\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract using\\n     * the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new\\n     * destination address.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCodeHash The 32-byte bytecode digest of the contract creation bytecode.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreate2Address(bytes32 salt, bytes32 initCodeHash) public view returns (address computedAddress) {\\n        computedAddress = computeCreate2Address({salt: salt, initCodeHash: initCodeHash, deployer: _SELF});\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via `deployer` using\\n     * the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new\\n     * destination address. This implementation is based on OpenZeppelin:\\n     * https://web.archive.org/web/20230921113703/https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/181d518609a9f006fcb97af63e6952e603cf100e/contracts/utils/Create2.sol.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCodeHash The 32-byte bytecode digest of the contract creation bytecode.\\n     * @param deployer The 20-byte deployer address.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreate2Address(\\n        bytes32 salt,\\n        bytes32 initCodeHash,\\n        address deployer\\n    ) public pure returns (address computedAddress) {\\n        assembly (\\\"memory-safe\\\") {\\n            // |                      | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |----------------------|---------------------------------------------------------------------------|\\n            // | initCodeHash         |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt                 |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer             | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF                 |            FF                                                             |\\n            // |----------------------|---------------------------------------------------------------------------|\\n            // | memory               | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak256(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x40), initCodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer)\\n            let start := add(ptr, 0x0b)\\n            mstore8(start, 0xff)\\n            computedAddress := keccak256(start, 85)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract using\\n     * the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new\\n     * destination address.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCodeHash The 32-byte bytecode digest of the contract creation bytecode.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function findCreate2AddressViaHash(bytes32 salt, bytes32 initCodeHash) public view returns (address computedAddress) {\\n        computedAddress = computeCreate2Address({salt: _guard({salt: salt}), initCodeHash: initCodeHash, deployer: _SELF});\\n        // return null address to signify failure if contract has been deployed.\\n        if (_create2Deployed[computedAddress]) return address(0);\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract using\\n     * the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new\\n     * destination address.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCode The 32-byte bytecode digest of the contract creation bytecode.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function findCreate2Address(bytes32 salt, bytes memory initCode) public view returns (address computedAddress) {\\n        computedAddress = computeCreate2Address({salt: _guard({salt: salt}), initCodeHash: keccak256(abi.encodePacked(initCode)), deployer: _SELF});\\n        // return null address to signify failure if contract has been deployed.\\n        if (_create2Deployed[computedAddress]) return address(0);\\n    }\\n\\n    /**\\n     * @dev Determine if a contract has already been deployed by the factory to a\\n     * given address.\\n     * @param deploymentAddress address The contract address to check.\\n     * @return True if the contract has been deployed, false otherwise.\\n     */\\n    function hasBeenDeployed(address deploymentAddress) external view returns (bool) {\\n        // determine if a contract has been deployed to the provided address.\\n        return _create2Deployed[deploymentAddress];\\n    }\\n\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                           CREATE3                          */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    /**\\n     * @dev Deploys a new contract via employing the `CREATE3` pattern (i.e. without an initcode\\n     * factor) and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value`\\n     * as inputs. In order to save deployment costs, we do not sanity check the `initCode` length.\\n     * Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor. This\\n     * implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security We strongly recommend implementing a permissioned deploy protection by setting\\n     * the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun\\n     * proxy deployments on other chains.\\n     */\\n    function deployCreate3(bytes32 salt, bytes memory initCode) public payable returns (address newContract) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        bytes memory proxyChildBytecode = hex\\\"67_36_3d_3d_37_36_3d_34_f0_3d_52_60_08_60_18_f3\\\";\\n        address proxy;\\n        assembly (\\\"memory-safe\\\") {\\n            proxy := create2(0, add(proxyChildBytecode, 32), mload(proxyChildBytecode), guardedSalt)\\n        }\\n        if (proxy == address(0)) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n        emit Create3ProxyContractCreation({newContract: proxy, salt: guardedSalt});\\n\\n        newContract = computeCreate3Address({salt: guardedSalt});\\n        (bool success, ) = proxy.call{value: msg.value}(initCode);\\n        _requireSuccessfulContractCreation({success: success, newContract: newContract});\\n        emit ContractCreation({newContract: newContract});\\n    }\\n\\n    /**\\n     * @dev Deploys a new contract via employing the `CREATE3` pattern (i.e. without an initcode\\n     * factor) and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value`\\n     * as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block\\n     * and transaction properties. This approach does not guarantee true randomness! In order to save\\n     * deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is\\n     * non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     */\\n    function deployCreate3(bytes memory initCode) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate3`.\\n        newContract = deployCreate3({salt: _generateSalt(), initCode: initCode});\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without\\n     * an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, the\\n     * initialisation code `data`, the struct for the `payable` amounts `values`, the refund address\\n     * `refundAddress`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity\\n     * check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must\\n     * have a `payable` constructor. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     * Furthermore, we strongly recommend implementing a permissioned deploy protection by setting\\n     * the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun\\n     * proxy deployments on other chains.\\n     */\\n    function deployCreate3AndInit(\\n        bytes32 salt,\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        bytes memory proxyChildBytecode = hex\\\"67_36_3d_3d_37_36_3d_34_f0_3d_52_60_08_60_18_f3\\\";\\n        address proxy;\\n        assembly (\\\"memory-safe\\\") {\\n            proxy := create2(0, add(proxyChildBytecode, 32), mload(proxyChildBytecode), guardedSalt)\\n        }\\n        if (proxy == address(0)) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n        emit Create3ProxyContractCreation({newContract: proxy, salt: guardedSalt});\\n\\n        newContract = computeCreate3Address({salt: guardedSalt});\\n        (bool success, ) = proxy.call{value: values.constructorAmount}(initCode);\\n        _requireSuccessfulContractCreation({success: success, newContract: newContract});\\n        emit ContractCreation({newContract: newContract});\\n\\n        bytes memory returnData;\\n        (success, returnData) = newContract.call{value: values.initCallAmount}(data);\\n        if (!success) {\\n            revert FailedContractInitialisation({emitter: _SELF, revertData: returnData});\\n        }\\n\\n        if (_SELF.balance != 0) {\\n            // Any wei amount previously forced into this contract (e.g. by using the `SELFDESTRUCT`\\n            // opcode) will be part of the refund transaction.\\n            (success, returnData) = refundAddress.call{value: _SELF.balance}(\\\"\\\");\\n            if (!success) {\\n                revert FailedEtherTransfer({emitter: _SELF, revertData: returnData});\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without\\n     * an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, the\\n     * initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as\\n     * inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note\\n     * that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor,\\n     * and any excess ether is returned to `msg.sender`. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     * Furthermore, we strongly recommend implementing a permissioned deploy protection by setting\\n     * the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun\\n     * proxy deployments on other chains.\\n     */\\n    function deployCreate3AndInit(\\n        bytes32 salt,\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate3AndInit`.\\n        newContract = deployCreate3AndInit({\\n            salt: salt,\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: msg.sender\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without\\n     * an initcode factor) and using the creation bytecode `initCode`, the initialisation code `data`,\\n     * the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value`\\n     * as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and\\n     * transaction properties. This approach does not guarantee true randomness! In order to save deployment\\n     * costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero,\\n     * `initCode` must have a `payable` constructor. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate3AndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate3AndInit`.\\n        newContract = deployCreate3AndInit({\\n            salt: _generateSalt(),\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: refundAddress\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without\\n     * an initcode factor) and using the creation bytecode `initCode`, the initialisation code `data`,\\n     * the struct for the `payable` amounts `values`, `msg.value` as inputs. The salt value is calculated\\n     * pseudo-randomly using a diverse selection of block and transaction properties. This approach does\\n     * not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode`\\n     * length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor,\\n     * and any excess ether is returned to `msg.sender`. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate3AndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate3AndInit`.\\n        newContract = deployCreate3AndInit({\\n            salt: _generateSalt(),\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: msg.sender\\n        });\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via `deployer` using\\n     * the `CREATE3` pattern (i.e. without an initcode factor). Any change in the `salt` value will\\n     * result in a new destination address. This implementation is based on Solady:\\n     * https://web.archive.org/web/20230921114120/https://raw.githubusercontent.com/Vectorized/solady/1c1ac4ad9c8558001e92d8d1a7722ef67bec75df/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param deployer The 20-byte deployer address.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreate3Address(bytes32 salt, address deployer) public pure returns (address computedAddress) {\\n        assembly (\\\"memory-safe\\\") {\\n            let ptr := mload(0x40)\\n            mstore(0x00, deployer)\\n            mstore8(0x0b, 0xff)\\n            mstore(0x20, salt)\\n            mstore(\\n                0x40,\\n                hex\\\"21_c3_5d_be_1b_34_4a_24_88_cf_33_21_d6_ce_54_2f_8e_9f_30_55_44_ff_09_e4_99_3a_62_31_9a_49_7c_1f\\\"\\n            )\\n            mstore(0x14, keccak256(0x0b, 0x55))\\n            mstore(0x40, ptr)\\n            mstore(0x00, 0xd694)\\n            mstore8(0x34, 0x01)\\n            computedAddress := keccak256(0x1e, 0x17)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract using\\n     * the `CREATE3` pattern (i.e. without an initcode factor). Any change in the `salt` value will\\n     * result in a new destination address. This implementation is based on Solady:\\n     * https://web.archive.org/web/20230921114120/https://raw.githubusercontent.com/Vectorized/solady/1c1ac4ad9c8558001e92d8d1a7722ef67bec75df/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreate3Address(bytes32 salt) public view returns (address computedAddress) {\\n        computedAddress = computeCreate3Address({salt: salt, deployer: _SELF});\\n    }\\n\\n    /*\\u00b4:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0\\u2022.*\\u2022\\u00b4.*:\\u02da.\\u00b0*.\\u02da\\u2022\\u00b4.\\u00b0:\\u00b0\\u2022.\\u00b0+.*\\u2022\\u00b4.*:*/\\n    /*                      HELPER FUNCTIONS                      */\\n    /*.\\u2022\\u00b0:\\u00b0.\\u00b4+\\u02da.*\\u00b0.\\u02da:*.\\u00b4\\u2022*.+\\u00b0.\\u2022\\u00b0:\\u00b4*.\\u00b4\\u2022*.\\u2022\\u00b0.\\u2022\\u00b0:\\u00b0.\\u00b4:\\u2022\\u02da\\u00b0.*\\u00b0.\\u02da:*.\\u00b4+\\u00b0.\\u2022*/\\n\\n    /**\\n     * @dev Implements different safeguarding mechanisms depending on the encoded values in the salt\\n     * (`||` stands for byte-wise concatenation):\\n     *   => salt (32 bytes) = 0xbebebebebebebebebebebebebebebebebebebebe||ff||1212121212121212121212\\n     *   - The first 20 bytes (i.e. `bebebebebebebebebebebebebebebebebebebebe`) may be used to\\n     *     implement a permissioned deploy protection by setting them equal to `msg.sender`,\\n     *   - The 21st byte (i.e. `ff`) may be used to implement a cross-chain redeploy protection by\\n     *     setting it equal to `0x01`,\\n     *   - The last random 11 bytes (i.e. `1212121212121212121212`) allow for 2**88 bits of entropy\\n     *     for mining a salt.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @return guardedSalt The guarded 32-byte random value used to create the contract address.\\n     */\\n    function _guard(bytes32 salt) internal view returns (bytes32 guardedSalt) {\\n        (SenderBytes senderBytes, RedeployProtectionFlag redeployProtectionFlag) = _parseSalt({salt: salt});\\n\\n        if (senderBytes == SenderBytes.MsgSender && redeployProtectionFlag == RedeployProtectionFlag.True) {\\n            // Configures a permissioned deploy protection as well as a cross-chain redeploy protection.\\n            guardedSalt = keccak256(abi.encode(msg.sender, block.chainid, salt));\\n        } else if (senderBytes == SenderBytes.MsgSender && redeployProtectionFlag == RedeployProtectionFlag.False) {\\n            // Configures solely a permissioned deploy protection.\\n            guardedSalt = _efficientHash({a: bytes32(uint256(uint160(msg.sender))), b: salt});\\n        } else if (senderBytes == SenderBytes.MsgSender) {\\n            // Reverts if the 21st byte is greater than `0x01` in order to enforce developer explicitness.\\n            revert InvalidSalt({emitter: _SELF});\\n        } else if (senderBytes == SenderBytes.ZeroAddress && redeployProtectionFlag == RedeployProtectionFlag.True) {\\n            // Configures solely a cross-chain redeploy protection. In order to prevent a pseudo-randomly\\n            // generated cross-chain redeploy protection, we enforce the zero address check for the first 20 bytes.\\n            guardedSalt = _efficientHash({a: bytes32(block.chainid), b: salt});\\n        } else if (\\n            senderBytes == SenderBytes.ZeroAddress && redeployProtectionFlag == RedeployProtectionFlag.Unspecified\\n        ) {\\n            // Reverts if the 21st byte is greater than `0x01` in order to enforce developer explicitness.\\n            revert InvalidSalt({emitter: _SELF});\\n        } else {\\n            // For the non-pseudo-random cases, the salt value `salt` is hashed to prevent the safeguard mechanisms\\n            // from being bypassed. Otherwise, the salt value `salt` is not modified.\\n            guardedSalt = (salt != _generateSalt()) ? keccak256(abi.encode(salt)) : salt;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the enum for the selection of a permissioned deploy protection as well as a\\n     * cross-chain redeploy protection.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @return senderBytes The 8-byte enum for the selection of a permissioned deploy protection.\\n     * @return redeployProtectionFlag The 8-byte enum for the selection of a cross-chain redeploy\\n     * protection.\\n     */\\n    function _parseSalt(\\n        bytes32 salt\\n    ) internal view returns (SenderBytes senderBytes, RedeployProtectionFlag redeployProtectionFlag) {\\n        if (address(bytes20(salt)) == msg.sender && bytes1(salt[20]) == hex\\\"01\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.MsgSender, RedeployProtectionFlag.True);\\n        } else if (address(bytes20(salt)) == msg.sender && bytes1(salt[20]) == hex\\\"00\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.MsgSender, RedeployProtectionFlag.False);\\n        } else if (address(bytes20(salt)) == msg.sender) {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.MsgSender, RedeployProtectionFlag.Unspecified);\\n        } else if (address(bytes20(salt)) == address(0) && bytes1(salt[20]) == hex\\\"01\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.ZeroAddress, RedeployProtectionFlag.True);\\n        } else if (address(bytes20(salt)) == address(0) && bytes1(salt[20]) == hex\\\"00\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.ZeroAddress, RedeployProtectionFlag.False);\\n        } else if (address(bytes20(salt)) == address(0)) {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.ZeroAddress, RedeployProtectionFlag.Unspecified);\\n        } else if (bytes1(salt[20]) == hex\\\"01\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.Random, RedeployProtectionFlag.True);\\n        } else if (bytes1(salt[20]) == hex\\\"00\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.Random, RedeployProtectionFlag.False);\\n        } else {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.Random, RedeployProtectionFlag.Unspecified);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the `keccak256` hash of `a` and `b` after concatenation.\\n     * @param a The first 32-byte value to be concatenated and hashed.\\n     * @param b The second 32-byte value to be concatenated and hashed.\\n     * @return hash The 32-byte `keccak256` hash of `a` and `b`.\\n     */\\n    function _efficientHash(bytes32 a, bytes32 b) internal pure returns (bytes32 hash) {\\n        assembly (\\\"memory-safe\\\") {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            hash := keccak256(0x00, 0x40)\\n        }\\n    }\\n\\n    /**\\n     * @dev Generates pseudo-randomly a salt value using a diverse selection of block and\\n     * transaction properties.\\n     * @return salt The 32-byte pseudo-random salt value.\\n     */\\n    function _generateSalt() internal view returns (bytes32 salt) {\\n        unchecked {\\n            salt = keccak256(\\n                abi.encode(\\n                    // We don't use `block.number - 256` (the maximum value on the EVM) to accommodate\\n                    // any chains that may try to reduce the amount of available historical block hashes.\\n                    // We also don't subtract 1 to mitigate any risks arising from consecutive block\\n                    // producers on a PoS chain. Therefore, we use `block.number - 32` as a reasonable\\n                    // compromise, one we expect should work on most chains, which is 1 epoch on Ethereum\\n                    // mainnet. Please note that if you use this function between the genesis block and block\\n                    // number 31, the block property `blockhash` will return zero, but the returned salt value\\n                    // `salt` will still have a non-zero value due to the hashing characteristic and the other\\n                    // remaining properties.\\n                    blockhash(block.number - 32),\\n                    block.coinbase,\\n                    block.number,\\n                    block.timestamp,\\n                    block.prevrandao,\\n                    block.chainid,\\n                    msg.sender\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Ensures that `newContract` is a non-zero byte contract.\\n     * @param success The Boolean success condition.\\n     * @param newContract The 20-byte address where the contract was deployed.\\n     */\\n    function _requireSuccessfulContractCreation(bool success, address newContract) internal view {\\n        // Note that reverting if `newContract == address(0)` isn't strictly necessary here, as if\\n        // the deployment fails, `success == false` should already hold. However, since the `CreateX`\\n        // contract should be usable and safe on a wide range of chains, this check is cheap enough\\n        // that there is no harm in including it (security > gas optimisations). It can potentially\\n        // protect against unexpected chain behaviour or a hypothetical compiler bug that doesn't surface\\n        // the call success status properly.\\n        if (!success || newContract == address(0) || newContract.code.length == 0) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n    }\\n\\n    /**\\n     * @dev Ensures that `newContract` is a non-zero byte contract.\\n     * @param newContract The 20-byte address where the contract was deployed.\\n     */\\n    function _requireSuccessfulContractCreation(address newContract) internal view {\\n        if (newContract == address(0) || newContract.code.length == 0) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n    }\\n\\n    /**\\n     * @dev Ensures that the contract initialisation call to `implementation` has been successful.\\n     * @param success The Boolean success condition.\\n     * @param returnData The return data from the contract initialisation call.\\n     * @param implementation The 20-byte address where the implementation was deployed.\\n     */\\n    function _requireSuccessfulContractInitialisation(\\n        bool success,\\n        bytes memory returnData,\\n        address implementation\\n    ) internal view {\\n        if (!success || implementation.code.length == 0) {\\n            revert FailedContractInitialisation({emitter: _SELF, revertData: returnData});\\n        }\\n    }\\n}\",\"keccak256\":\"0x9a48820abb2f3a725c50dd84a6202a6f4be142bc7750e7368ad9bbc0088703e8\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 13,
            "contract": "contracts/RaribleCreateX.sol:RaribleCreateX",
            "label": "_create2Deployed",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "Factory smart contract to make easier and safer usage of the `CREATE` (https://web.archive.org/web/20230921103540/https://www.evm.codes/#f0?fork=shanghai) and `CREATE2` (https://web.archive.org/web/20230921103540/https://www.evm.codes/#f5?fork=shanghai) EVM opcodes as well as of `CREATE3`-based (https://web.archive.org/web/20230921103920/https://github.com/ethereum/EIPs/pull/3171) contract creations.",
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"contracts/RaribleCreateX.sol\": {\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.20;\\n\\n/**\\n * @title CreateX Factory Smart Contract\\n * @author RARIBLE team\\n * @notice Factory smart contract to make easier and safer usage of the\\n * `CREATE` (https://web.archive.org/web/20230921103540/https://www.evm.codes/#f0?fork=shanghai) and `CREATE2`\\n * (https://web.archive.org/web/20230921103540/https://www.evm.codes/#f5?fork=shanghai) EVM opcodes as well as of\\n * `CREATE3`-based (https://web.archive.org/web/20230921103920/https://github.com/ethereum/EIPs/pull/3171) contract creations.\\n * @dev To simplify testing of non-public variables and functions, we use the `internal`\\n * function visibility specifier `internal` for all variables and functions, even though\\n * they could technically be `private` since we do not expect anyone to inherit from\\n * the `CreateX` contract.\\n * @custom:based-on Implementation by pcaversaccio (https://web.archive.org/web/20230921103111/https://pcaversaccio.com/)\\n * and Matt Solomon (https://web.archive.org/web/20230921103335/https://mattsolomon.dev/), modified by RARIBLE team\\n * for specific use cases.\\n */\\ncontract RaribleCreateX {\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                         IMMUTABLES                         */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    /**\\n     * @dev Caches the contract address at construction, to be used for the custom errors.\\n     */\\n    address internal immutable _SELF = address(this);\\n\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                       CREATE2 MAPPING                      */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    mapping(address => bool) private _create2Deployed;\\n\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                      CREATE2 MODIFIER                      */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    /**\\n     * @dev Modifier to ensure that the first 20 bytes of a submitted salt match\\n     * those of the calling account. This provides protection against the salt\\n     * being stolen by frontrunners or other attackers. The protection can also be\\n     * bypassed if desired by setting each of the first 20 bytes to zero.\\n     * @param salt bytes32 The salt value to check against the calling address.\\n     * */\\n    modifier containsCaller(bytes32 salt) {\\n        // prevent contract submissions from being stolen from tx.pool by requiring\\n        // that the first 20 bytes of the submitted salt match msg.sender.\\n        require(\\n        (address(bytes20(salt)) == msg.sender) ||\\n        (bytes20(salt) == bytes20(0)),\\n        \\\"Invalid salt - first 20 bytes of the salt must match calling address.\\\"\\n        );\\n        _;\\n    }\\n\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                            TYPES                           */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    /**\\n     * @dev Struct for the `payable` amounts in a deploy-and-initialise call.\\n     */\\n    struct Values {\\n        uint256 constructorAmount;\\n        uint256 initCallAmount;\\n    }\\n\\n    /**\\n     * @dev Enum for the selection of a permissioned deploy protection.\\n     */\\n    enum SenderBytes {\\n        MsgSender,\\n        ZeroAddress,\\n        Random\\n    }\\n\\n    /**\\n     * @dev Enum for the selection of a cross-chain redeploy protection.\\n     */\\n    enum RedeployProtectionFlag {\\n        True,\\n        False,\\n        Unspecified\\n    }\\n\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                           EVENTS                           */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    /**\\n     * @dev Event that is emitted when a contract is successfully created.\\n     * @param newContract The address of the new contract.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     */\\n    event ContractCreation(address indexed newContract, bytes32 indexed salt);\\n\\n    /**\\n     * @dev Event that is emitted when a contract is successfully created.\\n     * @param newContract The address of the new contract.\\n     */\\n    event ContractCreation(address indexed newContract);\\n\\n    /**\\n     * @dev Event that is emitted when a `CREATE3` proxy contract is successfully created.\\n     * @param newContract The address of the new proxy contract.\\n     * @param salt The 32-byte random value used to create the proxy address.\\n     */\\n    event Create3ProxyContractCreation(address indexed newContract, bytes32 indexed salt);\\n\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                        CUSTOM ERRORS                       */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    /**\\n     * @dev Error that occurs when the contract creation failed.\\n     * @param emitter The contract that emits the error.\\n     */\\n    error FailedContractCreation(address emitter);\\n\\n    /**\\n     * @dev Error that occurs when the contract initialisation call failed.\\n     * @param emitter The contract that emits the error.\\n     * @param revertData The data returned by the failed initialisation call.\\n     */\\n    error FailedContractInitialisation(address emitter, bytes revertData);\\n\\n    /**\\n     * @dev Error that occurs when the salt value is invalid.\\n     * @param emitter The contract that emits the error.\\n     */\\n    error InvalidSalt(address emitter);\\n\\n    /**\\n     * @dev Error that occurs when the nonce value is invalid.\\n     * @param emitter The contract that emits the error.\\n     */\\n    error InvalidNonceValue(address emitter);\\n\\n    /**\\n     * @dev Error that occurs when transferring ether has failed.\\n     * @param emitter The contract that emits the error.\\n     * @param revertData The data returned by the failed ether transfer.\\n     */\\n    error FailedEtherTransfer(address emitter, bytes revertData);\\n\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                           CREATE                           */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    /**\\n     * @dev Deploys a new contract via calling the `CREATE` opcode and using the creation\\n     * bytecode `initCode` and `msg.value` as inputs. In order to save deployment costs,\\n     * we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero,\\n     * `initCode` must have a `payable` constructor.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     */\\n    function deployCreate(bytes memory initCode) public payable returns (address newContract) {\\n        assembly (\\\"memory-safe\\\") {\\n            newContract := create(callvalue(), add(initCode, 0x20), mload(initCode))\\n        }\\n        _requireSuccessfulContractCreation({newContract: newContract});\\n        emit ContractCreation({newContract: newContract});\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE` opcode and using the\\n     * creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable`\\n     * amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. In order to\\n     * save deployment costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount`\\n     * is non-zero, `initCode` must have a `payable` constructor.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreateAndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        assembly (\\\"memory-safe\\\") {\\n            newContract := create(mload(values), add(initCode, 0x20), mload(initCode))\\n        }\\n        _requireSuccessfulContractCreation({newContract: newContract});\\n        emit ContractCreation({newContract: newContract});\\n\\n        (bool success, bytes memory returnData) = newContract.call{value: values.initCallAmount}(data);\\n        if (!success) {\\n            revert FailedContractInitialisation({emitter: _SELF, revertData: returnData});\\n        }\\n\\n        if (_SELF.balance != 0) {\\n            // Any wei amount previously forced into this contract (e.g. by using the `SELFDESTRUCT`\\n            // opcode) will be part of the refund transaction.\\n            (success, returnData) = refundAddress.call{value: _SELF.balance}(\\\"\\\");\\n            if (!success) {\\n                revert FailedEtherTransfer({emitter: _SELF, revertData: returnData});\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE` opcode and using the\\n     * creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable`\\n     * amounts `values`, and `msg.value` as inputs. In order to save deployment costs, we do not\\n     * sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero,\\n     * `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreateAndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        newContract = deployCreateAndInit({initCode: initCode, data: data, values: values, refundAddress: msg.sender});\\n    }\\n\\n    /**\\n     * @dev Deploys a new EIP-1167 minimal proxy contract using the `CREATE` opcode, and initialises\\n     * the implementation contract using the implementation address `implementation`, the initialisation\\n     * code `data`, and `msg.value` as inputs. Note that if `msg.value` is non-zero, the initialiser\\n     * function called via `data` must be `payable`.\\n     * @param implementation The 20-byte implementation contract address.\\n     * @param data The initialisation code that is passed to the deployed proxy contract.\\n     * @return proxy The 20-byte address where the clone was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreateClone(address implementation, bytes memory data) public payable returns (address proxy) {\\n        bytes20 implementationInBytes = bytes20(implementation);\\n        assembly (\\\"memory-safe\\\") {\\n            let clone := mload(0x40)\\n            mstore(\\n                clone,\\n                hex\\\"3d_60_2d_80_60_0a_3d_39_81_f3_36_3d_3d_37_3d_3d_3d_36_3d_73_00_00_00_00_00_00_00_00_00_00_00_00\\\"\\n            )\\n            mstore(add(clone, 0x14), implementationInBytes)\\n            mstore(\\n                add(clone, 0x28),\\n                hex\\\"5a_f4_3d_82_80_3e_90_3d_91_60_2b_57_fd_5b_f3_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00\\\"\\n            )\\n            proxy := create(0, clone, 0x37)\\n        }\\n        if (proxy == address(0)) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n        emit ContractCreation({newContract: proxy});\\n\\n        (bool success, bytes memory returnData) = proxy.call{value: msg.value}(data);\\n        _requireSuccessfulContractInitialisation({\\n            success: success,\\n            returnData: returnData,\\n            implementation: implementation\\n        });\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via `deployer` using\\n     * the `CREATE` opcode. For the specification of the Recursive Length Prefix (RLP) encoding\\n     * scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://web.archive.org/web/20230921110603/https://ethereum.github.io/yellowpaper/paper.pdf)\\n     * and the Ethereum Wiki (https://web.archive.org/web/20230921112807/https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/).\\n     * For further insights also, see the following issue: https://web.archive.org/web/20230921112943/https://github.com/transmissions11/solmate/issues/207.\\n     *\\n     * Based on the EIP-161 (https://web.archive.org/web/20230921113207/https://raw.githubusercontent.com/ethereum/EIPs/master/EIPS/eip-161.md) specification,\\n     * all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the\\n     * first contract address created by another contract is calculated with a non-zero nonce.\\n     * @param deployer The 20-byte deployer address.\\n     * @param nonce The next 32-byte nonce of the deployer address.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreateAddress(address deployer, uint256 nonce) public view returns (address computedAddress) {\\n        bytes memory data;\\n        bytes1 len = bytes1(0x94);\\n\\n        // The theoretical allowed limit, based on EIP-2681, for an account nonce is 2**64-2:\\n        // https://web.archive.org/web/20230921113252/https://eips.ethereum.org/EIPS/eip-2681.\\n        if (nonce > type(uint64).max - 1) {\\n            revert InvalidNonceValue({emitter: _SELF});\\n        }\\n\\n        // The integer zero is treated as an empty byte string and therefore has only one length prefix,\\n        // 0x80, which is calculated via 0x80 + 0.\\n        if (nonce == 0x00) {\\n            data = abi.encodePacked(bytes1(0xd6), len, deployer, bytes1(0x80));\\n        }\\n        // A one-byte integer in the [0x00, 0x7f] range uses its own value as a length prefix, there is no\\n        // additional \\\"0x80 + length\\\" prefix that precedes it.\\n        else if (nonce <= 0x7f) {\\n            data = abi.encodePacked(bytes1(0xd6), len, deployer, uint8(nonce));\\n        }\\n        // In the case of `nonce > 0x7f` and `nonce <= type(uint8).max`, we have the following encoding scheme\\n        // (the same calculation can be carried over for higher nonce bytes):\\n        // 0xda = 0xc0 (short RLP prefix) + 0x1a (= the bytes length of: 0x94 + address + 0x84 + nonce, in hex),\\n        // 0x94 = 0x80 + 0x14 (= the bytes length of an address, 20 bytes, in hex),\\n        // 0x84 = 0x80 + 0x04 (= the bytes length of the nonce, 4 bytes, in hex).\\n        else if (nonce <= type(uint8).max) {\\n            data = abi.encodePacked(bytes1(0xd7), len, deployer, bytes1(0x81), uint8(nonce));\\n        } else if (nonce <= type(uint16).max) {\\n            data = abi.encodePacked(bytes1(0xd8), len, deployer, bytes1(0x82), uint16(nonce));\\n        } else if (nonce <= type(uint24).max) {\\n            data = abi.encodePacked(bytes1(0xd9), len, deployer, bytes1(0x83), uint24(nonce));\\n        } else if (nonce <= type(uint32).max) {\\n            data = abi.encodePacked(bytes1(0xda), len, deployer, bytes1(0x84), uint32(nonce));\\n        } else if (nonce <= type(uint40).max) {\\n            data = abi.encodePacked(bytes1(0xdb), len, deployer, bytes1(0x85), uint40(nonce));\\n        } else if (nonce <= type(uint48).max) {\\n            data = abi.encodePacked(bytes1(0xdc), len, deployer, bytes1(0x86), uint48(nonce));\\n        } else if (nonce <= type(uint56).max) {\\n            data = abi.encodePacked(bytes1(0xdd), len, deployer, bytes1(0x87), uint56(nonce));\\n        } else {\\n            data = abi.encodePacked(bytes1(0xde), len, deployer, bytes1(0x88), uint64(nonce));\\n        }\\n\\n        computedAddress = address(uint160(uint256(keccak256(data))));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract\\n     * using the `CREATE` opcode. For the specification of the Recursive Length Prefix (RLP)\\n     * encoding scheme, please refer to p. 19 of the Ethereum Yellow Paper (https://web.archive.org/web/20230921110603/https://ethereum.github.io/yellowpaper/paper.pdf)\\n     * and the Ethereum Wiki (https://web.archive.org/web/20230921112807/https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/).\\n     * For further insights also, see the following issue: https://web.archive.org/web/20230921112943/https://github.com/transmissions11/solmate/issues/207.\\n     *\\n     * Based on the EIP-161 (https://web.archive.org/web/20230921113207/https://raw.githubusercontent.com/ethereum/EIPs/master/EIPS/eip-161.md) specification,\\n     * all contract accounts on the Ethereum mainnet are initiated with `nonce = 1`. Thus, the\\n     * first contract address created by another contract is calculated with a non-zero nonce.\\n     * @param nonce The next 32-byte nonce of this contract.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreateAddress(uint256 nonce) public view returns (address computedAddress) {\\n        computedAddress = computeCreateAddress({deployer: _SELF, nonce: nonce});\\n    }\\n\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                           CREATE2                          */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    /**\\n     * @dev Deploys a new contract via calling the `CREATE2` opcode and using the salt value `salt`,\\n     * the creation bytecode `initCode`, and `msg.value` as inputs. In order to save deployment costs,\\n     * we do not sanity check the `initCode` length. Note that if `msg.value` is non-zero, `initCode`\\n     * must have a `payable` constructor.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     */\\n    function deployCreate2(bytes32 salt, bytes memory initCode) public payable returns (address newContract) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        assembly (\\\"memory-safe\\\") {\\n            newContract := create2(callvalue(), add(initCode, 0x20), mload(initCode), guardedSalt)\\n        }\\n        _requireSuccessfulContractCreation({newContract: newContract});\\n\\n        if (_create2Deployed[newContract]) revert FailedContractCreation({emitter: _SELF});\\n        _create2Deployed[newContract] = true;\\n\\n\\n        emit ContractCreation({newContract: newContract, salt: guardedSalt});\\n    }\\n\\n    /**\\n     * @dev Deploys a new contract via calling the `CREATE2` opcode and using the creation bytecode\\n     * `initCode` and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a\\n     * diverse selection of block and transaction properties. This approach does not guarantee true\\n     * randomness! In order to save deployment costs, we do not sanity check the `initCode` length.\\n     * Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     */\\n    function deployCreate2(bytes memory initCode) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2`.\\n        newContract = deployCreate2({salt: _generateSalt(), initCode: initCode});\\n    }\\n\\n    /**\\n     * @dev Create a contract using CREATE2 by submitting a given salt or nonce\\n     * along with the initialization code for the contract. Note that the first 20\\n     * bytes of the salt must match those of the calling address, which prevents\\n     * contract creation events from being submitted by unintended parties.\\n     * @param salt bytes32 The nonce that will be passed into the CREATE2 call.\\n     * @param initCode bytes The initialization code that will be passed\\n     * into the CREATE2 call.\\n     * @return newContract Address of the contract that will be created, or the null address\\n     * if a contract already exists at that address.\\n     */\\n    function safeCreate2(bytes32 salt, bytes memory initCode) public payable containsCaller(salt) returns (address newContract) {\\n        newContract = deployCreate2({salt: salt, initCode: initCode});\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE2` opcode and using the\\n     * salt value `salt`, the creation bytecode `initCode`, the initialisation code `data`, the struct\\n     * for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs.\\n     * In order to save deployment costs, we do not sanity check the `initCode` length. Note that if\\n     * `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2AndInit(\\n        bytes32 salt,\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        assembly (\\\"memory-safe\\\") {\\n            newContract := create2(mload(values), add(initCode, 0x20), mload(initCode), guardedSalt)\\n        }\\n        _requireSuccessfulContractCreation({newContract: newContract});\\n\\n        if (_create2Deployed[newContract]) revert FailedContractCreation({emitter: _SELF});\\n        _create2Deployed[newContract] = true;\\n\\n        emit ContractCreation({newContract: newContract, salt: guardedSalt});\\n\\n        (bool success, bytes memory returnData) = newContract.call{value: values.initCallAmount}(data);\\n        if (!success) {\\n            revert FailedContractInitialisation({emitter: _SELF, revertData: returnData});\\n        }\\n\\n        if (_SELF.balance != 0) {\\n            // Any wei amount previously forced into this contract (e.g. by using the `SELFDESTRUCT`\\n            // opcode) will be part of the refund transaction.\\n            (success, returnData) = refundAddress.call{value: _SELF.balance}(\\\"\\\");\\n            if (!success) {\\n                revert FailedEtherTransfer({emitter: _SELF, revertData: returnData});\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE2` opcode and using the\\n     * salt value `salt`, creation bytecode `initCode`, the initialisation code `data`, the struct for\\n     * the `payable` amounts `values`, and `msg.value` as inputs. In order to save deployment costs,\\n     * we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero,\\n     * `initCode` must have a `payable` constructor, and any excess ether is returned to `msg.sender`.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2AndInit(\\n        bytes32 salt,\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2AndInit`.\\n        newContract = deployCreate2AndInit({\\n            salt: salt,\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: msg.sender\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE2` opcode and using the\\n     * creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable`\\n     * amounts `values`, the refund address `refundAddress`, and `msg.value` as inputs. The salt value\\n     * is calculated pseudo-randomly using a diverse selection of block and transaction properties.\\n     * This approach does not guarantee true randomness! In order to save deployment costs, we do not\\n     * sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode`\\n     * must have a `payable` constructor.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2AndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2AndInit`.\\n        newContract = deployCreate2AndInit({\\n            salt: _generateSalt(),\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: refundAddress\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via calling the `CREATE2` opcode and using the\\n     * creation bytecode `initCode`, the initialisation code `data`, the struct for the `payable` amounts\\n     * `values`, and `msg.value` as inputs. The salt value is calculated pseudo-randomly using a\\n     * diverse selection of block and transaction properties. This approach does not guarantee true\\n     * randomness! In order to save deployment costs, we do not sanity check the `initCode` length.\\n     * Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor,\\n     * and any excess ether is returned to `msg.sender`.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2AndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2AndInit`.\\n        newContract = deployCreate2AndInit({\\n            salt: _generateSalt(),\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: msg.sender\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys a new EIP-1167 minimal proxy contract using the `CREATE2` opcode and the salt\\n     * value `salt`, and initialises the implementation contract using the implementation address\\n     * `implementation`, the initialisation code `data`, and `msg.value` as inputs. Note that if\\n     * `msg.value` is non-zero, the initialiser function called via `data` must be `payable`.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param implementation The 20-byte implementation contract address.\\n     * @param data The initialisation code that is passed to the deployed proxy contract.\\n     * @return proxy The 20-byte address where the clone was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2Clone(\\n        bytes32 salt,\\n        address implementation,\\n        bytes memory data\\n    ) public payable returns (address proxy) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        bytes20 implementationInBytes = bytes20(implementation);\\n        assembly (\\\"memory-safe\\\") {\\n            let clone := mload(0x40)\\n            mstore(\\n                clone,\\n                hex\\\"3d_60_2d_80_60_0a_3d_39_81_f3_36_3d_3d_37_3d_3d_3d_36_3d_73_00_00_00_00_00_00_00_00_00_00_00_00\\\"\\n            )\\n            mstore(add(clone, 0x14), implementationInBytes)\\n            mstore(\\n                add(clone, 0x28),\\n                hex\\\"5a_f4_3d_82_80_3e_90_3d_91_60_2b_57_fd_5b_f3_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00\\\"\\n            )\\n            proxy := create2(0, clone, 0x37, guardedSalt)\\n        }\\n        if (proxy == address(0)) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n        emit ContractCreation({newContract: proxy, salt: guardedSalt});\\n\\n        (bool success, bytes memory returnData) = proxy.call{value: msg.value}(data);\\n        _requireSuccessfulContractInitialisation({\\n            success: success,\\n            returnData: returnData,\\n            implementation: implementation\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys a new EIP-1167 minimal proxy contract using the `CREATE2` opcode and the salt\\n     * value `salt`, and initialises the implementation contract using the implementation address\\n     * `implementation`, the initialisation code `data`, and `msg.value` as inputs. The salt value is\\n     * calculated pseudo-randomly using a diverse selection of block and transaction properties. This\\n     * approach does not guarantee true randomness! Note that if `msg.value` is non-zero, the initialiser\\n     * function called via `data` must be `payable`.\\n     * @param implementation The 20-byte implementation contract address.\\n     * @param data The initialisation code that is passed to the deployed proxy contract.\\n     * @return proxy The 20-byte address where the clone was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate2Clone(address implementation, bytes memory data) public payable returns (address proxy) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate2Clone`.\\n        proxy = deployCreate2Clone({salt: _generateSalt(), implementation: implementation, data: data});\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract using\\n     * the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new\\n     * destination address.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCodeHash The 32-byte bytecode digest of the contract creation bytecode.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreate2Address(bytes32 salt, bytes32 initCodeHash) public view returns (address computedAddress) {\\n        computedAddress = computeCreate2Address({salt: salt, initCodeHash: initCodeHash, deployer: _SELF});\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via `deployer` using\\n     * the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new\\n     * destination address. This implementation is based on OpenZeppelin:\\n     * https://web.archive.org/web/20230921113703/https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/181d518609a9f006fcb97af63e6952e603cf100e/contracts/utils/Create2.sol.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCodeHash The 32-byte bytecode digest of the contract creation bytecode.\\n     * @param deployer The 20-byte deployer address.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreate2Address(\\n        bytes32 salt,\\n        bytes32 initCodeHash,\\n        address deployer\\n    ) public pure returns (address computedAddress) {\\n        assembly (\\\"memory-safe\\\") {\\n            // |                      | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\\n            // |----------------------|---------------------------------------------------------------------------|\\n            // | initCodeHash         |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt                 |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer             | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF                 |            FF                                                             |\\n            // |----------------------|---------------------------------------------------------------------------|\\n            // | memory               | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak256(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x40), initCodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer)\\n            let start := add(ptr, 0x0b)\\n            mstore8(start, 0xff)\\n            computedAddress := keccak256(start, 85)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract using\\n     * the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new\\n     * destination address.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCodeHash The 32-byte bytecode digest of the contract creation bytecode.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function findCreate2AddressViaHash(bytes32 salt, bytes32 initCodeHash) public view returns (address computedAddress) {\\n        computedAddress = computeCreate2Address({salt: _guard({salt: salt}), initCodeHash: initCodeHash, deployer: _SELF});\\n        // return null address to signify failure if contract has been deployed.\\n        if (_create2Deployed[computedAddress]) return address(0);\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract using\\n     * the `CREATE2` opcode. Any change in the `initCodeHash` or `salt` values will result in a new\\n     * destination address.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @param initCode The 32-byte bytecode digest of the contract creation bytecode.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function findCreate2Address(bytes32 salt, bytes memory initCode) public view returns (address computedAddress) {\\n        computedAddress = computeCreate2Address({salt: _guard({salt: salt}), initCodeHash: keccak256(abi.encodePacked(initCode)), deployer: _SELF});\\n        // return null address to signify failure if contract has been deployed.\\n        if (_create2Deployed[computedAddress]) return address(0);\\n    }\\n\\n    /**\\n     * @dev Determine if a contract has already been deployed by the factory to a\\n     * given address.\\n     * @param deploymentAddress address The contract address to check.\\n     * @return True if the contract has been deployed, false otherwise.\\n     */\\n    function hasBeenDeployed(address deploymentAddress) external view returns (bool) {\\n        // determine if a contract has been deployed to the provided address.\\n        return _create2Deployed[deploymentAddress];\\n    }\\n\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                           CREATE3                          */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    /**\\n     * @dev Deploys a new contract via employing the `CREATE3` pattern (i.e. without an initcode\\n     * factor) and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value`\\n     * as inputs. In order to save deployment costs, we do not sanity check the `initCode` length.\\n     * Note that if `msg.value` is non-zero, `initCode` must have a `payable` constructor. This\\n     * implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security We strongly recommend implementing a permissioned deploy protection by setting\\n     * the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun\\n     * proxy deployments on other chains.\\n     */\\n    function deployCreate3(bytes32 salt, bytes memory initCode) public payable returns (address newContract) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        bytes memory proxyChildBytecode = hex\\\"67_36_3d_3d_37_36_3d_34_f0_3d_52_60_08_60_18_f3\\\";\\n        address proxy;\\n        assembly (\\\"memory-safe\\\") {\\n            proxy := create2(0, add(proxyChildBytecode, 32), mload(proxyChildBytecode), guardedSalt)\\n        }\\n        if (proxy == address(0)) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n        emit Create3ProxyContractCreation({newContract: proxy, salt: guardedSalt});\\n\\n        newContract = computeCreate3Address({salt: guardedSalt});\\n        (bool success, ) = proxy.call{value: msg.value}(initCode);\\n        _requireSuccessfulContractCreation({success: success, newContract: newContract});\\n        emit ContractCreation({newContract: newContract});\\n    }\\n\\n    /**\\n     * @dev Deploys a new contract via employing the `CREATE3` pattern (i.e. without an initcode\\n     * factor) and using the salt value `salt`, the creation bytecode `initCode`, and `msg.value`\\n     * as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block\\n     * and transaction properties. This approach does not guarantee true randomness! In order to save\\n     * deployment costs, we do not sanity check the `initCode` length. Note that if `msg.value` is\\n     * non-zero, `initCode` must have a `payable` constructor. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param initCode The creation bytecode.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     */\\n    function deployCreate3(bytes memory initCode) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate3`.\\n        newContract = deployCreate3({salt: _generateSalt(), initCode: initCode});\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without\\n     * an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, the\\n     * initialisation code `data`, the struct for the `payable` amounts `values`, the refund address\\n     * `refundAddress`, and `msg.value` as inputs. In order to save deployment costs, we do not sanity\\n     * check the `initCode` length. Note that if `values.constructorAmount` is non-zero, `initCode` must\\n     * have a `payable` constructor. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     * Furthermore, we strongly recommend implementing a permissioned deploy protection by setting\\n     * the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun\\n     * proxy deployments on other chains.\\n     */\\n    function deployCreate3AndInit(\\n        bytes32 salt,\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        bytes32 guardedSalt = _guard({salt: salt});\\n        bytes memory proxyChildBytecode = hex\\\"67_36_3d_3d_37_36_3d_34_f0_3d_52_60_08_60_18_f3\\\";\\n        address proxy;\\n        assembly (\\\"memory-safe\\\") {\\n            proxy := create2(0, add(proxyChildBytecode, 32), mload(proxyChildBytecode), guardedSalt)\\n        }\\n        if (proxy == address(0)) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n        emit Create3ProxyContractCreation({newContract: proxy, salt: guardedSalt});\\n\\n        newContract = computeCreate3Address({salt: guardedSalt});\\n        (bool success, ) = proxy.call{value: values.constructorAmount}(initCode);\\n        _requireSuccessfulContractCreation({success: success, newContract: newContract});\\n        emit ContractCreation({newContract: newContract});\\n\\n        bytes memory returnData;\\n        (success, returnData) = newContract.call{value: values.initCallAmount}(data);\\n        if (!success) {\\n            revert FailedContractInitialisation({emitter: _SELF, revertData: returnData});\\n        }\\n\\n        if (_SELF.balance != 0) {\\n            // Any wei amount previously forced into this contract (e.g. by using the `SELFDESTRUCT`\\n            // opcode) will be part of the refund transaction.\\n            (success, returnData) = refundAddress.call{value: _SELF.balance}(\\\"\\\");\\n            if (!success) {\\n                revert FailedEtherTransfer({emitter: _SELF, revertData: returnData});\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without\\n     * an initcode factor) and using the salt value `salt`, the creation bytecode `initCode`, the\\n     * initialisation code `data`, the struct for the `payable` amounts `values`, and `msg.value` as\\n     * inputs. In order to save deployment costs, we do not sanity check the `initCode` length. Note\\n     * that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor,\\n     * and any excess ether is returned to `msg.sender`. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     * Furthermore, we strongly recommend implementing a permissioned deploy protection by setting\\n     * the first 20 bytes equal to `msg.sender` in the `salt` to prevent maliciously intended frontrun\\n     * proxy deployments on other chains.\\n     */\\n    function deployCreate3AndInit(\\n        bytes32 salt,\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate3AndInit`.\\n        newContract = deployCreate3AndInit({\\n            salt: salt,\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: msg.sender\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without\\n     * an initcode factor) and using the creation bytecode `initCode`, the initialisation code `data`,\\n     * the struct for the `payable` amounts `values`, the refund address `refundAddress`, and `msg.value`\\n     * as inputs. The salt value is calculated pseudo-randomly using a diverse selection of block and\\n     * transaction properties. This approach does not guarantee true randomness! In order to save deployment\\n     * costs, we do not sanity check the `initCode` length. Note that if `values.constructorAmount` is non-zero,\\n     * `initCode` must have a `payable` constructor. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @param refundAddress The 20-byte address where any excess ether is returned to.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate3AndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values,\\n        address refundAddress\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate3AndInit`.\\n        newContract = deployCreate3AndInit({\\n            salt: _generateSalt(),\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: refundAddress\\n        });\\n    }\\n\\n    /**\\n     * @dev Deploys and initialises a new contract via employing the `CREATE3` pattern (i.e. without\\n     * an initcode factor) and using the creation bytecode `initCode`, the initialisation code `data`,\\n     * the struct for the `payable` amounts `values`, `msg.value` as inputs. The salt value is calculated\\n     * pseudo-randomly using a diverse selection of block and transaction properties. This approach does\\n     * not guarantee true randomness! In order to save deployment costs, we do not sanity check the `initCode`\\n     * length. Note that if `values.constructorAmount` is non-zero, `initCode` must have a `payable` constructor,\\n     * and any excess ether is returned to `msg.sender`. This implementation is based on Solmate:\\n     * https://web.archive.org/web/20230921113832/https://raw.githubusercontent.com/transmissions11/solmate/e8f96f25d48fe702117ce76c79228ca4f20206cb/src/utils/CREATE3.sol.\\n     * @param initCode The creation bytecode.\\n     * @param data The initialisation code that is passed to the deployed contract.\\n     * @param values The specific `payable` amounts for the deployment and initialisation call.\\n     * @return newContract The 20-byte address where the contract was deployed.\\n     * @custom:security This function allows for reentrancy, however we refrain from adding\\n     * a mutex lock to keep it as use-case agnostic as possible. Please ensure at the protocol\\n     * level that potentially malicious reentrant calls do not affect your smart contract system.\\n     */\\n    function deployCreate3AndInit(\\n        bytes memory initCode,\\n        bytes memory data,\\n        Values memory values\\n    ) public payable returns (address newContract) {\\n        // Note that the safeguarding function `_guard` is called as part of the overloaded function\\n        // `deployCreate3AndInit`.\\n        newContract = deployCreate3AndInit({\\n            salt: _generateSalt(),\\n            initCode: initCode,\\n            data: data,\\n            values: values,\\n            refundAddress: msg.sender\\n        });\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via `deployer` using\\n     * the `CREATE3` pattern (i.e. without an initcode factor). Any change in the `salt` value will\\n     * result in a new destination address. This implementation is based on Solady:\\n     * https://web.archive.org/web/20230921114120/https://raw.githubusercontent.com/Vectorized/solady/1c1ac4ad9c8558001e92d8d1a7722ef67bec75df/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @param deployer The 20-byte deployer address.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreate3Address(bytes32 salt, address deployer) public pure returns (address computedAddress) {\\n        assembly (\\\"memory-safe\\\") {\\n            let ptr := mload(0x40)\\n            mstore(0x00, deployer)\\n            mstore8(0x0b, 0xff)\\n            mstore(0x20, salt)\\n            mstore(\\n                0x40,\\n                hex\\\"21_c3_5d_be_1b_34_4a_24_88_cf_33_21_d6_ce_54_2f_8e_9f_30_55_44_ff_09_e4_99_3a_62_31_9a_49_7c_1f\\\"\\n            )\\n            mstore(0x14, keccak256(0x0b, 0x55))\\n            mstore(0x40, ptr)\\n            mstore(0x00, 0xd694)\\n            mstore8(0x34, 0x01)\\n            computedAddress := keccak256(0x1e, 0x17)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via this contract using\\n     * the `CREATE3` pattern (i.e. without an initcode factor). Any change in the `salt` value will\\n     * result in a new destination address. This implementation is based on Solady:\\n     * https://web.archive.org/web/20230921114120/https://raw.githubusercontent.com/Vectorized/solady/1c1ac4ad9c8558001e92d8d1a7722ef67bec75df/src/utils/CREATE3.sol.\\n     * @param salt The 32-byte random value used to create the proxy contract address.\\n     * @return computedAddress The 20-byte address where a contract will be stored.\\n     */\\n    function computeCreate3Address(bytes32 salt) public view returns (address computedAddress) {\\n        computedAddress = computeCreate3Address({salt: salt, deployer: _SELF});\\n    }\\n\\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\\n    /*                      HELPER FUNCTIONS                      */\\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\\n\\n    /**\\n     * @dev Implements different safeguarding mechanisms depending on the encoded values in the salt\\n     * (`||` stands for byte-wise concatenation):\\n     *   => salt (32 bytes) = 0xbebebebebebebebebebebebebebebebebebebebe||ff||1212121212121212121212\\n     *   - The first 20 bytes (i.e. `bebebebebebebebebebebebebebebebebebebebe`) may be used to\\n     *     implement a permissioned deploy protection by setting them equal to `msg.sender`,\\n     *   - The 21st byte (i.e. `ff`) may be used to implement a cross-chain redeploy protection by\\n     *     setting it equal to `0x01`,\\n     *   - The last random 11 bytes (i.e. `1212121212121212121212`) allow for 2**88 bits of entropy\\n     *     for mining a salt.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @return guardedSalt The guarded 32-byte random value used to create the contract address.\\n     */\\n    function _guard(bytes32 salt) internal view returns (bytes32 guardedSalt) {\\n        (SenderBytes senderBytes, RedeployProtectionFlag redeployProtectionFlag) = _parseSalt({salt: salt});\\n\\n        if (senderBytes == SenderBytes.MsgSender && redeployProtectionFlag == RedeployProtectionFlag.True) {\\n            // Configures a permissioned deploy protection as well as a cross-chain redeploy protection.\\n            guardedSalt = keccak256(abi.encode(msg.sender, block.chainid, salt));\\n        } else if (senderBytes == SenderBytes.MsgSender && redeployProtectionFlag == RedeployProtectionFlag.False) {\\n            // Configures solely a permissioned deploy protection.\\n            guardedSalt = _efficientHash({a: bytes32(uint256(uint160(msg.sender))), b: salt});\\n        } else if (senderBytes == SenderBytes.MsgSender) {\\n            // Reverts if the 21st byte is greater than `0x01` in order to enforce developer explicitness.\\n            revert InvalidSalt({emitter: _SELF});\\n        } else if (senderBytes == SenderBytes.ZeroAddress && redeployProtectionFlag == RedeployProtectionFlag.True) {\\n            // Configures solely a cross-chain redeploy protection. In order to prevent a pseudo-randomly\\n            // generated cross-chain redeploy protection, we enforce the zero address check for the first 20 bytes.\\n            guardedSalt = _efficientHash({a: bytes32(block.chainid), b: salt});\\n        } else if (\\n            senderBytes == SenderBytes.ZeroAddress && redeployProtectionFlag == RedeployProtectionFlag.Unspecified\\n        ) {\\n            // Reverts if the 21st byte is greater than `0x01` in order to enforce developer explicitness.\\n            revert InvalidSalt({emitter: _SELF});\\n        } else {\\n            // For the non-pseudo-random cases, the salt value `salt` is hashed to prevent the safeguard mechanisms\\n            // from being bypassed. Otherwise, the salt value `salt` is not modified.\\n            guardedSalt = (salt != _generateSalt()) ? keccak256(abi.encode(salt)) : salt;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the enum for the selection of a permissioned deploy protection as well as a\\n     * cross-chain redeploy protection.\\n     * @param salt The 32-byte random value used to create the contract address.\\n     * @return senderBytes The 8-byte enum for the selection of a permissioned deploy protection.\\n     * @return redeployProtectionFlag The 8-byte enum for the selection of a cross-chain redeploy\\n     * protection.\\n     */\\n    function _parseSalt(\\n        bytes32 salt\\n    ) internal view returns (SenderBytes senderBytes, RedeployProtectionFlag redeployProtectionFlag) {\\n        if (address(bytes20(salt)) == msg.sender && bytes1(salt[20]) == hex\\\"01\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.MsgSender, RedeployProtectionFlag.True);\\n        } else if (address(bytes20(salt)) == msg.sender && bytes1(salt[20]) == hex\\\"00\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.MsgSender, RedeployProtectionFlag.False);\\n        } else if (address(bytes20(salt)) == msg.sender) {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.MsgSender, RedeployProtectionFlag.Unspecified);\\n        } else if (address(bytes20(salt)) == address(0) && bytes1(salt[20]) == hex\\\"01\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.ZeroAddress, RedeployProtectionFlag.True);\\n        } else if (address(bytes20(salt)) == address(0) && bytes1(salt[20]) == hex\\\"00\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.ZeroAddress, RedeployProtectionFlag.False);\\n        } else if (address(bytes20(salt)) == address(0)) {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.ZeroAddress, RedeployProtectionFlag.Unspecified);\\n        } else if (bytes1(salt[20]) == hex\\\"01\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.Random, RedeployProtectionFlag.True);\\n        } else if (bytes1(salt[20]) == hex\\\"00\\\") {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.Random, RedeployProtectionFlag.False);\\n        } else {\\n            (senderBytes, redeployProtectionFlag) = (SenderBytes.Random, RedeployProtectionFlag.Unspecified);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the `keccak256` hash of `a` and `b` after concatenation.\\n     * @param a The first 32-byte value to be concatenated and hashed.\\n     * @param b The second 32-byte value to be concatenated and hashed.\\n     * @return hash The 32-byte `keccak256` hash of `a` and `b`.\\n     */\\n    function _efficientHash(bytes32 a, bytes32 b) internal pure returns (bytes32 hash) {\\n        assembly (\\\"memory-safe\\\") {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            hash := keccak256(0x00, 0x40)\\n        }\\n    }\\n\\n    /**\\n     * @dev Generates pseudo-randomly a salt value using a diverse selection of block and\\n     * transaction properties.\\n     * @return salt The 32-byte pseudo-random salt value.\\n     */\\n    function _generateSalt() internal view returns (bytes32 salt) {\\n        unchecked {\\n            salt = keccak256(\\n                abi.encode(\\n                    // We don't use `block.number - 256` (the maximum value on the EVM) to accommodate\\n                    // any chains that may try to reduce the amount of available historical block hashes.\\n                    // We also don't subtract 1 to mitigate any risks arising from consecutive block\\n                    // producers on a PoS chain. Therefore, we use `block.number - 32` as a reasonable\\n                    // compromise, one we expect should work on most chains, which is 1 epoch on Ethereum\\n                    // mainnet. Please note that if you use this function between the genesis block and block\\n                    // number 31, the block property `blockhash` will return zero, but the returned salt value\\n                    // `salt` will still have a non-zero value due to the hashing characteristic and the other\\n                    // remaining properties.\\n                    blockhash(block.number - 32),\\n                    block.coinbase,\\n                    block.number,\\n                    block.timestamp,\\n                    block.prevrandao,\\n                    block.chainid,\\n                    msg.sender\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Ensures that `newContract` is a non-zero byte contract.\\n     * @param success The Boolean success condition.\\n     * @param newContract The 20-byte address where the contract was deployed.\\n     */\\n    function _requireSuccessfulContractCreation(bool success, address newContract) internal view {\\n        // Note that reverting if `newContract == address(0)` isn't strictly necessary here, as if\\n        // the deployment fails, `success == false` should already hold. However, since the `CreateX`\\n        // contract should be usable and safe on a wide range of chains, this check is cheap enough\\n        // that there is no harm in including it (security > gas optimisations). It can potentially\\n        // protect against unexpected chain behaviour or a hypothetical compiler bug that doesn't surface\\n        // the call success status properly.\\n        if (!success || newContract == address(0) || newContract.code.length == 0) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n    }\\n\\n    /**\\n     * @dev Ensures that `newContract` is a non-zero byte contract.\\n     * @param newContract The 20-byte address where the contract was deployed.\\n     */\\n    function _requireSuccessfulContractCreation(address newContract) internal view {\\n        if (newContract == address(0) || newContract.code.length == 0) {\\n            revert FailedContractCreation({emitter: _SELF});\\n        }\\n    }\\n\\n    /**\\n     * @dev Ensures that the contract initialisation call to `implementation` has been successful.\\n     * @param success The Boolean success condition.\\n     * @param returnData The return data from the contract initialisation call.\\n     * @param implementation The 20-byte address where the implementation was deployed.\\n     */\\n    function _requireSuccessfulContractInitialisation(\\n        bool success,\\n        bytes memory returnData,\\n        address implementation\\n    ) internal view {\\n        if (!success || implementation.code.length == 0) {\\n            revert FailedContractInitialisation({emitter: _SELF, revertData: returnData});\\n        }\\n    }\\n}\"\n    }\n  },\n  \"settings\": {\n    \"optimizer\": {\n      \"enabled\": true,\n      \"runs\": 200\n    },\n    \"evmVersion\": \"paris\",\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
      "solcInputHash": "ea43f05f0c21bfb3f06851f1d4b34ac6",
      "transactionHash": "0xeeca58300c9c438df6fd135cf3c4a6036a1363e12cf3958f86cd95ccc6058e92",
      "args": []
    },
    "decoded": {
      "from": "0x63fd4A2F5620E1C2653211EA2d6f450502576d11",
      "maxFeePerGas": "1500000112",
      "maxPriorityFeePerGas": "1500000000",
      "gasLimit": "2022824",
      "to": null,
      "value": "0",
      "nonce": 0,
      "data": "",
      "r": "0x11b01762671393b556400b3594dcc7714b3e4334fa2227dc84ffcb348aa0a073",
      "s": "0x42e91a12bea77bf6fb2a495825ddcc82c925142c74a1e0ffd1731a210eb1d027",
      "v": 1,
      "chainId": 137
    }
  }
}