{
  "language": "Solidity",
  "sources": {
    "contracts/TestDeployContract.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\ncontract TestDeployContract {\n    // State variables to store the values\n    uint256 public value1;\n    uint256 public value2;\n\n    // Constructor with two parameters to initialize the state variables\n    constructor(uint256 _value1, uint256 _value2) {\n        value1 = _value1;\n        value2 = _value2;\n    }\n\n    // Function to get the first value\n    function getValue1() public view returns (uint256) {\n        return value1;\n    }\n\n    // Function to get the second value\n    function getValue2() public view returns (uint256) {\n        return value2;\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}